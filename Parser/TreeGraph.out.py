from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140159403862992 = Node('TranslationUnit_2992')
PassUpNode140159403863056 = Node('ExternalDeclaration_3056', parent=PassUpNode140159403862992)
FunctionDefintion140159403721872 = Node('FunctionDefintion_1872', parent=PassUpNode140159403863056)
DeclarationSpecifiers140159403721040 = Node('DeclarationSpecifiers_1040', parent=FunctionDefintion140159403721872)
leaf = Node('int_1040', parent=DeclarationSpecifiers140159403721040)
PassUpNode140159403721232 = Node('Declarator_1232', parent=FunctionDefintion140159403721872)
PassUpNode140159403721808 = Node('DirectDeclarator_1808', parent=PassUpNode140159403721232)
PassUpNode140159403721168 = Node('DirectDeclarator_1168', parent=PassUpNode140159403721808)
Identifier140159403721104 = Node('Identifier_1104', parent=PassUpNode140159403721168)
leaf = Node('main_1104', parent=Identifier140159403721104)
leaf = Node("TokenLocation=(5, 21, 5)", parent=Identifier140159403721104)
PassUpNode140159403721744 = Node('ParameterTypeList_1744', parent=PassUpNode140159403721808)
PassUpNode140159403721680 = Node('ParameterList_1680', parent=PassUpNode140159403721744)
PassUpNode140159403721616 = Node('ParameterDeclaration_1616', parent=PassUpNode140159403721680)
DeclarationSpecifiers140159403721360 = Node('DeclarationSpecifiers_1360', parent=PassUpNode140159403721616)
leaf = Node('int_1360', parent=DeclarationSpecifiers140159403721360)
PassUpNode140159403721552 = Node('Declarator_1552', parent=PassUpNode140159403721616)
PassUpNode140159403721424 = Node('DirectDeclarator_1424', parent=PassUpNode140159403721552)
Identifier140159403721296 = Node('Identifier_1296', parent=PassUpNode140159403721424)
leaf = Node('g_1296', parent=Identifier140159403721296)
leaf = Node("TokenLocation=(5, 30, 14)", parent=Identifier140159403721296)
CompoundStatement140159403721488 = Node('CompoundStatement_1488', parent=FunctionDefintion140159403721872)
DeclList140159403782672 = Node('DeclList_2672', parent=CompoundStatement140159403721488)
DeclList140159403722448 = Node('DeclList_2448', parent=DeclList140159403782672)
Declaration140159403722128 = Node('Declaration_2128', parent=DeclList140159403722448)
DeclarationSpecifiers140159403722000 = Node('DeclarationSpecifiers_2000', parent=Declaration140159403722128)
leaf = Node('char_2000', parent=DeclarationSpecifiers140159403722000)
InitDeclList140159403722576 = Node('InitDeclList_2576', parent=Declaration140159403722128)
InitDeclList140159403722256 = Node('InitDeclList_2256', parent=InitDeclList140159403722576)
PassUpNode140159403722192 = Node('Declarator_2192', parent=InitDeclList140159403722256)
PassUpNode140159403722064 = Node('DirectDeclarator_2064', parent=PassUpNode140159403722192)
Identifier140159403721936 = Node('Identifier_1936', parent=PassUpNode140159403722064)
leaf = Node('a_1936', parent=Identifier140159403721936)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140159403721936)
PassUpNode140159403722512 = Node('Declarator_2512', parent=InitDeclList140159403722576)
PassUpNode140159403722384 = Node('DirectDeclarator_2384', parent=PassUpNode140159403722512)
Identifier140159403722320 = Node('Identifier_2320', parent=PassUpNode140159403722384)
leaf = Node('d_2320', parent=Identifier140159403722320)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403722320)
Declaration140159403782736 = Node('Declaration_2736', parent=DeclList140159403782672)
DeclarationSpecifiers140159403722768 = Node('DeclarationSpecifiers_2768', parent=Declaration140159403782736)
leaf = Node('int_2768', parent=DeclarationSpecifiers140159403722768)
InitDeclList140159403724304 = Node('InitDeclList_4304', parent=Declaration140159403782736)
PassUpNode140159403724112 = Node('Declarator_4112', parent=InitDeclList140159403724304)
ArrayDeclaration140159403782608 = Node('ArrayDeclaration_2608', parent=PassUpNode140159403724112)
ArrayDeclaration140159403724048 = Node('ArrayDeclaration_4048', parent=ArrayDeclaration140159403782608)
PassUpNode140159403722704 = Node('DirectDeclarator_2704', parent=ArrayDeclaration140159403724048)
Identifier140159403722640 = Node('Identifier_2640', parent=PassUpNode140159403722704)
leaf = Node('arr_2640', parent=Identifier140159403722640)
leaf = Node("Array Size=['8', '10'], Subtype='Array', Type='int', TokenLocation=(8, 70, 9)", parent=Identifier140159403722640)
PassUpNode140159403723984 = Node('ConstantExpression_3984', parent=ArrayDeclaration140159403724048)
PassUpNode140159403723920 = Node('ConditionalExpression_3920', parent=PassUpNode140159403723984)
PassUpNode140159403723856 = Node('LogicalOrExpression_3856', parent=PassUpNode140159403723920)
PassUpNode140159403723792 = Node('LogicalAndExpression_3792', parent=PassUpNode140159403723856)
PassUpNode140159403723728 = Node('InclusiveOrExpression_3728', parent=PassUpNode140159403723792)
PassUpNode140159403723664 = Node('ExclusiveOrExpression_3664', parent=PassUpNode140159403723728)
PassUpNode140159403723600 = Node('AndExpression_3600', parent=PassUpNode140159403723664)
PassUpNode140159403723536 = Node('EqalityExpression_3536', parent=PassUpNode140159403723600)
PassUpNode140159403723472 = Node('ShiftExpression_3472', parent=PassUpNode140159403723536)
PassUpNode140159403723408 = Node('ShiftExpression_3408', parent=PassUpNode140159403723472)
PassUpNode140159403723344 = Node('AdditiveExpression_3344', parent=PassUpNode140159403723408)
PassUpNode140159403723280 = Node('MultiplicativeExpression_3280', parent=PassUpNode140159403723344)
PassUpNode140159403723216 = Node('CastExpression_3216', parent=PassUpNode140159403723280)
PassUpNode140159403723152 = Node('UnaryExpression_3152', parent=PassUpNode140159403723216)
PassUpNode140159403723088 = Node('PostfixExpression_3088', parent=PassUpNode140159403723152)
PrimaryExpression140159403722960 = Node('PrimaryExpression_2960', parent=PassUpNode140159403723088)
Constant140159403722896 = Node('Constant_2896', parent=PrimaryExpression140159403722960)
leaf = Node('8_2896', parent=Constant140159403722896)
PassUpNode140159403782544 = Node('ConstantExpression_2544', parent=ArrayDeclaration140159403782608)
PassUpNode140159403782480 = Node('ConditionalExpression_2480', parent=PassUpNode140159403782544)
PassUpNode140159403782416 = Node('LogicalOrExpression_2416', parent=PassUpNode140159403782480)
PassUpNode140159403782352 = Node('LogicalAndExpression_2352', parent=PassUpNode140159403782416)
PassUpNode140159403782288 = Node('InclusiveOrExpression_2288', parent=PassUpNode140159403782352)
PassUpNode140159403782224 = Node('ExclusiveOrExpression_2224', parent=PassUpNode140159403782288)
PassUpNode140159403724752 = Node('AndExpression_4752', parent=PassUpNode140159403782224)
PassUpNode140159403724688 = Node('EqalityExpression_4688', parent=PassUpNode140159403724752)
PassUpNode140159403724624 = Node('ShiftExpression_4624', parent=PassUpNode140159403724688)
PassUpNode140159403724560 = Node('ShiftExpression_4560', parent=PassUpNode140159403724624)
PassUpNode140159403724496 = Node('AdditiveExpression_4496', parent=PassUpNode140159403724560)
PassUpNode140159403724432 = Node('MultiplicativeExpression_4432', parent=PassUpNode140159403724496)
PassUpNode140159403724368 = Node('CastExpression_4368', parent=PassUpNode140159403724432)
PassUpNode140159403724176 = Node('UnaryExpression_4176', parent=PassUpNode140159403724368)
PassUpNode140159403723024 = Node('PostfixExpression_3024', parent=PassUpNode140159403724176)
PrimaryExpression140159403724240 = Node('PrimaryExpression_4240', parent=PassUpNode140159403723024)
Constant140159403722832 = Node('Constant_2832', parent=PrimaryExpression140159403724240)
leaf = Node('10_2832', parent=Constant140159403722832)
PassUpNode140159403862928 = Node('StatementList_2928', parent=CompoundStatement140159403721488)
PassUpNode140159403860816 = Node('StatementList_0816', parent=PassUpNode140159403862928)
PassUpNode140159403842384 = Node('StatementList_2384', parent=PassUpNode140159403860816)
PassUpNode140159403840336 = Node('StatementList_0336', parent=PassUpNode140159403842384)
PassUpNode140159403818192 = Node('StatementList_8192', parent=PassUpNode140159403840336)
PassUpNode140159403782928 = Node('StatementList_2928', parent=PassUpNode140159403818192)
PassUpNode140159403782864 = Node('Statement_2864', parent=PassUpNode140159403782928)
SelectionStatement140159403816784 = Node('SelectionStatement_6784', parent=PassUpNode140159403782864)
PassUpNode140159403784656 = Node('Expression_4656', parent=SelectionStatement140159403816784)
PassUpNode140159403784592 = Node('AssignmentExpression_4592', parent=PassUpNode140159403784656)
PassUpNode140159403784528 = Node('ConditionalExpression_4528', parent=PassUpNode140159403784592)
PassUpNode140159403784464 = Node('LogicalOrExpression_4464', parent=PassUpNode140159403784528)
PassUpNode140159403784400 = Node('LogicalAndExpression_4400', parent=PassUpNode140159403784464)
PassUpNode140159403784336 = Node('InclusiveOrExpression_4336', parent=PassUpNode140159403784400)
PassUpNode140159403784272 = Node('ExclusiveOrExpression_4272', parent=PassUpNode140159403784336)
PassUpNode140159403784208 = Node('AndExpression_4208', parent=PassUpNode140159403784272)
PassUpNode140159403783056 = Node('EqalityExpression_3056', parent=PassUpNode140159403784208)
BinOp140159403784144 = Node('BinOp_4144', parent=PassUpNode140159403783056)
PassUpNode140159403783504 = Node('ShiftExpression_3504', parent=BinOp140159403784144)
PassUpNode140159403783440 = Node('ShiftExpression_3440', parent=PassUpNode140159403783504)
PassUpNode140159403783376 = Node('AdditiveExpression_3376', parent=PassUpNode140159403783440)
PassUpNode140159403783312 = Node('MultiplicativeExpression_3312', parent=PassUpNode140159403783376)
PassUpNode140159403783248 = Node('CastExpression_3248', parent=PassUpNode140159403783312)
PassUpNode140159403783184 = Node('UnaryExpression_3184', parent=PassUpNode140159403783248)
PassUpNode140159403783120 = Node('PostfixExpression_3120', parent=PassUpNode140159403783184)
PrimaryExpression140159403782992 = Node('PrimaryExpression_2992', parent=PassUpNode140159403783120)
Identifier140159403782800 = Node('Identifier_2800', parent=PrimaryExpression140159403782992)
leaf = Node('a_2800', parent=Identifier140159403782800)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140159403782800)
leaf = Node('<_4144', parent=BinOp140159403784144)
PassUpNode140159403784080 = Node('ShiftExpression_4080', parent=BinOp140159403784144)
PassUpNode140159403784016 = Node('AdditiveExpression_4016', parent=PassUpNode140159403784080)
PassUpNode140159403783952 = Node('MultiplicativeExpression_3952', parent=PassUpNode140159403784016)
PassUpNode140159403783888 = Node('CastExpression_3888', parent=PassUpNode140159403783952)
PassUpNode140159403783824 = Node('UnaryExpression_3824', parent=PassUpNode140159403783888)
PassUpNode140159403783760 = Node('PostfixExpression_3760', parent=PassUpNode140159403783824)
PrimaryExpression140159403783632 = Node('PrimaryExpression_3632', parent=PassUpNode140159403783760)
Identifier140159403783568 = Node('Identifier_3568', parent=PrimaryExpression140159403783632)
leaf = Node('d_3568', parent=Identifier140159403783568)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403783568)
PassUpNode140159403784784 = Node('Statement_4784', parent=SelectionStatement140159403816784)
CompoundStatement140159403784720 = Node('CompoundStatement_4720', parent=PassUpNode140159403784784)
DeclList140159403785040 = Node('DeclList_5040', parent=CompoundStatement140159403784720)
Declaration140159403785232 = Node('Declaration_5232', parent=DeclList140159403785040)
DeclarationSpecifiers140159403784912 = Node('DeclarationSpecifiers_4912', parent=Declaration140159403785232)
leaf = Node('int_4912', parent=DeclarationSpecifiers140159403784912)
InitDeclList140159403785168 = Node('InitDeclList_5168', parent=Declaration140159403785232)
PassUpNode140159403785104 = Node('Declarator_5104', parent=InitDeclList140159403785168)
PassUpNode140159403784976 = Node('DirectDeclarator_4976', parent=PassUpNode140159403785104)
Identifier140159403784848 = Node('Identifier_4848', parent=PassUpNode140159403784976)
leaf = Node('a4_4848', parent=Identifier140159403784848)
leaf = Node("Type='int', TokenLocation=(12, 121, 11)", parent=Identifier140159403784848)
PassUpNode140159403785424 = Node('Statement_5424', parent=SelectionStatement140159403816784)
CompoundStatement140159403785360 = Node('CompoundStatement_5360', parent=PassUpNode140159403785424)
DeclList140159403785680 = Node('DeclList_5680', parent=CompoundStatement140159403785360)
Declaration140159403785872 = Node('Declaration_5872', parent=DeclList140159403785680)
DeclarationSpecifiers140159403785552 = Node('DeclarationSpecifiers_5552', parent=Declaration140159403785872)
leaf = Node('int_5552', parent=DeclarationSpecifiers140159403785552)
InitDeclList140159403785808 = Node('InitDeclList_5808', parent=Declaration140159403785872)
PassUpNode140159403785744 = Node('Declarator_5744', parent=InitDeclList140159403785808)
PassUpNode140159403785616 = Node('DirectDeclarator_5616', parent=PassUpNode140159403785744)
Identifier140159403785488 = Node('Identifier_5488', parent=PassUpNode140159403785616)
leaf = Node('b6_5488', parent=Identifier140159403785488)
leaf = Node("Type='int', TokenLocation=(16, 150, 11)", parent=Identifier140159403785488)
PassUpNode140159403816656 = Node('StatementList_6656', parent=CompoundStatement140159403785360)
PassUpNode140159403815568 = Node('Statement_5568', parent=PassUpNode140159403816656)
PassUpNode140159403816592 = Node('Expression_6592', parent=PassUpNode140159403815568)
AssignmentExpression140159403816528 = Node('AssignmentExpression_6528', parent=PassUpNode140159403816592)
PassUpNode140159403786192 = Node('UnaryExpression_6192', parent=AssignmentExpression140159403816528)
PassUpNode140159403786128 = Node('PostfixExpression_6128', parent=PassUpNode140159403786192)
PrimaryExpression140159403786000 = Node('PrimaryExpression_6000', parent=PassUpNode140159403786128)
Identifier140159403785936 = Node('Identifier_5936', parent=PrimaryExpression140159403786000)
leaf = Node('b6_5936', parent=Identifier140159403785936)
leaf = Node("Type='int', TokenLocation=(16, 150, 11)", parent=Identifier140159403785936)
PassUpNode140159403816464 = Node('AssignmentExpression_6464', parent=AssignmentExpression140159403816528)
PassUpNode140159403816400 = Node('ConditionalExpression_6400', parent=PassUpNode140159403816464)
PassUpNode140159403816336 = Node('LogicalOrExpression_6336', parent=PassUpNode140159403816400)
PassUpNode140159403816272 = Node('LogicalAndExpression_6272', parent=PassUpNode140159403816336)
PassUpNode140159403816208 = Node('InclusiveOrExpression_6208', parent=PassUpNode140159403816272)
PassUpNode140159403816144 = Node('ExclusiveOrExpression_6144', parent=PassUpNode140159403816208)
PassUpNode140159403816080 = Node('AndExpression_6080', parent=PassUpNode140159403816144)
PassUpNode140159403816016 = Node('EqalityExpression_6016', parent=PassUpNode140159403816080)
PassUpNode140159403815952 = Node('ShiftExpression_5952', parent=PassUpNode140159403816016)
PassUpNode140159403815120 = Node('ShiftExpression_5120', parent=PassUpNode140159403815952)
BinOp140159403815888 = Node('BinOp_5888', parent=PassUpNode140159403815120)
PassUpNode140159403815376 = Node('AdditiveExpression_5376', parent=BinOp140159403815888)
PassUpNode140159403815312 = Node('MultiplicativeExpression_5312', parent=PassUpNode140159403815376)
PassUpNode140159403815248 = Node('CastExpression_5248', parent=PassUpNode140159403815312)
PassUpNode140159403815184 = Node('UnaryExpression_5184', parent=PassUpNode140159403815248)
PassUpNode140159403814992 = Node('PostfixExpression_4992', parent=PassUpNode140159403815184)
PrimaryExpression140159403815056 = Node('PrimaryExpression_5056', parent=PassUpNode140159403814992)
Constant140159403786064 = Node('Constant_6064', parent=PrimaryExpression140159403815056)
leaf = Node('4_6064', parent=Constant140159403786064)
leaf = Node('+_5888', parent=BinOp140159403815888)
PassUpNode140159403815824 = Node('MultiplicativeExpression_5824', parent=BinOp140159403815888)
PassUpNode140159403815760 = Node('CastExpression_5760', parent=PassUpNode140159403815824)
PassUpNode140159403815696 = Node('UnaryExpression_5696', parent=PassUpNode140159403815760)
PassUpNode140159403815632 = Node('PostfixExpression_5632', parent=PassUpNode140159403815696)
PrimaryExpression140159403815504 = Node('PrimaryExpression_5504', parent=PassUpNode140159403815632)
Constant140159403815440 = Node('Constant_5440', parent=PrimaryExpression140159403815504)
leaf = Node('2_5440', parent=Constant140159403815440)
PassUpNode140159403817104 = Node('Statement_7104', parent=PassUpNode140159403818192)
PassUpNode140159403818128 = Node('Expression_8128', parent=PassUpNode140159403817104)
AssignmentExpression140159403818064 = Node('AssignmentExpression_8064', parent=PassUpNode140159403818128)
PassUpNode140159403816912 = Node('UnaryExpression_6912', parent=AssignmentExpression140159403818064)
PassUpNode140159403816720 = Node('PostfixExpression_6720', parent=PassUpNode140159403816912)
PrimaryExpression140159403816848 = Node('PrimaryExpression_6848', parent=PassUpNode140159403816720)
Identifier140159403783696 = Node('Identifier_3696', parent=PrimaryExpression140159403816848)
leaf = Node('a_3696', parent=Identifier140159403783696)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140159403783696)
PassUpNode140159403818000 = Node('AssignmentExpression_8000', parent=AssignmentExpression140159403818064)
PassUpNode140159403817936 = Node('ConditionalExpression_7936', parent=PassUpNode140159403818000)
PassUpNode140159403817872 = Node('LogicalOrExpression_7872', parent=PassUpNode140159403817936)
PassUpNode140159403817808 = Node('LogicalAndExpression_7808', parent=PassUpNode140159403817872)
PassUpNode140159403817744 = Node('InclusiveOrExpression_7744', parent=PassUpNode140159403817808)
PassUpNode140159403817680 = Node('ExclusiveOrExpression_7680', parent=PassUpNode140159403817744)
PassUpNode140159403817616 = Node('AndExpression_7616', parent=PassUpNode140159403817680)
PassUpNode140159403817552 = Node('EqalityExpression_7552', parent=PassUpNode140159403817616)
PassUpNode140159403817488 = Node('ShiftExpression_7488', parent=PassUpNode140159403817552)
PassUpNode140159403817424 = Node('ShiftExpression_7424', parent=PassUpNode140159403817488)
PassUpNode140159403817360 = Node('AdditiveExpression_7360', parent=PassUpNode140159403817424)
PassUpNode140159403817296 = Node('MultiplicativeExpression_7296', parent=PassUpNode140159403817360)
PassUpNode140159403817232 = Node('CastExpression_7232', parent=PassUpNode140159403817296)
PassUpNode140159403817168 = Node('UnaryExpression_7168', parent=PassUpNode140159403817232)
PassUpNode140159403816976 = Node('PostfixExpression_6976', parent=PassUpNode140159403817168)
PrimaryExpression140159403817040 = Node('PrimaryExpression_7040', parent=PassUpNode140159403816976)
Constant140159403785296 = Node('Constant_5296', parent=PrimaryExpression140159403817040)
leaf = Node('1_5296', parent=Constant140159403785296)
PassUpNode140159403818704 = Node('Statement_8704', parent=PassUpNode140159403840336)
PassUpNode140159403840272 = Node('Expression_0272', parent=PassUpNode140159403818704)
AssignmentExpression140159403840208 = Node('AssignmentExpression_0208', parent=PassUpNode140159403840272)
PassUpNode140159403818512 = Node('UnaryExpression_8512', parent=AssignmentExpression140159403840208)
PassUpNode140159403818448 = Node('PostfixExpression_8448', parent=PassUpNode140159403818512)
PrimaryExpression140159403818320 = Node('PrimaryExpression_8320', parent=PassUpNode140159403818448)
Identifier140159403818256 = Node('Identifier_8256', parent=PrimaryExpression140159403818320)
leaf = Node('d_8256', parent=Identifier140159403818256)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403818256)
PassUpNode140159403840144 = Node('AssignmentExpression_0144', parent=AssignmentExpression140159403840208)
PassUpNode140159403840080 = Node('ConditionalExpression_0080', parent=PassUpNode140159403840144)
PassUpNode140159403840016 = Node('LogicalOrExpression_0016', parent=PassUpNode140159403840080)
PassUpNode140159403839952 = Node('LogicalAndExpression_9952', parent=PassUpNode140159403840016)
PassUpNode140159403839888 = Node('InclusiveOrExpression_9888', parent=PassUpNode140159403839952)
PassUpNode140159403839824 = Node('ExclusiveOrExpression_9824', parent=PassUpNode140159403839888)
PassUpNode140159403839760 = Node('AndExpression_9760', parent=PassUpNode140159403839824)
PassUpNode140159403839696 = Node('EqalityExpression_9696', parent=PassUpNode140159403839760)
PassUpNode140159403839632 = Node('ShiftExpression_9632', parent=PassUpNode140159403839696)
PassUpNode140159403839568 = Node('ShiftExpression_9568', parent=PassUpNode140159403839632)
PassUpNode140159403818960 = Node('AdditiveExpression_8960', parent=PassUpNode140159403839568)
PassUpNode140159403818896 = Node('MultiplicativeExpression_8896', parent=PassUpNode140159403818960)
PassUpNode140159403818832 = Node('CastExpression_8832', parent=PassUpNode140159403818896)
PassUpNode140159403818768 = Node('UnaryExpression_8768', parent=PassUpNode140159403818832)
PassUpNode140159403818576 = Node('PostfixExpression_8576', parent=PassUpNode140159403818768)
PrimaryExpression140159403818640 = Node('PrimaryExpression_8640', parent=PassUpNode140159403818576)
Constant140159403818384 = Node('Constant_8384', parent=PrimaryExpression140159403818640)
leaf = Node('3_8384', parent=Constant140159403818384)
PassUpNode140159403841296 = Node('Statement_1296', parent=PassUpNode140159403842384)
PassUpNode140159403842320 = Node('Expression_2320', parent=PassUpNode140159403841296)
AssignmentExpression140159403842256 = Node('AssignmentExpression_2256', parent=PassUpNode140159403842320)
PassUpNode140159403840656 = Node('UnaryExpression_0656', parent=AssignmentExpression140159403842256)
PassUpNode140159403840592 = Node('PostfixExpression_0592', parent=PassUpNode140159403840656)
PrimaryExpression140159403840464 = Node('PrimaryExpression_0464', parent=PassUpNode140159403840592)
Identifier140159403840400 = Node('Identifier_0400', parent=PrimaryExpression140159403840464)
leaf = Node('g_0400', parent=Identifier140159403840400)
PassUpNode140159403842192 = Node('AssignmentExpression_2192', parent=AssignmentExpression140159403842256)
PassUpNode140159403842128 = Node('ConditionalExpression_2128', parent=PassUpNode140159403842192)
PassUpNode140159403842064 = Node('LogicalOrExpression_2064', parent=PassUpNode140159403842128)
PassUpNode140159403842000 = Node('LogicalAndExpression_2000', parent=PassUpNode140159403842064)
PassUpNode140159403841936 = Node('InclusiveOrExpression_1936', parent=PassUpNode140159403842000)
PassUpNode140159403841872 = Node('ExclusiveOrExpression_1872', parent=PassUpNode140159403841936)
PassUpNode140159403841808 = Node('AndExpression_1808', parent=PassUpNode140159403841872)
PassUpNode140159403841744 = Node('EqalityExpression_1744', parent=PassUpNode140159403841808)
PassUpNode140159403841680 = Node('ShiftExpression_1680', parent=PassUpNode140159403841744)
PassUpNode140159403840848 = Node('ShiftExpression_0848', parent=PassUpNode140159403841680)
BinOp140159403841616 = Node('BinOp_1616', parent=PassUpNode140159403840848)
PassUpNode140159403841104 = Node('AdditiveExpression_1104', parent=BinOp140159403841616)
PassUpNode140159403841040 = Node('MultiplicativeExpression_1040', parent=PassUpNode140159403841104)
PassUpNode140159403840976 = Node('CastExpression_0976', parent=PassUpNode140159403841040)
PassUpNode140159403840912 = Node('UnaryExpression_0912', parent=PassUpNode140159403840976)
PassUpNode140159403840720 = Node('PostfixExpression_0720', parent=PassUpNode140159403840912)
PrimaryExpression140159403840784 = Node('PrimaryExpression_0784', parent=PassUpNode140159403840720)
Constant140159403840528 = Node('Constant_0528', parent=PrimaryExpression140159403840784)
leaf = Node('2_0528', parent=Constant140159403840528)
leaf = Node('+_1616', parent=BinOp140159403841616)
PassUpNode140159403841552 = Node('MultiplicativeExpression_1552', parent=BinOp140159403841616)
PassUpNode140159403841488 = Node('CastExpression_1488', parent=PassUpNode140159403841552)
PassUpNode140159403841424 = Node('UnaryExpression_1424', parent=PassUpNode140159403841488)
PassUpNode140159403841360 = Node('PostfixExpression_1360', parent=PassUpNode140159403841424)
PrimaryExpression140159403841232 = Node('PrimaryExpression_1232', parent=PassUpNode140159403841360)
Constant140159403841168 = Node('Constant_1168', parent=PrimaryExpression140159403841232)
leaf = Node('3_1168', parent=Constant140159403841168)
PassUpNode140159403843280 = Node('Statement_3280', parent=PassUpNode140159403860816)
PassUpNode140159403860752 = Node('Expression_0752', parent=PassUpNode140159403843280)
AssignmentExpression140159403860688 = Node('AssignmentExpression_0688', parent=PassUpNode140159403860752)
PassUpNode140159403842704 = Node('UnaryExpression_2704', parent=AssignmentExpression140159403860688)
PassUpNode140159403842640 = Node('PostfixExpression_2640', parent=PassUpNode140159403842704)
PrimaryExpression140159403842512 = Node('PrimaryExpression_2512', parent=PassUpNode140159403842640)
Identifier140159403842448 = Node('Identifier_2448', parent=PrimaryExpression140159403842512)
leaf = Node('d_2448', parent=Identifier140159403842448)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403842448)
PassUpNode140159403860624 = Node('AssignmentExpression_0624', parent=AssignmentExpression140159403860688)
PassUpNode140159403860560 = Node('ConditionalExpression_0560', parent=PassUpNode140159403860624)
PassUpNode140159403860496 = Node('LogicalOrExpression_0496', parent=PassUpNode140159403860560)
PassUpNode140159403860432 = Node('LogicalAndExpression_0432', parent=PassUpNode140159403860496)
PassUpNode140159403860368 = Node('InclusiveOrExpression_0368', parent=PassUpNode140159403860432)
PassUpNode140159403860304 = Node('ExclusiveOrExpression_0304', parent=PassUpNode140159403860368)
PassUpNode140159403860240 = Node('AndExpression_0240', parent=PassUpNode140159403860304)
PassUpNode140159403860176 = Node('EqalityExpression_0176', parent=PassUpNode140159403860240)
PassUpNode140159403860112 = Node('ShiftExpression_0112', parent=PassUpNode140159403860176)
PassUpNode140159403860048 = Node('ShiftExpression_0048', parent=PassUpNode140159403860112)
PassUpNode140159403842896 = Node('AdditiveExpression_2896', parent=PassUpNode140159403860048)
BinOp140159403843536 = Node('BinOp_3536', parent=PassUpNode140159403842896)
PassUpNode140159403843088 = Node('MultiplicativeExpression_3088', parent=BinOp140159403843536)
PassUpNode140159403843024 = Node('CastExpression_3024', parent=PassUpNode140159403843088)
PassUpNode140159403842960 = Node('UnaryExpression_2960', parent=PassUpNode140159403843024)
PassUpNode140159403842768 = Node('PostfixExpression_2768', parent=PassUpNode140159403842960)
PrimaryExpression140159403842832 = Node('PrimaryExpression_2832', parent=PassUpNode140159403842768)
Constant140159403842576 = Node('Constant_2576', parent=PrimaryExpression140159403842832)
leaf = Node('5_2576', parent=Constant140159403842576)
leaf = Node('*_3536', parent=BinOp140159403843536)
PassUpNode140159403843472 = Node('CastExpression_3472', parent=BinOp140159403843536)
PassUpNode140159403843408 = Node('UnaryExpression_3408', parent=PassUpNode140159403843472)
PassUpNode140159403843344 = Node('PostfixExpression_3344', parent=PassUpNode140159403843408)
PrimaryExpression140159403843216 = Node('PrimaryExpression_3216', parent=PassUpNode140159403843344)
Constant140159403843152 = Node('Constant_3152', parent=PrimaryExpression140159403843216)
leaf = Node('5_3152', parent=Constant140159403843152)
PassUpNode140159403861840 = Node('Statement_1840', parent=PassUpNode140159403862928)
PassUpNode140159403862864 = Node('Expression_2864', parent=PassUpNode140159403861840)
AssignmentExpression140159403862800 = Node('AssignmentExpression_2800', parent=PassUpNode140159403862864)
PassUpNode140159403861136 = Node('UnaryExpression_1136', parent=AssignmentExpression140159403862800)
PassUpNode140159403861072 = Node('PostfixExpression_1072', parent=PassUpNode140159403861136)
PrimaryExpression140159403860944 = Node('PrimaryExpression_0944', parent=PassUpNode140159403861072)
Identifier140159403860880 = Node('Identifier_0880', parent=PrimaryExpression140159403860944)
leaf = Node('d_0880', parent=Identifier140159403860880)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403860880)
PassUpNode140159403862736 = Node('AssignmentExpression_2736', parent=AssignmentExpression140159403862800)
PassUpNode140159403862672 = Node('ConditionalExpression_2672', parent=PassUpNode140159403862736)
PassUpNode140159403862608 = Node('LogicalOrExpression_2608', parent=PassUpNode140159403862672)
PassUpNode140159403862544 = Node('LogicalAndExpression_2544', parent=PassUpNode140159403862608)
PassUpNode140159403862480 = Node('InclusiveOrExpression_2480', parent=PassUpNode140159403862544)
PassUpNode140159403862416 = Node('ExclusiveOrExpression_2416', parent=PassUpNode140159403862480)
PassUpNode140159403862352 = Node('AndExpression_2352', parent=PassUpNode140159403862416)
PassUpNode140159403862288 = Node('EqalityExpression_2288', parent=PassUpNode140159403862352)
PassUpNode140159403861328 = Node('ShiftExpression_1328', parent=PassUpNode140159403862288)
BinOp140159403862224 = Node('BinOp_2224', parent=PassUpNode140159403861328)
PassUpNode140159403861648 = Node('ShiftExpression_1648', parent=BinOp140159403862224)
PassUpNode140159403861584 = Node('AdditiveExpression_1584', parent=PassUpNode140159403861648)
PassUpNode140159403861520 = Node('MultiplicativeExpression_1520', parent=PassUpNode140159403861584)
PassUpNode140159403861456 = Node('CastExpression_1456', parent=PassUpNode140159403861520)
PassUpNode140159403861392 = Node('UnaryExpression_1392', parent=PassUpNode140159403861456)
PassUpNode140159403861200 = Node('PostfixExpression_1200', parent=PassUpNode140159403861392)
PrimaryExpression140159403861264 = Node('PrimaryExpression_1264', parent=PassUpNode140159403861200)
Identifier140159403861008 = Node('Identifier_1008', parent=PrimaryExpression140159403861264)
leaf = Node('d_1008', parent=Identifier140159403861008)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140159403861008)
leaf = Node('>>_2224', parent=BinOp140159403862224)
PassUpNode140159403862160 = Node('AdditiveExpression_2160', parent=BinOp140159403862224)
PassUpNode140159403862096 = Node('MultiplicativeExpression_2096', parent=PassUpNode140159403862160)
PassUpNode140159403862032 = Node('CastExpression_2032', parent=PassUpNode140159403862096)
PassUpNode140159403861968 = Node('UnaryExpression_1968', parent=PassUpNode140159403862032)
PassUpNode140159403861904 = Node('PostfixExpression_1904', parent=PassUpNode140159403861968)
PrimaryExpression140159403861776 = Node('PrimaryExpression_1776', parent=PassUpNode140159403861904)
Constant140159403861712 = Node('Constant_1712', parent=PrimaryExpression140159403861776)
leaf = Node('5_1712', parent=Constant140159403861712)

for pre, fill, node in RenderTree(PassUpNode140159403862992):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140159403862992, nodeattrfunc=f).to_picture("AST.png")
        