from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode62441104 = Node('TranslationUnit_1104')
PassUpNode62352880 = Node('ExternalDeclaration_2880', parent=PassUpNode62441104)
FunctionDefintion62353040 = Node('FunctionDefintion_3040', parent=PassUpNode62352880)
DeclarationSpecifiers62352848 = Node('DeclarationSpecifiers_2848', parent=FunctionDefintion62353040)
leaf = Node('int_2848', parent=DeclarationSpecifiers62352848)
PassUpNode62352528 = Node('Declarator_2528', parent=FunctionDefintion62353040)
PassUpNode62353104 = Node('DirectDeclarator_3104', parent=PassUpNode62352528)
PassUpNode62352816 = Node('DirectDeclarator_2816', parent=PassUpNode62353104)
Identifier62352976 = Node('Identifier_2976', parent=PassUpNode62352816)
leaf = Node('main_2976', parent=Identifier62352976)
leaf = Node("TokenLocation=(5, 21, 5)", parent=Identifier62352976)
PassUpNode62353392 = Node('ParameterTypeList_3392', parent=PassUpNode62353104)
PassUpNode62353072 = Node('ParameterList_3072', parent=PassUpNode62353392)
PassUpNode62353136 = Node('ParameterDeclaration_3136', parent=PassUpNode62353072)
DeclarationSpecifiers62353168 = Node('DeclarationSpecifiers_3168', parent=PassUpNode62353136)
leaf = Node('int_3168', parent=DeclarationSpecifiers62353168)
PassUpNode62353360 = Node('Declarator_3360', parent=PassUpNode62353136)
PassUpNode62353232 = Node('DirectDeclarator_3232', parent=PassUpNode62353360)
Identifier62353264 = Node('Identifier_3264', parent=PassUpNode62353232)
leaf = Node('g_3264', parent=Identifier62353264)
leaf = Node("TokenLocation=(5, 30, 14)", parent=Identifier62353264)
CompoundStatement62441008 = Node('CompoundStatement_1008', parent=FunctionDefintion62353040)
DeclList62374640 = Node('DeclList_4640', parent=CompoundStatement62441008)
DeclList62374192 = Node('DeclList_4192', parent=DeclList62374640)
Declaration62374032 = Node('Declaration_4032', parent=DeclList62374192)
DeclarationSpecifiers62353328 = Node('DeclarationSpecifiers_3328', parent=Declaration62374032)
leaf = Node('char_3328', parent=DeclarationSpecifiers62353328)
InitDeclList62374352 = Node('InitDeclList_4352', parent=Declaration62374032)
InitDeclList62374224 = Node('InitDeclList_4224', parent=InitDeclList62374352)
PassUpNode62374160 = Node('Declarator_4160', parent=InitDeclList62374224)
PassUpNode62374064 = Node('DirectDeclarator_4064', parent=PassUpNode62374160)
Identifier62374128 = Node('Identifier_4128', parent=PassUpNode62374064)
leaf = Node('a_4128', parent=Identifier62374128)
leaf = Node("TokenLocation=(6, 43, 10), Type='char'", parent=Identifier62374128)
PassUpNode62374288 = Node('Declarator_4288', parent=InitDeclList62374352)
PassUpNode62374320 = Node('DirectDeclarator_4320', parent=PassUpNode62374288)
Identifier62374416 = Node('Identifier_4416', parent=PassUpNode62374320)
leaf = Node('d_4416', parent=Identifier62374416)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62374416)
Declaration62375312 = Node('Declaration_5312', parent=DeclList62374640)
DeclarationSpecifiers62374544 = Node('DeclarationSpecifiers_4544', parent=Declaration62375312)
leaf = Node('int_4544', parent=DeclarationSpecifiers62374544)
InitDeclList62375952 = Node('InitDeclList_5952', parent=Declaration62375312)
PassUpNode62375280 = Node('Declarator_5280', parent=InitDeclList62375952)
ArrayDeclaration62375824 = Node('ArrayDeclaration_5824', parent=PassUpNode62375280)
ArrayDeclaration62375216 = Node('ArrayDeclaration_5216', parent=ArrayDeclaration62375824)
PassUpNode62374480 = Node('DirectDeclarator_4480', parent=ArrayDeclaration62375216)
Identifier62374576 = Node('Identifier_4576', parent=PassUpNode62374480)
leaf = Node('arr_4576', parent=Identifier62374576)
leaf = Node("TokenLocation=(8, 70, 9), Array Size=['8', '10'], Subtype='Array', Type='int'", parent=Identifier62374576)
PassUpNode62375184 = Node('ConstantExpression_5184', parent=ArrayDeclaration62375216)
PassUpNode62375152 = Node('ConditionalExpression_5152', parent=PassUpNode62375184)
PassUpNode62375120 = Node('LogicalOrExpression_5120', parent=PassUpNode62375152)
PassUpNode62375088 = Node('LogicalAndExpression_5088', parent=PassUpNode62375120)
PassUpNode62375056 = Node('InclusiveOrExpression_5056', parent=PassUpNode62375088)
PassUpNode62375024 = Node('ExclusiveOrExpression_5024', parent=PassUpNode62375056)
PassUpNode62374992 = Node('AndExpression_4992', parent=PassUpNode62375024)
PassUpNode62374960 = Node('EqalityExpression_4960', parent=PassUpNode62374992)
PassUpNode62374928 = Node('ShiftExpression_4928', parent=PassUpNode62374960)
PassUpNode62374896 = Node('ShiftExpression_4896', parent=PassUpNode62374928)
PassUpNode62374864 = Node('AdditiveExpression_4864', parent=PassUpNode62374896)
PassUpNode62374832 = Node('MultiplicativeExpression_4832', parent=PassUpNode62374864)
PassUpNode62374800 = Node('CastExpression_4800', parent=PassUpNode62374832)
PassUpNode62374768 = Node('UnaryExpression_4768', parent=PassUpNode62374800)
PassUpNode62374672 = Node('PostfixExpression_4672', parent=PassUpNode62374768)
PrimaryExpression62374704 = Node('PrimaryExpression_4704', parent=PassUpNode62374672)
Constant62374608 = Node('Constant_4608', parent=PrimaryExpression62374704)
leaf = Node('8_4608', parent=Constant62374608)
PassUpNode62375792 = Node('ConstantExpression_5792', parent=ArrayDeclaration62375824)
PassUpNode62375760 = Node('ConditionalExpression_5760', parent=PassUpNode62375792)
PassUpNode62375728 = Node('LogicalOrExpression_5728', parent=PassUpNode62375760)
PassUpNode62375696 = Node('LogicalAndExpression_5696', parent=PassUpNode62375728)
PassUpNode62375664 = Node('InclusiveOrExpression_5664', parent=PassUpNode62375696)
PassUpNode62375632 = Node('ExclusiveOrExpression_5632', parent=PassUpNode62375664)
PassUpNode62375600 = Node('AndExpression_5600', parent=PassUpNode62375632)
PassUpNode62375568 = Node('EqalityExpression_5568', parent=PassUpNode62375600)
PassUpNode62375536 = Node('ShiftExpression_5536', parent=PassUpNode62375568)
PassUpNode62375504 = Node('ShiftExpression_5504', parent=PassUpNode62375536)
PassUpNode62375472 = Node('AdditiveExpression_5472', parent=PassUpNode62375504)
PassUpNode62374736 = Node('MultiplicativeExpression_4736', parent=PassUpNode62375472)
PassUpNode62375248 = Node('CastExpression_5248', parent=PassUpNode62374736)
PassUpNode62374384 = Node('UnaryExpression_4384', parent=PassUpNode62375248)
PassUpNode62375344 = Node('PostfixExpression_5344', parent=PassUpNode62374384)
PrimaryExpression62375376 = Node('PrimaryExpression_5376', parent=PassUpNode62375344)
Constant62373936 = Node('Constant_3936', parent=PrimaryExpression62375376)
leaf = Node('10_3936', parent=Constant62373936)
PassUpNode62439984 = Node('StatementList_9984', parent=CompoundStatement62441008)
PassUpNode62426672 = Node('StatementList_6672', parent=PassUpNode62439984)
PassUpNode62425648 = Node('StatementList_5648', parent=PassUpNode62426672)
PassUpNode62424848 = Node('StatementList_4848', parent=PassUpNode62425648)
PassUpNode62377360 = Node('StatementList_7360', parent=PassUpNode62424848)
PassUpNode62376912 = Node('StatementList_6912', parent=PassUpNode62377360)
PassUpNode62377968 = Node('Statement_7968', parent=PassUpNode62376912)
SelectionStatement62376848 = Node('SelectionStatement_6848', parent=PassUpNode62377968)
PassUpNode62376816 = Node('Expression_6816', parent=SelectionStatement62376848)
PassUpNode62376784 = Node('AssignmentExpression_6784', parent=PassUpNode62376816)
PassUpNode62376752 = Node('ConditionalExpression_6752', parent=PassUpNode62376784)
PassUpNode62376720 = Node('LogicalOrExpression_6720', parent=PassUpNode62376752)
PassUpNode62376624 = Node('LogicalAndExpression_6624', parent=PassUpNode62376720)
PassUpNode62376112 = Node('InclusiveOrExpression_6112', parent=PassUpNode62376624)
PassUpNode62376688 = Node('ExclusiveOrExpression_6688', parent=PassUpNode62376112)
PassUpNode62376656 = Node('AndExpression_6656', parent=PassUpNode62376688)
PassUpNode62376304 = Node('EqalityExpression_6304', parent=PassUpNode62376656)
BinOp62376592 = Node('BinOp_6592', parent=PassUpNode62376304)
PassUpNode62376240 = Node('ShiftExpression_6240', parent=BinOp62376592)
PassUpNode62376208 = Node('ShiftExpression_6208', parent=PassUpNode62376240)
PassUpNode62376176 = Node('AdditiveExpression_6176', parent=PassUpNode62376208)
PassUpNode62376144 = Node('MultiplicativeExpression_6144', parent=PassUpNode62376176)
PassUpNode62376048 = Node('CastExpression_6048', parent=PassUpNode62376144)
PassUpNode62375920 = Node('UnaryExpression_5920', parent=PassUpNode62376048)
PassUpNode62374096 = Node('PostfixExpression_4096', parent=PassUpNode62375920)
PrimaryExpression62375856 = Node('PrimaryExpression_5856', parent=PassUpNode62374096)
Identifier62376080 = Node('Identifier_6080', parent=PrimaryExpression62375856)
leaf = Node('a_6080', parent=Identifier62376080)
leaf = Node("TokenLocation=(6, 43, 10), Type='char'", parent=Identifier62376080)
leaf = Node('<_6592', parent=BinOp62376592)
PassUpNode62376560 = Node('ShiftExpression_6560', parent=BinOp62376592)
PassUpNode62376528 = Node('AdditiveExpression_6528', parent=PassUpNode62376560)
PassUpNode62376432 = Node('MultiplicativeExpression_6432', parent=PassUpNode62376528)
PassUpNode62376400 = Node('CastExpression_6400', parent=PassUpNode62376432)
PassUpNode62376464 = Node('UnaryExpression_6464', parent=PassUpNode62376400)
PassUpNode62376336 = Node('PostfixExpression_6336', parent=PassUpNode62376464)
PrimaryExpression62376368 = Node('PrimaryExpression_6368', parent=PassUpNode62376336)
Identifier62376272 = Node('Identifier_6272', parent=PrimaryExpression62376368)
leaf = Node('d_6272', parent=Identifier62376272)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62376272)
PassUpNode62376944 = Node('Statement_6944', parent=SelectionStatement62376848)
CompoundStatement62377168 = Node('CompoundStatement_7168', parent=PassUpNode62376944)
DeclList62377264 = Node('DeclList_7264', parent=CompoundStatement62377168)
Declaration62377328 = Node('Declaration_7328', parent=DeclList62377264)
DeclarationSpecifiers62377008 = Node('DeclarationSpecifiers_7008', parent=Declaration62377328)
leaf = Node('int_7008', parent=DeclarationSpecifiers62377008)
InitDeclList62377296 = Node('InitDeclList_7296', parent=Declaration62377328)
PassUpNode62377232 = Node('Declarator_7232', parent=InitDeclList62377296)
PassUpNode62377104 = Node('DirectDeclarator_7104', parent=PassUpNode62377232)
Identifier62377200 = Node('Identifier_7200', parent=PassUpNode62377104)
leaf = Node('a4_7200', parent=Identifier62377200)
leaf = Node("TokenLocation=(12, 121, 11), Type='int'", parent=Identifier62377200)
PassUpNode62377392 = Node('Statement_7392', parent=SelectionStatement62376848)
CompoundStatement62424112 = Node('CompoundStatement_4112', parent=PassUpNode62377392)
DeclList62377712 = Node('DeclList_7712', parent=CompoundStatement62424112)
Declaration62377776 = Node('Declaration_7776', parent=DeclList62377712)
DeclarationSpecifiers62377456 = Node('DeclarationSpecifiers_7456', parent=Declaration62377776)
leaf = Node('int_7456', parent=DeclarationSpecifiers62377456)
InitDeclList62377744 = Node('InitDeclList_7744', parent=Declaration62377776)
PassUpNode62377680 = Node('Declarator_7680', parent=InitDeclList62377744)
PassUpNode62377552 = Node('DirectDeclarator_7552', parent=PassUpNode62377680)
Identifier62377648 = Node('Identifier_7648', parent=PassUpNode62377552)
leaf = Node('b6_7648', parent=Identifier62377648)
leaf = Node("TokenLocation=(16, 150, 11), Type='int'", parent=Identifier62377648)
PassUpNode62423120 = Node('StatementList_3120', parent=CompoundStatement62424112)
PassUpNode62423984 = Node('Statement_3984', parent=PassUpNode62423120)
PassUpNode62423088 = Node('Expression_3088', parent=PassUpNode62423984)
AssignmentExpression62423888 = Node('AssignmentExpression_3888', parent=PassUpNode62423088)
PassUpNode62377904 = Node('UnaryExpression_7904', parent=AssignmentExpression62423888)
PassUpNode62377488 = Node('PostfixExpression_7488', parent=PassUpNode62377904)
PrimaryExpression62377872 = Node('PrimaryExpression_7872', parent=PassUpNode62377488)
Identifier62377616 = Node('Identifier_7616', parent=PrimaryExpression62377872)
leaf = Node('b6_7616', parent=Identifier62377616)
leaf = Node("TokenLocation=(16, 150, 11), Type='int'", parent=Identifier62377616)
PassUpNode62423856 = Node('AssignmentExpression_3856', parent=AssignmentExpression62423888)
PassUpNode62423824 = Node('ConditionalExpression_3824', parent=PassUpNode62423856)
PassUpNode62423792 = Node('LogicalOrExpression_3792', parent=PassUpNode62423824)
PassUpNode62423760 = Node('LogicalAndExpression_3760', parent=PassUpNode62423792)
PassUpNode62423728 = Node('InclusiveOrExpression_3728', parent=PassUpNode62423760)
PassUpNode62423632 = Node('ExclusiveOrExpression_3632', parent=PassUpNode62423728)
PassUpNode62423184 = Node('AndExpression_3184', parent=PassUpNode62423632)
PassUpNode62423696 = Node('EqalityExpression_3696', parent=PassUpNode62423184)
PassUpNode62423664 = Node('ShiftExpression_3664', parent=PassUpNode62423696)
PassUpNode62423376 = Node('ShiftExpression_3376', parent=PassUpNode62423664)
BinOp62423600 = Node('BinOp_3600', parent=PassUpNode62423376)
PassUpNode62423312 = Node('AdditiveExpression_3312', parent=BinOp62423600)
PassUpNode62423280 = Node('MultiplicativeExpression_3280', parent=PassUpNode62423312)
PassUpNode62423248 = Node('CastExpression_3248', parent=PassUpNode62423280)
PassUpNode62423216 = Node('UnaryExpression_3216', parent=PassUpNode62423248)
PassUpNode62377936 = Node('PostfixExpression_7936', parent=PassUpNode62423216)
PrimaryExpression62423152 = Node('PrimaryExpression_3152', parent=PassUpNode62377936)
Constant62377808 = Node('Constant_7808', parent=PrimaryExpression62423152)
leaf = Node('4_7808', parent=Constant62377808)
leaf = Node('+_3600', parent=BinOp62423600)
PassUpNode62423568 = Node('MultiplicativeExpression_3568', parent=BinOp62423600)
PassUpNode62423536 = Node('CastExpression_3536', parent=PassUpNode62423568)
PassUpNode62423504 = Node('UnaryExpression_3504', parent=PassUpNode62423536)
PassUpNode62423408 = Node('PostfixExpression_3408', parent=PassUpNode62423504)
PrimaryExpression62423440 = Node('PrimaryExpression_3440', parent=PassUpNode62423408)
Constant62423344 = Node('Constant_3344', parent=PrimaryExpression62423440)
leaf = Node('2_3344', parent=Constant62423344)
PassUpNode62424656 = Node('Statement_4656', parent=PassUpNode62377360)
PassUpNode62377040 = Node('Expression_7040', parent=PassUpNode62424656)
AssignmentExpression62424560 = Node('AssignmentExpression_4560', parent=PassUpNode62377040)
PassUpNode62376880 = Node('UnaryExpression_6880', parent=AssignmentExpression62424560)
PassUpNode62375888 = Node('PostfixExpression_5888', parent=PassUpNode62376880)
PrimaryExpression62376496 = Node('PrimaryExpression_6496', parent=PassUpNode62375888)
Identifier62374256 = Node('Identifier_4256', parent=PrimaryExpression62376496)
leaf = Node('a_4256', parent=Identifier62374256)
leaf = Node("TokenLocation=(6, 43, 10), Type='char'", parent=Identifier62374256)
PassUpNode62424528 = Node('AssignmentExpression_4528', parent=AssignmentExpression62424560)
PassUpNode62424496 = Node('ConditionalExpression_4496', parent=PassUpNode62424528)
PassUpNode62424464 = Node('LogicalOrExpression_4464', parent=PassUpNode62424496)
PassUpNode62424432 = Node('LogicalAndExpression_4432', parent=PassUpNode62424464)
PassUpNode62424400 = Node('InclusiveOrExpression_4400', parent=PassUpNode62424432)
PassUpNode62424368 = Node('ExclusiveOrExpression_4368', parent=PassUpNode62424400)
PassUpNode62424336 = Node('AndExpression_4336', parent=PassUpNode62424368)
PassUpNode62424304 = Node('EqalityExpression_4304', parent=PassUpNode62424336)
PassUpNode62424272 = Node('ShiftExpression_4272', parent=PassUpNode62424304)
PassUpNode62424240 = Node('ShiftExpression_4240', parent=PassUpNode62424272)
PassUpNode62424208 = Node('AdditiveExpression_4208', parent=PassUpNode62424240)
PassUpNode62424176 = Node('MultiplicativeExpression_4176', parent=PassUpNode62424208)
PassUpNode62424048 = Node('CastExpression_4048', parent=PassUpNode62424176)
PassUpNode62424016 = Node('UnaryExpression_4016', parent=PassUpNode62424048)
PassUpNode62377424 = Node('PostfixExpression_7424', parent=PassUpNode62424016)
PrimaryExpression62424080 = Node('PrimaryExpression_4080', parent=PassUpNode62377424)
Constant62377520 = Node('Constant_7520', parent=PrimaryExpression62424080)
leaf = Node('1_7520', parent=Constant62377520)
PassUpNode62425488 = Node('Statement_5488', parent=PassUpNode62424848)
PassUpNode62424816 = Node('Expression_4816', parent=PassUpNode62425488)
AssignmentExpression62425392 = Node('AssignmentExpression_5392', parent=PassUpNode62424816)
PassUpNode62424592 = Node('UnaryExpression_4592', parent=AssignmentExpression62425392)
PassUpNode62376016 = Node('PostfixExpression_6016', parent=PassUpNode62424592)
PrimaryExpression62424688 = Node('PrimaryExpression_4688', parent=PassUpNode62376016)
Identifier62424752 = Node('Identifier_4752', parent=PrimaryExpression62424688)
leaf = Node('d_4752', parent=Identifier62424752)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62424752)
PassUpNode62425360 = Node('AssignmentExpression_5360', parent=AssignmentExpression62425392)
PassUpNode62425328 = Node('ConditionalExpression_5328', parent=PassUpNode62425360)
PassUpNode62425296 = Node('LogicalOrExpression_5296', parent=PassUpNode62425328)
PassUpNode62425264 = Node('LogicalAndExpression_5264', parent=PassUpNode62425296)
PassUpNode62425232 = Node('InclusiveOrExpression_5232', parent=PassUpNode62425264)
PassUpNode62425200 = Node('ExclusiveOrExpression_5200', parent=PassUpNode62425232)
PassUpNode62425168 = Node('AndExpression_5168', parent=PassUpNode62425200)
PassUpNode62425136 = Node('EqalityExpression_5136', parent=PassUpNode62425168)
PassUpNode62425104 = Node('ShiftExpression_5104', parent=PassUpNode62425136)
PassUpNode62425072 = Node('ShiftExpression_5072', parent=PassUpNode62425104)
PassUpNode62425040 = Node('AdditiveExpression_5040', parent=PassUpNode62425072)
PassUpNode62425008 = Node('MultiplicativeExpression_5008', parent=PassUpNode62425040)
PassUpNode62424976 = Node('CastExpression_4976', parent=PassUpNode62425008)
PassUpNode62424944 = Node('UnaryExpression_4944', parent=PassUpNode62424976)
PassUpNode62424720 = Node('PostfixExpression_4720', parent=PassUpNode62424944)
PrimaryExpression62424880 = Node('PrimaryExpression_4880', parent=PassUpNode62424720)
Constant62375440 = Node('Constant_5440', parent=PrimaryExpression62424880)
leaf = Node('3_5440', parent=Constant62375440)
PassUpNode62426512 = Node('Statement_6512', parent=PassUpNode62425648)
PassUpNode62425520 = Node('Expression_5520', parent=PassUpNode62426512)
AssignmentExpression62426416 = Node('AssignmentExpression_6416', parent=PassUpNode62425520)
PassUpNode62425584 = Node('UnaryExpression_5584', parent=AssignmentExpression62426416)
PassUpNode62423952 = Node('PostfixExpression_3952', parent=PassUpNode62425584)
PrimaryExpression62425552 = Node('PrimaryExpression_5552', parent=PassUpNode62423952)
Identifier62425456 = Node('Identifier_5456', parent=PrimaryExpression62425552)
leaf = Node('g_5456', parent=Identifier62425456)
PassUpNode62426384 = Node('AssignmentExpression_6384', parent=AssignmentExpression62426416)
PassUpNode62426352 = Node('ConditionalExpression_6352', parent=PassUpNode62426384)
PassUpNode62426320 = Node('LogicalOrExpression_6320', parent=PassUpNode62426352)
PassUpNode62426288 = Node('LogicalAndExpression_6288', parent=PassUpNode62426320)
PassUpNode62426256 = Node('InclusiveOrExpression_6256', parent=PassUpNode62426288)
PassUpNode62426160 = Node('ExclusiveOrExpression_6160', parent=PassUpNode62426256)
PassUpNode62425712 = Node('AndExpression_5712', parent=PassUpNode62426160)
PassUpNode62426224 = Node('EqalityExpression_6224', parent=PassUpNode62425712)
PassUpNode62426192 = Node('ShiftExpression_6192', parent=PassUpNode62426224)
PassUpNode62425904 = Node('ShiftExpression_5904', parent=PassUpNode62426192)
BinOp62426128 = Node('BinOp_6128', parent=PassUpNode62425904)
PassUpNode62425840 = Node('AdditiveExpression_5840', parent=BinOp62426128)
PassUpNode62425808 = Node('MultiplicativeExpression_5808', parent=PassUpNode62425840)
PassUpNode62425776 = Node('CastExpression_5776', parent=PassUpNode62425808)
PassUpNode62425744 = Node('UnaryExpression_5744', parent=PassUpNode62425776)
PassUpNode62425424 = Node('PostfixExpression_5424', parent=PassUpNode62425744)
PrimaryExpression62425680 = Node('PrimaryExpression_5680', parent=PassUpNode62425424)
Constant62424784 = Node('Constant_4784', parent=PrimaryExpression62425680)
leaf = Node('2_4784', parent=Constant62424784)
leaf = Node('+_6128', parent=BinOp62426128)
PassUpNode62426096 = Node('MultiplicativeExpression_6096', parent=BinOp62426128)
PassUpNode62426064 = Node('CastExpression_6064', parent=PassUpNode62426096)
PassUpNode62426032 = Node('UnaryExpression_6032', parent=PassUpNode62426064)
PassUpNode62425936 = Node('PostfixExpression_5936', parent=PassUpNode62426032)
PrimaryExpression62425968 = Node('PrimaryExpression_5968', parent=PassUpNode62425936)
Constant62425872 = Node('Constant_5872', parent=PrimaryExpression62425968)
leaf = Node('3_5872', parent=Constant62425872)
PassUpNode62426992 = Node('Statement_6992', parent=PassUpNode62426672)
PassUpNode62426576 = Node('Expression_6576', parent=PassUpNode62426992)
AssignmentExpression62439728 = Node('AssignmentExpression_9728', parent=PassUpNode62426576)
PassUpNode62426608 = Node('UnaryExpression_6608', parent=AssignmentExpression62439728)
PassUpNode62424912 = Node('PostfixExpression_4912', parent=PassUpNode62426608)
PrimaryExpression62426544 = Node('PrimaryExpression_6544', parent=PassUpNode62424912)
Identifier62426480 = Node('Identifier_6480', parent=PrimaryExpression62426544)
leaf = Node('d_6480', parent=Identifier62426480)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62426480)
PassUpNode62439696 = Node('AssignmentExpression_9696', parent=AssignmentExpression62439728)
PassUpNode62439664 = Node('ConditionalExpression_9664', parent=PassUpNode62439696)
PassUpNode62439632 = Node('LogicalOrExpression_9632', parent=PassUpNode62439664)
PassUpNode62439600 = Node('LogicalAndExpression_9600', parent=PassUpNode62439632)
PassUpNode62439568 = Node('InclusiveOrExpression_9568', parent=PassUpNode62439600)
PassUpNode62439536 = Node('ExclusiveOrExpression_9536', parent=PassUpNode62439568)
PassUpNode62439472 = Node('AndExpression_9472', parent=PassUpNode62439536)
PassUpNode62426736 = Node('EqalityExpression_6736', parent=PassUpNode62439472)
PassUpNode62439504 = Node('ShiftExpression_9504', parent=PassUpNode62426736)
PassUpNode62427120 = Node('ShiftExpression_7120', parent=PassUpNode62439504)
PassUpNode62426896 = Node('AdditiveExpression_6896', parent=PassUpNode62427120)
BinOp62427088 = Node('BinOp_7088', parent=PassUpNode62426896)
PassUpNode62426832 = Node('MultiplicativeExpression_6832', parent=BinOp62427088)
PassUpNode62426800 = Node('CastExpression_6800', parent=PassUpNode62426832)
PassUpNode62426768 = Node('UnaryExpression_6768', parent=PassUpNode62426800)
PassUpNode62426448 = Node('PostfixExpression_6448', parent=PassUpNode62426768)
PrimaryExpression62426704 = Node('PrimaryExpression_6704', parent=PassUpNode62426448)
Constant62425616 = Node('Constant_5616', parent=PrimaryExpression62426704)
leaf = Node('5_5616', parent=Constant62425616)
leaf = Node('*_7088', parent=BinOp62427088)
PassUpNode62427056 = Node('CastExpression_7056', parent=BinOp62427088)
PassUpNode62427024 = Node('UnaryExpression_7024', parent=PassUpNode62427056)
PassUpNode62426928 = Node('PostfixExpression_6928', parent=PassUpNode62427024)
PrimaryExpression62426960 = Node('PrimaryExpression_6960', parent=PassUpNode62426928)
Constant62426864 = Node('Constant_6864', parent=PrimaryExpression62426960)
leaf = Node('5_6864', parent=Constant62426864)
PassUpNode62440912 = Node('Statement_0912', parent=PassUpNode62439984)
PassUpNode62439888 = Node('Expression_9888', parent=PassUpNode62440912)
AssignmentExpression62440816 = Node('AssignmentExpression_0816', parent=PassUpNode62439888)
PassUpNode62439920 = Node('UnaryExpression_9920', parent=AssignmentExpression62440816)
PassUpNode62426000 = Node('PostfixExpression_6000', parent=PassUpNode62439920)
PrimaryExpression62439856 = Node('PrimaryExpression_9856', parent=PassUpNode62426000)
Identifier62439792 = Node('Identifier_9792', parent=PrimaryExpression62439856)
leaf = Node('d_9792', parent=Identifier62439792)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62439792)
PassUpNode62440784 = Node('AssignmentExpression_0784', parent=AssignmentExpression62440816)
PassUpNode62440752 = Node('ConditionalExpression_0752', parent=PassUpNode62440784)
PassUpNode62440720 = Node('LogicalOrExpression_0720', parent=PassUpNode62440752)
PassUpNode62440688 = Node('LogicalAndExpression_0688', parent=PassUpNode62440720)
PassUpNode62440592 = Node('InclusiveOrExpression_0592', parent=PassUpNode62440688)
PassUpNode62440144 = Node('ExclusiveOrExpression_0144', parent=PassUpNode62440592)
PassUpNode62440656 = Node('AndExpression_0656', parent=PassUpNode62440144)
PassUpNode62440624 = Node('EqalityExpression_0624', parent=PassUpNode62440656)
PassUpNode62440304 = Node('ShiftExpression_0304', parent=PassUpNode62440624)
BinOp62440560 = Node('BinOp_0560', parent=PassUpNode62440304)
PassUpNode62440240 = Node('ShiftExpression_0240', parent=BinOp62440560)
PassUpNode62440208 = Node('AdditiveExpression_0208', parent=PassUpNode62440240)
PassUpNode62440176 = Node('MultiplicativeExpression_0176', parent=PassUpNode62440208)
PassUpNode62440080 = Node('CastExpression_0080', parent=PassUpNode62440176)
PassUpNode62440048 = Node('UnaryExpression_0048', parent=PassUpNode62440080)
PassUpNode62439760 = Node('PostfixExpression_9760', parent=PassUpNode62440048)
PrimaryExpression62440016 = Node('PrimaryExpression_0016', parent=PassUpNode62439760)
Identifier62426640 = Node('Identifier_6640', parent=PrimaryExpression62440016)
leaf = Node('d_6640', parent=Identifier62426640)
leaf = Node("TokenLocation=(6, 46, 13), Type='char'", parent=Identifier62426640)
leaf = Node('>>_0560', parent=BinOp62440560)
PassUpNode62440528 = Node('AdditiveExpression_0528', parent=BinOp62440560)
PassUpNode62440496 = Node('MultiplicativeExpression_0496', parent=PassUpNode62440528)
PassUpNode62440464 = Node('CastExpression_0464', parent=PassUpNode62440496)
PassUpNode62440432 = Node('UnaryExpression_0432', parent=PassUpNode62440464)
PassUpNode62440336 = Node('PostfixExpression_0336', parent=PassUpNode62440432)
PrimaryExpression62440368 = Node('PrimaryExpression_0368', parent=PassUpNode62440336)
Constant62440272 = Node('Constant_0272', parent=PrimaryExpression62440368)
leaf = Node('5_0272', parent=Constant62440272)

for pre, fill, node in RenderTree(PassUpNode62441104):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode62441104, nodeattrfunc=f).to_picture("AST.png")
        