from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode4354777616 = Node('TranslationUnit_7616')
PassUpNode4354777680 = Node('ExternalDeclaration_7680', parent=PassUpNode4354777616)
FunctionDefintion4354594320 = Node('FunctionDefintion_4320', parent=PassUpNode4354777680)
DeclarationSpecifiers4354593488 = Node('DeclarationSpecifiers_3488', parent=FunctionDefintion4354594320)
leaf = Node('int_3488', parent=DeclarationSpecifiers4354593488)
PassUpNode4354593680 = Node('Declarator_3680', parent=FunctionDefintion4354594320)
PassUpNode4354594256 = Node('DirectDeclarator_4256', parent=PassUpNode4354593680)
PassUpNode4354593616 = Node('DirectDeclarator_3616', parent=PassUpNode4354594256)
Identifier4354593552 = Node('Identifier_3552', parent=PassUpNode4354593616)
leaf = Node('main_3552', parent=Identifier4354593552)
leaf = Node("TokenLocation=(5, 21, 5)", parent=Identifier4354593552)
PassUpNode4354594192 = Node('ParameterTypeList_4192', parent=PassUpNode4354594256)
PassUpNode4354594128 = Node('ParameterList_4128', parent=PassUpNode4354594192)
PassUpNode4354594064 = Node('ParameterDeclaration_4064', parent=PassUpNode4354594128)
DeclarationSpecifiers4354593808 = Node('DeclarationSpecifiers_3808', parent=PassUpNode4354594064)
leaf = Node('int_3808', parent=DeclarationSpecifiers4354593808)
PassUpNode4354594000 = Node('Declarator_4000', parent=PassUpNode4354594064)
PassUpNode4354593872 = Node('DirectDeclarator_3872', parent=PassUpNode4354594000)
Identifier4354593744 = Node('Identifier_3744', parent=PassUpNode4354593872)
leaf = Node('g_3744', parent=Identifier4354593744)
leaf = Node("TokenLocation=(5, 30, 14)", parent=Identifier4354593744)
CompoundStatement4354593936 = Node('CompoundStatement_3936', parent=FunctionDefintion4354594320)
DeclList4354672656 = Node('DeclList_2656', parent=CompoundStatement4354593936)
DeclList4354594896 = Node('DeclList_4896', parent=DeclList4354672656)
Declaration4354594576 = Node('Declaration_4576', parent=DeclList4354594896)
DeclarationSpecifiers4354594448 = Node('DeclarationSpecifiers_4448', parent=Declaration4354594576)
leaf = Node('char_4448', parent=DeclarationSpecifiers4354594448)
InitDeclList4354595024 = Node('InitDeclList_5024', parent=Declaration4354594576)
InitDeclList4354594704 = Node('InitDeclList_4704', parent=InitDeclList4354595024)
PassUpNode4354594640 = Node('Declarator_4640', parent=InitDeclList4354594704)
PassUpNode4354594512 = Node('DirectDeclarator_4512', parent=PassUpNode4354594640)
Identifier4354594384 = Node('Identifier_4384', parent=PassUpNode4354594512)
leaf = Node('a_4384', parent=Identifier4354594384)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier4354594384)
PassUpNode4354594960 = Node('Declarator_4960', parent=InitDeclList4354595024)
PassUpNode4354594832 = Node('DirectDeclarator_4832', parent=PassUpNode4354594960)
Identifier4354594768 = Node('Identifier_4768', parent=PassUpNode4354594832)
leaf = Node('d_4768', parent=Identifier4354594768)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354594768)
Declaration4354672720 = Node('Declaration_2720', parent=DeclList4354672656)
DeclarationSpecifiers4354595216 = Node('DeclarationSpecifiers_5216', parent=Declaration4354672720)
leaf = Node('int_5216', parent=DeclarationSpecifiers4354595216)
InitDeclList4354671696 = Node('InitDeclList_1696', parent=Declaration4354672720)
PassUpNode4354671504 = Node('Declarator_1504', parent=InitDeclList4354671696)
ArrayDeclaration4354672592 = Node('ArrayDeclaration_2592', parent=PassUpNode4354671504)
ArrayDeclaration4354671440 = Node('ArrayDeclaration_1440', parent=ArrayDeclaration4354672592)
ArrayDeclaration4354596496 = Node('ArrayDeclaration_6496', parent=ArrayDeclaration4354671440)
PassUpNode4354595152 = Node('DirectDeclarator_5152', parent=ArrayDeclaration4354596496)
Identifier4354595088 = Node('Identifier_5088', parent=PassUpNode4354595152)
leaf = Node('arr_5088', parent=Identifier4354595088)
leaf = Node("Array Size=['2', '8', '10'], Subtype='Array', Type='int', TokenLocation=(8, 70, 9)", parent=Identifier4354595088)
PassUpNode4354596432 = Node('ConstantExpression_6432', parent=ArrayDeclaration4354596496)
PassUpNode4354596368 = Node('ConditionalExpression_6368', parent=PassUpNode4354596432)
PassUpNode4354596304 = Node('LogicalOrExpression_6304', parent=PassUpNode4354596368)
PassUpNode4354596240 = Node('LogicalAndExpression_6240', parent=PassUpNode4354596304)
PassUpNode4354596176 = Node('InclusiveOrExpression_6176', parent=PassUpNode4354596240)
PassUpNode4354596112 = Node('ExclusiveOrExpression_6112', parent=PassUpNode4354596176)
PassUpNode4354596048 = Node('AndExpression_6048', parent=PassUpNode4354596112)
PassUpNode4354595984 = Node('EqalityExpression_5984', parent=PassUpNode4354596048)
PassUpNode4354595920 = Node('ShiftExpression_5920', parent=PassUpNode4354595984)
PassUpNode4354595856 = Node('ShiftExpression_5856', parent=PassUpNode4354595920)
PassUpNode4354595792 = Node('AdditiveExpression_5792', parent=PassUpNode4354595856)
PassUpNode4354595728 = Node('MultiplicativeExpression_5728', parent=PassUpNode4354595792)
PassUpNode4354595664 = Node('CastExpression_5664', parent=PassUpNode4354595728)
PassUpNode4354595600 = Node('UnaryExpression_5600', parent=PassUpNode4354595664)
PassUpNode4354595536 = Node('PostfixExpression_5536', parent=PassUpNode4354595600)
PrimaryExpression4354595408 = Node('PrimaryExpression_5408', parent=PassUpNode4354595536)
Constant4354595344 = Node('Constant_5344', parent=PrimaryExpression4354595408)
leaf = Node('2_5344', parent=Constant4354595344)
PassUpNode4354671376 = Node('ConstantExpression_1376', parent=ArrayDeclaration4354671440)
PassUpNode4354671312 = Node('ConditionalExpression_1312', parent=PassUpNode4354671376)
PassUpNode4354671248 = Node('LogicalOrExpression_1248', parent=PassUpNode4354671312)
PassUpNode4354671184 = Node('LogicalAndExpression_1184', parent=PassUpNode4354671248)
PassUpNode4354671120 = Node('InclusiveOrExpression_1120', parent=PassUpNode4354671184)
PassUpNode4354671056 = Node('ExclusiveOrExpression_1056', parent=PassUpNode4354671120)
PassUpNode4354670992 = Node('AndExpression_0992', parent=PassUpNode4354671056)
PassUpNode4354670928 = Node('EqalityExpression_0928', parent=PassUpNode4354670992)
PassUpNode4354670864 = Node('ShiftExpression_0864', parent=PassUpNode4354670928)
PassUpNode4354670800 = Node('ShiftExpression_0800', parent=PassUpNode4354670864)
PassUpNode4354670736 = Node('AdditiveExpression_0736', parent=PassUpNode4354670800)
PassUpNode4354670672 = Node('MultiplicativeExpression_0672', parent=PassUpNode4354670736)
PassUpNode4354596816 = Node('CastExpression_6816', parent=PassUpNode4354670672)
PassUpNode4354596624 = Node('UnaryExpression_6624', parent=PassUpNode4354596816)
PassUpNode4354595472 = Node('PostfixExpression_5472', parent=PassUpNode4354596624)
PrimaryExpression4354596688 = Node('PrimaryExpression_6688', parent=PassUpNode4354595472)
Constant4354595280 = Node('Constant_5280', parent=PrimaryExpression4354596688)
leaf = Node('8_5280', parent=Constant4354595280)
PassUpNode4354672528 = Node('ConstantExpression_2528', parent=ArrayDeclaration4354672592)
PassUpNode4354672464 = Node('ConditionalExpression_2464', parent=PassUpNode4354672528)
PassUpNode4354672400 = Node('LogicalOrExpression_2400', parent=PassUpNode4354672464)
PassUpNode4354672336 = Node('LogicalAndExpression_2336', parent=PassUpNode4354672400)
PassUpNode4354672272 = Node('InclusiveOrExpression_2272', parent=PassUpNode4354672336)
PassUpNode4354672208 = Node('ExclusiveOrExpression_2208', parent=PassUpNode4354672272)
PassUpNode4354672144 = Node('AndExpression_2144', parent=PassUpNode4354672208)
PassUpNode4354672080 = Node('EqalityExpression_2080', parent=PassUpNode4354672144)
PassUpNode4354672016 = Node('ShiftExpression_2016', parent=PassUpNode4354672080)
PassUpNode4354671952 = Node('ShiftExpression_1952', parent=PassUpNode4354672016)
PassUpNode4354671888 = Node('AdditiveExpression_1888', parent=PassUpNode4354671952)
PassUpNode4354671824 = Node('MultiplicativeExpression_1824', parent=PassUpNode4354671888)
PassUpNode4354671760 = Node('CastExpression_1760', parent=PassUpNode4354671824)
PassUpNode4354671568 = Node('UnaryExpression_1568', parent=PassUpNode4354671760)
PassUpNode4354671632 = Node('PostfixExpression_1632', parent=PassUpNode4354671568)
PrimaryExpression4354596752 = Node('PrimaryExpression_6752', parent=PassUpNode4354671632)
Constant4354596560 = Node('Constant_6560', parent=PrimaryExpression4354596752)
leaf = Node('10_6560', parent=Constant4354596560)
PassUpNode4354777552 = Node('StatementList_7552', parent=CompoundStatement4354593936)
PassUpNode4354754896 = Node('StatementList_4896', parent=PassUpNode4354777552)
PassUpNode4354752912 = Node('StatementList_2912', parent=PassUpNode4354754896)
PassUpNode4354734416 = Node('StatementList_4416', parent=PassUpNode4354752912)
PassUpNode4354732816 = Node('StatementList_2816', parent=PassUpNode4354734416)
PassUpNode4354672912 = Node('StatementList_2912', parent=PassUpNode4354732816)
PassUpNode4354672848 = Node('Statement_2848', parent=PassUpNode4354672912)
SelectionStatement4354706768 = Node('SelectionStatement_6768', parent=PassUpNode4354672848)
PassUpNode4354674640 = Node('Expression_4640', parent=SelectionStatement4354706768)
PassUpNode4354674576 = Node('AssignmentExpression_4576', parent=PassUpNode4354674640)
PassUpNode4354674512 = Node('ConditionalExpression_4512', parent=PassUpNode4354674576)
PassUpNode4354674448 = Node('LogicalOrExpression_4448', parent=PassUpNode4354674512)
PassUpNode4354674384 = Node('LogicalAndExpression_4384', parent=PassUpNode4354674448)
PassUpNode4354674320 = Node('InclusiveOrExpression_4320', parent=PassUpNode4354674384)
PassUpNode4354674256 = Node('ExclusiveOrExpression_4256', parent=PassUpNode4354674320)
PassUpNode4354674192 = Node('AndExpression_4192', parent=PassUpNode4354674256)
PassUpNode4354673040 = Node('EqalityExpression_3040', parent=PassUpNode4354674192)
BinOp4354674128 = Node('BinOp_4128', parent=PassUpNode4354673040)
PassUpNode4354673488 = Node('ShiftExpression_3488', parent=BinOp4354674128)
PassUpNode4354673424 = Node('ShiftExpression_3424', parent=PassUpNode4354673488)
PassUpNode4354673360 = Node('AdditiveExpression_3360', parent=PassUpNode4354673424)
PassUpNode4354673296 = Node('MultiplicativeExpression_3296', parent=PassUpNode4354673360)
PassUpNode4354673232 = Node('CastExpression_3232', parent=PassUpNode4354673296)
PassUpNode4354673168 = Node('UnaryExpression_3168', parent=PassUpNode4354673232)
PassUpNode4354673104 = Node('PostfixExpression_3104', parent=PassUpNode4354673168)
PrimaryExpression4354672976 = Node('PrimaryExpression_2976', parent=PassUpNode4354673104)
Identifier4354672784 = Node('Identifier_2784', parent=PrimaryExpression4354672976)
leaf = Node('a_2784', parent=Identifier4354672784)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier4354672784)
leaf = Node('<_4128', parent=BinOp4354674128)
PassUpNode4354674064 = Node('ShiftExpression_4064', parent=BinOp4354674128)
PassUpNode4354674000 = Node('AdditiveExpression_4000', parent=PassUpNode4354674064)
PassUpNode4354673936 = Node('MultiplicativeExpression_3936', parent=PassUpNode4354674000)
PassUpNode4354673872 = Node('CastExpression_3872', parent=PassUpNode4354673936)
PassUpNode4354673808 = Node('UnaryExpression_3808', parent=PassUpNode4354673872)
PassUpNode4354673744 = Node('PostfixExpression_3744', parent=PassUpNode4354673808)
PrimaryExpression4354673616 = Node('PrimaryExpression_3616', parent=PassUpNode4354673744)
Identifier4354673552 = Node('Identifier_3552', parent=PrimaryExpression4354673616)
leaf = Node('d_3552', parent=Identifier4354673552)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354673552)
PassUpNode4354703504 = Node('Statement_3504', parent=SelectionStatement4354706768)
CompoundStatement4354703440 = Node('CompoundStatement_3440', parent=PassUpNode4354703504)
DeclList4354703760 = Node('DeclList_3760', parent=CompoundStatement4354703440)
Declaration4354703952 = Node('Declaration_3952', parent=DeclList4354703760)
DeclarationSpecifiers4354703632 = Node('DeclarationSpecifiers_3632', parent=Declaration4354703952)
leaf = Node('int_3632', parent=DeclarationSpecifiers4354703632)
InitDeclList4354703888 = Node('InitDeclList_3888', parent=Declaration4354703952)
PassUpNode4354703824 = Node('Declarator_3824', parent=InitDeclList4354703888)
PassUpNode4354703696 = Node('DirectDeclarator_3696', parent=PassUpNode4354703824)
Identifier4354703568 = Node('Identifier_3568', parent=PassUpNode4354703696)
leaf = Node('a4_3568', parent=Identifier4354703568)
leaf = Node("Type='int', TokenLocation=(12, 124, 11)", parent=Identifier4354703568)
PassUpNode4354704144 = Node('Statement_4144', parent=SelectionStatement4354706768)
CompoundStatement4354704080 = Node('CompoundStatement_4080', parent=PassUpNode4354704144)
DeclList4354704400 = Node('DeclList_4400', parent=CompoundStatement4354704080)
Declaration4354704592 = Node('Declaration_4592', parent=DeclList4354704400)
DeclarationSpecifiers4354704272 = Node('DeclarationSpecifiers_4272', parent=Declaration4354704592)
leaf = Node('int_4272', parent=DeclarationSpecifiers4354704272)
InitDeclList4354704528 = Node('InitDeclList_4528', parent=Declaration4354704592)
PassUpNode4354704464 = Node('Declarator_4464', parent=InitDeclList4354704528)
PassUpNode4354704336 = Node('DirectDeclarator_4336', parent=PassUpNode4354704464)
Identifier4354704208 = Node('Identifier_4208', parent=PassUpNode4354704336)
leaf = Node('b6_4208', parent=Identifier4354704208)
leaf = Node("Type='int', TokenLocation=(16, 153, 11)", parent=Identifier4354704208)
PassUpNode4354706640 = Node('StatementList_6640', parent=CompoundStatement4354704080)
PassUpNode4354705552 = Node('Statement_5552', parent=PassUpNode4354706640)
PassUpNode4354706576 = Node('Expression_6576', parent=PassUpNode4354705552)
AssignmentExpression4354706512 = Node('AssignmentExpression_6512', parent=PassUpNode4354706576)
PassUpNode4354704912 = Node('UnaryExpression_4912', parent=AssignmentExpression4354706512)
PassUpNode4354704848 = Node('PostfixExpression_4848', parent=PassUpNode4354704912)
PrimaryExpression4354704720 = Node('PrimaryExpression_4720', parent=PassUpNode4354704848)
Identifier4354704656 = Node('Identifier_4656', parent=PrimaryExpression4354704720)
leaf = Node('b6_4656', parent=Identifier4354704656)
leaf = Node("Type='int', TokenLocation=(16, 153, 11)", parent=Identifier4354704656)
PassUpNode4354706448 = Node('AssignmentExpression_6448', parent=AssignmentExpression4354706512)
PassUpNode4354706384 = Node('ConditionalExpression_6384', parent=PassUpNode4354706448)
PassUpNode4354706320 = Node('LogicalOrExpression_6320', parent=PassUpNode4354706384)
PassUpNode4354706256 = Node('LogicalAndExpression_6256', parent=PassUpNode4354706320)
PassUpNode4354706192 = Node('InclusiveOrExpression_6192', parent=PassUpNode4354706256)
PassUpNode4354706128 = Node('ExclusiveOrExpression_6128', parent=PassUpNode4354706192)
PassUpNode4354706064 = Node('AndExpression_6064', parent=PassUpNode4354706128)
PassUpNode4354706000 = Node('EqalityExpression_6000', parent=PassUpNode4354706064)
PassUpNode4354705936 = Node('ShiftExpression_5936', parent=PassUpNode4354706000)
PassUpNode4354705104 = Node('ShiftExpression_5104', parent=PassUpNode4354705936)
BinOp4354705872 = Node('BinOp_5872', parent=PassUpNode4354705104)
PassUpNode4354705360 = Node('AdditiveExpression_5360', parent=BinOp4354705872)
PassUpNode4354705296 = Node('MultiplicativeExpression_5296', parent=PassUpNode4354705360)
PassUpNode4354705232 = Node('CastExpression_5232', parent=PassUpNode4354705296)
PassUpNode4354705168 = Node('UnaryExpression_5168', parent=PassUpNode4354705232)
PassUpNode4354704976 = Node('PostfixExpression_4976', parent=PassUpNode4354705168)
PrimaryExpression4354705040 = Node('PrimaryExpression_5040', parent=PassUpNode4354704976)
Constant4354704784 = Node('Constant_4784', parent=PrimaryExpression4354705040)
leaf = Node('4_4784', parent=Constant4354704784)
leaf = Node('+_5872', parent=BinOp4354705872)
PassUpNode4354705808 = Node('MultiplicativeExpression_5808', parent=BinOp4354705872)
PassUpNode4354705744 = Node('CastExpression_5744', parent=PassUpNode4354705808)
PassUpNode4354705680 = Node('UnaryExpression_5680', parent=PassUpNode4354705744)
PassUpNode4354705616 = Node('PostfixExpression_5616', parent=PassUpNode4354705680)
PrimaryExpression4354705488 = Node('PrimaryExpression_5488', parent=PassUpNode4354705616)
Constant4354705424 = Node('Constant_5424', parent=PrimaryExpression4354705488)
leaf = Node('2_5424', parent=Constant4354705424)
PassUpNode4354707088 = Node('Statement_7088', parent=PassUpNode4354732816)
PassUpNode4354732752 = Node('Expression_2752', parent=PassUpNode4354707088)
AssignmentExpression4354732688 = Node('AssignmentExpression_2688', parent=PassUpNode4354732752)
PassUpNode4354706896 = Node('UnaryExpression_6896', parent=AssignmentExpression4354732688)
PassUpNode4354706704 = Node('PostfixExpression_6704', parent=PassUpNode4354706896)
PrimaryExpression4354706832 = Node('PrimaryExpression_6832', parent=PassUpNode4354706704)
Identifier4354673680 = Node('Identifier_3680', parent=PrimaryExpression4354706832)
leaf = Node('a_3680', parent=Identifier4354673680)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier4354673680)
PassUpNode4354732624 = Node('AssignmentExpression_2624', parent=AssignmentExpression4354732688)
PassUpNode4354732560 = Node('ConditionalExpression_2560', parent=PassUpNode4354732624)
PassUpNode4354732496 = Node('LogicalOrExpression_2496', parent=PassUpNode4354732560)
PassUpNode4354732432 = Node('LogicalAndExpression_2432', parent=PassUpNode4354732496)
PassUpNode4354732368 = Node('InclusiveOrExpression_2368', parent=PassUpNode4354732432)
PassUpNode4354732304 = Node('ExclusiveOrExpression_2304', parent=PassUpNode4354732368)
PassUpNode4354732240 = Node('AndExpression_2240', parent=PassUpNode4354732304)
PassUpNode4354732176 = Node('EqalityExpression_2176', parent=PassUpNode4354732240)
PassUpNode4354732112 = Node('ShiftExpression_2112', parent=PassUpNode4354732176)
PassUpNode4354707408 = Node('ShiftExpression_7408', parent=PassUpNode4354732112)
PassUpNode4354707344 = Node('AdditiveExpression_7344', parent=PassUpNode4354707408)
PassUpNode4354707280 = Node('MultiplicativeExpression_7280', parent=PassUpNode4354707344)
PassUpNode4354707216 = Node('CastExpression_7216', parent=PassUpNode4354707280)
PassUpNode4354707152 = Node('UnaryExpression_7152', parent=PassUpNode4354707216)
PassUpNode4354706960 = Node('PostfixExpression_6960', parent=PassUpNode4354707152)
PrimaryExpression4354707024 = Node('PrimaryExpression_7024', parent=PassUpNode4354706960)
Constant4354704016 = Node('Constant_4016', parent=PrimaryExpression4354707024)
leaf = Node('1_4016', parent=Constant4354704016)
PassUpNode4354733328 = Node('Statement_3328', parent=PassUpNode4354734416)
PassUpNode4354734352 = Node('Expression_4352', parent=PassUpNode4354733328)
AssignmentExpression4354734288 = Node('AssignmentExpression_4288', parent=PassUpNode4354734352)
PassUpNode4354733136 = Node('UnaryExpression_3136', parent=AssignmentExpression4354734288)
PassUpNode4354733072 = Node('PostfixExpression_3072', parent=PassUpNode4354733136)
PrimaryExpression4354732944 = Node('PrimaryExpression_2944', parent=PassUpNode4354733072)
Identifier4354732880 = Node('Identifier_2880', parent=PrimaryExpression4354732944)
leaf = Node('d_2880', parent=Identifier4354732880)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354732880)
PassUpNode4354734224 = Node('AssignmentExpression_4224', parent=AssignmentExpression4354734288)
PassUpNode4354734160 = Node('ConditionalExpression_4160', parent=PassUpNode4354734224)
PassUpNode4354734096 = Node('LogicalOrExpression_4096', parent=PassUpNode4354734160)
PassUpNode4354734032 = Node('LogicalAndExpression_4032', parent=PassUpNode4354734096)
PassUpNode4354733968 = Node('InclusiveOrExpression_3968', parent=PassUpNode4354734032)
PassUpNode4354733904 = Node('ExclusiveOrExpression_3904', parent=PassUpNode4354733968)
PassUpNode4354733840 = Node('AndExpression_3840', parent=PassUpNode4354733904)
PassUpNode4354733776 = Node('EqalityExpression_3776', parent=PassUpNode4354733840)
PassUpNode4354733712 = Node('ShiftExpression_3712', parent=PassUpNode4354733776)
PassUpNode4354733648 = Node('ShiftExpression_3648', parent=PassUpNode4354733712)
PassUpNode4354733584 = Node('AdditiveExpression_3584', parent=PassUpNode4354733648)
PassUpNode4354733520 = Node('MultiplicativeExpression_3520', parent=PassUpNode4354733584)
PassUpNode4354733456 = Node('CastExpression_3456', parent=PassUpNode4354733520)
PassUpNode4354733392 = Node('UnaryExpression_3392', parent=PassUpNode4354733456)
PassUpNode4354733200 = Node('PostfixExpression_3200', parent=PassUpNode4354733392)
PrimaryExpression4354733264 = Node('PrimaryExpression_3264', parent=PassUpNode4354733200)
Constant4354733008 = Node('Constant_3008', parent=PrimaryExpression4354733264)
leaf = Node('3_3008', parent=Constant4354733008)
PassUpNode4354735376 = Node('Statement_5376', parent=PassUpNode4354752912)
PassUpNode4354752848 = Node('Expression_2848', parent=PassUpNode4354735376)
AssignmentExpression4354752784 = Node('AssignmentExpression_2784', parent=PassUpNode4354752848)
PassUpNode4354734736 = Node('UnaryExpression_4736', parent=AssignmentExpression4354752784)
PassUpNode4354734672 = Node('PostfixExpression_4672', parent=PassUpNode4354734736)
PrimaryExpression4354734544 = Node('PrimaryExpression_4544', parent=PassUpNode4354734672)
Identifier4354734480 = Node('Identifier_4480', parent=PrimaryExpression4354734544)
leaf = Node('g_4480', parent=Identifier4354734480)
PassUpNode4354752720 = Node('AssignmentExpression_2720', parent=AssignmentExpression4354752784)
PassUpNode4354752656 = Node('ConditionalExpression_2656', parent=PassUpNode4354752720)
PassUpNode4354752592 = Node('LogicalOrExpression_2592', parent=PassUpNode4354752656)
PassUpNode4354736080 = Node('LogicalAndExpression_6080', parent=PassUpNode4354752592)
PassUpNode4354736016 = Node('InclusiveOrExpression_6016', parent=PassUpNode4354736080)
PassUpNode4354735952 = Node('ExclusiveOrExpression_5952', parent=PassUpNode4354736016)
PassUpNode4354735888 = Node('AndExpression_5888', parent=PassUpNode4354735952)
PassUpNode4354735824 = Node('EqalityExpression_5824', parent=PassUpNode4354735888)
PassUpNode4354735760 = Node('ShiftExpression_5760', parent=PassUpNode4354735824)
PassUpNode4354734928 = Node('ShiftExpression_4928', parent=PassUpNode4354735760)
BinOp4354735696 = Node('BinOp_5696', parent=PassUpNode4354734928)
PassUpNode4354735184 = Node('AdditiveExpression_5184', parent=BinOp4354735696)
PassUpNode4354735120 = Node('MultiplicativeExpression_5120', parent=PassUpNode4354735184)
PassUpNode4354735056 = Node('CastExpression_5056', parent=PassUpNode4354735120)
PassUpNode4354734992 = Node('UnaryExpression_4992', parent=PassUpNode4354735056)
PassUpNode4354734800 = Node('PostfixExpression_4800', parent=PassUpNode4354734992)
PrimaryExpression4354734864 = Node('PrimaryExpression_4864', parent=PassUpNode4354734800)
Constant4354734608 = Node('Constant_4608', parent=PrimaryExpression4354734864)
leaf = Node('2_4608', parent=Constant4354734608)
leaf = Node('+_5696', parent=BinOp4354735696)
PassUpNode4354735632 = Node('MultiplicativeExpression_5632', parent=BinOp4354735696)
PassUpNode4354735568 = Node('CastExpression_5568', parent=PassUpNode4354735632)
PassUpNode4354735504 = Node('UnaryExpression_5504', parent=PassUpNode4354735568)
PassUpNode4354735440 = Node('PostfixExpression_5440', parent=PassUpNode4354735504)
PrimaryExpression4354735312 = Node('PrimaryExpression_5312', parent=PassUpNode4354735440)
Constant4354735248 = Node('Constant_5248', parent=PrimaryExpression4354735312)
leaf = Node('3_5248', parent=Constant4354735248)
PassUpNode4354753808 = Node('Statement_3808', parent=PassUpNode4354754896)
PassUpNode4354754832 = Node('Expression_4832', parent=PassUpNode4354753808)
AssignmentExpression4354754768 = Node('AssignmentExpression_4768', parent=PassUpNode4354754832)
PassUpNode4354753232 = Node('UnaryExpression_3232', parent=AssignmentExpression4354754768)
PassUpNode4354753168 = Node('PostfixExpression_3168', parent=PassUpNode4354753232)
PrimaryExpression4354753040 = Node('PrimaryExpression_3040', parent=PassUpNode4354753168)
Identifier4354752976 = Node('Identifier_2976', parent=PrimaryExpression4354753040)
leaf = Node('d_2976', parent=Identifier4354752976)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354752976)
PassUpNode4354754704 = Node('AssignmentExpression_4704', parent=AssignmentExpression4354754768)
PassUpNode4354754640 = Node('ConditionalExpression_4640', parent=PassUpNode4354754704)
PassUpNode4354754576 = Node('LogicalOrExpression_4576', parent=PassUpNode4354754640)
PassUpNode4354754512 = Node('LogicalAndExpression_4512', parent=PassUpNode4354754576)
PassUpNode4354754448 = Node('InclusiveOrExpression_4448', parent=PassUpNode4354754512)
PassUpNode4354754384 = Node('ExclusiveOrExpression_4384', parent=PassUpNode4354754448)
PassUpNode4354754320 = Node('AndExpression_4320', parent=PassUpNode4354754384)
PassUpNode4354754256 = Node('EqalityExpression_4256', parent=PassUpNode4354754320)
PassUpNode4354754192 = Node('ShiftExpression_4192', parent=PassUpNode4354754256)
PassUpNode4354754128 = Node('ShiftExpression_4128', parent=PassUpNode4354754192)
PassUpNode4354753424 = Node('AdditiveExpression_3424', parent=PassUpNode4354754128)
BinOp4354754064 = Node('BinOp_4064', parent=PassUpNode4354753424)
PassUpNode4354753616 = Node('MultiplicativeExpression_3616', parent=BinOp4354754064)
PassUpNode4354753552 = Node('CastExpression_3552', parent=PassUpNode4354753616)
PassUpNode4354753488 = Node('UnaryExpression_3488', parent=PassUpNode4354753552)
PassUpNode4354753296 = Node('PostfixExpression_3296', parent=PassUpNode4354753488)
PrimaryExpression4354753360 = Node('PrimaryExpression_3360', parent=PassUpNode4354753296)
Constant4354753104 = Node('Constant_3104', parent=PrimaryExpression4354753360)
leaf = Node('5_3104', parent=Constant4354753104)
leaf = Node('*_4064', parent=BinOp4354754064)
PassUpNode4354754000 = Node('CastExpression_4000', parent=BinOp4354754064)
PassUpNode4354753936 = Node('UnaryExpression_3936', parent=PassUpNode4354754000)
PassUpNode4354753872 = Node('PostfixExpression_3872', parent=PassUpNode4354753936)
PrimaryExpression4354753744 = Node('PrimaryExpression_3744', parent=PassUpNode4354753872)
Constant4354753680 = Node('Constant_3680', parent=PrimaryExpression4354753744)
leaf = Node('5_3680', parent=Constant4354753680)
PassUpNode4354755920 = Node('Statement_5920', parent=PassUpNode4354777552)
PassUpNode4354777488 = Node('Expression_7488', parent=PassUpNode4354755920)
AssignmentExpression4354777424 = Node('AssignmentExpression_7424', parent=PassUpNode4354777488)
PassUpNode4354755216 = Node('UnaryExpression_5216', parent=AssignmentExpression4354777424)
PassUpNode4354755152 = Node('PostfixExpression_5152', parent=PassUpNode4354755216)
PrimaryExpression4354755024 = Node('PrimaryExpression_5024', parent=PassUpNode4354755152)
Identifier4354754960 = Node('Identifier_4960', parent=PrimaryExpression4354755024)
leaf = Node('d_4960', parent=Identifier4354754960)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354754960)
PassUpNode4354777360 = Node('AssignmentExpression_7360', parent=AssignmentExpression4354777424)
PassUpNode4354777296 = Node('ConditionalExpression_7296', parent=PassUpNode4354777360)
PassUpNode4354777232 = Node('LogicalOrExpression_7232', parent=PassUpNode4354777296)
PassUpNode4354777168 = Node('LogicalAndExpression_7168', parent=PassUpNode4354777232)
PassUpNode4354756560 = Node('InclusiveOrExpression_6560', parent=PassUpNode4354777168)
PassUpNode4354756496 = Node('ExclusiveOrExpression_6496', parent=PassUpNode4354756560)
PassUpNode4354756432 = Node('AndExpression_6432', parent=PassUpNode4354756496)
PassUpNode4354756368 = Node('EqalityExpression_6368', parent=PassUpNode4354756432)
PassUpNode4354755408 = Node('ShiftExpression_5408', parent=PassUpNode4354756368)
BinOp4354756304 = Node('BinOp_6304', parent=PassUpNode4354755408)
PassUpNode4354755728 = Node('ShiftExpression_5728', parent=BinOp4354756304)
PassUpNode4354755664 = Node('AdditiveExpression_5664', parent=PassUpNode4354755728)
PassUpNode4354755600 = Node('MultiplicativeExpression_5600', parent=PassUpNode4354755664)
PassUpNode4354755536 = Node('CastExpression_5536', parent=PassUpNode4354755600)
PassUpNode4354755472 = Node('UnaryExpression_5472', parent=PassUpNode4354755536)
PassUpNode4354755280 = Node('PostfixExpression_5280', parent=PassUpNode4354755472)
PrimaryExpression4354755344 = Node('PrimaryExpression_5344', parent=PassUpNode4354755280)
Identifier4354755088 = Node('Identifier_5088', parent=PrimaryExpression4354755344)
leaf = Node('d_5088', parent=Identifier4354755088)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier4354755088)
leaf = Node('>>_6304', parent=BinOp4354756304)
PassUpNode4354756240 = Node('AdditiveExpression_6240', parent=BinOp4354756304)
PassUpNode4354756176 = Node('MultiplicativeExpression_6176', parent=PassUpNode4354756240)
PassUpNode4354756112 = Node('CastExpression_6112', parent=PassUpNode4354756176)
PassUpNode4354756048 = Node('UnaryExpression_6048', parent=PassUpNode4354756112)
PassUpNode4354755984 = Node('PostfixExpression_5984', parent=PassUpNode4354756048)
PrimaryExpression4354755856 = Node('PrimaryExpression_5856', parent=PassUpNode4354755984)
Constant4354755792 = Node('Constant_5792', parent=PrimaryExpression4354755856)
leaf = Node('5_5792', parent=Constant4354755792)

for pre, fill, node in RenderTree(PassUpNode4354777616):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode4354777616, nodeattrfunc=f).to_picture("AST.png")
        