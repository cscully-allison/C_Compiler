from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode139647728326288 = Node('TranslationUnit_6288')
PassUpNode139647728326352 = Node('ExternalDeclaration_6352', parent=PassUpNode139647728326288)
FunctionDefintion139647728171280 = Node('FunctionDefintion_1280', parent=PassUpNode139647728326352)
DeclarationSpecifiers139647730994896 = Node('DeclarationSpecifiers_4896', parent=FunctionDefintion139647728171280)
leaf = Node('int_4896', parent=DeclarationSpecifiers139647730994896)
PassUpNode139647731010448 = Node('Declarator_0448', parent=FunctionDefintion139647728171280)
PassUpNode139647728171216 = Node('DirectDeclarator_1216', parent=PassUpNode139647731010448)
PassUpNode139647730994768 = Node('DirectDeclarator_4768', parent=PassUpNode139647728171216)
Identifier139647730994960 = Node('Identifier_4960', parent=PassUpNode139647730994768)
leaf = Node('main_4960', parent=Identifier139647730994960)
leaf = Node("Subtype='Function', TokenLocation=(2, 5, 5)", parent=Identifier139647730994960)
PassUpNode139647728171152 = Node('ParameterTypeList_1152', parent=PassUpNode139647728171216)
PassUpNode139647728171088 = Node('ParameterList_1088', parent=PassUpNode139647728171152)
PassUpNode139647728171024 = Node('ParameterDeclaration_1024', parent=PassUpNode139647728171088)
DeclarationSpecifiers139647728170768 = Node('DeclarationSpecifiers_0768', parent=PassUpNode139647728171024)
leaf = Node('int_0768', parent=DeclarationSpecifiers139647728170768)
PassUpNode139647728170960 = Node('Declarator_0960', parent=PassUpNode139647728171024)
PassUpNode139647728170832 = Node('DirectDeclarator_0832', parent=PassUpNode139647728170960)
Identifier139647728170704 = Node('Identifier_0704', parent=PassUpNode139647728170832)
leaf = Node('g_0704', parent=Identifier139647728170704)
leaf = Node("TokenLocation=(2, 14, 14)", parent=Identifier139647728170704)
CompoundStatement139647728170896 = Node('CompoundStatement_0896', parent=FunctionDefintion139647728171280)
DeclList139647728230928 = Node('DeclList_0928', parent=CompoundStatement139647728170896)
DeclList139647728171856 = Node('DeclList_1856', parent=DeclList139647728230928)
Declaration139647728171536 = Node('Declaration_1536', parent=DeclList139647728171856)
DeclarationSpecifiers139647728171408 = Node('DeclarationSpecifiers_1408', parent=Declaration139647728171536)
leaf = Node('char_1408', parent=DeclarationSpecifiers139647728171408)
InitDeclList139647728171984 = Node('InitDeclList_1984', parent=Declaration139647728171536)
InitDeclList139647728171664 = Node('InitDeclList_1664', parent=InitDeclList139647728171984)
PassUpNode139647728171600 = Node('Declarator_1600', parent=InitDeclList139647728171664)
PassUpNode139647728171472 = Node('DirectDeclarator_1472', parent=PassUpNode139647728171600)
Identifier139647728171344 = Node('Identifier_1344', parent=PassUpNode139647728171472)
leaf = Node('a_1344', parent=Identifier139647728171344)
leaf = Node("Type=['char'], TokenLocation=(3, 27, 10)", parent=Identifier139647728171344)
PassUpNode139647728171920 = Node('Declarator_1920', parent=InitDeclList139647728171984)
PassUpNode139647728171792 = Node('DirectDeclarator_1792', parent=PassUpNode139647728171920)
Identifier139647728171728 = Node('Identifier_1728', parent=PassUpNode139647728171792)
leaf = Node('d_1728', parent=Identifier139647728171728)
leaf = Node("Type=['char'], TokenLocation=(3, 30, 13)", parent=Identifier139647728171728)
Declaration139647728230992 = Node('Declaration_0992', parent=DeclList139647728230928)
DeclarationSpecifiers139647728172176 = Node('DeclarationSpecifiers_2176', parent=Declaration139647728230992)
leaf = Node('int_2176', parent=DeclarationSpecifiers139647728172176)
InitDeclList139647728172432 = Node('InitDeclList_2432', parent=Declaration139647728230992)
PassUpNode139647728172240 = Node('Declarator_2240', parent=InitDeclList139647728172432)
ArrayDeclaration139647728230864 = Node('ArrayDeclaration_0864', parent=PassUpNode139647728172240)
PassUpNode139647728172112 = Node('DirectDeclarator_2112', parent=ArrayDeclaration139647728230864)
Identifier139647728172048 = Node('Identifier_2048', parent=PassUpNode139647728172112)
leaf = Node('arr_2048', parent=Identifier139647728172048)
leaf = Node("Array Size=['8'], Subtype='Array', Type=['int'], TokenLocation=(5, 54, 9)", parent=Identifier139647728172048)
PassUpNode139647728230800 = Node('ConstantExpression_0800', parent=ArrayDeclaration139647728230864)
PassUpNode139647728230736 = Node('ConditionalExpression_0736', parent=PassUpNode139647728230800)
PassUpNode139647728230672 = Node('LogicalOrExpression_0672', parent=PassUpNode139647728230736)
PassUpNode139647728230608 = Node('LogicalAndExpression_0608', parent=PassUpNode139647728230672)
PassUpNode139647728230544 = Node('InclusiveOrExpression_0544', parent=PassUpNode139647728230608)
PassUpNode139647728230480 = Node('ExclusiveOrExpression_0480', parent=PassUpNode139647728230544)
PassUpNode139647728173008 = Node('AndExpression_3008', parent=PassUpNode139647728230480)
PassUpNode139647728172944 = Node('EqalityExpression_2944', parent=PassUpNode139647728173008)
PassUpNode139647728172880 = Node('ShiftExpression_2880', parent=PassUpNode139647728172944)
PassUpNode139647728172816 = Node('ShiftExpression_2816', parent=PassUpNode139647728172880)
PassUpNode139647728172752 = Node('AdditiveExpression_2752', parent=PassUpNode139647728172816)
PassUpNode139647728172688 = Node('MultiplicativeExpression_2688', parent=PassUpNode139647728172752)
PassUpNode139647728172624 = Node('CastExpression_2624', parent=PassUpNode139647728172688)
PassUpNode139647728172560 = Node('UnaryExpression_2560', parent=PassUpNode139647728172624)
PassUpNode139647728172496 = Node('PostfixExpression_2496', parent=PassUpNode139647728172560)
PrimaryExpression139647728172368 = Node('PrimaryExpression_2368', parent=PassUpNode139647728172496)
Constant139647728172304 = Node('Constant_2304', parent=PrimaryExpression139647728172368)
leaf = Node('8_2304', parent=Constant139647728172304)
PassUpNode139647728326224 = Node('StatementList_6224', parent=CompoundStatement139647728170896)
PassUpNode139647728273296 = Node('StatementList_3296', parent=PassUpNode139647728326224)
PassUpNode139647728231184 = Node('StatementList_1184', parent=PassUpNode139647728273296)
PassUpNode139647728231120 = Node('Statement_1120', parent=PassUpNode139647728231184)
SelectionStatement139647728273232 = Node('SelectionStatement_3232', parent=PassUpNode139647728231120)
PassUpNode139647728232912 = Node('Expression_2912', parent=SelectionStatement139647728273232)
PassUpNode139647728232848 = Node('AssignmentExpression_2848', parent=PassUpNode139647728232912)
PassUpNode139647728232784 = Node('ConditionalExpression_2784', parent=PassUpNode139647728232848)
PassUpNode139647728232720 = Node('LogicalOrExpression_2720', parent=PassUpNode139647728232784)
PassUpNode139647728232656 = Node('LogicalAndExpression_2656', parent=PassUpNode139647728232720)
PassUpNode139647728232592 = Node('InclusiveOrExpression_2592', parent=PassUpNode139647728232656)
PassUpNode139647728232528 = Node('ExclusiveOrExpression_2528', parent=PassUpNode139647728232592)
PassUpNode139647728232464 = Node('AndExpression_2464', parent=PassUpNode139647728232528)
PassUpNode139647728231312 = Node('EqalityExpression_1312', parent=PassUpNode139647728232464)
BinOp139647728232400 = Node('BinOp_2400', parent=PassUpNode139647728231312)
PassUpNode139647728231760 = Node('ShiftExpression_1760', parent=BinOp139647728232400)
PassUpNode139647728231696 = Node('ShiftExpression_1696', parent=PassUpNode139647728231760)
PassUpNode139647728231632 = Node('AdditiveExpression_1632', parent=PassUpNode139647728231696)
PassUpNode139647728231568 = Node('MultiplicativeExpression_1568', parent=PassUpNode139647728231632)
PassUpNode139647728231504 = Node('CastExpression_1504', parent=PassUpNode139647728231568)
PassUpNode139647728231440 = Node('UnaryExpression_1440', parent=PassUpNode139647728231504)
PassUpNode139647728231376 = Node('PostfixExpression_1376', parent=PassUpNode139647728231440)
PrimaryExpression139647728231248 = Node('PrimaryExpression_1248', parent=PassUpNode139647728231376)
Identifier139647728231056 = Node('Identifier_1056', parent=PrimaryExpression139647728231248)
leaf = Node('a_1056', parent=Identifier139647728231056)
leaf = Node("Type=['char'], TokenLocation=(3, 27, 10)", parent=Identifier139647728231056)
leaf = Node('<_2400', parent=BinOp139647728232400)
PassUpNode139647728232336 = Node('ShiftExpression_2336', parent=BinOp139647728232400)
PassUpNode139647728232272 = Node('AdditiveExpression_2272', parent=PassUpNode139647728232336)
PassUpNode139647728232208 = Node('MultiplicativeExpression_2208', parent=PassUpNode139647728232272)
PassUpNode139647728232144 = Node('CastExpression_2144', parent=PassUpNode139647728232208)
PassUpNode139647728232080 = Node('UnaryExpression_2080', parent=PassUpNode139647728232144)
PassUpNode139647728232016 = Node('PostfixExpression_2016', parent=PassUpNode139647728232080)
PrimaryExpression139647728231888 = Node('PrimaryExpression_1888', parent=PassUpNode139647728232016)
Identifier139647728231824 = Node('Identifier_1824', parent=PrimaryExpression139647728231888)
leaf = Node('d_1824', parent=Identifier139647728231824)
leaf = Node("Type=['char'], TokenLocation=(3, 30, 13)", parent=Identifier139647728231824)
leaf = Node('char _2400', parent=BinOp139647728232400)
PassUpNode139647728233040 = Node('Statement_3040', parent=SelectionStatement139647728273232)
CompoundStatement139647728232976 = Node('CompoundStatement_2976', parent=PassUpNode139647728233040)
DeclList139647728233296 = Node('DeclList_3296', parent=CompoundStatement139647728232976)
Declaration139647728233488 = Node('Declaration_3488', parent=DeclList139647728233296)
DeclarationSpecifiers139647728233168 = Node('DeclarationSpecifiers_3168', parent=Declaration139647728233488)
leaf = Node('int_3168', parent=DeclarationSpecifiers139647728233168)
InitDeclList139647728233424 = Node('InitDeclList_3424', parent=Declaration139647728233488)
PassUpNode139647728233360 = Node('Declarator_3360', parent=InitDeclList139647728233424)
PassUpNode139647728233232 = Node('DirectDeclarator_3232', parent=PassUpNode139647728233360)
Identifier139647728233104 = Node('Identifier_3104', parent=PassUpNode139647728233232)
leaf = Node('a4_3104', parent=Identifier139647728233104)
leaf = Node("Type=['int'], TokenLocation=(9, 101, 11)", parent=Identifier139647728233104)
PassUpNode139647728233680 = Node('Statement_3680', parent=SelectionStatement139647728273232)
CompoundStatement139647728233616 = Node('CompoundStatement_3616', parent=PassUpNode139647728233680)
DeclList139647728233936 = Node('DeclList_3936', parent=CompoundStatement139647728233616)
Declaration139647728234128 = Node('Declaration_4128', parent=DeclList139647728233936)
DeclarationSpecifiers139647728233808 = Node('DeclarationSpecifiers_3808', parent=Declaration139647728234128)
leaf = Node('int_3808', parent=DeclarationSpecifiers139647728233808)
InitDeclList139647728234064 = Node('InitDeclList_4064', parent=Declaration139647728234128)
PassUpNode139647728234000 = Node('Declarator_4000', parent=InitDeclList139647728234064)
PassUpNode139647728233872 = Node('DirectDeclarator_3872', parent=PassUpNode139647728234000)
Identifier139647728233744 = Node('Identifier_3744', parent=PassUpNode139647728233872)
leaf = Node('b6_3744', parent=Identifier139647728233744)
leaf = Node("Type=['int'], TokenLocation=(13, 130, 11)", parent=Identifier139647728233744)
PassUpNode139647728273104 = Node('StatementList_3104', parent=CompoundStatement139647728233616)
PassUpNode139647728272016 = Node('Statement_2016', parent=PassUpNode139647728273104)
PassUpNode139647728273040 = Node('Expression_3040', parent=PassUpNode139647728272016)
AssignmentExpression139647728272976 = Node('AssignmentExpression_2976', parent=PassUpNode139647728273040)
PassUpNode139647728234448 = Node('UnaryExpression_4448', parent=AssignmentExpression139647728272976)
PassUpNode139647728234384 = Node('PostfixExpression_4384', parent=PassUpNode139647728234448)
PrimaryExpression139647728234256 = Node('PrimaryExpression_4256', parent=PassUpNode139647728234384)
Identifier139647728234192 = Node('Identifier_4192', parent=PrimaryExpression139647728234256)
leaf = Node('b6_4192', parent=Identifier139647728234192)
leaf = Node("Type=['int'], TokenLocation=(13, 130, 11)", parent=Identifier139647728234192)
PassUpNode139647728272912 = Node('AssignmentExpression_2912', parent=AssignmentExpression139647728272976)
PassUpNode139647728272848 = Node('ConditionalExpression_2848', parent=PassUpNode139647728272912)
PassUpNode139647728272784 = Node('LogicalOrExpression_2784', parent=PassUpNode139647728272848)
PassUpNode139647728272720 = Node('LogicalAndExpression_2720', parent=PassUpNode139647728272784)
PassUpNode139647728272656 = Node('InclusiveOrExpression_2656', parent=PassUpNode139647728272720)
PassUpNode139647728272592 = Node('ExclusiveOrExpression_2592', parent=PassUpNode139647728272656)
PassUpNode139647728272528 = Node('AndExpression_2528', parent=PassUpNode139647728272592)
PassUpNode139647728272464 = Node('EqalityExpression_2464', parent=PassUpNode139647728272528)
PassUpNode139647728272400 = Node('ShiftExpression_2400', parent=PassUpNode139647728272464)
PassUpNode139647728271568 = Node('ShiftExpression_1568', parent=PassUpNode139647728272400)
BinOp139647728272336 = Node('BinOp_2336', parent=PassUpNode139647728271568)
PassUpNode139647728271824 = Node('AdditiveExpression_1824', parent=BinOp139647728272336)
PassUpNode139647728271760 = Node('MultiplicativeExpression_1760', parent=PassUpNode139647728271824)
PassUpNode139647728271696 = Node('CastExpression_1696', parent=PassUpNode139647728271760)
PassUpNode139647728271632 = Node('UnaryExpression_1632', parent=PassUpNode139647728271696)
PassUpNode139647728271440 = Node('PostfixExpression_1440', parent=PassUpNode139647728271632)
PrimaryExpression139647728271504 = Node('PrimaryExpression_1504', parent=PassUpNode139647728271440)
Constant139647728234320 = Node('Constant_4320', parent=PrimaryExpression139647728271504)
leaf = Node('4_4320', parent=Constant139647728234320)
leaf = Node('+_2336', parent=BinOp139647728272336)
PassUpNode139647728272272 = Node('MultiplicativeExpression_2272', parent=BinOp139647728272336)
PassUpNode139647728272208 = Node('CastExpression_2208', parent=PassUpNode139647728272272)
PassUpNode139647728272144 = Node('UnaryExpression_2144', parent=PassUpNode139647728272208)
PassUpNode139647728272080 = Node('PostfixExpression_2080', parent=PassUpNode139647728272144)
PrimaryExpression139647728271952 = Node('PrimaryExpression_1952', parent=PassUpNode139647728272080)
Constant139647728271888 = Node('Constant_1888', parent=PrimaryExpression139647728271952)
leaf = Node('2_1888', parent=Constant139647728271888)
leaf = Node('int _2336', parent=BinOp139647728272336)
PassUpNode139647728233552 = Node('Statement_3552', parent=PassUpNode139647728273296)
IterationStatement139647728299024 = Node('IterationStatement_9024', parent=PassUpNode139647728233552)
PassUpNode139647728274704 = Node('Expression_4704', parent=IterationStatement139647728299024)
AssignmentExpression139647728274640 = Node('AssignmentExpression_4640', parent=PassUpNode139647728274704)
PassUpNode139647728273488 = Node('UnaryExpression_3488', parent=AssignmentExpression139647728274640)
PassUpNode139647728273424 = Node('PostfixExpression_3424', parent=PassUpNode139647728273488)
PrimaryExpression139647728273168 = Node('PrimaryExpression_3168', parent=PassUpNode139647728273424)
Identifier139647728231952 = Node('Identifier_1952', parent=PrimaryExpression139647728273168)
leaf = Node('a_1952', parent=Identifier139647728231952)
leaf = Node("Type=['char'], TokenLocation=(3, 27, 10)", parent=Identifier139647728231952)
PassUpNode139647728274576 = Node('AssignmentExpression_4576', parent=AssignmentExpression139647728274640)
PassUpNode139647728274512 = Node('ConditionalExpression_4512', parent=PassUpNode139647728274576)
PassUpNode139647728274448 = Node('LogicalOrExpression_4448', parent=PassUpNode139647728274512)
PassUpNode139647728274384 = Node('LogicalAndExpression_4384', parent=PassUpNode139647728274448)
PassUpNode139647728274320 = Node('InclusiveOrExpression_4320', parent=PassUpNode139647728274384)
PassUpNode139647728274256 = Node('ExclusiveOrExpression_4256', parent=PassUpNode139647728274320)
PassUpNode139647728274192 = Node('AndExpression_4192', parent=PassUpNode139647728274256)
PassUpNode139647728274128 = Node('EqalityExpression_4128', parent=PassUpNode139647728274192)
PassUpNode139647728274064 = Node('ShiftExpression_4064', parent=PassUpNode139647728274128)
PassUpNode139647728274000 = Node('ShiftExpression_4000', parent=PassUpNode139647728274064)
PassUpNode139647728273936 = Node('AdditiveExpression_3936', parent=PassUpNode139647728274000)
PassUpNode139647728273872 = Node('MultiplicativeExpression_3872', parent=PassUpNode139647728273936)
PassUpNode139647728273808 = Node('CastExpression_3808', parent=PassUpNode139647728273872)
PassUpNode139647728273744 = Node('UnaryExpression_3744', parent=PassUpNode139647728273808)
PassUpNode139647728273552 = Node('PostfixExpression_3552', parent=PassUpNode139647728273744)
PrimaryExpression139647728273616 = Node('PrimaryExpression_3616', parent=PassUpNode139647728273552)
Constant139647728273360 = Node('Constant_3360', parent=PrimaryExpression139647728273616)
leaf = Node('4_3360', parent=Constant139647728273360)
PassUpNode139647728297104 = Node('Expression_7104', parent=IterationStatement139647728299024)
PassUpNode139647728297040 = Node('AssignmentExpression_7040', parent=PassUpNode139647728297104)
PassUpNode139647728296976 = Node('ConditionalExpression_6976', parent=PassUpNode139647728297040)
PassUpNode139647728296912 = Node('LogicalOrExpression_6912', parent=PassUpNode139647728296976)
PassUpNode139647728296848 = Node('LogicalAndExpression_6848', parent=PassUpNode139647728296912)
PassUpNode139647728296784 = Node('InclusiveOrExpression_6784', parent=PassUpNode139647728296848)
PassUpNode139647728296720 = Node('ExclusiveOrExpression_6720', parent=PassUpNode139647728296784)
PassUpNode139647728296656 = Node('AndExpression_6656', parent=PassUpNode139647728296720)
PassUpNode139647728274896 = Node('EqalityExpression_4896', parent=PassUpNode139647728296656)
BinOp139647728296528 = Node('BinOp_6528', parent=PassUpNode139647728274896)
CastNode139647728296592 = Node('CastNode_6592', parent=BinOp139647728296528)
leaf = Node('int _6592', parent=CastNode139647728296592)
leaf = Node('char _6592', parent=CastNode139647728296592)
PassUpNode139647728275344 = Node('ShiftExpression_5344', parent=CastNode139647728296592)
PassUpNode139647728275280 = Node('ShiftExpression_5280', parent=PassUpNode139647728275344)
PassUpNode139647728275216 = Node('AdditiveExpression_5216', parent=PassUpNode139647728275280)
PassUpNode139647728275152 = Node('MultiplicativeExpression_5152', parent=PassUpNode139647728275216)
PassUpNode139647728275088 = Node('CastExpression_5088', parent=PassUpNode139647728275152)
PassUpNode139647728275024 = Node('UnaryExpression_5024', parent=PassUpNode139647728275088)
PassUpNode139647728274960 = Node('PostfixExpression_4960', parent=PassUpNode139647728275024)
PrimaryExpression139647728274832 = Node('PrimaryExpression_4832', parent=PassUpNode139647728274960)
Identifier139647728274768 = Node('Identifier_4768', parent=PrimaryExpression139647728274832)
leaf = Node('a_4768', parent=Identifier139647728274768)
leaf = Node("Type=['char'], TokenLocation=(3, 27, 10)", parent=Identifier139647728274768)
leaf = Node('<_6528', parent=BinOp139647728296528)
PassUpNode139647728296464 = Node('ShiftExpression_6464', parent=BinOp139647728296528)
PassUpNode139647728296400 = Node('AdditiveExpression_6400', parent=PassUpNode139647728296464)
PassUpNode139647728296336 = Node('MultiplicativeExpression_6336', parent=PassUpNode139647728296400)
PassUpNode139647728296272 = Node('CastExpression_6272', parent=PassUpNode139647728296336)
PassUpNode139647728296208 = Node('UnaryExpression_6208', parent=PassUpNode139647728296272)
PassUpNode139647728296144 = Node('PostfixExpression_6144', parent=PassUpNode139647728296208)
PrimaryExpression139647728296016 = Node('PrimaryExpression_6016', parent=PassUpNode139647728296144)
Constant139647728275408 = Node('Constant_5408', parent=PrimaryExpression139647728296016)
leaf = Node('2_5408', parent=Constant139647728275408)
leaf = Node('int _6528', parent=BinOp139647728296528)
PassUpNode139647728298320 = Node('Expression_8320', parent=IterationStatement139647728299024)
PassUpNode139647728298256 = Node('AssignmentExpression_8256', parent=PassUpNode139647728298320)
PassUpNode139647728298192 = Node('ConditionalExpression_8192', parent=PassUpNode139647728298256)
PassUpNode139647728298128 = Node('LogicalOrExpression_8128', parent=PassUpNode139647728298192)
PassUpNode139647728298064 = Node('LogicalAndExpression_8064', parent=PassUpNode139647728298128)
PassUpNode139647728298000 = Node('InclusiveOrExpression_8000', parent=PassUpNode139647728298064)
PassUpNode139647728297936 = Node('ExclusiveOrExpression_7936', parent=PassUpNode139647728298000)
PassUpNode139647728297872 = Node('AndExpression_7872', parent=PassUpNode139647728297936)
PassUpNode139647728297808 = Node('EqalityExpression_7808', parent=PassUpNode139647728297872)
PassUpNode139647728297744 = Node('ShiftExpression_7744', parent=PassUpNode139647728297808)
PassUpNode139647728297680 = Node('ShiftExpression_7680', parent=PassUpNode139647728297744)
PassUpNode139647728297616 = Node('AdditiveExpression_7616', parent=PassUpNode139647728297680)
PassUpNode139647728297552 = Node('MultiplicativeExpression_7552', parent=PassUpNode139647728297616)
PassUpNode139647728297424 = Node('CastExpression_7424', parent=PassUpNode139647728297552)
PassUpNode139647728297296 = Node('UnaryExpression_7296', parent=PassUpNode139647728297424)
PassUpNode139647728297360 = Node('PostfixExpression_7360', parent=PassUpNode139647728297296)
PrimaryExpression139647728297232 = Node('PrimaryExpression_7232', parent=PassUpNode139647728297360)
Identifier139647728297168 = Node('Identifier_7168', parent=PrimaryExpression139647728297232)
leaf = Node('a_7168', parent=Identifier139647728297168)
leaf = Node("Type=['char'], TokenLocation=(3, 27, 10)", parent=Identifier139647728297168)
PassUpNode139647728298512 = Node('Statement_8512', parent=IterationStatement139647728299024)
CompoundStatement139647728298384 = Node('CompoundStatement_8384', parent=PassUpNode139647728298512)
DeclList139647728298704 = Node('DeclList_8704', parent=CompoundStatement139647728298384)
Declaration139647728298896 = Node('Declaration_8896', parent=DeclList139647728298704)
DeclarationSpecifiers139647728298576 = Node('DeclarationSpecifiers_8576', parent=Declaration139647728298896)
leaf = Node('int_8576', parent=DeclarationSpecifiers139647728298576)
InitDeclList139647728298832 = Node('InitDeclList_8832', parent=Declaration139647728298896)
PassUpNode139647728298768 = Node('Declarator_8768', parent=InitDeclList139647728298832)
PassUpNode139647728298640 = Node('DirectDeclarator_8640', parent=PassUpNode139647728298768)
Identifier139647728298448 = Node('Identifier_8448', parent=PassUpNode139647728298640)
leaf = Node('q_8448', parent=Identifier139647728298448)
leaf = Node("Type=['int'], TokenLocation=(20, 206, 11)", parent=Identifier139647728298448)
PassUpNode139647728325136 = Node('Statement_5136', parent=PassUpNode139647728326224)
PassUpNode139647728326160 = Node('Expression_6160', parent=PassUpNode139647728325136)
AssignmentExpression139647728326096 = Node('AssignmentExpression_6096', parent=PassUpNode139647728326160)
PassUpNode139647728296080 = Node('UnaryExpression_6080', parent=AssignmentExpression139647728326096)
ArrayAccess139647728324944 = Node('ArrayAccess_4944', parent=PassUpNode139647728296080)
PassUpNode139647728297488 = Node('PostfixExpression_7488', parent=ArrayAccess139647728324944)
PrimaryExpression139647728299088 = Node('PrimaryExpression_9088', parent=PassUpNode139647728297488)
Identifier139647728273680 = Node('Identifier_3680', parent=PrimaryExpression139647728299088)
leaf = Node('arr_3680', parent=Identifier139647728273680)
leaf = Node("Array Size=['8'], Subtype='Array', Type=['int'], TokenLocation=(5, 54, 9)", parent=Identifier139647728273680)
PassUpNode139647728324880 = Node('Expression_4880', parent=ArrayAccess139647728324944)
PassUpNode139647728324816 = Node('AssignmentExpression_4816', parent=PassUpNode139647728324880)
PassUpNode139647728324752 = Node('ConditionalExpression_4752', parent=PassUpNode139647728324816)
PassUpNode139647728324688 = Node('LogicalOrExpression_4688', parent=PassUpNode139647728324752)
PassUpNode139647728299984 = Node('LogicalAndExpression_9984', parent=PassUpNode139647728324688)
PassUpNode139647728299920 = Node('InclusiveOrExpression_9920', parent=PassUpNode139647728299984)
PassUpNode139647728299856 = Node('ExclusiveOrExpression_9856', parent=PassUpNode139647728299920)
PassUpNode139647728299792 = Node('AndExpression_9792', parent=PassUpNode139647728299856)
PassUpNode139647728299728 = Node('EqalityExpression_9728', parent=PassUpNode139647728299792)
PassUpNode139647728299664 = Node('ShiftExpression_9664', parent=PassUpNode139647728299728)
PassUpNode139647728299600 = Node('ShiftExpression_9600', parent=PassUpNode139647728299664)
PassUpNode139647728299536 = Node('AdditiveExpression_9536', parent=PassUpNode139647728299600)
PassUpNode139647728299472 = Node('MultiplicativeExpression_9472', parent=PassUpNode139647728299536)
PassUpNode139647728299408 = Node('CastExpression_9408', parent=PassUpNode139647728299472)
PassUpNode139647728299344 = Node('UnaryExpression_9344', parent=PassUpNode139647728299408)
PassUpNode139647728299280 = Node('PostfixExpression_9280', parent=PassUpNode139647728299344)
PrimaryExpression139647728299152 = Node('PrimaryExpression_9152', parent=PassUpNode139647728299280)
Constant139647728298960 = Node('Constant_8960', parent=PrimaryExpression139647728299152)
leaf = Node('3_8960', parent=Constant139647728298960)
PassUpNode139647728326032 = Node('AssignmentExpression_6032', parent=AssignmentExpression139647728326096)
PassUpNode139647728325968 = Node('ConditionalExpression_5968', parent=PassUpNode139647728326032)
PassUpNode139647728325904 = Node('LogicalOrExpression_5904', parent=PassUpNode139647728325968)
PassUpNode139647728325840 = Node('LogicalAndExpression_5840', parent=PassUpNode139647728325904)
PassUpNode139647728325776 = Node('InclusiveOrExpression_5776', parent=PassUpNode139647728325840)
PassUpNode139647728325712 = Node('ExclusiveOrExpression_5712', parent=PassUpNode139647728325776)
PassUpNode139647728325648 = Node('AndExpression_5648', parent=PassUpNode139647728325712)
PassUpNode139647728325584 = Node('EqalityExpression_5584', parent=PassUpNode139647728325648)
PassUpNode139647728325520 = Node('ShiftExpression_5520', parent=PassUpNode139647728325584)
PassUpNode139647728325456 = Node('ShiftExpression_5456', parent=PassUpNode139647728325520)
PassUpNode139647728325392 = Node('AdditiveExpression_5392', parent=PassUpNode139647728325456)
PassUpNode139647728325328 = Node('MultiplicativeExpression_5328', parent=PassUpNode139647728325392)
PassUpNode139647728325264 = Node('CastExpression_5264', parent=PassUpNode139647728325328)
PassUpNode139647728325200 = Node('UnaryExpression_5200', parent=PassUpNode139647728325264)
PassUpNode139647728325008 = Node('PostfixExpression_5008', parent=PassUpNode139647728325200)
PrimaryExpression139647728325072 = Node('PrimaryExpression_5072', parent=PassUpNode139647728325008)
Constant139647728299216 = Node('Constant_9216', parent=PrimaryExpression139647728325072)
leaf = Node('5_9216', parent=Constant139647728299216)

for pre, fill, node in RenderTree(PassUpNode139647728326288):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode139647728326288, nodeattrfunc=f).to_picture("AST.png")
        