from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140011994816912 = Node('TranslationUnit_6912')
PassUpNode140011994816656 = Node('TranslationUnit_6656', parent=PassUpNode140011994816912)
PassUpNode140011994749392 = Node('TranslationUnit_9392', parent=PassUpNode140011994816656)
PassUpNode140011994749264 = Node('ExternalDeclaration_9264', parent=PassUpNode140011994749392)
Declaration140011994749328 = Node('Declaration_9328', parent=PassUpNode140011994749264)
DeclarationSpecifiers140011997572816 = Node('DeclarationSpecifiers_2816', parent=Declaration140011994749328)
leaf = Node('int_2816', parent=DeclarationSpecifiers140011997572816)
InitDeclList140011994749072 = Node('InitDeclList_9072', parent=Declaration140011994749328)
PassUpNode140011997584272 = Node('Declarator_4272', parent=InitDeclList140011994749072)
FunctionPrototype140011994749200 = Node('FunctionPrototype_9200', parent=PassUpNode140011997584272)
PassUpNode140011997572688 = Node('DirectDeclarator_2688', parent=FunctionPrototype140011994749200)
Identifier140011997572880 = Node('Identifier_2880', parent=PassUpNode140011997572688)
leaf = Node('funct_2880', parent=Identifier140011997572880)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct', Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}, {'Type': ['char']}], TokenLocation=(2, 5, 5)", parent=Identifier140011997572880)
PassUpNode140011994748816 = Node('ParameterTypeList_8816', parent=FunctionPrototype140011994749200)
PassUpNode140011994749136 = Node('ParameterList_9136', parent=PassUpNode140011994748816)
PassUpNode140011994748880 = Node('ParameterList_8880', parent=PassUpNode140011994749136)
PassUpNode140011994748624 = Node('ParameterDeclaration_8624', parent=PassUpNode140011994748880)
DeclarationSpecifiers140011994748688 = Node('DeclarationSpecifiers_8688', parent=PassUpNode140011994748624)
leaf = Node('const_8688', parent=DeclarationSpecifiers140011994748688)
DeclarationSpecifiers140011994748752 = Node('DeclarationSpecifiers_8752', parent=DeclarationSpecifiers140011994748688)
leaf = Node('int_8752', parent=DeclarationSpecifiers140011994748752)
PassUpNode140011994748944 = Node('ParameterDeclaration_8944', parent=PassUpNode140011994749136)
DeclarationSpecifiers140011994749008 = Node('DeclarationSpecifiers_9008', parent=PassUpNode140011994748944)
leaf = Node('char_9008', parent=DeclarationSpecifiers140011994749008)
PassUpNode140011994818000 = Node('ExternalDeclaration_8000', parent=PassUpNode140011994816656)
FunctionDefintion140011994750416 = Node('FunctionDefintion_0416', parent=PassUpNode140011994818000)
DeclarationSpecifiers140011994749456 = Node('DeclarationSpecifiers_9456', parent=FunctionDefintion140011994750416)
leaf = Node('const_9456', parent=DeclarationSpecifiers140011994749456)
DeclarationSpecifiers140011994749584 = Node('DeclarationSpecifiers_9584', parent=DeclarationSpecifiers140011994749456)
leaf = Node('int_9584', parent=DeclarationSpecifiers140011994749584)
PassUpNode140011994749712 = Node('Declarator_9712', parent=FunctionDefintion140011994750416)
FunctionPrototype140011994750352 = Node('FunctionPrototype_0352', parent=PassUpNode140011994749712)
PassUpNode140011994749648 = Node('DirectDeclarator_9648', parent=FunctionPrototype140011994750352)
Identifier140011994749520 = Node('Identifier_9520', parent=PassUpNode140011994749648)
leaf = Node('main_9520', parent=Identifier140011994749520)
leaf = Node("Subtype='Function Prototype', Label='main', Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}], TokenLocation=(4, 40, 11)", parent=Identifier140011994749520)
PassUpNode140011994750288 = Node('ParameterTypeList_0288', parent=FunctionPrototype140011994750352)
PassUpNode140011994750224 = Node('ParameterList_0224', parent=PassUpNode140011994750288)
Declaration140011994750160 = Node('Declaration_0160', parent=PassUpNode140011994750224)
DeclarationSpecifiers140011994749840 = Node('DeclarationSpecifiers_9840', parent=Declaration140011994750160)
leaf = Node('const_9840', parent=DeclarationSpecifiers140011994749840)
DeclarationSpecifiers140011994749904 = Node('DeclarationSpecifiers_9904', parent=DeclarationSpecifiers140011994749840)
leaf = Node('int_9904', parent=DeclarationSpecifiers140011994749904)
PassUpNode140011994750096 = Node('Declarator_0096', parent=Declaration140011994750160)
PassUpNode140011994749968 = Node('DirectDeclarator_9968', parent=PassUpNode140011994750096)
Identifier140011994749776 = Node('Identifier_9776', parent=PassUpNode140011994749968)
leaf = Node('g_9776', parent=Identifier140011994749776)
leaf = Node("Type Qualifier=['const'], Type=['int'], TokenLocation=(4, 55, 26)", parent=Identifier140011994749776)
CompoundStatement140011994750032 = Node('CompoundStatement_0032', parent=FunctionDefintion140011994750416)
DeclList140011994750736 = Node('DeclList_0736', parent=CompoundStatement140011994750032)
Declaration140011994750928 = Node('Declaration_0928', parent=DeclList140011994750736)
DeclarationSpecifiers140011994750544 = Node('DeclarationSpecifiers_0544', parent=Declaration140011994750928)
leaf = Node('static_0544', parent=DeclarationSpecifiers140011994750544)
DeclarationSpecifiers140011994750608 = Node('DeclarationSpecifiers_0608', parent=DeclarationSpecifiers140011994750544)
leaf = Node('int_0608', parent=DeclarationSpecifiers140011994750608)
InitDeclList140011994750864 = Node('InitDeclList_0864', parent=Declaration140011994750928)
PassUpNode140011994750800 = Node('Declarator_0800', parent=InitDeclList140011994750864)
PassUpNode140011994750672 = Node('DirectDeclarator_0672', parent=PassUpNode140011994750800)
Identifier140011994750480 = Node('Identifier_0480', parent=PassUpNode140011994750672)
leaf = Node('l_0480', parent=Identifier140011994750480)
leaf = Node("Storage Class Specifier='static', Type=['int'], TokenLocation=(5, 74, 16)", parent=Identifier140011994750480)
PassUpNode140011994816592 = Node('StatementList_6592', parent=CompoundStatement140011994750032)
PassUpNode140011994816720 = Node('Statement_6720', parent=PassUpNode140011994816592)
PassUpNode140011994818192 = Node('ExternalDeclaration_8192', parent=PassUpNode140011994816912)
FunctionDefintion140011994818064 = Node('FunctionDefintion_8064', parent=PassUpNode140011994818192)
DeclarationSpecifiers140011994817808 = Node('DeclarationSpecifiers_7808', parent=FunctionDefintion140011994818064)
leaf = Node('int_7808', parent=DeclarationSpecifiers140011994817808)
PassUpNode140011994817616 = Node('Declarator_7616', parent=FunctionDefintion140011994818064)
FunctionPrototype140011994817936 = Node('FunctionPrototype_7936', parent=PassUpNode140011994817616)
PassUpNode140011994817680 = Node('DirectDeclarator_7680', parent=FunctionPrototype140011994817936)
Identifier140011994817744 = Node('Identifier_7744', parent=PassUpNode140011994817680)
leaf = Node('funct_7744', parent=Identifier140011994817744)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct', Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}, {'Type': ['char']}], TokenLocation=(2, 5, 5)", parent=Identifier140011994817744)
PassUpNode140011994817360 = Node('ParameterTypeList_7360', parent=FunctionPrototype140011994817936)
PassUpNode140011994817872 = Node('ParameterList_7872', parent=PassUpNode140011994817360)
PassUpNode140011994817168 = Node('ParameterList_7168', parent=PassUpNode140011994817872)
Declaration140011994817232 = Node('Declaration_7232', parent=PassUpNode140011994817168)
DeclarationSpecifiers140011994817488 = Node('DeclarationSpecifiers_7488', parent=Declaration140011994817232)
leaf = Node('char_7488', parent=DeclarationSpecifiers140011994817488)
PassUpNode140011994817296 = Node('Declarator_7296', parent=Declaration140011994817232)
PassUpNode140011994817424 = Node('DirectDeclarator_7424', parent=PassUpNode140011994817296)
Identifier140011994817552 = Node('Identifier_7552', parent=PassUpNode140011994817424)
leaf = Node('a_7552', parent=Identifier140011994817552)
leaf = Node("Type=['char'], TokenLocation=(10, 110, 16)", parent=Identifier140011994817552)
Declaration140011994816784 = Node('Declaration_6784', parent=PassUpNode140011994817872)
DeclarationSpecifiers140011994817040 = Node('DeclarationSpecifiers_7040', parent=Declaration140011994816784)
leaf = Node('char_7040', parent=DeclarationSpecifiers140011994817040)
PassUpNode140011994816848 = Node('Declarator_6848', parent=Declaration140011994816784)
PassUpNode140011994816976 = Node('DirectDeclarator_6976', parent=PassUpNode140011994816848)
Identifier140011994817104 = Node('Identifier_7104', parent=PassUpNode140011994816976)
leaf = Node('c_7104', parent=Identifier140011994817104)
leaf = Node("Type=['char'], TokenLocation=(10, 118, 24)", parent=Identifier140011994817104)
CompoundStatement140011994818128 = Node('CompoundStatement_8128', parent=FunctionDefintion140011994818064)

for pre, fill, node in RenderTree(PassUpNode140011994816912):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140011994816912, nodeattrfunc=f).to_picture("AST.png")
        