from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140061949146576 = Node('TranslationUnit_6576')
PassUpNode140061949145296 = Node('TranslationUnit_5296', parent=PassUpNode140061949146576)
PassUpNode140061949465808 = Node('TranslationUnit_5808', parent=PassUpNode140061949145296)
PassUpNode140061949465680 = Node('ExternalDeclaration_5680', parent=PassUpNode140061949465808)
Declaration140061949465744 = Node('Declaration_5744', parent=PassUpNode140061949465680)
DeclarationSpecifiers140061952200144 = Node('DeclarationSpecifiers_0144', parent=Declaration140061949465744)
leaf = Node('int_0144', parent=DeclarationSpecifiers140061952200144)
InitDeclList140061949465552 = Node('InitDeclList_5552', parent=Declaration140061949465744)
PassUpNode140061949728272 = Node('Declarator_8272', parent=InitDeclList140061949465552)
FunctionPrototype140061949465616 = Node('FunctionPrototype_5616', parent=PassUpNode140061949728272)
PassUpNode140061952200080 = Node('DirectDeclarator_0080', parent=FunctionPrototype140061949465616)
Identifier140061952276816 = Node('Identifier_6816', parent=PassUpNode140061952200080)
leaf = Node('funct1_6816', parent=Identifier140061952276816)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct1', Arguments=[{'Type': ['int']}, {'Type': ['char']}, {'Type': ['float']}], TokenLocation=(2, 5, 5)", parent=Identifier140061952276816)
PassUpNode140061949465296 = Node('ParameterTypeList_5296', parent=FunctionPrototype140061949465616)
PassUpNode140061949465424 = Node('ParameterList_5424', parent=PassUpNode140061949465296)
PassUpNode140061949465360 = Node('ParameterList_5360', parent=PassUpNode140061949465424)
PassUpNode140061949465104 = Node('ParameterList_5104', parent=PassUpNode140061949465360)
PassUpNode140061949464912 = Node('ParameterDeclaration_4912', parent=PassUpNode140061949465104)
DeclarationSpecifiers140061949464976 = Node('DeclarationSpecifiers_4976', parent=PassUpNode140061949464912)
leaf = Node('int_4976', parent=DeclarationSpecifiers140061949464976)
PassUpNode140061949465168 = Node('ParameterDeclaration_5168', parent=PassUpNode140061949465360)
DeclarationSpecifiers140061949465232 = Node('DeclarationSpecifiers_5232', parent=PassUpNode140061949465168)
leaf = Node('char_5232', parent=DeclarationSpecifiers140061949465232)
PassUpNode140061949465040 = Node('ParameterDeclaration_5040', parent=PassUpNode140061949465424)
DeclarationSpecifiers140061949465488 = Node('DeclarationSpecifiers_5488', parent=PassUpNode140061949465040)
leaf = Node('float_5488', parent=DeclarationSpecifiers140061949465488)
PassUpNode140061949145360 = Node('ExternalDeclaration_5360', parent=PassUpNode140061949145296)
FunctionDefintion140061949466704 = Node('FunctionDefintion_6704', parent=PassUpNode140061949145360)
DeclarationSpecifiers140061949465872 = Node('DeclarationSpecifiers_5872', parent=FunctionDefintion140061949466704)
leaf = Node('int_5872', parent=DeclarationSpecifiers140061949465872)
PassUpNode140061949466064 = Node('Declarator_6064', parent=FunctionDefintion140061949466704)
FunctionPrototype140061949466640 = Node('FunctionPrototype_6640', parent=PassUpNode140061949466064)
PassUpNode140061949466000 = Node('DirectDeclarator_6000', parent=FunctionPrototype140061949466640)
Identifier140061949465936 = Node('Identifier_5936', parent=PassUpNode140061949466000)
leaf = Node('main_5936', parent=Identifier140061949465936)
leaf = Node("Subtype='Function Prototype', Label='main', Arguments=[{'Type': ['int']}], TokenLocation=(5, 37, 5)", parent=Identifier140061949465936)
PassUpNode140061949466576 = Node('ParameterTypeList_6576', parent=FunctionPrototype140061949466640)
PassUpNode140061949466512 = Node('ParameterList_6512', parent=PassUpNode140061949466576)
Declaration140061949466448 = Node('Declaration_6448', parent=PassUpNode140061949466512)
DeclarationSpecifiers140061949466192 = Node('DeclarationSpecifiers_6192', parent=Declaration140061949466448)
leaf = Node('int_6192', parent=DeclarationSpecifiers140061949466192)
PassUpNode140061949466384 = Node('Declarator_6384', parent=Declaration140061949466448)
PassUpNode140061949466256 = Node('DirectDeclarator_6256', parent=PassUpNode140061949466384)
Identifier140061949466128 = Node('Identifier_6128', parent=PassUpNode140061949466256)
leaf = Node('arg1_6128', parent=Identifier140061949466128)
leaf = Node("Type=['int'], TokenLocation=(5, 46, 14)", parent=Identifier140061949466128)
CompoundStatement140061949466320 = Node('CompoundStatement_6320', parent=FunctionDefintion140061949466704)
DeclList140061949545680 = Node('DeclList_5680', parent=CompoundStatement140061949466320)
DeclList140061949544080 = Node('DeclList_4080', parent=DeclList140061949545680)
DeclList140061949467408 = Node('DeclList_7408', parent=DeclList140061949544080)
DeclList140061949466960 = Node('DeclList_6960', parent=DeclList140061949467408)
Declaration140061949467152 = Node('Declaration_7152', parent=DeclList140061949466960)
DeclarationSpecifiers140061949466832 = Node('DeclarationSpecifiers_6832', parent=Declaration140061949467152)
leaf = Node('int_6832', parent=DeclarationSpecifiers140061949466832)
InitDeclList140061949467088 = Node('InitDeclList_7088', parent=Declaration140061949467152)
PassUpNode140061949467024 = Node('Declarator_7024', parent=InitDeclList140061949467088)
PassUpNode140061949466896 = Node('DirectDeclarator_6896', parent=PassUpNode140061949467024)
Identifier140061949466768 = Node('Identifier_6768', parent=PassUpNode140061949466896)
leaf = Node('a_6768', parent=Identifier140061949466768)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140061949466768)
Declaration140061949467600 = Node('Declaration_7600', parent=DeclList140061949467408)
DeclarationSpecifiers140061949467280 = Node('DeclarationSpecifiers_7280', parent=Declaration140061949467600)
leaf = Node('int_7280', parent=DeclarationSpecifiers140061949467280)
InitDeclList140061949467536 = Node('InitDeclList_7536', parent=Declaration140061949467600)
PassUpNode140061949467472 = Node('Declarator_7472', parent=InitDeclList140061949467536)
PassUpNode140061949467344 = Node('DirectDeclarator_7344', parent=PassUpNode140061949467472)
Identifier140061949467216 = Node('Identifier_7216', parent=PassUpNode140061949467344)
leaf = Node('c_7216', parent=Identifier140061949467216)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140061949467216)
Declaration140061949544144 = Node('Declaration_4144', parent=DeclList140061949544080)
DeclarationSpecifiers140061949467728 = Node('DeclarationSpecifiers_7728', parent=Declaration140061949544144)
leaf = Node('int_7728', parent=DeclarationSpecifiers140061949467728)
InitDeclList140061949543120 = Node('InitDeclList_3120', parent=Declaration140061949544144)
PassUpNode140061949542928 = Node('Declarator_2928', parent=InitDeclList140061949543120)
ArrayDeclaration140061949544016 = Node('ArrayDeclaration_4016', parent=PassUpNode140061949542928)
ArrayDeclaration140061949542864 = Node('ArrayDeclaration_2864', parent=ArrayDeclaration140061949544016)
PassUpNode140061949467792 = Node('DirectDeclarator_7792', parent=ArrayDeclaration140061949542864)
Identifier140061949467664 = Node('Identifier_7664', parent=PassUpNode140061949467792)
leaf = Node('arr_7664', parent=Identifier140061949467664)
leaf = Node("Array Size=['6', '8'], Subtype='Array', Type=['int'], TokenLocation=(8, 74, 6)", parent=Identifier140061949467664)
PassUpNode140061949542800 = Node('ConstantExpression_2800', parent=ArrayDeclaration140061949542864)
PassUpNode140061949542736 = Node('ConditionalExpression_2736', parent=PassUpNode140061949542800)
PassUpNode140061949542672 = Node('LogicalOrExpression_2672', parent=PassUpNode140061949542736)
PassUpNode140061949542608 = Node('LogicalAndExpression_2608', parent=PassUpNode140061949542672)
PassUpNode140061949542544 = Node('InclusiveOrExpression_2544', parent=PassUpNode140061949542608)
PassUpNode140061949542480 = Node('ExclusiveOrExpression_2480', parent=PassUpNode140061949542544)
PassUpNode140061949468624 = Node('AndExpression_8624', parent=PassUpNode140061949542480)
PassUpNode140061949468560 = Node('EqalityExpression_8560', parent=PassUpNode140061949468624)
PassUpNode140061949468496 = Node('ShiftExpression_8496', parent=PassUpNode140061949468560)
PassUpNode140061949468432 = Node('ShiftExpression_8432', parent=PassUpNode140061949468496)
PassUpNode140061949468368 = Node('AdditiveExpression_8368', parent=PassUpNode140061949468432)
PassUpNode140061949468304 = Node('MultiplicativeExpression_8304', parent=PassUpNode140061949468368)
PassUpNode140061949468240 = Node('CastExpression_8240', parent=PassUpNode140061949468304)
PassUpNode140061949468176 = Node('UnaryExpression_8176', parent=PassUpNode140061949468240)
PassUpNode140061949468112 = Node('PostfixExpression_8112', parent=PassUpNode140061949468176)
PrimaryExpression140061949467984 = Node('PrimaryExpression_7984', parent=PassUpNode140061949468112)
Constant140061949467920 = Node('Constant_7920', parent=PrimaryExpression140061949467984)
leaf = Node('6_7920', parent=Constant140061949467920)
PassUpNode140061949543952 = Node('ConstantExpression_3952', parent=ArrayDeclaration140061949544016)
PassUpNode140061949543888 = Node('ConditionalExpression_3888', parent=PassUpNode140061949543952)
PassUpNode140061949543824 = Node('LogicalOrExpression_3824', parent=PassUpNode140061949543888)
PassUpNode140061949543760 = Node('LogicalAndExpression_3760', parent=PassUpNode140061949543824)
PassUpNode140061949543696 = Node('InclusiveOrExpression_3696', parent=PassUpNode140061949543760)
PassUpNode140061949543632 = Node('ExclusiveOrExpression_3632', parent=PassUpNode140061949543696)
PassUpNode140061949543568 = Node('AndExpression_3568', parent=PassUpNode140061949543632)
PassUpNode140061949543504 = Node('EqalityExpression_3504', parent=PassUpNode140061949543568)
PassUpNode140061949543440 = Node('ShiftExpression_3440', parent=PassUpNode140061949543504)
PassUpNode140061949543376 = Node('ShiftExpression_3376', parent=PassUpNode140061949543440)
PassUpNode140061949543312 = Node('AdditiveExpression_3312', parent=PassUpNode140061949543376)
PassUpNode140061949543248 = Node('MultiplicativeExpression_3248', parent=PassUpNode140061949543312)
PassUpNode140061949543184 = Node('CastExpression_3184', parent=PassUpNode140061949543248)
PassUpNode140061949542992 = Node('UnaryExpression_2992', parent=PassUpNode140061949543184)
PassUpNode140061949543056 = Node('PostfixExpression_3056', parent=PassUpNode140061949542992)
PrimaryExpression140061949468048 = Node('PrimaryExpression_8048', parent=PassUpNode140061949543056)
Constant140061949467856 = Node('Constant_7856', parent=PrimaryExpression140061949468048)
leaf = Node('8_7856', parent=Constant140061949467856)
Declaration140061949545744 = Node('Declaration_5744', parent=DeclList140061949545680)
DeclarationSpecifiers140061949544272 = Node('DeclarationSpecifiers_4272', parent=Declaration140061949545744)
leaf = Node('int_4272', parent=DeclarationSpecifiers140061949544272)
InitDeclList140061949544592 = Node('InitDeclList_4592', parent=Declaration140061949545744)
PassUpNode140061949544400 = Node('Declarator_4400', parent=InitDeclList140061949544592)
ArrayDeclaration140061949545616 = Node('ArrayDeclaration_5616', parent=PassUpNode140061949544400)
PassUpNode140061949544336 = Node('DirectDeclarator_4336', parent=ArrayDeclaration140061949545616)
Identifier140061949544208 = Node('Identifier_4208', parent=PassUpNode140061949544336)
leaf = Node('arr2_4208', parent=Identifier140061949544208)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(9, 90, 6)", parent=Identifier140061949544208)
PassUpNode140061949545552 = Node('ConstantExpression_5552', parent=ArrayDeclaration140061949545616)
PassUpNode140061949545488 = Node('ConditionalExpression_5488', parent=PassUpNode140061949545552)
PassUpNode140061949545424 = Node('LogicalOrExpression_5424', parent=PassUpNode140061949545488)
PassUpNode140061949545360 = Node('LogicalAndExpression_5360', parent=PassUpNode140061949545424)
PassUpNode140061949545296 = Node('InclusiveOrExpression_5296', parent=PassUpNode140061949545360)
PassUpNode140061949545232 = Node('ExclusiveOrExpression_5232', parent=PassUpNode140061949545296)
PassUpNode140061949545168 = Node('AndExpression_5168', parent=PassUpNode140061949545232)
PassUpNode140061949545104 = Node('EqalityExpression_5104', parent=PassUpNode140061949545168)
PassUpNode140061949545040 = Node('ShiftExpression_5040', parent=PassUpNode140061949545104)
PassUpNode140061949544976 = Node('ShiftExpression_4976', parent=PassUpNode140061949545040)
PassUpNode140061949544912 = Node('AdditiveExpression_4912', parent=PassUpNode140061949544976)
PassUpNode140061949544848 = Node('MultiplicativeExpression_4848', parent=PassUpNode140061949544912)
PassUpNode140061949544784 = Node('CastExpression_4784', parent=PassUpNode140061949544848)
PassUpNode140061949544720 = Node('UnaryExpression_4720', parent=PassUpNode140061949544784)
PassUpNode140061949544656 = Node('PostfixExpression_4656', parent=PassUpNode140061949544720)
PrimaryExpression140061949544528 = Node('PrimaryExpression_4528', parent=PassUpNode140061949544656)
Constant140061949544464 = Node('Constant_4464', parent=PrimaryExpression140061949544528)
leaf = Node('9_4464', parent=Constant140061949544464)
PassUpNode140061949134224 = Node('StatementList_4224', parent=CompoundStatement140061949466320)
PassUpNode140061949134032 = Node('StatementList_4032', parent=PassUpNode140061949134224)
PassUpNode140061949133840 = Node('StatementList_3840', parent=PassUpNode140061949134032)
PassUpNode140061949611152 = Node('StatementList_1152', parent=PassUpNode140061949133840)
PassUpNode140061949587280 = Node('StatementList_7280', parent=PassUpNode140061949611152)
PassUpNode140061949587088 = Node('StatementList_7088', parent=PassUpNode140061949587280)
PassUpNode140061949584272 = Node('StatementList_4272', parent=PassUpNode140061949587088)
PassUpNode140061949546256 = Node('Statement_6256', parent=PassUpNode140061949584272)
PassUpNode140061949584208 = Node('Expression_4208', parent=PassUpNode140061949546256)
AssignmentExpression140061949584144 = Node('AssignmentExpression_4144', parent=PassUpNode140061949584208)
PassUpNode140061949546064 = Node('UnaryExpression_6064', parent=AssignmentExpression140061949584144)
PassUpNode140061949546000 = Node('PostfixExpression_6000', parent=PassUpNode140061949546064)
PrimaryExpression140061949545872 = Node('PrimaryExpression_5872', parent=PassUpNode140061949546000)
Identifier140061949545808 = Node('Identifier_5808', parent=PrimaryExpression140061949545872)
leaf = Node('a_5808', parent=Identifier140061949545808)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140061949545808)
PassUpNode140061949584080 = Node('AssignmentExpression_4080', parent=AssignmentExpression140061949584144)
PassUpNode140061949584016 = Node('ConditionalExpression_4016', parent=PassUpNode140061949584080)
PassUpNode140061949583952 = Node('LogicalOrExpression_3952', parent=PassUpNode140061949584016)
PassUpNode140061949583888 = Node('LogicalAndExpression_3888', parent=PassUpNode140061949583952)
PassUpNode140061949583824 = Node('InclusiveOrExpression_3824', parent=PassUpNode140061949583888)
PassUpNode140061949583760 = Node('ExclusiveOrExpression_3760', parent=PassUpNode140061949583824)
PassUpNode140061949583696 = Node('AndExpression_3696', parent=PassUpNode140061949583760)
PassUpNode140061949583632 = Node('EqalityExpression_3632', parent=PassUpNode140061949583696)
PassUpNode140061949583568 = Node('ShiftExpression_3568', parent=PassUpNode140061949583632)
PassUpNode140061949583504 = Node('ShiftExpression_3504', parent=PassUpNode140061949583568)
PassUpNode140061949583440 = Node('AdditiveExpression_3440', parent=PassUpNode140061949583504)
PassUpNode140061949546448 = Node('MultiplicativeExpression_6448', parent=PassUpNode140061949583440)
PassUpNode140061949546384 = Node('CastExpression_6384', parent=PassUpNode140061949546448)
PassUpNode140061949546320 = Node('UnaryExpression_6320', parent=PassUpNode140061949546384)
PassUpNode140061949546128 = Node('PostfixExpression_6128', parent=PassUpNode140061949546320)
PrimaryExpression140061949546192 = Node('PrimaryExpression_6192', parent=PassUpNode140061949546128)
Constant140061949545936 = Node('Constant_5936', parent=PrimaryExpression140061949546192)
leaf = Node('5_5936', parent=Constant140061949545936)
PassUpNode140061949586000 = Node('Statement_6000', parent=PassUpNode140061949587088)
PassUpNode140061949587024 = Node('Expression_7024', parent=PassUpNode140061949586000)
AssignmentExpression140061949586960 = Node('AssignmentExpression_6960', parent=PassUpNode140061949587024)
PassUpNode140061949584464 = Node('UnaryExpression_4464', parent=AssignmentExpression140061949586960)
ArrayAccess140061949585808 = Node('ArrayAccess_5808', parent=PassUpNode140061949584464)
PassUpNode140061949585744 = Node('Expression_5744', parent=ArrayAccess140061949585808)
PassUpNode140061949585680 = Node('AssignmentExpression_5680', parent=PassUpNode140061949585744)
PassUpNode140061949585616 = Node('ConditionalExpression_5616', parent=PassUpNode140061949585680)
PassUpNode140061949585552 = Node('LogicalOrExpression_5552', parent=PassUpNode140061949585616)
PassUpNode140061949585488 = Node('LogicalAndExpression_5488', parent=PassUpNode140061949585552)
PassUpNode140061949585424 = Node('InclusiveOrExpression_5424', parent=PassUpNode140061949585488)
PassUpNode140061949585360 = Node('ExclusiveOrExpression_5360', parent=PassUpNode140061949585424)
PassUpNode140061949585296 = Node('AndExpression_5296', parent=PassUpNode140061949585360)
PassUpNode140061949585232 = Node('EqalityExpression_5232', parent=PassUpNode140061949585296)
PassUpNode140061949585168 = Node('ShiftExpression_5168', parent=PassUpNode140061949585232)
PassUpNode140061949585104 = Node('ShiftExpression_5104', parent=PassUpNode140061949585168)
PassUpNode140061949585040 = Node('AdditiveExpression_5040', parent=PassUpNode140061949585104)
PassUpNode140061949584976 = Node('MultiplicativeExpression_4976', parent=PassUpNode140061949585040)
PassUpNode140061949584912 = Node('CastExpression_4912', parent=PassUpNode140061949584976)
PassUpNode140061949584848 = Node('UnaryExpression_4848', parent=PassUpNode140061949584912)
PassUpNode140061949584784 = Node('PostfixExpression_4784', parent=PassUpNode140061949584848)
PrimaryExpression140061949584656 = Node('PrimaryExpression_4656', parent=PassUpNode140061949584784)
Constant140061949584592 = Node('Constant_4592', parent=PrimaryExpression140061949584656)
leaf = Node('3_4592', parent=Constant140061949584592)
PassUpNode140061949584528 = Node('PostfixExpression_4528', parent=ArrayAccess140061949585808)
PrimaryExpression140061949584400 = Node('PrimaryExpression_4400', parent=PassUpNode140061949584528)
Identifier140061949584336 = Node('Identifier_4336', parent=PrimaryExpression140061949584400)
leaf = Node('arr2_4336', parent=Identifier140061949584336)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(9, 90, 6)", parent=Identifier140061949584336)
leaf = Node('9 _5808', parent=ArrayAccess140061949585808)
leaf = Node('3_5808', parent=ArrayAccess140061949585808)
PassUpNode140061949586896 = Node('AssignmentExpression_6896', parent=AssignmentExpression140061949586960)
PassUpNode140061949586832 = Node('ConditionalExpression_6832', parent=PassUpNode140061949586896)
PassUpNode140061949586768 = Node('LogicalOrExpression_6768', parent=PassUpNode140061949586832)
PassUpNode140061949586704 = Node('LogicalAndExpression_6704', parent=PassUpNode140061949586768)
PassUpNode140061949586640 = Node('InclusiveOrExpression_6640', parent=PassUpNode140061949586704)
PassUpNode140061949586576 = Node('ExclusiveOrExpression_6576', parent=PassUpNode140061949586640)
PassUpNode140061949586512 = Node('AndExpression_6512', parent=PassUpNode140061949586576)
PassUpNode140061949586448 = Node('EqalityExpression_6448', parent=PassUpNode140061949586512)
PassUpNode140061949586384 = Node('ShiftExpression_6384', parent=PassUpNode140061949586448)
PassUpNode140061949586320 = Node('ShiftExpression_6320', parent=PassUpNode140061949586384)
PassUpNode140061949586256 = Node('AdditiveExpression_6256', parent=PassUpNode140061949586320)
PassUpNode140061949586192 = Node('MultiplicativeExpression_6192', parent=PassUpNode140061949586256)
PassUpNode140061949586128 = Node('CastExpression_6128', parent=PassUpNode140061949586192)
PassUpNode140061949586064 = Node('UnaryExpression_6064', parent=PassUpNode140061949586128)
PassUpNode140061949584720 = Node('PostfixExpression_4720', parent=PassUpNode140061949586064)
PrimaryExpression140061949585936 = Node('PrimaryExpression_5936', parent=PassUpNode140061949584720)
Constant140061949585872 = Node('Constant_5872', parent=PrimaryExpression140061949585936)
leaf = Node('100_5872', parent=Constant140061949585872)
PassUpNode140061949587216 = Node('Statement_7216', parent=PassUpNode140061949587280)
IterationStatement140061949609616 = Node('IterationStatement_9616', parent=PassUpNode140061949587216)
PassUpNode140061949608976 = Node('Expression_8976', parent=IterationStatement140061949609616)
PassUpNode140061949608912 = Node('AssignmentExpression_8912', parent=PassUpNode140061949608976)
PassUpNode140061949608848 = Node('ConditionalExpression_8848', parent=PassUpNode140061949608912)
PassUpNode140061949608784 = Node('LogicalOrExpression_8784', parent=PassUpNode140061949608848)
PassUpNode140061949608720 = Node('LogicalAndExpression_8720', parent=PassUpNode140061949608784)
PassUpNode140061949608656 = Node('InclusiveOrExpression_8656', parent=PassUpNode140061949608720)
PassUpNode140061949608592 = Node('ExclusiveOrExpression_8592', parent=PassUpNode140061949608656)
PassUpNode140061949608528 = Node('AndExpression_8528', parent=PassUpNode140061949608592)
PassUpNode140061949608464 = Node('EqalityExpression_8464', parent=PassUpNode140061949608528)
PassUpNode140061949608400 = Node('ShiftExpression_8400', parent=PassUpNode140061949608464)
PassUpNode140061949608336 = Node('ShiftExpression_8336', parent=PassUpNode140061949608400)
PassUpNode140061949608272 = Node('AdditiveExpression_8272', parent=PassUpNode140061949608336)
PassUpNode140061949608208 = Node('MultiplicativeExpression_8208', parent=PassUpNode140061949608272)
PassUpNode140061949608144 = Node('CastExpression_8144', parent=PassUpNode140061949608208)
PassUpNode140061949608080 = Node('UnaryExpression_8080', parent=PassUpNode140061949608144)
PassUpNode140061949608016 = Node('PostfixExpression_8016', parent=PassUpNode140061949608080)
PrimaryExpression140061949587344 = Node('PrimaryExpression_7344', parent=PassUpNode140061949608016)
Identifier140061949587152 = Node('Identifier_7152', parent=PrimaryExpression140061949587344)
leaf = Node('a_7152', parent=Identifier140061949587152)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140061949587152)
PassUpNode140061949609168 = Node('Statement_9168', parent=IterationStatement140061949609616)
CompoundStatement140061949609040 = Node('CompoundStatement_9040', parent=PassUpNode140061949609168)
DeclList140061949611920 = Node('DeclList_1920', parent=CompoundStatement140061949609040)
Declaration140061949610768 = Node('Declaration_0768', parent=DeclList140061949611920)
DeclarationSpecifiers140061949609232 = Node('DeclarationSpecifiers_9232', parent=Declaration140061949610768)
leaf = Node('int_9232', parent=DeclarationSpecifiers140061949609232)
InitDeclList140061949609552 = Node('InitDeclList_9552', parent=Declaration140061949610768)
PassUpNode140061949610192 = Node('Statement_0192', parent=PassUpNode140061949611152)
PassUpNode140061949611216 = Node('Expression_1216', parent=PassUpNode140061949610192)
AssignmentExpression140061949611280 = Node('AssignmentExpression_1280', parent=PassUpNode140061949611216)
PassUpNode140061949610640 = Node('UnaryExpression_0640', parent=AssignmentExpression140061949611280)
PassUpNode140061949609424 = Node('PostfixExpression_9424', parent=PassUpNode140061949610640)
PrimaryExpression140061949609488 = Node('PrimaryExpression_9488', parent=PassUpNode140061949609424)
Identifier140061949587408 = Node('Identifier_7408', parent=PrimaryExpression140061949609488)
leaf = Node('c_7408', parent=Identifier140061949587408)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140061949587408)
PassUpNode140061949611344 = Node('AssignmentExpression_1344', parent=AssignmentExpression140061949611280)
PassUpNode140061949611408 = Node('ConditionalExpression_1408', parent=PassUpNode140061949611344)
PassUpNode140061949611472 = Node('LogicalOrExpression_1472', parent=PassUpNode140061949611408)
PassUpNode140061949611536 = Node('LogicalAndExpression_1536', parent=PassUpNode140061949611472)
PassUpNode140061949611600 = Node('InclusiveOrExpression_1600', parent=PassUpNode140061949611536)
PassUpNode140061949611664 = Node('ExclusiveOrExpression_1664', parent=PassUpNode140061949611600)
PassUpNode140061949609680 = Node('AndExpression_9680', parent=PassUpNode140061949611664)
PassUpNode140061949609744 = Node('EqalityExpression_9744', parent=PassUpNode140061949609680)
PassUpNode140061949609808 = Node('ShiftExpression_9808', parent=PassUpNode140061949609744)
PassUpNode140061949609296 = Node('ShiftExpression_9296', parent=PassUpNode140061949609808)
BinOp140061949609872 = Node('BinOp_9872', parent=PassUpNode140061949609296)
PassUpNode140061949610384 = Node('AdditiveExpression_0384', parent=BinOp140061949609872)
PassUpNode140061949610448 = Node('MultiplicativeExpression_0448', parent=PassUpNode140061949610384)
PassUpNode140061949610512 = Node('CastExpression_0512', parent=PassUpNode140061949610448)
PassUpNode140061949609104 = Node('UnaryExpression_9104', parent=PassUpNode140061949610512)
PassUpNode140061949611728 = Node('PostfixExpression_1728', parent=PassUpNode140061949609104)
PrimaryExpression140061949610576 = Node('PrimaryExpression_0576', parent=PassUpNode140061949611728)
Constant140061949609360 = Node('Constant_9360', parent=PrimaryExpression140061949610576)
leaf = Node('5_9360', parent=Constant140061949609360)
leaf = Node('+_9872', parent=BinOp140061949609872)
PassUpNode140061949609936 = Node('MultiplicativeExpression_9936', parent=BinOp140061949609872)
PassUpNode140061949610000 = Node('CastExpression_0000', parent=PassUpNode140061949609936)
PassUpNode140061949610064 = Node('UnaryExpression_0064', parent=PassUpNode140061949610000)
PassUpNode140061949610128 = Node('PostfixExpression_0128', parent=PassUpNode140061949610064)
PrimaryExpression140061949610256 = Node('PrimaryExpression_0256', parent=PassUpNode140061949610128)
Identifier140061949610320 = Node('Identifier_0320', parent=PrimaryExpression140061949610256)
leaf = Node('a_0320', parent=Identifier140061949610320)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140061949610320)
leaf = Node('int _9872', parent=BinOp140061949609872)
PassUpNode140061949611984 = Node('Statement_1984', parent=PassUpNode140061949133840)
PassUpNode140061949133776 = Node('Expression_3776', parent=PassUpNode140061949611984)
AssignmentExpression140061949133712 = Node('AssignmentExpression_3712', parent=PassUpNode140061949133776)
PassUpNode140061949610704 = Node('UnaryExpression_0704', parent=AssignmentExpression140061949133712)
PassUpNode140061949610896 = Node('PostfixExpression_0896', parent=PassUpNode140061949610704)
PrimaryExpression140061949611024 = Node('PrimaryExpression_1024', parent=PassUpNode140061949610896)
Identifier140061949611088 = Node('Identifier_1088', parent=PrimaryExpression140061949611024)
leaf = Node('a_1088', parent=Identifier140061949611088)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140061949611088)
PassUpNode140061949133648 = Node('AssignmentExpression_3648', parent=AssignmentExpression140061949133712)
PassUpNode140061949133584 = Node('ConditionalExpression_3584', parent=PassUpNode140061949133648)
PassUpNode140061949133520 = Node('LogicalOrExpression_3520', parent=PassUpNode140061949133584)
PassUpNode140061949133456 = Node('LogicalAndExpression_3456', parent=PassUpNode140061949133520)
PassUpNode140061949133392 = Node('InclusiveOrExpression_3392', parent=PassUpNode140061949133456)
PassUpNode140061949133328 = Node('ExclusiveOrExpression_3328', parent=PassUpNode140061949133392)
PassUpNode140061949133264 = Node('AndExpression_3264', parent=PassUpNode140061949133328)
PassUpNode140061949133200 = Node('EqalityExpression_3200', parent=PassUpNode140061949133264)
PassUpNode140061949133136 = Node('ShiftExpression_3136', parent=PassUpNode140061949133200)
PassUpNode140061949133072 = Node('ShiftExpression_3072', parent=PassUpNode140061949133136)
PassUpNode140061949133008 = Node('AdditiveExpression_3008', parent=PassUpNode140061949133072)
PassUpNode140061949132944 = Node('MultiplicativeExpression_2944', parent=PassUpNode140061949133008)
PassUpNode140061949132880 = Node('CastExpression_2880', parent=PassUpNode140061949132944)
PassUpNode140061949611856 = Node('UnaryExpression_1856', parent=PassUpNode140061949132880)
PassUpNode140061949611792 = Node('PostfixExpression_1792', parent=PassUpNode140061949611856)
PrimaryExpression140061949610832 = Node('PrimaryExpression_0832', parent=PassUpNode140061949611792)
Identifier140061949610960 = Node('Identifier_0960', parent=PrimaryExpression140061949610832)
leaf = Node('c_0960', parent=Identifier140061949610960)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140061949610960)
PassUpNode140061949133968 = Node('Statement_3968', parent=PassUpNode140061949134032)
IterationStatement140061949136080 = Node('IterationStatement_6080', parent=PassUpNode140061949133968)
PassUpNode140061949134352 = Node('Statement_4352', parent=IterationStatement140061949136080)
CompoundStatement140061949133904 = Node('CompoundStatement_3904', parent=PassUpNode140061949134352)
PassUpNode140061949134544 = Node('StatementList_4544', parent=CompoundStatement140061949133904)
PassUpNode140061949134416 = Node('Statement_4416', parent=PassUpNode140061949134544)
IterationStatement140061949135888 = Node('IterationStatement_5888', parent=PassUpNode140061949134416)
PassUpNode140061949135824 = Node('Expression_5824', parent=IterationStatement140061949135888)
PassUpNode140061949135760 = Node('AssignmentExpression_5760', parent=PassUpNode140061949135824)
PassUpNode140061949135696 = Node('ConditionalExpression_5696', parent=PassUpNode140061949135760)
PassUpNode140061949135632 = Node('LogicalOrExpression_5632', parent=PassUpNode140061949135696)
PassUpNode140061949135568 = Node('LogicalAndExpression_5568', parent=PassUpNode140061949135632)
PassUpNode140061949135504 = Node('InclusiveOrExpression_5504', parent=PassUpNode140061949135568)
PassUpNode140061949135440 = Node('ExclusiveOrExpression_5440', parent=PassUpNode140061949135504)
PassUpNode140061949135376 = Node('AndExpression_5376', parent=PassUpNode140061949135440)
PassUpNode140061949135312 = Node('EqalityExpression_5312', parent=PassUpNode140061949135376)
PassUpNode140061949135248 = Node('ShiftExpression_5248', parent=PassUpNode140061949135312)
PassUpNode140061949135184 = Node('ShiftExpression_5184', parent=PassUpNode140061949135248)
PassUpNode140061949135120 = Node('AdditiveExpression_5120', parent=PassUpNode140061949135184)
PassUpNode140061949135056 = Node('MultiplicativeExpression_5056', parent=PassUpNode140061949135120)
PassUpNode140061949134992 = Node('CastExpression_4992', parent=PassUpNode140061949135056)
PassUpNode140061949134928 = Node('UnaryExpression_4928', parent=PassUpNode140061949134992)
PassUpNode140061949134864 = Node('PostfixExpression_4864', parent=PassUpNode140061949134928)
PrimaryExpression140061949134736 = Node('PrimaryExpression_4736', parent=PassUpNode140061949134864)
Identifier140061949134608 = Node('Identifier_4608', parent=PrimaryExpression140061949134736)
leaf = Node('c_4608', parent=Identifier140061949134608)
PassUpNode140061949134480 = Node('Statement_4480', parent=IterationStatement140061949135888)
CompoundStatement140061949134288 = Node('CompoundStatement_4288', parent=PassUpNode140061949134480)
PassUpNode140061949134800 = Node('Statement_4800', parent=PassUpNode140061949134224)
PassUpNode140061949145232 = Node('JumpStatement_5232', parent=PassUpNode140061949134800)
leaf = Node('return_5232', parent=PassUpNode140061949145232)
PassUpNode140061949145168 = Node('Expression_5168', parent=PassUpNode140061949145232)
PassUpNode140061949136848 = Node('AssignmentExpression_6848', parent=PassUpNode140061949145168)
PassUpNode140061949136784 = Node('ConditionalExpression_6784', parent=PassUpNode140061949136848)
PassUpNode140061949136720 = Node('LogicalOrExpression_6720', parent=PassUpNode140061949136784)
PassUpNode140061949136656 = Node('LogicalAndExpression_6656', parent=PassUpNode140061949136720)
PassUpNode140061949136592 = Node('InclusiveOrExpression_6592', parent=PassUpNode140061949136656)
PassUpNode140061949136528 = Node('ExclusiveOrExpression_6528', parent=PassUpNode140061949136592)
PassUpNode140061949136464 = Node('AndExpression_6464', parent=PassUpNode140061949136528)
PassUpNode140061949136400 = Node('EqalityExpression_6400', parent=PassUpNode140061949136464)
PassUpNode140061949136336 = Node('ShiftExpression_6336', parent=PassUpNode140061949136400)
PassUpNode140061949136272 = Node('ShiftExpression_6272', parent=PassUpNode140061949136336)
PassUpNode140061949136208 = Node('AdditiveExpression_6208', parent=PassUpNode140061949136272)
PassUpNode140061949136144 = Node('MultiplicativeExpression_6144', parent=PassUpNode140061949136208)
PassUpNode140061949136016 = Node('CastExpression_6016', parent=PassUpNode140061949136144)
PassUpNode140061949135952 = Node('UnaryExpression_5952', parent=PassUpNode140061949136016)
PassUpNode140061949134672 = Node('PostfixExpression_4672', parent=PassUpNode140061949135952)
PrimaryExpression140061949134160 = Node('PrimaryExpression_4160', parent=PassUpNode140061949134672)
Constant140061949134096 = Node('Constant_4096', parent=PrimaryExpression140061949134160)
leaf = Node('0_4096', parent=Constant140061949134096)
PassUpNode140061949148944 = Node('ExternalDeclaration_8944', parent=PassUpNode140061949146576)
FunctionDefintion140061949147024 = Node('FunctionDefintion_7024', parent=PassUpNode140061949148944)
DeclarationSpecifiers140061949145424 = Node('DeclarationSpecifiers_5424', parent=FunctionDefintion140061949147024)
leaf = Node('int_5424', parent=DeclarationSpecifiers140061949145424)
PassUpNode140061949145616 = Node('Declarator_5616', parent=FunctionDefintion140061949147024)
FunctionPrototype140061949146960 = Node('FunctionPrototype_6960', parent=PassUpNode140061949145616)
PassUpNode140061949145552 = Node('DirectDeclarator_5552', parent=FunctionPrototype140061949146960)
Identifier140061949145488 = Node('Identifier_5488', parent=PassUpNode140061949145552)
leaf = Node('funct1_5488', parent=Identifier140061949145488)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct1', Arguments=[{'Type': ['int']}, {'Type': ['char']}, {'Type': ['float']}], TokenLocation=(2, 5, 5)", parent=Identifier140061949145488)
PassUpNode140061949146320 = Node('ParameterTypeList_6320', parent=FunctionPrototype140061949146960)
PassUpNode140061949146896 = Node('ParameterList_6896', parent=PassUpNode140061949146320)
PassUpNode140061949146512 = Node('ParameterList_6512', parent=PassUpNode140061949146896)
PassUpNode140061949146064 = Node('ParameterList_6064', parent=PassUpNode140061949146512)
Declaration140061949146000 = Node('Declaration_6000', parent=PassUpNode140061949146064)
DeclarationSpecifiers140061949145744 = Node('DeclarationSpecifiers_5744', parent=Declaration140061949146000)
leaf = Node('int_5744', parent=DeclarationSpecifiers140061949145744)
PassUpNode140061949145936 = Node('Declarator_5936', parent=Declaration140061949146000)
PassUpNode140061949145808 = Node('DirectDeclarator_5808', parent=PassUpNode140061949145936)
Identifier140061949145680 = Node('Identifier_5680', parent=PassUpNode140061949145808)
leaf = Node('arg2_5680', parent=Identifier140061949145680)
leaf = Node("Type=['int'], TokenLocation=(32, 256, 16)", parent=Identifier140061949145680)
Declaration140061949146448 = Node('Declaration_6448', parent=PassUpNode140061949146512)
DeclarationSpecifiers140061949146192 = Node('DeclarationSpecifiers_6192', parent=Declaration140061949146448)
leaf = Node('char_6192', parent=DeclarationSpecifiers140061949146192)
PassUpNode140061949146384 = Node('Declarator_6384', parent=Declaration140061949146448)
PassUpNode140061949146256 = Node('DirectDeclarator_6256', parent=PassUpNode140061949146384)
Identifier140061949146128 = Node('Identifier_6128', parent=PassUpNode140061949146256)
leaf = Node('arg3_6128', parent=Identifier140061949146128)
leaf = Node("Type=['char'], TokenLocation=(32, 267, 27)", parent=Identifier140061949146128)
Declaration140061949146832 = Node('Declaration_6832', parent=PassUpNode140061949146896)
DeclarationSpecifiers140061949146640 = Node('DeclarationSpecifiers_6640', parent=Declaration140061949146832)
leaf = Node('float_6640', parent=DeclarationSpecifiers140061949146640)
PassUpNode140061949146768 = Node('Declarator_6768', parent=Declaration140061949146832)
PassUpNode140061949146704 = Node('DirectDeclarator_6704', parent=PassUpNode140061949146768)
Identifier140061949145872 = Node('Identifier_5872', parent=PassUpNode140061949146704)
leaf = Node('arg4_5872', parent=Identifier140061949145872)
leaf = Node("Type=['float'], TokenLocation=(32, 279, 39)", parent=Identifier140061949145872)
CompoundStatement140061949148880 = Node('CompoundStatement_8880', parent=FunctionDefintion140061949147024)
DeclList140061949147280 = Node('DeclList_7280', parent=CompoundStatement140061949148880)
Declaration140061949147472 = Node('Declaration_7472', parent=DeclList140061949147280)
DeclarationSpecifiers140061949147152 = Node('DeclarationSpecifiers_7152', parent=Declaration140061949147472)
leaf = Node('int_7152', parent=DeclarationSpecifiers140061949147152)
InitDeclList140061949147408 = Node('InitDeclList_7408', parent=Declaration140061949147472)
PassUpNode140061949147344 = Node('Declarator_7344', parent=InitDeclList140061949147408)
PassUpNode140061949147216 = Node('DirectDeclarator_7216', parent=PassUpNode140061949147344)
Identifier140061949147088 = Node('Identifier_7088', parent=PassUpNode140061949147216)
leaf = Node('i_7088', parent=Identifier140061949147088)
leaf = Node("Type=['int'], TokenLocation=(33, 293, 7)", parent=Identifier140061949147088)
PassUpNode140061949147728 = Node('StatementList_7728', parent=CompoundStatement140061949148880)
PassUpNode140061949147600 = Node('Statement_7600', parent=PassUpNode140061949147728)
PassUpNode140061949148816 = Node('JumpStatement_8816', parent=PassUpNode140061949147600)
leaf = Node('return_8816', parent=PassUpNode140061949148816)
PassUpNode140061949148752 = Node('Expression_8752', parent=PassUpNode140061949148816)
PassUpNode140061949148688 = Node('AssignmentExpression_8688', parent=PassUpNode140061949148752)
PassUpNode140061949148624 = Node('ConditionalExpression_8624', parent=PassUpNode140061949148688)
PassUpNode140061949148560 = Node('LogicalOrExpression_8560', parent=PassUpNode140061949148624)
PassUpNode140061949148496 = Node('LogicalAndExpression_8496', parent=PassUpNode140061949148560)
PassUpNode140061949148432 = Node('InclusiveOrExpression_8432', parent=PassUpNode140061949148496)
PassUpNode140061949148368 = Node('ExclusiveOrExpression_8368', parent=PassUpNode140061949148432)
PassUpNode140061949148304 = Node('AndExpression_8304', parent=PassUpNode140061949148368)
PassUpNode140061949148240 = Node('EqalityExpression_8240', parent=PassUpNode140061949148304)
PassUpNode140061949148176 = Node('ShiftExpression_8176', parent=PassUpNode140061949148240)
PassUpNode140061949148112 = Node('ShiftExpression_8112', parent=PassUpNode140061949148176)
PassUpNode140061949148048 = Node('AdditiveExpression_8048', parent=PassUpNode140061949148112)
PassUpNode140061949147984 = Node('MultiplicativeExpression_7984', parent=PassUpNode140061949148048)
PassUpNode140061949147920 = Node('CastExpression_7920', parent=PassUpNode140061949147984)
PassUpNode140061949147856 = Node('UnaryExpression_7856', parent=PassUpNode140061949147920)
PassUpNode140061949147792 = Node('PostfixExpression_7792', parent=PassUpNode140061949147856)
PrimaryExpression140061949147664 = Node('PrimaryExpression_7664', parent=PassUpNode140061949147792)
Identifier140061949147536 = Node('Identifier_7536', parent=PrimaryExpression140061949147664)
leaf = Node('i_7536', parent=Identifier140061949147536)
leaf = Node("Type=['int'], TokenLocation=(33, 293, 7)", parent=Identifier140061949147536)

for pre, fill, node in RenderTree(PassUpNode140061949146576):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140061949146576, nodeattrfunc=f).to_picture("AST.png")
        