from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140158780315088 = Node('TranslationUnit_5088')
PassUpNode140158780313808 = Node('TranslationUnit_3808', parent=PassUpNode140158780315088)
PassUpNode140158780634320 = Node('TranslationUnit_4320', parent=PassUpNode140158780313808)
PassUpNode140158780634192 = Node('ExternalDeclaration_4192', parent=PassUpNode140158780634320)
Declaration140158780634256 = Node('Declaration_4256', parent=PassUpNode140158780634192)
DeclarationSpecifiers140158783368656 = Node('DeclarationSpecifiers_8656', parent=Declaration140158780634256)
leaf = Node('int_8656', parent=DeclarationSpecifiers140158783368656)
InitDeclList140158780634064 = Node('InitDeclList_4064', parent=Declaration140158780634256)
PassUpNode140158780896784 = Node('Declarator_6784', parent=InitDeclList140158780634064)
FunctionPrototype140158780634128 = Node('FunctionPrototype_4128', parent=PassUpNode140158780896784)
PassUpNode140158783368592 = Node('DirectDeclarator_8592', parent=FunctionPrototype140158780634128)
Identifier140158783445328 = Node('Identifier_5328', parent=PassUpNode140158783368592)
leaf = Node('funct1_5328', parent=Identifier140158783445328)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct1', Arguments=[{'Type': ['int']}, {'Type': ['char']}, {'Type': ['float']}], TokenLocation=(2, 5, 5)", parent=Identifier140158783445328)
PassUpNode140158780633808 = Node('ParameterTypeList_3808', parent=FunctionPrototype140158780634128)
PassUpNode140158780633936 = Node('ParameterList_3936', parent=PassUpNode140158780633808)
PassUpNode140158780633872 = Node('ParameterList_3872', parent=PassUpNode140158780633936)
PassUpNode140158780633616 = Node('ParameterList_3616', parent=PassUpNode140158780633872)
PassUpNode140158780633424 = Node('ParameterDeclaration_3424', parent=PassUpNode140158780633616)
DeclarationSpecifiers140158780633488 = Node('DeclarationSpecifiers_3488', parent=PassUpNode140158780633424)
leaf = Node('int_3488', parent=DeclarationSpecifiers140158780633488)
PassUpNode140158780633680 = Node('ParameterDeclaration_3680', parent=PassUpNode140158780633872)
DeclarationSpecifiers140158780633744 = Node('DeclarationSpecifiers_3744', parent=PassUpNode140158780633680)
leaf = Node('char_3744', parent=DeclarationSpecifiers140158780633744)
PassUpNode140158780633552 = Node('ParameterDeclaration_3552', parent=PassUpNode140158780633936)
DeclarationSpecifiers140158780634000 = Node('DeclarationSpecifiers_4000', parent=PassUpNode140158780633552)
leaf = Node('float_4000', parent=DeclarationSpecifiers140158780634000)
PassUpNode140158780313872 = Node('ExternalDeclaration_3872', parent=PassUpNode140158780313808)
FunctionDefintion140158780635216 = Node('FunctionDefintion_5216', parent=PassUpNode140158780313872)
DeclarationSpecifiers140158780634384 = Node('DeclarationSpecifiers_4384', parent=FunctionDefintion140158780635216)
leaf = Node('int_4384', parent=DeclarationSpecifiers140158780634384)
PassUpNode140158780634576 = Node('Declarator_4576', parent=FunctionDefintion140158780635216)
FunctionPrototype140158780635152 = Node('FunctionPrototype_5152', parent=PassUpNode140158780634576)
PassUpNode140158780634512 = Node('DirectDeclarator_4512', parent=FunctionPrototype140158780635152)
Identifier140158780634448 = Node('Identifier_4448', parent=PassUpNode140158780634512)
leaf = Node('main_4448', parent=Identifier140158780634448)
leaf = Node("Subtype='Function Prototype', Label='main', Arguments=[{'Type': ['int']}], TokenLocation=(5, 37, 5)", parent=Identifier140158780634448)
PassUpNode140158780635088 = Node('ParameterTypeList_5088', parent=FunctionPrototype140158780635152)
PassUpNode140158780635024 = Node('ParameterList_5024', parent=PassUpNode140158780635088)
Declaration140158780634960 = Node('Declaration_4960', parent=PassUpNode140158780635024)
DeclarationSpecifiers140158780634704 = Node('DeclarationSpecifiers_4704', parent=Declaration140158780634960)
leaf = Node('int_4704', parent=DeclarationSpecifiers140158780634704)
PassUpNode140158780634896 = Node('Declarator_4896', parent=Declaration140158780634960)
PassUpNode140158780634768 = Node('DirectDeclarator_4768', parent=PassUpNode140158780634896)
Identifier140158780634640 = Node('Identifier_4640', parent=PassUpNode140158780634768)
leaf = Node('arg1_4640', parent=Identifier140158780634640)
leaf = Node("Type=['int'], TokenLocation=(5, 46, 14)", parent=Identifier140158780634640)
CompoundStatement140158780634832 = Node('CompoundStatement_4832', parent=FunctionDefintion140158780635216)
DeclList140158780714192 = Node('DeclList_4192', parent=CompoundStatement140158780634832)
DeclList140158780712592 = Node('DeclList_2592', parent=DeclList140158780714192)
DeclList140158780635920 = Node('DeclList_5920', parent=DeclList140158780712592)
DeclList140158780635472 = Node('DeclList_5472', parent=DeclList140158780635920)
Declaration140158780635664 = Node('Declaration_5664', parent=DeclList140158780635472)
DeclarationSpecifiers140158780635344 = Node('DeclarationSpecifiers_5344', parent=Declaration140158780635664)
leaf = Node('int_5344', parent=DeclarationSpecifiers140158780635344)
InitDeclList140158780635600 = Node('InitDeclList_5600', parent=Declaration140158780635664)
PassUpNode140158780635536 = Node('Declarator_5536', parent=InitDeclList140158780635600)
PassUpNode140158780635408 = Node('DirectDeclarator_5408', parent=PassUpNode140158780635536)
Identifier140158780635280 = Node('Identifier_5280', parent=PassUpNode140158780635408)
leaf = Node('a_5280', parent=Identifier140158780635280)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140158780635280)
Declaration140158780636112 = Node('Declaration_6112', parent=DeclList140158780635920)
DeclarationSpecifiers140158780635792 = Node('DeclarationSpecifiers_5792', parent=Declaration140158780636112)
leaf = Node('int_5792', parent=DeclarationSpecifiers140158780635792)
InitDeclList140158780636048 = Node('InitDeclList_6048', parent=Declaration140158780636112)
PassUpNode140158780635984 = Node('Declarator_5984', parent=InitDeclList140158780636048)
PassUpNode140158780635856 = Node('DirectDeclarator_5856', parent=PassUpNode140158780635984)
Identifier140158780635728 = Node('Identifier_5728', parent=PassUpNode140158780635856)
leaf = Node('c_5728', parent=Identifier140158780635728)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140158780635728)
Declaration140158780712656 = Node('Declaration_2656', parent=DeclList140158780712592)
DeclarationSpecifiers140158780636240 = Node('DeclarationSpecifiers_6240', parent=Declaration140158780712656)
leaf = Node('int_6240', parent=DeclarationSpecifiers140158780636240)
InitDeclList140158780711632 = Node('InitDeclList_1632', parent=Declaration140158780712656)
PassUpNode140158780711440 = Node('Declarator_1440', parent=InitDeclList140158780711632)
ArrayDeclaration140158780712528 = Node('ArrayDeclaration_2528', parent=PassUpNode140158780711440)
ArrayDeclaration140158780711376 = Node('ArrayDeclaration_1376', parent=ArrayDeclaration140158780712528)
PassUpNode140158780636304 = Node('DirectDeclarator_6304', parent=ArrayDeclaration140158780711376)
Identifier140158780636176 = Node('Identifier_6176', parent=PassUpNode140158780636304)
leaf = Node('arr_6176', parent=Identifier140158780636176)
leaf = Node("Array Size=['6', '8'], Subtype='Array', Type=['int'], TokenLocation=(8, 74, 6)", parent=Identifier140158780636176)
PassUpNode140158780711312 = Node('ConstantExpression_1312', parent=ArrayDeclaration140158780711376)
PassUpNode140158780711248 = Node('ConditionalExpression_1248', parent=PassUpNode140158780711312)
PassUpNode140158780711184 = Node('LogicalOrExpression_1184', parent=PassUpNode140158780711248)
PassUpNode140158780711120 = Node('LogicalAndExpression_1120', parent=PassUpNode140158780711184)
PassUpNode140158780711056 = Node('InclusiveOrExpression_1056', parent=PassUpNode140158780711120)
PassUpNode140158780710992 = Node('ExclusiveOrExpression_0992', parent=PassUpNode140158780711056)
PassUpNode140158780637136 = Node('AndExpression_7136', parent=PassUpNode140158780710992)
PassUpNode140158780637072 = Node('EqalityExpression_7072', parent=PassUpNode140158780637136)
PassUpNode140158780637008 = Node('ShiftExpression_7008', parent=PassUpNode140158780637072)
PassUpNode140158780636944 = Node('ShiftExpression_6944', parent=PassUpNode140158780637008)
PassUpNode140158780636880 = Node('AdditiveExpression_6880', parent=PassUpNode140158780636944)
PassUpNode140158780636816 = Node('MultiplicativeExpression_6816', parent=PassUpNode140158780636880)
PassUpNode140158780636752 = Node('CastExpression_6752', parent=PassUpNode140158780636816)
PassUpNode140158780636688 = Node('UnaryExpression_6688', parent=PassUpNode140158780636752)
PassUpNode140158780636624 = Node('PostfixExpression_6624', parent=PassUpNode140158780636688)
PrimaryExpression140158780636496 = Node('PrimaryExpression_6496', parent=PassUpNode140158780636624)
Constant140158780636432 = Node('Constant_6432', parent=PrimaryExpression140158780636496)
leaf = Node('6_6432', parent=Constant140158780636432)
PassUpNode140158780712464 = Node('ConstantExpression_2464', parent=ArrayDeclaration140158780712528)
PassUpNode140158780712400 = Node('ConditionalExpression_2400', parent=PassUpNode140158780712464)
PassUpNode140158780712336 = Node('LogicalOrExpression_2336', parent=PassUpNode140158780712400)
PassUpNode140158780712272 = Node('LogicalAndExpression_2272', parent=PassUpNode140158780712336)
PassUpNode140158780712208 = Node('InclusiveOrExpression_2208', parent=PassUpNode140158780712272)
PassUpNode140158780712144 = Node('ExclusiveOrExpression_2144', parent=PassUpNode140158780712208)
PassUpNode140158780712080 = Node('AndExpression_2080', parent=PassUpNode140158780712144)
PassUpNode140158780712016 = Node('EqalityExpression_2016', parent=PassUpNode140158780712080)
PassUpNode140158780711952 = Node('ShiftExpression_1952', parent=PassUpNode140158780712016)
PassUpNode140158780711888 = Node('ShiftExpression_1888', parent=PassUpNode140158780711952)
PassUpNode140158780711824 = Node('AdditiveExpression_1824', parent=PassUpNode140158780711888)
PassUpNode140158780711760 = Node('MultiplicativeExpression_1760', parent=PassUpNode140158780711824)
PassUpNode140158780711696 = Node('CastExpression_1696', parent=PassUpNode140158780711760)
PassUpNode140158780711504 = Node('UnaryExpression_1504', parent=PassUpNode140158780711696)
PassUpNode140158780711568 = Node('PostfixExpression_1568', parent=PassUpNode140158780711504)
PrimaryExpression140158780636560 = Node('PrimaryExpression_6560', parent=PassUpNode140158780711568)
Constant140158780636368 = Node('Constant_6368', parent=PrimaryExpression140158780636560)
leaf = Node('8_6368', parent=Constant140158780636368)
Declaration140158780714256 = Node('Declaration_4256', parent=DeclList140158780714192)
DeclarationSpecifiers140158780712784 = Node('DeclarationSpecifiers_2784', parent=Declaration140158780714256)
leaf = Node('int_2784', parent=DeclarationSpecifiers140158780712784)
InitDeclList140158780713104 = Node('InitDeclList_3104', parent=Declaration140158780714256)
PassUpNode140158780712912 = Node('Declarator_2912', parent=InitDeclList140158780713104)
ArrayDeclaration140158780714128 = Node('ArrayDeclaration_4128', parent=PassUpNode140158780712912)
PassUpNode140158780712848 = Node('DirectDeclarator_2848', parent=ArrayDeclaration140158780714128)
Identifier140158780712720 = Node('Identifier_2720', parent=PassUpNode140158780712848)
leaf = Node('arr2_2720', parent=Identifier140158780712720)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(9, 90, 6)", parent=Identifier140158780712720)
PassUpNode140158780714064 = Node('ConstantExpression_4064', parent=ArrayDeclaration140158780714128)
PassUpNode140158780714000 = Node('ConditionalExpression_4000', parent=PassUpNode140158780714064)
PassUpNode140158780713936 = Node('LogicalOrExpression_3936', parent=PassUpNode140158780714000)
PassUpNode140158780713872 = Node('LogicalAndExpression_3872', parent=PassUpNode140158780713936)
PassUpNode140158780713808 = Node('InclusiveOrExpression_3808', parent=PassUpNode140158780713872)
PassUpNode140158780713744 = Node('ExclusiveOrExpression_3744', parent=PassUpNode140158780713808)
PassUpNode140158780713680 = Node('AndExpression_3680', parent=PassUpNode140158780713744)
PassUpNode140158780713616 = Node('EqalityExpression_3616', parent=PassUpNode140158780713680)
PassUpNode140158780713552 = Node('ShiftExpression_3552', parent=PassUpNode140158780713616)
PassUpNode140158780713488 = Node('ShiftExpression_3488', parent=PassUpNode140158780713552)
PassUpNode140158780713424 = Node('AdditiveExpression_3424', parent=PassUpNode140158780713488)
PassUpNode140158780713360 = Node('MultiplicativeExpression_3360', parent=PassUpNode140158780713424)
PassUpNode140158780713296 = Node('CastExpression_3296', parent=PassUpNode140158780713360)
PassUpNode140158780713232 = Node('UnaryExpression_3232', parent=PassUpNode140158780713296)
PassUpNode140158780713168 = Node('PostfixExpression_3168', parent=PassUpNode140158780713232)
PrimaryExpression140158780713040 = Node('PrimaryExpression_3040', parent=PassUpNode140158780713168)
Constant140158780712976 = Node('Constant_2976', parent=PrimaryExpression140158780713040)
leaf = Node('9_2976', parent=Constant140158780712976)
PassUpNode140158780302736 = Node('StatementList_2736', parent=CompoundStatement140158780634832)
PassUpNode140158780302544 = Node('StatementList_2544', parent=PassUpNode140158780302736)
PassUpNode140158780302352 = Node('StatementList_2352', parent=PassUpNode140158780302544)
PassUpNode140158780779664 = Node('StatementList_9664', parent=PassUpNode140158780302352)
PassUpNode140158780755792 = Node('StatementList_5792', parent=PassUpNode140158780779664)
PassUpNode140158780755600 = Node('StatementList_5600', parent=PassUpNode140158780755792)
PassUpNode140158780752784 = Node('StatementList_2784', parent=PassUpNode140158780755600)
PassUpNode140158780714768 = Node('Statement_4768', parent=PassUpNode140158780752784)
PassUpNode140158780752720 = Node('Expression_2720', parent=PassUpNode140158780714768)
AssignmentExpression140158780752656 = Node('AssignmentExpression_2656', parent=PassUpNode140158780752720)
PassUpNode140158780714576 = Node('UnaryExpression_4576', parent=AssignmentExpression140158780752656)
PassUpNode140158780714512 = Node('PostfixExpression_4512', parent=PassUpNode140158780714576)
PrimaryExpression140158780714384 = Node('PrimaryExpression_4384', parent=PassUpNode140158780714512)
Identifier140158780714320 = Node('Identifier_4320', parent=PrimaryExpression140158780714384)
leaf = Node('a_4320', parent=Identifier140158780714320)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140158780714320)
PassUpNode140158780752592 = Node('AssignmentExpression_2592', parent=AssignmentExpression140158780752656)
PassUpNode140158780752528 = Node('ConditionalExpression_2528', parent=PassUpNode140158780752592)
PassUpNode140158780752464 = Node('LogicalOrExpression_2464', parent=PassUpNode140158780752528)
PassUpNode140158780752400 = Node('LogicalAndExpression_2400', parent=PassUpNode140158780752464)
PassUpNode140158780752336 = Node('InclusiveOrExpression_2336', parent=PassUpNode140158780752400)
PassUpNode140158780752272 = Node('ExclusiveOrExpression_2272', parent=PassUpNode140158780752336)
PassUpNode140158780752208 = Node('AndExpression_2208', parent=PassUpNode140158780752272)
PassUpNode140158780752144 = Node('EqalityExpression_2144', parent=PassUpNode140158780752208)
PassUpNode140158780752080 = Node('ShiftExpression_2080', parent=PassUpNode140158780752144)
PassUpNode140158780752016 = Node('ShiftExpression_2016', parent=PassUpNode140158780752080)
PassUpNode140158780751952 = Node('AdditiveExpression_1952', parent=PassUpNode140158780752016)
PassUpNode140158780714960 = Node('MultiplicativeExpression_4960', parent=PassUpNode140158780751952)
PassUpNode140158780714896 = Node('CastExpression_4896', parent=PassUpNode140158780714960)
PassUpNode140158780714832 = Node('UnaryExpression_4832', parent=PassUpNode140158780714896)
PassUpNode140158780714640 = Node('PostfixExpression_4640', parent=PassUpNode140158780714832)
PrimaryExpression140158780714704 = Node('PrimaryExpression_4704', parent=PassUpNode140158780714640)
Constant140158780714448 = Node('Constant_4448', parent=PrimaryExpression140158780714704)
leaf = Node('5_4448', parent=Constant140158780714448)
PassUpNode140158780754512 = Node('Statement_4512', parent=PassUpNode140158780755600)
PassUpNode140158780755536 = Node('Expression_5536', parent=PassUpNode140158780754512)
AssignmentExpression140158780755472 = Node('AssignmentExpression_5472', parent=PassUpNode140158780755536)
PassUpNode140158780752976 = Node('UnaryExpression_2976', parent=AssignmentExpression140158780755472)
ArrayAccess140158780754320 = Node('ArrayAccess_4320', parent=PassUpNode140158780752976)
PassUpNode140158780754256 = Node('Expression_4256', parent=ArrayAccess140158780754320)
PassUpNode140158780754192 = Node('AssignmentExpression_4192', parent=PassUpNode140158780754256)
PassUpNode140158780754128 = Node('ConditionalExpression_4128', parent=PassUpNode140158780754192)
PassUpNode140158780754064 = Node('LogicalOrExpression_4064', parent=PassUpNode140158780754128)
PassUpNode140158780754000 = Node('LogicalAndExpression_4000', parent=PassUpNode140158780754064)
PassUpNode140158780753936 = Node('InclusiveOrExpression_3936', parent=PassUpNode140158780754000)
PassUpNode140158780753872 = Node('ExclusiveOrExpression_3872', parent=PassUpNode140158780753936)
PassUpNode140158780753808 = Node('AndExpression_3808', parent=PassUpNode140158780753872)
PassUpNode140158780753744 = Node('EqalityExpression_3744', parent=PassUpNode140158780753808)
PassUpNode140158780753680 = Node('ShiftExpression_3680', parent=PassUpNode140158780753744)
PassUpNode140158780753616 = Node('ShiftExpression_3616', parent=PassUpNode140158780753680)
PassUpNode140158780753552 = Node('AdditiveExpression_3552', parent=PassUpNode140158780753616)
PassUpNode140158780753488 = Node('MultiplicativeExpression_3488', parent=PassUpNode140158780753552)
PassUpNode140158780753424 = Node('CastExpression_3424', parent=PassUpNode140158780753488)
PassUpNode140158780753360 = Node('UnaryExpression_3360', parent=PassUpNode140158780753424)
PassUpNode140158780753296 = Node('PostfixExpression_3296', parent=PassUpNode140158780753360)
PrimaryExpression140158780753168 = Node('PrimaryExpression_3168', parent=PassUpNode140158780753296)
Constant140158780753104 = Node('Constant_3104', parent=PrimaryExpression140158780753168)
leaf = Node('3_3104', parent=Constant140158780753104)
PassUpNode140158780753040 = Node('PostfixExpression_3040', parent=ArrayAccess140158780754320)
PrimaryExpression140158780752912 = Node('PrimaryExpression_2912', parent=PassUpNode140158780753040)
Identifier140158780752848 = Node('Identifier_2848', parent=PrimaryExpression140158780752912)
leaf = Node('arr2_2848', parent=Identifier140158780752848)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(9, 90, 6)", parent=Identifier140158780752848)
leaf = Node('9 _4320', parent=ArrayAccess140158780754320)
leaf = Node('3_4320', parent=ArrayAccess140158780754320)
PassUpNode140158780755408 = Node('AssignmentExpression_5408', parent=AssignmentExpression140158780755472)
PassUpNode140158780755344 = Node('ConditionalExpression_5344', parent=PassUpNode140158780755408)
PassUpNode140158780755280 = Node('LogicalOrExpression_5280', parent=PassUpNode140158780755344)
PassUpNode140158780755216 = Node('LogicalAndExpression_5216', parent=PassUpNode140158780755280)
PassUpNode140158780755152 = Node('InclusiveOrExpression_5152', parent=PassUpNode140158780755216)
PassUpNode140158780755088 = Node('ExclusiveOrExpression_5088', parent=PassUpNode140158780755152)
PassUpNode140158780755024 = Node('AndExpression_5024', parent=PassUpNode140158780755088)
PassUpNode140158780754960 = Node('EqalityExpression_4960', parent=PassUpNode140158780755024)
PassUpNode140158780754896 = Node('ShiftExpression_4896', parent=PassUpNode140158780754960)
PassUpNode140158780754832 = Node('ShiftExpression_4832', parent=PassUpNode140158780754896)
PassUpNode140158780754768 = Node('AdditiveExpression_4768', parent=PassUpNode140158780754832)
PassUpNode140158780754704 = Node('MultiplicativeExpression_4704', parent=PassUpNode140158780754768)
PassUpNode140158780754640 = Node('CastExpression_4640', parent=PassUpNode140158780754704)
PassUpNode140158780754576 = Node('UnaryExpression_4576', parent=PassUpNode140158780754640)
PassUpNode140158780753232 = Node('PostfixExpression_3232', parent=PassUpNode140158780754576)
PrimaryExpression140158780754448 = Node('PrimaryExpression_4448', parent=PassUpNode140158780753232)
Constant140158780754384 = Node('Constant_4384', parent=PrimaryExpression140158780754448)
leaf = Node('100_4384', parent=Constant140158780754384)
PassUpNode140158780755728 = Node('Statement_5728', parent=PassUpNode140158780755792)
IterationStatement140158780778128 = Node('IterationStatement_8128', parent=PassUpNode140158780755728)
PassUpNode140158780777488 = Node('Expression_7488', parent=IterationStatement140158780778128)
PassUpNode140158780777424 = Node('AssignmentExpression_7424', parent=PassUpNode140158780777488)
PassUpNode140158780777360 = Node('ConditionalExpression_7360', parent=PassUpNode140158780777424)
PassUpNode140158780777296 = Node('LogicalOrExpression_7296', parent=PassUpNode140158780777360)
PassUpNode140158780777232 = Node('LogicalAndExpression_7232', parent=PassUpNode140158780777296)
PassUpNode140158780777168 = Node('InclusiveOrExpression_7168', parent=PassUpNode140158780777232)
PassUpNode140158780777104 = Node('ExclusiveOrExpression_7104', parent=PassUpNode140158780777168)
PassUpNode140158780777040 = Node('AndExpression_7040', parent=PassUpNode140158780777104)
PassUpNode140158780776976 = Node('EqalityExpression_6976', parent=PassUpNode140158780777040)
PassUpNode140158780776912 = Node('ShiftExpression_6912', parent=PassUpNode140158780776976)
PassUpNode140158780776848 = Node('ShiftExpression_6848', parent=PassUpNode140158780776912)
PassUpNode140158780776784 = Node('AdditiveExpression_6784', parent=PassUpNode140158780776848)
PassUpNode140158780776720 = Node('MultiplicativeExpression_6720', parent=PassUpNode140158780776784)
PassUpNode140158780776656 = Node('CastExpression_6656', parent=PassUpNode140158780776720)
PassUpNode140158780776592 = Node('UnaryExpression_6592', parent=PassUpNode140158780776656)
PassUpNode140158780776528 = Node('PostfixExpression_6528', parent=PassUpNode140158780776592)
PrimaryExpression140158780755856 = Node('PrimaryExpression_5856', parent=PassUpNode140158780776528)
Identifier140158780755664 = Node('Identifier_5664', parent=PrimaryExpression140158780755856)
leaf = Node('a_5664', parent=Identifier140158780755664)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140158780755664)
PassUpNode140158780777680 = Node('Statement_7680', parent=IterationStatement140158780778128)
CompoundStatement140158780777552 = Node('CompoundStatement_7552', parent=PassUpNode140158780777680)
DeclList140158780780432 = Node('DeclList_0432', parent=CompoundStatement140158780777552)
Declaration140158780779280 = Node('Declaration_9280', parent=DeclList140158780780432)
DeclarationSpecifiers140158780777744 = Node('DeclarationSpecifiers_7744', parent=Declaration140158780779280)
leaf = Node('int_7744', parent=DeclarationSpecifiers140158780777744)
InitDeclList140158780778064 = Node('InitDeclList_8064', parent=Declaration140158780779280)
PassUpNode140158780778704 = Node('Statement_8704', parent=PassUpNode140158780779664)
PassUpNode140158780779728 = Node('Expression_9728', parent=PassUpNode140158780778704)
AssignmentExpression140158780779792 = Node('AssignmentExpression_9792', parent=PassUpNode140158780779728)
PassUpNode140158780779152 = Node('UnaryExpression_9152', parent=AssignmentExpression140158780779792)
PassUpNode140158780777936 = Node('PostfixExpression_7936', parent=PassUpNode140158780779152)
PrimaryExpression140158780778000 = Node('PrimaryExpression_8000', parent=PassUpNode140158780777936)
Identifier140158780755920 = Node('Identifier_5920', parent=PrimaryExpression140158780778000)
leaf = Node('c_5920', parent=Identifier140158780755920)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140158780755920)
PassUpNode140158780779856 = Node('AssignmentExpression_9856', parent=AssignmentExpression140158780779792)
PassUpNode140158780779920 = Node('ConditionalExpression_9920', parent=PassUpNode140158780779856)
PassUpNode140158780779984 = Node('LogicalOrExpression_9984', parent=PassUpNode140158780779920)
PassUpNode140158780780048 = Node('LogicalAndExpression_0048', parent=PassUpNode140158780779984)
PassUpNode140158780780112 = Node('InclusiveOrExpression_0112', parent=PassUpNode140158780780048)
PassUpNode140158780780176 = Node('ExclusiveOrExpression_0176', parent=PassUpNode140158780780112)
PassUpNode140158780778192 = Node('AndExpression_8192', parent=PassUpNode140158780780176)
PassUpNode140158780778256 = Node('EqalityExpression_8256', parent=PassUpNode140158780778192)
PassUpNode140158780778320 = Node('ShiftExpression_8320', parent=PassUpNode140158780778256)
PassUpNode140158780777808 = Node('ShiftExpression_7808', parent=PassUpNode140158780778320)
BinOp140158780778384 = Node('BinOp_8384', parent=PassUpNode140158780777808)
PassUpNode140158780778896 = Node('AdditiveExpression_8896', parent=BinOp140158780778384)
PassUpNode140158780778960 = Node('MultiplicativeExpression_8960', parent=PassUpNode140158780778896)
PassUpNode140158780779024 = Node('CastExpression_9024', parent=PassUpNode140158780778960)
PassUpNode140158780777616 = Node('UnaryExpression_7616', parent=PassUpNode140158780779024)
PassUpNode140158780780240 = Node('PostfixExpression_0240', parent=PassUpNode140158780777616)
PrimaryExpression140158780779088 = Node('PrimaryExpression_9088', parent=PassUpNode140158780780240)
Constant140158780777872 = Node('Constant_7872', parent=PrimaryExpression140158780779088)
leaf = Node('5_7872', parent=Constant140158780777872)
leaf = Node('+_8384', parent=BinOp140158780778384)
PassUpNode140158780778448 = Node('MultiplicativeExpression_8448', parent=BinOp140158780778384)
PassUpNode140158780778512 = Node('CastExpression_8512', parent=PassUpNode140158780778448)
PassUpNode140158780778576 = Node('UnaryExpression_8576', parent=PassUpNode140158780778512)
PassUpNode140158780778640 = Node('PostfixExpression_8640', parent=PassUpNode140158780778576)
PrimaryExpression140158780778768 = Node('PrimaryExpression_8768', parent=PassUpNode140158780778640)
Identifier140158780778832 = Node('Identifier_8832', parent=PrimaryExpression140158780778768)
leaf = Node('a_8832', parent=Identifier140158780778832)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140158780778832)
leaf = Node('int _8384', parent=BinOp140158780778384)
PassUpNode140158780780496 = Node('Statement_0496', parent=PassUpNode140158780302352)
PassUpNode140158780302288 = Node('Expression_2288', parent=PassUpNode140158780780496)
AssignmentExpression140158780302224 = Node('AssignmentExpression_2224', parent=PassUpNode140158780302288)
PassUpNode140158780779216 = Node('UnaryExpression_9216', parent=AssignmentExpression140158780302224)
PassUpNode140158780779408 = Node('PostfixExpression_9408', parent=PassUpNode140158780779216)
PrimaryExpression140158780779536 = Node('PrimaryExpression_9536', parent=PassUpNode140158780779408)
Identifier140158780779600 = Node('Identifier_9600', parent=PrimaryExpression140158780779536)
leaf = Node('a_9600', parent=Identifier140158780779600)
leaf = Node("Type=['int'], TokenLocation=(6, 58, 6)", parent=Identifier140158780779600)
PassUpNode140158780302160 = Node('AssignmentExpression_2160', parent=AssignmentExpression140158780302224)
PassUpNode140158780302096 = Node('ConditionalExpression_2096', parent=PassUpNode140158780302160)
PassUpNode140158780302032 = Node('LogicalOrExpression_2032', parent=PassUpNode140158780302096)
PassUpNode140158780301968 = Node('LogicalAndExpression_1968', parent=PassUpNode140158780302032)
PassUpNode140158780301904 = Node('InclusiveOrExpression_1904', parent=PassUpNode140158780301968)
PassUpNode140158780301840 = Node('ExclusiveOrExpression_1840', parent=PassUpNode140158780301904)
PassUpNode140158780301776 = Node('AndExpression_1776', parent=PassUpNode140158780301840)
PassUpNode140158780301712 = Node('EqalityExpression_1712', parent=PassUpNode140158780301776)
PassUpNode140158780301648 = Node('ShiftExpression_1648', parent=PassUpNode140158780301712)
PassUpNode140158780301584 = Node('ShiftExpression_1584', parent=PassUpNode140158780301648)
PassUpNode140158780301520 = Node('AdditiveExpression_1520', parent=PassUpNode140158780301584)
PassUpNode140158780301456 = Node('MultiplicativeExpression_1456', parent=PassUpNode140158780301520)
PassUpNode140158780301392 = Node('CastExpression_1392', parent=PassUpNode140158780301456)
PassUpNode140158780780368 = Node('UnaryExpression_0368', parent=PassUpNode140158780301392)
PassUpNode140158780780304 = Node('PostfixExpression_0304', parent=PassUpNode140158780780368)
PrimaryExpression140158780779344 = Node('PrimaryExpression_9344', parent=PassUpNode140158780780304)
Identifier140158780779472 = Node('Identifier_9472', parent=PrimaryExpression140158780779344)
leaf = Node('c_9472', parent=Identifier140158780779472)
leaf = Node("Type=['int'], TokenLocation=(7, 66, 6)", parent=Identifier140158780779472)
PassUpNode140158780302480 = Node('Statement_2480', parent=PassUpNode140158780302544)
IterationStatement140158780304592 = Node('IterationStatement_4592', parent=PassUpNode140158780302480)
PassUpNode140158780302864 = Node('Statement_2864', parent=IterationStatement140158780304592)
CompoundStatement140158780302416 = Node('CompoundStatement_2416', parent=PassUpNode140158780302864)
PassUpNode140158780303056 = Node('StatementList_3056', parent=CompoundStatement140158780302416)
PassUpNode140158780302928 = Node('Statement_2928', parent=PassUpNode140158780303056)
IterationStatement140158780304400 = Node('IterationStatement_4400', parent=PassUpNode140158780302928)
PassUpNode140158780304336 = Node('Expression_4336', parent=IterationStatement140158780304400)
PassUpNode140158780304272 = Node('AssignmentExpression_4272', parent=PassUpNode140158780304336)
PassUpNode140158780304208 = Node('ConditionalExpression_4208', parent=PassUpNode140158780304272)
PassUpNode140158780304144 = Node('LogicalOrExpression_4144', parent=PassUpNode140158780304208)
PassUpNode140158780304080 = Node('LogicalAndExpression_4080', parent=PassUpNode140158780304144)
PassUpNode140158780304016 = Node('InclusiveOrExpression_4016', parent=PassUpNode140158780304080)
PassUpNode140158780303952 = Node('ExclusiveOrExpression_3952', parent=PassUpNode140158780304016)
PassUpNode140158780303888 = Node('AndExpression_3888', parent=PassUpNode140158780303952)
PassUpNode140158780303824 = Node('EqalityExpression_3824', parent=PassUpNode140158780303888)
PassUpNode140158780303760 = Node('ShiftExpression_3760', parent=PassUpNode140158780303824)
PassUpNode140158780303696 = Node('ShiftExpression_3696', parent=PassUpNode140158780303760)
PassUpNode140158780303632 = Node('AdditiveExpression_3632', parent=PassUpNode140158780303696)
PassUpNode140158780303568 = Node('MultiplicativeExpression_3568', parent=PassUpNode140158780303632)
PassUpNode140158780303504 = Node('CastExpression_3504', parent=PassUpNode140158780303568)
PassUpNode140158780303440 = Node('UnaryExpression_3440', parent=PassUpNode140158780303504)
PassUpNode140158780303376 = Node('PostfixExpression_3376', parent=PassUpNode140158780303440)
PrimaryExpression140158780303248 = Node('PrimaryExpression_3248', parent=PassUpNode140158780303376)
Identifier140158780303120 = Node('Identifier_3120', parent=PrimaryExpression140158780303248)
leaf = Node('c_3120', parent=Identifier140158780303120)
PassUpNode140158780302992 = Node('Statement_2992', parent=IterationStatement140158780304400)
CompoundStatement140158780302800 = Node('CompoundStatement_2800', parent=PassUpNode140158780302992)
PassUpNode140158780303312 = Node('Statement_3312', parent=PassUpNode140158780302736)
PassUpNode140158780313744 = Node('JumpStatement_3744', parent=PassUpNode140158780303312)
leaf = Node('return_3744', parent=PassUpNode140158780313744)
PassUpNode140158780313680 = Node('Expression_3680', parent=PassUpNode140158780313744)
PassUpNode140158780305360 = Node('AssignmentExpression_5360', parent=PassUpNode140158780313680)
PassUpNode140158780305296 = Node('ConditionalExpression_5296', parent=PassUpNode140158780305360)
PassUpNode140158780305232 = Node('LogicalOrExpression_5232', parent=PassUpNode140158780305296)
PassUpNode140158780305168 = Node('LogicalAndExpression_5168', parent=PassUpNode140158780305232)
PassUpNode140158780305104 = Node('InclusiveOrExpression_5104', parent=PassUpNode140158780305168)
PassUpNode140158780305040 = Node('ExclusiveOrExpression_5040', parent=PassUpNode140158780305104)
PassUpNode140158780304976 = Node('AndExpression_4976', parent=PassUpNode140158780305040)
PassUpNode140158780304912 = Node('EqalityExpression_4912', parent=PassUpNode140158780304976)
PassUpNode140158780304848 = Node('ShiftExpression_4848', parent=PassUpNode140158780304912)
PassUpNode140158780304784 = Node('ShiftExpression_4784', parent=PassUpNode140158780304848)
PassUpNode140158780304720 = Node('AdditiveExpression_4720', parent=PassUpNode140158780304784)
PassUpNode140158780304656 = Node('MultiplicativeExpression_4656', parent=PassUpNode140158780304720)
PassUpNode140158780304528 = Node('CastExpression_4528', parent=PassUpNode140158780304656)
PassUpNode140158780304464 = Node('UnaryExpression_4464', parent=PassUpNode140158780304528)
PassUpNode140158780303184 = Node('PostfixExpression_3184', parent=PassUpNode140158780304464)
PrimaryExpression140158780302672 = Node('PrimaryExpression_2672', parent=PassUpNode140158780303184)
Constant140158780302608 = Node('Constant_2608', parent=PrimaryExpression140158780302672)
leaf = Node('0_2608', parent=Constant140158780302608)
PassUpNode140158780317456 = Node('ExternalDeclaration_7456', parent=PassUpNode140158780315088)
FunctionDefintion140158780315536 = Node('FunctionDefintion_5536', parent=PassUpNode140158780317456)
DeclarationSpecifiers140158780313936 = Node('DeclarationSpecifiers_3936', parent=FunctionDefintion140158780315536)
leaf = Node('int_3936', parent=DeclarationSpecifiers140158780313936)
PassUpNode140158780314128 = Node('Declarator_4128', parent=FunctionDefintion140158780315536)
FunctionPrototype140158780315472 = Node('FunctionPrototype_5472', parent=PassUpNode140158780314128)
PassUpNode140158780314064 = Node('DirectDeclarator_4064', parent=FunctionPrototype140158780315472)
Identifier140158780314000 = Node('Identifier_4000', parent=PassUpNode140158780314064)
leaf = Node('funct1_4000', parent=Identifier140158780314000)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct1', Arguments=[{'Type': ['int']}, {'Type': ['char']}, {'Type': ['float']}], TokenLocation=(2, 5, 5)", parent=Identifier140158780314000)
PassUpNode140158780314832 = Node('ParameterTypeList_4832', parent=FunctionPrototype140158780315472)
PassUpNode140158780315408 = Node('ParameterList_5408', parent=PassUpNode140158780314832)
PassUpNode140158780315024 = Node('ParameterList_5024', parent=PassUpNode140158780315408)
PassUpNode140158780314576 = Node('ParameterList_4576', parent=PassUpNode140158780315024)
Declaration140158780314512 = Node('Declaration_4512', parent=PassUpNode140158780314576)
DeclarationSpecifiers140158780314256 = Node('DeclarationSpecifiers_4256', parent=Declaration140158780314512)
leaf = Node('int_4256', parent=DeclarationSpecifiers140158780314256)
PassUpNode140158780314448 = Node('Declarator_4448', parent=Declaration140158780314512)
PassUpNode140158780314320 = Node('DirectDeclarator_4320', parent=PassUpNode140158780314448)
Identifier140158780314192 = Node('Identifier_4192', parent=PassUpNode140158780314320)
leaf = Node('arg2_4192', parent=Identifier140158780314192)
leaf = Node("Type=['int'], TokenLocation=(32, 256, 16)", parent=Identifier140158780314192)
Declaration140158780314960 = Node('Declaration_4960', parent=PassUpNode140158780315024)
DeclarationSpecifiers140158780314704 = Node('DeclarationSpecifiers_4704', parent=Declaration140158780314960)
leaf = Node('char_4704', parent=DeclarationSpecifiers140158780314704)
PassUpNode140158780314896 = Node('Declarator_4896', parent=Declaration140158780314960)
PassUpNode140158780314768 = Node('DirectDeclarator_4768', parent=PassUpNode140158780314896)
Identifier140158780314640 = Node('Identifier_4640', parent=PassUpNode140158780314768)
leaf = Node('arg3_4640', parent=Identifier140158780314640)
leaf = Node("Type=['char'], TokenLocation=(32, 267, 27)", parent=Identifier140158780314640)
Declaration140158780315344 = Node('Declaration_5344', parent=PassUpNode140158780315408)
DeclarationSpecifiers140158780315152 = Node('DeclarationSpecifiers_5152', parent=Declaration140158780315344)
leaf = Node('float_5152', parent=DeclarationSpecifiers140158780315152)
PassUpNode140158780315280 = Node('Declarator_5280', parent=Declaration140158780315344)
PassUpNode140158780315216 = Node('DirectDeclarator_5216', parent=PassUpNode140158780315280)
Identifier140158780314384 = Node('Identifier_4384', parent=PassUpNode140158780315216)
leaf = Node('arg4_4384', parent=Identifier140158780314384)
leaf = Node("Type=['float'], TokenLocation=(32, 279, 39)", parent=Identifier140158780314384)
CompoundStatement140158780317392 = Node('CompoundStatement_7392', parent=FunctionDefintion140158780315536)
DeclList140158780315792 = Node('DeclList_5792', parent=CompoundStatement140158780317392)
Declaration140158780315984 = Node('Declaration_5984', parent=DeclList140158780315792)
DeclarationSpecifiers140158780315664 = Node('DeclarationSpecifiers_5664', parent=Declaration140158780315984)
leaf = Node('int_5664', parent=DeclarationSpecifiers140158780315664)
InitDeclList140158780315920 = Node('InitDeclList_5920', parent=Declaration140158780315984)
PassUpNode140158780315856 = Node('Declarator_5856', parent=InitDeclList140158780315920)
PassUpNode140158780315728 = Node('DirectDeclarator_5728', parent=PassUpNode140158780315856)
Identifier140158780315600 = Node('Identifier_5600', parent=PassUpNode140158780315728)
leaf = Node('i_5600', parent=Identifier140158780315600)
leaf = Node("Type=['int'], TokenLocation=(33, 293, 7)", parent=Identifier140158780315600)
PassUpNode140158780316240 = Node('StatementList_6240', parent=CompoundStatement140158780317392)
PassUpNode140158780316112 = Node('Statement_6112', parent=PassUpNode140158780316240)
PassUpNode140158780317328 = Node('JumpStatement_7328', parent=PassUpNode140158780316112)
leaf = Node('return_7328', parent=PassUpNode140158780317328)
PassUpNode140158780317264 = Node('Expression_7264', parent=PassUpNode140158780317328)
PassUpNode140158780317200 = Node('AssignmentExpression_7200', parent=PassUpNode140158780317264)
PassUpNode140158780317136 = Node('ConditionalExpression_7136', parent=PassUpNode140158780317200)
PassUpNode140158780317072 = Node('LogicalOrExpression_7072', parent=PassUpNode140158780317136)
PassUpNode140158780317008 = Node('LogicalAndExpression_7008', parent=PassUpNode140158780317072)
PassUpNode140158780316944 = Node('InclusiveOrExpression_6944', parent=PassUpNode140158780317008)
PassUpNode140158780316880 = Node('ExclusiveOrExpression_6880', parent=PassUpNode140158780316944)
PassUpNode140158780316816 = Node('AndExpression_6816', parent=PassUpNode140158780316880)
PassUpNode140158780316752 = Node('EqalityExpression_6752', parent=PassUpNode140158780316816)
PassUpNode140158780316688 = Node('ShiftExpression_6688', parent=PassUpNode140158780316752)
PassUpNode140158780316624 = Node('ShiftExpression_6624', parent=PassUpNode140158780316688)
PassUpNode140158780316560 = Node('AdditiveExpression_6560', parent=PassUpNode140158780316624)
PassUpNode140158780316496 = Node('MultiplicativeExpression_6496', parent=PassUpNode140158780316560)
PassUpNode140158780316432 = Node('CastExpression_6432', parent=PassUpNode140158780316496)
PassUpNode140158780316368 = Node('UnaryExpression_6368', parent=PassUpNode140158780316432)
PassUpNode140158780316304 = Node('PostfixExpression_6304', parent=PassUpNode140158780316368)
PrimaryExpression140158780316176 = Node('PrimaryExpression_6176', parent=PassUpNode140158780316304)
Identifier140158780316048 = Node('Identifier_6048', parent=PrimaryExpression140158780316176)
leaf = Node('i_6048', parent=Identifier140158780316048)
leaf = Node("Type=['int'], TokenLocation=(33, 293, 7)", parent=Identifier140158780316048)

for pre, fill, node in RenderTree(PassUpNode140158780315088):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140158780315088, nodeattrfunc=f).to_picture("AST.png")
        