from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
<<<<<<< HEAD
PassUpNode140028669068688 = Node('TranslationUnit_8688')
PassUpNode140028669068752 = Node('ExternalDeclaration_8752', parent=PassUpNode140028669068688)
FunctionDefintion140028668971344 = Node('FunctionDefintion_1344', parent=PassUpNode140028669068752)
DeclarationSpecifiers140028672492944 = Node('DeclarationSpecifiers_2944', parent=FunctionDefintion140028668971344)
leaf = Node('int_2944', parent=DeclarationSpecifiers140028672492944)
PassUpNode140028672580944 = Node('Declarator_0944', parent=FunctionDefintion140028668971344)
PassUpNode140028668971152 = Node('DirectDeclarator_1152', parent=PassUpNode140028672580944)
PassUpNode140028672577744 = Node('DirectDeclarator_7744', parent=PassUpNode140028668971152)
Identifier140028672492880 = Node('Identifier_2880', parent=PassUpNode140028672577744)
leaf = Node('main_2880', parent=Identifier140028672492880)
leaf = Node("TokenLocation=(1, 4, 5)", parent=Identifier140028672492880)
CompoundStatement140028668971216 = Node('CompoundStatement_1216', parent=FunctionDefintion140028668971344)
DeclList140028669023760 = Node('DeclList_3760', parent=CompoundStatement140028668971216)
DeclList140028669023184 = Node('DeclList_3184', parent=DeclList140028669023760)
Declaration140028669023248 = Node('Declaration_3248', parent=DeclList140028669023184)
DeclarationSpecifiers140028668971408 = Node('DeclarationSpecifiers_1408', parent=Declaration140028669023248)
leaf = Node('int_1408', parent=DeclarationSpecifiers140028668971408)
InitDeclList140028668973008 = Node('InitDeclList_3008', parent=Declaration140028669023248)
PassUpNode140028668972816 = Node('Declarator_2816', parent=InitDeclList140028668973008)
ArrayDeclaration140028669023120 = Node('ArrayDeclaration_3120', parent=PassUpNode140028668972816)
ArrayDeclaration140028668972752 = Node('ArrayDeclaration_2752', parent=ArrayDeclaration140028669023120)
PassUpNode140028668971472 = Node('DirectDeclarator_1472', parent=ArrayDeclaration140028668972752)
Identifier140028668971280 = Node('Identifier_1280', parent=PassUpNode140028668971472)
leaf = Node('arr_1280', parent=Identifier140028668971280)
leaf = Node("Array Size=['2', '3'], Subtype='Array', Type=['int'], TokenLocation=(3, 18, 6)", parent=Identifier140028668971280)
PassUpNode140028668972688 = Node('ConstantExpression_2688', parent=ArrayDeclaration140028668972752)
PassUpNode140028668972624 = Node('ConditionalExpression_2624', parent=PassUpNode140028668972688)
PassUpNode140028668972560 = Node('LogicalOrExpression_2560', parent=PassUpNode140028668972624)
PassUpNode140028668972496 = Node('LogicalAndExpression_2496', parent=PassUpNode140028668972560)
PassUpNode140028668972432 = Node('InclusiveOrExpression_2432', parent=PassUpNode140028668972496)
PassUpNode140028668972368 = Node('ExclusiveOrExpression_2368', parent=PassUpNode140028668972432)
PassUpNode140028668972304 = Node('AndExpression_2304', parent=PassUpNode140028668972368)
PassUpNode140028668972240 = Node('EqalityExpression_2240', parent=PassUpNode140028668972304)
PassUpNode140028668972176 = Node('ShiftExpression_2176', parent=PassUpNode140028668972240)
PassUpNode140028668972112 = Node('ShiftExpression_2112', parent=PassUpNode140028668972176)
PassUpNode140028668972048 = Node('AdditiveExpression_2048', parent=PassUpNode140028668972112)
PassUpNode140028668971984 = Node('MultiplicativeExpression_1984', parent=PassUpNode140028668972048)
PassUpNode140028668971920 = Node('CastExpression_1920', parent=PassUpNode140028668971984)
PassUpNode140028668971856 = Node('UnaryExpression_1856', parent=PassUpNode140028668971920)
PassUpNode140028668971792 = Node('PostfixExpression_1792', parent=PassUpNode140028668971856)
PrimaryExpression140028668971664 = Node('PrimaryExpression_1664', parent=PassUpNode140028668971792)
Constant140028668971600 = Node('Constant_1600', parent=PrimaryExpression140028668971664)
leaf = Node('2_1600', parent=Constant140028668971600)
PassUpNode140028669023056 = Node('ConstantExpression_3056', parent=ArrayDeclaration140028669023120)
PassUpNode140028669022992 = Node('ConditionalExpression_2992', parent=PassUpNode140028669023056)
PassUpNode140028669022928 = Node('LogicalOrExpression_2928', parent=PassUpNode140028669022992)
PassUpNode140028669022864 = Node('LogicalAndExpression_2864', parent=PassUpNode140028669022928)
PassUpNode140028669022800 = Node('InclusiveOrExpression_2800', parent=PassUpNode140028669022864)
PassUpNode140028669022736 = Node('ExclusiveOrExpression_2736', parent=PassUpNode140028669022800)
PassUpNode140028669022672 = Node('AndExpression_2672', parent=PassUpNode140028669022736)
PassUpNode140028669022608 = Node('EqalityExpression_2608', parent=PassUpNode140028669022672)
PassUpNode140028669022544 = Node('ShiftExpression_2544', parent=PassUpNode140028669022608)
PassUpNode140028669022480 = Node('ShiftExpression_2480', parent=PassUpNode140028669022544)
PassUpNode140028669022416 = Node('AdditiveExpression_2416', parent=PassUpNode140028669022480)
PassUpNode140028669022352 = Node('MultiplicativeExpression_2352', parent=PassUpNode140028669022416)
PassUpNode140028669022288 = Node('CastExpression_2288', parent=PassUpNode140028669022352)
PassUpNode140028668972880 = Node('UnaryExpression_2880', parent=PassUpNode140028669022288)
PassUpNode140028668971728 = Node('PostfixExpression_1728', parent=PassUpNode140028668972880)
PrimaryExpression140028668972944 = Node('PrimaryExpression_2944', parent=PassUpNode140028668971728)
Constant140028668971536 = Node('Constant_1536', parent=PrimaryExpression140028668972944)
leaf = Node('3_1536', parent=Constant140028668971536)
Declaration140028669023440 = Node('Declaration_3440', parent=DeclList140028669023760)
DeclarationSpecifiers140028669023376 = Node('DeclarationSpecifiers_3376', parent=Declaration140028669023440)
leaf = Node('int_3376', parent=DeclarationSpecifiers140028669023376)
InitDeclList140028669023568 = Node('InitDeclList_3568', parent=Declaration140028669023440)
PassUpNode140028669068624 = Node('StatementList_8624', parent=CompoundStatement140028668971216)
PassUpNode140028669067536 = Node('Statement_7536', parent=PassUpNode140028669068624)
PassUpNode140028669068560 = Node('Expression_8560', parent=PassUpNode140028669067536)
AssignmentExpression140028669068496 = Node('AssignmentExpression_8496', parent=PassUpNode140028669068560)
PassUpNode140028669025104 = Node('UnaryExpression_5104', parent=AssignmentExpression140028669068496)
ArrayAccess140028669067344 = Node('ArrayAccess_7344', parent=PassUpNode140028669025104)
PassUpNode140028669026256 = Node('Expression_6256', parent=ArrayAccess140028669067344)
PassUpNode140028669026192 = Node('AssignmentExpression_6192', parent=PassUpNode140028669026256)
PassUpNode140028669026128 = Node('ConditionalExpression_6128', parent=PassUpNode140028669026192)
PassUpNode140028669026064 = Node('LogicalOrExpression_6064', parent=PassUpNode140028669026128)
PassUpNode140028669026000 = Node('LogicalAndExpression_6000', parent=PassUpNode140028669026064)
PassUpNode140028669025936 = Node('InclusiveOrExpression_5936', parent=PassUpNode140028669026000)
PassUpNode140028669025872 = Node('ExclusiveOrExpression_5872', parent=PassUpNode140028669025936)
PassUpNode140028669025808 = Node('AndExpression_5808', parent=PassUpNode140028669025872)
PassUpNode140028669025744 = Node('EqalityExpression_5744', parent=PassUpNode140028669025808)
PassUpNode140028669025680 = Node('ShiftExpression_5680', parent=PassUpNode140028669025744)
PassUpNode140028669025616 = Node('ShiftExpression_5616', parent=PassUpNode140028669025680)
PassUpNode140028669025552 = Node('AdditiveExpression_5552', parent=PassUpNode140028669025616)
PassUpNode140028669025488 = Node('MultiplicativeExpression_5488', parent=PassUpNode140028669025552)
PassUpNode140028669025424 = Node('CastExpression_5424', parent=PassUpNode140028669025488)
PassUpNode140028669025168 = Node('UnaryExpression_5168', parent=PassUpNode140028669025424)
PassUpNode140028669024528 = Node('PostfixExpression_4528', parent=PassUpNode140028669025168)
PrimaryExpression140028669025296 = Node('PrimaryExpression_5296', parent=PassUpNode140028669024528)
Identifier140028669023632 = Node('Identifier_3632', parent=PrimaryExpression140028669025296)
leaf = Node('a_3632', parent=Identifier140028669023632)
leaf = Node("TokenLocation=(4, 34, 6)", parent=Identifier140028669023632)
ArrayAccess140028669025040 = Node('ArrayAccess_5040', parent=ArrayAccess140028669067344)
PassUpNode140028669024976 = Node('Expression_4976', parent=ArrayAccess140028669025040)
PassUpNode140028669024912 = Node('AssignmentExpression_4912', parent=PassUpNode140028669024976)
PassUpNode140028669024848 = Node('ConditionalExpression_4848', parent=PassUpNode140028669024912)
PassUpNode140028669024784 = Node('LogicalOrExpression_4784', parent=PassUpNode140028669024848)
PassUpNode140028669023696 = Node('LogicalAndExpression_3696', parent=PassUpNode140028669024784)
PassUpNode140028669023824 = Node('InclusiveOrExpression_3824', parent=PassUpNode140028669023696)
PassUpNode140028669023888 = Node('ExclusiveOrExpression_3888', parent=PassUpNode140028669023824)
PassUpNode140028669023952 = Node('AndExpression_3952', parent=PassUpNode140028669023888)
PassUpNode140028669024016 = Node('EqalityExpression_4016', parent=PassUpNode140028669023952)
PassUpNode140028669024080 = Node('ShiftExpression_4080', parent=PassUpNode140028669024016)
PassUpNode140028669024144 = Node('ShiftExpression_4144', parent=PassUpNode140028669024080)
PassUpNode140028669024208 = Node('AdditiveExpression_4208', parent=PassUpNode140028669024144)
PassUpNode140028669024272 = Node('MultiplicativeExpression_4272', parent=PassUpNode140028669024208)
PassUpNode140028669024336 = Node('CastExpression_4336', parent=PassUpNode140028669024272)
PassUpNode140028669024400 = Node('UnaryExpression_4400', parent=PassUpNode140028669024336)
PassUpNode140028669024464 = Node('PostfixExpression_4464', parent=PassUpNode140028669024400)
PrimaryExpression140028669024592 = Node('PrimaryExpression_4592', parent=PassUpNode140028669024464)
Constant140028669024656 = Node('Constant_4656', parent=PrimaryExpression140028669024592)
leaf = Node('1.1_4656', parent=Constant140028669024656)
PassUpNode140028669024720 = Node('PostfixExpression_4720', parent=ArrayAccess140028669025040)
PrimaryExpression140028669023504 = Node('PrimaryExpression_3504', parent=PassUpNode140028669024720)
Identifier140028669023312 = Node('Identifier_3312', parent=PrimaryExpression140028669023504)
leaf = Node('arr_3312', parent=Identifier140028669023312)
leaf = Node("Array Size=['2', '3'], Subtype='Array', Type=['int'], TokenLocation=(3, 18, 6)", parent=Identifier140028669023312)
leaf = Node('2 3 _5040', parent=ArrayAccess140028669025040)
leaf = Node('1.1_5040', parent=ArrayAccess140028669025040)
leaf = Node('2 3 _7344', parent=ArrayAccess140028669067344)
leaf = Node('a_7344', parent=ArrayAccess140028669067344)
PassUpNode140028669068432 = Node('AssignmentExpression_8432', parent=AssignmentExpression140028669068496)
PassUpNode140028669068368 = Node('ConditionalExpression_8368', parent=PassUpNode140028669068432)
PassUpNode140028669068304 = Node('LogicalOrExpression_8304', parent=PassUpNode140028669068368)
PassUpNode140028669068240 = Node('LogicalAndExpression_8240', parent=PassUpNode140028669068304)
PassUpNode140028669068176 = Node('InclusiveOrExpression_8176', parent=PassUpNode140028669068240)
PassUpNode140028669068112 = Node('ExclusiveOrExpression_8112', parent=PassUpNode140028669068176)
PassUpNode140028669068048 = Node('AndExpression_8048', parent=PassUpNode140028669068112)
PassUpNode140028669067984 = Node('EqalityExpression_7984', parent=PassUpNode140028669068048)
PassUpNode140028669067920 = Node('ShiftExpression_7920', parent=PassUpNode140028669067984)
PassUpNode140028669067856 = Node('ShiftExpression_7856', parent=PassUpNode140028669067920)
PassUpNode140028669067792 = Node('AdditiveExpression_7792', parent=PassUpNode140028669067856)
PassUpNode140028669067728 = Node('MultiplicativeExpression_7728', parent=PassUpNode140028669067792)
PassUpNode140028669067664 = Node('CastExpression_7664', parent=PassUpNode140028669067728)
PassUpNode140028669067600 = Node('UnaryExpression_7600', parent=PassUpNode140028669067664)
PassUpNode140028669067408 = Node('PostfixExpression_7408', parent=PassUpNode140028669067600)
PrimaryExpression140028669067472 = Node('PrimaryExpression_7472', parent=PassUpNode140028669067408)
Constant140028669025360 = Node('Constant_5360', parent=PrimaryExpression140028669067472)
leaf = Node('3_5360', parent=Constant140028669025360)

for pre, fill, node in RenderTree(PassUpNode140028669068688):
=======
PassUpNode140046949710672 = Node('TranslationUnit*_0672')
PassUpNode140046949629136 = Node('TranslationUnit*_9136', parent=PassUpNode140046949710672)
PassUpNode140046949626768 = Node('TranslationUnit*_6768', parent=PassUpNode140046949629136)
PassUpNode140046949626128 = Node('TranslationUnit*_6128', parent=PassUpNode140046949626768)
Declaration140046949625936 = Node('Declaration_5936', parent=PassUpNode140046949626128)
DeclarationSpecifiers140046953147536 = Node('DeclarationSpecifiers_7536', parent=Declaration140046949625936)
leaf = Node('int_7536', parent=DeclarationSpecifiers140046953147536)
InitDeclList140046953147600 = Node('InitDeclList_7600', parent=Declaration140046949625936)
Identifier140046953203792 = Node('Identifier_3792', parent=InitDeclList140046953147600)
leaf = Node('var0_3792', parent=Identifier140046953203792)
leaf = Node("Type=['int'], TokenLocation=(1, 4, 5)", parent=Identifier140046953203792)
Declaration140046949626192 = Node('Declaration_6192', parent=PassUpNode140046949626128)
DeclarationSpecifiers140046949893392 = Node('DeclarationSpecifiers_3392', parent=Declaration140046949626192)
leaf = Node('char_3392', parent=DeclarationSpecifiers140046949893392)
InitDeclList140046949626000 = Node('InitDeclList_6000', parent=Declaration140046949626192)
Identifier140046949626064 = Node('Identifier_6064', parent=InitDeclList140046949626000)
leaf = Node('var1_6064', parent=Identifier140046949626064)
leaf = Node("Type=['char'], TokenLocation=(2, 15, 6)", parent=Identifier140046949626064)
Declaration140046949626704 = Node('Declaration_6704', parent=PassUpNode140046949626768)
DeclarationSpecifiers140046949626320 = Node('DeclarationSpecifiers_6320', parent=Declaration140046949626704)
leaf = Node('int_6320', parent=DeclarationSpecifiers140046949626320)
InitDeclList140046949626448 = Node('InitDeclList_6448', parent=Declaration140046949626704)
FunctionPrototype140046949626576 = Node('FunctionPrototype_6576', parent=InitDeclList140046949626448)
Identifier140046949626256 = Node('Identifier_6256', parent=FunctionPrototype140046949626576)
leaf = Node('fun1_6256', parent=Identifier140046949626256)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='fun1', Arguments=[{'Type': ['int']}, {'Type': ['char']}], TokenLocation=(6, 56, 5)", parent=Identifier140046949626256)
PassUpNode140046949626384 = Node('ParameterList*_6384', parent=FunctionPrototype140046949626576)
DeclarationSpecifiers140046949626512 = Node('DeclarationSpecifiers_6512', parent=PassUpNode140046949626384)
leaf = Node('int_6512', parent=DeclarationSpecifiers140046949626512)
DeclarationSpecifiers140046949626640 = Node('DeclarationSpecifiers_6640', parent=PassUpNode140046949626384)
leaf = Node('char_6640', parent=DeclarationSpecifiers140046949626640)
FunctionDefintion140046949627664 = Node('FunctionDefintion_7664', parent=PassUpNode140046949629136)
DeclarationSpecifiers140046949626896 = Node('DeclarationSpecifiers_6896', parent=FunctionDefintion140046949627664)
leaf = Node('int_6896', parent=DeclarationSpecifiers140046949626896)
FunctionPrototype140046949627280 = Node('FunctionPrototype_7280', parent=FunctionDefintion140046949627664)
Identifier140046949626960 = Node('Identifier_6960', parent=FunctionPrototype140046949627280)
leaf = Node('main_6960', parent=Identifier140046949626960)
leaf = Node("Subtype='Function Prototype', Label='main', Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}, {'Type': ['char']}], TokenLocation=(9, 101, 5)", parent=Identifier140046949626960)
PassUpNode140046949627600 = Node('ParameterList*_7600', parent=FunctionPrototype140046949627280)
Declaration140046949627216 = Node('Declaration_7216', parent=PassUpNode140046949627600)
DeclarationSpecifiers140046949627088 = Node('DeclarationSpecifiers_7088', parent=Declaration140046949627216)
leaf = Node('const_7088', parent=DeclarationSpecifiers140046949627088)
DeclarationSpecifiers140046949627152 = Node('DeclarationSpecifiers_7152', parent=DeclarationSpecifiers140046949627088)
leaf = Node('int_7152', parent=DeclarationSpecifiers140046949627152)
Identifier140046949626832 = Node('Identifier_6832', parent=Declaration140046949627216)
leaf = Node('arg1_6832', parent=Identifier140046949626832)
leaf = Node("Type Qualifier=['const'], Type=['int'], TokenLocation=(9, 116, 20)", parent=Identifier140046949626832)
Declaration140046949627472 = Node('Declaration_7472', parent=PassUpNode140046949627600)
DeclarationSpecifiers140046949627408 = Node('DeclarationSpecifiers_7408', parent=Declaration140046949627472)
leaf = Node('char_7408', parent=DeclarationSpecifiers140046949627408)
Identifier140046949627344 = Node('Identifier_7344', parent=Declaration140046949627472)
leaf = Node('arg2_7344', parent=Identifier140046949627344)
leaf = Node("Type=['char'], TokenLocation=(9, 127, 31)", parent=Identifier140046949627344)
CompoundStatement140046949627024 = Node('CompoundStatement_7024', parent=FunctionDefintion140046949627664)
DeclList140046949627856 = Node('DeclList_7856', parent=CompoundStatement140046949627024)
Declaration140046949627920 = Node('Declaration_7920', parent=DeclList140046949627856)
DeclarationSpecifiers140046949627728 = Node('DeclarationSpecifiers_7728', parent=Declaration140046949627920)
leaf = Node('int_7728', parent=DeclarationSpecifiers140046949627728)
InitDeclList140046949627792 = Node('InitDeclList_7792', parent=Declaration140046949627920)
Identifier140046949627536 = Node('Identifier_7536', parent=InitDeclList140046949627792)
leaf = Node('var2_7536', parent=Identifier140046949627536)
leaf = Node("Type=['int'], TokenLocation=(10, 140, 7)", parent=Identifier140046949627536)
PassUpNode140046949629200 = Node('StatementList*_9200', parent=CompoundStatement140046949627024)
AssignmentExpression140046949628304 = Node('AssignmentExpression_8304', parent=PassUpNode140046949629200)
PrimaryExpression140046949628048 = Node('PrimaryExpression_8048', parent=AssignmentExpression140046949628304)
Identifier140046949627984 = Node('Identifier_7984', parent=PrimaryExpression140046949628048)
leaf = Node('var2_7984', parent=Identifier140046949627984)
leaf = Node("Type=['int'], TokenLocation=(10, 140, 7)", parent=Identifier140046949627984)
BinOp140046949628496 = Node('BinOp_8496', parent=AssignmentExpression140046949628304)
PrimaryExpression140046949628240 = Node('PrimaryExpression_8240', parent=BinOp140046949628496)
Identifier140046949628112 = Node('Identifier_8112', parent=PrimaryExpression140046949628240)
leaf = Node('arg1_8112', parent=Identifier140046949628112)
leaf = Node("Type Qualifier=['const'], Type=['int'], TokenLocation=(9, 116, 20)", parent=Identifier140046949628112)
leaf = Node('+_8496', parent=BinOp140046949628496)
PrimaryExpression140046949628368 = Node('PrimaryExpression_8368', parent=BinOp140046949628496)
Constant140046949628176 = Node('Constant_8176', parent=PrimaryExpression140046949628368)
leaf = Node('3_8176', parent=Constant140046949628176)
leaf = Node('int _8496', parent=BinOp140046949628496)
FunctionCall140046949628816 = Node('FunctionCall_8816', parent=PassUpNode140046949629200)
PrimaryExpression140046949628688 = Node('PrimaryExpression_8688', parent=FunctionCall140046949628816)
Identifier140046949628432 = Node('Identifier_8432', parent=PrimaryExpression140046949628688)
leaf = Node('fun1_8432', parent=Identifier140046949628432)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='fun1', Arguments=[{'Type': ['int']}, {'Type': ['char']}], TokenLocation=(6, 56, 5)", parent=Identifier140046949628432)
PassUpNode140046949629072 = Node('ArgumentExpressionList*_9072', parent=FunctionCall140046949628816)
PrimaryExpression140046949628752 = Node('PrimaryExpression_8752', parent=PassUpNode140046949629072)
Identifier140046949628624 = Node('Identifier_8624', parent=PrimaryExpression140046949628752)
leaf = Node('var2_8624', parent=Identifier140046949628624)
leaf = Node("Type=['int'], TokenLocation=(10, 140, 7)", parent=Identifier140046949628624)
PrimaryExpression140046949628944 = Node('PrimaryExpression_8944', parent=PassUpNode140046949629072)
Identifier140046949628880 = Node('Identifier_8880', parent=PrimaryExpression140046949628944)
leaf = Node('var1_8880', parent=Identifier140046949628880)
leaf = Node("Type=['char'], TokenLocation=(2, 15, 6)", parent=Identifier140046949628880)
FunctionDefintion140046949629904 = Node('FunctionDefintion_9904', parent=PassUpNode140046949710672)
DeclarationSpecifiers140046949629008 = Node('DeclarationSpecifiers_9008', parent=FunctionDefintion140046949629904)
leaf = Node('int_9008', parent=DeclarationSpecifiers140046949629008)
FunctionPrototype140046949629520 = Node('FunctionPrototype_9520', parent=FunctionDefintion140046949629904)
Identifier140046949628560 = Node('Identifier_8560', parent=FunctionPrototype140046949629520)
leaf = Node('fun1_8560', parent=Identifier140046949628560)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='fun1', Arguments=[{'Type': ['int']}, {'Type': ['char']}], TokenLocation=(6, 56, 5)", parent=Identifier140046949628560)
PassUpNode140046949629840 = Node('ParameterList*_9840', parent=FunctionPrototype140046949629520)
Declaration140046949629456 = Node('Declaration_9456', parent=PassUpNode140046949629840)
DeclarationSpecifiers140046949629392 = Node('DeclarationSpecifiers_9392', parent=Declaration140046949629456)
leaf = Node('int_9392', parent=DeclarationSpecifiers140046949629392)
Identifier140046949629264 = Node('Identifier_9264', parent=Declaration140046949629456)
leaf = Node('arg3_9264', parent=Identifier140046949629264)
leaf = Node("Type=['int'], TokenLocation=(16, 204, 14)", parent=Identifier140046949629264)
Declaration140046949629712 = Node('Declaration_9712', parent=PassUpNode140046949629840)
DeclarationSpecifiers140046949629648 = Node('DeclarationSpecifiers_9648', parent=Declaration140046949629712)
leaf = Node('char_9648', parent=DeclarationSpecifiers140046949629648)
Identifier140046949629584 = Node('Identifier_9584', parent=Declaration140046949629712)
leaf = Node('arg4_9584', parent=Identifier140046949629584)
leaf = Node("Type=['char'], TokenLocation=(16, 215, 25)", parent=Identifier140046949629584)
CompoundStatement140046949629328 = Node('CompoundStatement_9328', parent=FunctionDefintion140046949629904)
DeclList140046949709200 = Node('DeclList_9200', parent=CompoundStatement140046949629328)
DeclList140046949708624 = Node('DeclList_8624', parent=DeclList140046949709200)
DeclList140046949708304 = Node('DeclList_8304', parent=DeclList140046949708624)
DeclList140046949707984 = Node('DeclList_7984', parent=DeclList140046949708304)
Declaration140046949708048 = Node('Declaration_8048', parent=DeclList140046949707984)
DeclarationSpecifiers140046949629776 = Node('DeclarationSpecifiers_9776', parent=Declaration140046949708048)
leaf = Node('int_9776', parent=DeclarationSpecifiers140046949629776)
InitDeclList140046949707920 = Node('InitDeclList_7920', parent=Declaration140046949708048)
Identifier140046949707856 = Node('Identifier_7856', parent=InitDeclList140046949707920)
leaf = Node('var2_7856', parent=Identifier140046949707856)
leaf = Node("Type=['int'], TokenLocation=(17, 230, 9)", parent=Identifier140046949707856)
Declaration140046949708368 = Node('Declaration_8368', parent=DeclList140046949708304)
DeclarationSpecifiers140046949708176 = Node('DeclarationSpecifiers_8176', parent=Declaration140046949708368)
leaf = Node('char_8176', parent=DeclarationSpecifiers140046949708176)
InitDeclList140046949708240 = Node('InitDeclList_8240', parent=Declaration140046949708368)
Identifier140046949708112 = Node('Identifier_8112', parent=InitDeclList140046949708240)
leaf = Node('var3_8112', parent=Identifier140046949708112)
leaf = Node("Type=['char'], TokenLocation=(18, 245, 10)", parent=Identifier140046949708112)
Declaration140046949708688 = Node('Declaration_8688', parent=DeclList140046949708624)
DeclarationSpecifiers140046949708496 = Node('DeclarationSpecifiers_8496', parent=Declaration140046949708688)
leaf = Node('float_8496', parent=DeclarationSpecifiers140046949708496)
InitDeclList140046949708560 = Node('InitDeclList_8560', parent=Declaration140046949708688)
Identifier140046949708432 = Node('Identifier_8432', parent=InitDeclList140046949708560)
leaf = Node('var6_8432', parent=Identifier140046949708432)
leaf = Node("Type=['float'], TokenLocation=(19, 261, 11)", parent=Identifier140046949708432)
Declaration140046949709072 = Node('Declaration_9072', parent=DeclList140046949709200)
DeclarationSpecifiers140046949708816 = Node('DeclarationSpecifiers_8816', parent=Declaration140046949709072)
leaf = Node('int_8816', parent=DeclarationSpecifiers140046949708816)
InitDeclList140046949708944 = Node('InitDeclList_8944', parent=Declaration140046949709072)
ArrayDeclaration140046949709136 = Node('ArrayDeclaration_9136', parent=InitDeclList140046949708944)
Identifier140046949708752 = Node('Identifier_8752', parent=ArrayDeclaration140046949709136)
leaf = Node('arr_8752', parent=Identifier140046949708752)
leaf = Node("Array Size=['10'], Subtype='Array', Type=['int'], TokenLocation=(20, 275, 9)", parent=Identifier140046949708752)
PrimaryExpression140046949709008 = Node('PrimaryExpression_9008', parent=ArrayDeclaration140046949709136)
Constant140046949708880 = Node('Constant_8880', parent=PrimaryExpression140046949709008)
leaf = Node('10_8880', parent=Constant140046949708880)
PassUpNode140046949710032 = Node('StatementList*_0032', parent=CompoundStatement140046949629328)
AssignmentExpression140046949709584 = Node('AssignmentExpression_9584', parent=PassUpNode140046949710032)
PrimaryExpression140046949709328 = Node('PrimaryExpression_9328', parent=AssignmentExpression140046949709584)
Identifier140046949709264 = Node('Identifier_9264', parent=PrimaryExpression140046949709328)
leaf = Node('var2_9264', parent=Identifier140046949709264)
leaf = Node("Type=['int'], TokenLocation=(17, 230, 9)", parent=Identifier140046949709264)
CastNode140046949709840 = Node('CastNode_9840', parent=AssignmentExpression140046949709584)
leaf = Node('float _9840', parent=CastNode140046949709840)
leaf = Node('int _9840', parent=CastNode140046949709840)
BinOp140046949709776 = Node('BinOp_9776', parent=CastNode140046949709840)
PrimaryExpression140046949709520 = Node('PrimaryExpression_9520', parent=BinOp140046949709776)
Identifier140046949709392 = Node('Identifier_9392', parent=PrimaryExpression140046949709520)
leaf = Node('var6_9392', parent=Identifier140046949709392)
leaf = Node("Type=['float'], TokenLocation=(19, 261, 11)", parent=Identifier140046949709392)
leaf = Node('+_9776', parent=BinOp140046949709776)
PrimaryExpression140046949709648 = Node('PrimaryExpression_9648', parent=BinOp140046949709776)
Constant140046949709456 = Node('Constant_9456', parent=PrimaryExpression140046949709648)
leaf = Node('4.0_9456', parent=Constant140046949709456)
leaf = Node('float _9776', parent=BinOp140046949709776)
SelectionStatement140046949710480 = Node('SelectionStatement_0480', parent=PassUpNode140046949710032)
BinOp140046949710352 = Node('BinOp_0352', parent=SelectionStatement140046949710480)
PrimaryExpression140046949709968 = Node('PrimaryExpression_9968', parent=BinOp140046949710352)
Identifier140046949709712 = Node('Identifier_9712', parent=PrimaryExpression140046949709968)
leaf = Node('var0_9712', parent=Identifier140046949709712)
leaf = Node("Type=['int'], TokenLocation=(1, 4, 5)", parent=Identifier140046949709712)
leaf = Node('<_0352', parent=BinOp140046949710352)
CastNode140046949710416 = Node('CastNode_0416', parent=BinOp140046949710352)
leaf = Node('char _0416', parent=CastNode140046949710416)
leaf = Node('int _0416', parent=CastNode140046949710416)
PrimaryExpression140046949710224 = Node('PrimaryExpression_0224', parent=CastNode140046949710416)
Identifier140046949710160 = Node('Identifier_0160', parent=PrimaryExpression140046949710224)
leaf = Node('var1_0160', parent=Identifier140046949710160)
leaf = Node("Type=['char'], TokenLocation=(2, 15, 6)", parent=Identifier140046949710160)
leaf = Node('int _0352', parent=BinOp140046949710352)
CompoundStatement140046949710096 = Node('CompoundStatement_0096', parent=SelectionStatement140046949710480)
FunctionCall140046949710864 = Node('FunctionCall_0864', parent=CompoundStatement140046949710096)
PrimaryExpression140046949710608 = Node('PrimaryExpression_0608', parent=FunctionCall140046949710864)
Identifier140046949710544 = Node('Identifier_0544', parent=PrimaryExpression140046949710608)
leaf = Node('fun1_0544', parent=Identifier140046949710544)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='fun1', Arguments=[{'Type': ['int']}, {'Type': ['char']}], TokenLocation=(6, 56, 5)", parent=Identifier140046949710544)
PassUpNode140046949711120 = Node('ArgumentExpressionList*_1120', parent=FunctionCall140046949710864)
PrimaryExpression140046949710800 = Node('PrimaryExpression_0800', parent=PassUpNode140046949711120)
Identifier140046949710736 = Node('Identifier_0736', parent=PrimaryExpression140046949710800)
leaf = Node('arg3_0736', parent=Identifier140046949710736)
leaf = Node("Type=['int'], TokenLocation=(16, 204, 14)", parent=Identifier140046949710736)
PrimaryExpression140046949710992 = Node('PrimaryExpression_0992', parent=PassUpNode140046949711120)
Identifier140046949710928 = Node('Identifier_0928', parent=PrimaryExpression140046949710992)
leaf = Node('arg4_0928', parent=Identifier140046949710928)
leaf = Node("Type=['char'], TokenLocation=(16, 215, 25)", parent=Identifier140046949710928)

for pre, fill, node in RenderTree(PassUpNode140046949710672):
>>>>>>> master
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

<<<<<<< HEAD
DotExporter(PassUpNode140028669068688, nodeattrfunc=f).to_picture("AST.png")
=======
DotExporter(PassUpNode140046949710672, nodeattrfunc=f).to_picture("AST.png")
>>>>>>> master
        