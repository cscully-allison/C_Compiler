from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140353576863248 = Node('TranslationUnit_3248')
PassUpNode140353576863312 = Node('ExternalDeclaration_3312', parent=PassUpNode140353576863248)
FunctionDefintion140353576739920 = Node('FunctionDefintion_9920', parent=PassUpNode140353576863312)
DeclarationSpecifiers140353576739088 = Node('DeclarationSpecifiers_9088', parent=FunctionDefintion140353576739920)
leaf = Node('int_9088', parent=DeclarationSpecifiers140353576739088)
PassUpNode140353576739280 = Node('Declarator_9280', parent=FunctionDefintion140353576739920)
PassUpNode140353576739856 = Node('DirectDeclarator_9856', parent=PassUpNode140353576739280)
PassUpNode140353576739216 = Node('DirectDeclarator_9216', parent=PassUpNode140353576739856)
Identifier140353576739152 = Node('Identifier_9152', parent=PassUpNode140353576739216)
leaf = Node('main_9152', parent=Identifier140353576739152)
leaf = Node("TokenLocation=(5, 21, 5)", parent=Identifier140353576739152)
PassUpNode140353576739792 = Node('ParameterTypeList_9792', parent=PassUpNode140353576739856)
PassUpNode140353576739728 = Node('ParameterList_9728', parent=PassUpNode140353576739792)
PassUpNode140353576739664 = Node('ParameterDeclaration_9664', parent=PassUpNode140353576739728)
DeclarationSpecifiers140353576739408 = Node('DeclarationSpecifiers_9408', parent=PassUpNode140353576739664)
leaf = Node('int_9408', parent=DeclarationSpecifiers140353576739408)
PassUpNode140353576739600 = Node('Declarator_9600', parent=PassUpNode140353576739664)
PassUpNode140353576739472 = Node('DirectDeclarator_9472', parent=PassUpNode140353576739600)
Identifier140353576739344 = Node('Identifier_9344', parent=PassUpNode140353576739472)
leaf = Node('g_9344', parent=Identifier140353576739344)
leaf = Node("TokenLocation=(5, 30, 14)", parent=Identifier140353576739344)
CompoundStatement140353576739536 = Node('CompoundStatement_9536', parent=FunctionDefintion140353576739920)
DeclList140353576742160 = Node('DeclList_2160', parent=CompoundStatement140353576739536)
DeclList140353576740496 = Node('DeclList_0496', parent=DeclList140353576742160)
Declaration140353576740176 = Node('Declaration_0176', parent=DeclList140353576740496)
DeclarationSpecifiers140353576740048 = Node('DeclarationSpecifiers_0048', parent=Declaration140353576740176)
leaf = Node('char_0048', parent=DeclarationSpecifiers140353576740048)
InitDeclList140353576740624 = Node('InitDeclList_0624', parent=Declaration140353576740176)
InitDeclList140353576740304 = Node('InitDeclList_0304', parent=InitDeclList140353576740624)
PassUpNode140353576740240 = Node('Declarator_0240', parent=InitDeclList140353576740304)
PassUpNode140353576740112 = Node('DirectDeclarator_0112', parent=PassUpNode140353576740240)
Identifier140353576739984 = Node('Identifier_9984', parent=PassUpNode140353576740112)
leaf = Node('a_9984', parent=Identifier140353576739984)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140353576739984)
PassUpNode140353576740560 = Node('Declarator_0560', parent=InitDeclList140353576740624)
PassUpNode140353576740432 = Node('DirectDeclarator_0432', parent=PassUpNode140353576740560)
Identifier140353576740368 = Node('Identifier_0368', parent=PassUpNode140353576740432)
leaf = Node('d_0368', parent=Identifier140353576740368)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140353576740368)
Declaration140353576742224 = Node('Declaration_2224', parent=DeclList140353576742160)
DeclarationSpecifiers140353576740816 = Node('DeclarationSpecifiers_0816', parent=Declaration140353576742224)
leaf = Node('int_0816', parent=DeclarationSpecifiers140353576740816)
InitDeclList140353576741072 = Node('InitDeclList_1072', parent=Declaration140353576742224)
PassUpNode140353576740880 = Node('Declarator_0880', parent=InitDeclList140353576741072)
ArrayDeclaration140353576742096 = Node('ArrayDeclaration_2096', parent=PassUpNode140353576740880)
PassUpNode140353576740752 = Node('DirectDeclarator_0752', parent=ArrayDeclaration140353576742096)
Identifier140353576740688 = Node('Identifier_0688', parent=PassUpNode140353576740752)
leaf = Node('arr_0688', parent=Identifier140353576740688)
leaf = Node("Array Size=['8'], Subtype='Array', Type='int', TokenLocation=(8, 70, 9)", parent=Identifier140353576740688)
PassUpNode140353576742032 = Node('ConstantExpression_2032', parent=ArrayDeclaration140353576742096)
PassUpNode140353576741968 = Node('ConditionalExpression_1968', parent=PassUpNode140353576742032)
PassUpNode140353576741904 = Node('LogicalOrExpression_1904', parent=PassUpNode140353576741968)
PassUpNode140353576741840 = Node('LogicalAndExpression_1840', parent=PassUpNode140353576741904)
PassUpNode140353576741776 = Node('InclusiveOrExpression_1776', parent=PassUpNode140353576741840)
PassUpNode140353576741712 = Node('ExclusiveOrExpression_1712', parent=PassUpNode140353576741776)
PassUpNode140353576741648 = Node('AndExpression_1648', parent=PassUpNode140353576741712)
PassUpNode140353576741584 = Node('EqalityExpression_1584', parent=PassUpNode140353576741648)
PassUpNode140353576741520 = Node('ShiftExpression_1520', parent=PassUpNode140353576741584)
PassUpNode140353576741456 = Node('ShiftExpression_1456', parent=PassUpNode140353576741520)
PassUpNode140353576741392 = Node('AdditiveExpression_1392', parent=PassUpNode140353576741456)
PassUpNode140353576741328 = Node('MultiplicativeExpression_1328', parent=PassUpNode140353576741392)
PassUpNode140353576741264 = Node('CastExpression_1264', parent=PassUpNode140353576741328)
PassUpNode140353576741200 = Node('UnaryExpression_1200', parent=PassUpNode140353576741264)
PassUpNode140353576741136 = Node('PostfixExpression_1136', parent=PassUpNode140353576741200)
PrimaryExpression140353576741008 = Node('PrimaryExpression_1008', parent=PassUpNode140353576741136)
Constant140353576740944 = Node('Constant_0944', parent=PrimaryExpression140353576741008)
leaf = Node('8_0944', parent=Constant140353576740944)
PassUpNode140353576863184 = Node('StatementList_3184', parent=CompoundStatement140353576739536)
PassUpNode140353576829648 = Node('StatementList_9648', parent=PassUpNode140353576863184)
PassUpNode140353576742416 = Node('StatementList_2416', parent=PassUpNode140353576829648)
PassUpNode140353576742352 = Node('Statement_2352', parent=PassUpNode140353576742416)
SelectionStatement140353576829584 = Node('SelectionStatement_9584', parent=PassUpNode140353576742352)
PassUpNode140353576805648 = Node('Expression_5648', parent=SelectionStatement140353576829584)
PassUpNode140353576805584 = Node('AssignmentExpression_5584', parent=PassUpNode140353576805648)
PassUpNode140353576805520 = Node('ConditionalExpression_5520', parent=PassUpNode140353576805584)
PassUpNode140353576805456 = Node('LogicalOrExpression_5456', parent=PassUpNode140353576805520)
PassUpNode140353576805392 = Node('LogicalAndExpression_5392', parent=PassUpNode140353576805456)
PassUpNode140353576805328 = Node('InclusiveOrExpression_5328', parent=PassUpNode140353576805392)
PassUpNode140353576805264 = Node('ExclusiveOrExpression_5264', parent=PassUpNode140353576805328)
PassUpNode140353576805200 = Node('AndExpression_5200', parent=PassUpNode140353576805264)
PassUpNode140353576742544 = Node('EqalityExpression_2544', parent=PassUpNode140353576805200)
BinOp140353576805136 = Node('BinOp_5136', parent=PassUpNode140353576742544)
PassUpNode140353576804496 = Node('ShiftExpression_4496', parent=BinOp140353576805136)
PassUpNode140353576804432 = Node('ShiftExpression_4432', parent=PassUpNode140353576804496)
PassUpNode140353576742864 = Node('AdditiveExpression_2864', parent=PassUpNode140353576804432)
PassUpNode140353576742800 = Node('MultiplicativeExpression_2800', parent=PassUpNode140353576742864)
PassUpNode140353576742736 = Node('CastExpression_2736', parent=PassUpNode140353576742800)
PassUpNode140353576742672 = Node('UnaryExpression_2672', parent=PassUpNode140353576742736)
PassUpNode140353576742608 = Node('PostfixExpression_2608', parent=PassUpNode140353576742672)
PrimaryExpression140353576742480 = Node('PrimaryExpression_2480', parent=PassUpNode140353576742608)
Identifier140353576742288 = Node('Identifier_2288', parent=PrimaryExpression140353576742480)
leaf = Node('a_2288', parent=Identifier140353576742288)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140353576742288)
leaf = Node('<_5136', parent=BinOp140353576805136)
PassUpNode140353576805072 = Node('ShiftExpression_5072', parent=BinOp140353576805136)
PassUpNode140353576805008 = Node('AdditiveExpression_5008', parent=PassUpNode140353576805072)
PassUpNode140353576804944 = Node('MultiplicativeExpression_4944', parent=PassUpNode140353576805008)
PassUpNode140353576804880 = Node('CastExpression_4880', parent=PassUpNode140353576804944)
PassUpNode140353576804816 = Node('UnaryExpression_4816', parent=PassUpNode140353576804880)
PassUpNode140353576804752 = Node('PostfixExpression_4752', parent=PassUpNode140353576804816)
PrimaryExpression140353576804624 = Node('PrimaryExpression_4624', parent=PassUpNode140353576804752)
Identifier140353576804560 = Node('Identifier_4560', parent=PrimaryExpression140353576804624)
leaf = Node('d_4560', parent=Identifier140353576804560)
leaf = Node("Type='char', TokenLocation=(6, 46, 13)", parent=Identifier140353576804560)
PassUpNode140353576805776 = Node('Statement_5776', parent=SelectionStatement140353576829584)
CompoundStatement140353576805712 = Node('CompoundStatement_5712', parent=PassUpNode140353576805776)
DeclList140353576806032 = Node('DeclList_6032', parent=CompoundStatement140353576805712)
Declaration140353576806224 = Node('Declaration_6224', parent=DeclList140353576806032)
DeclarationSpecifiers140353576805904 = Node('DeclarationSpecifiers_5904', parent=Declaration140353576806224)
leaf = Node('int_5904', parent=DeclarationSpecifiers140353576805904)
InitDeclList140353576806160 = Node('InitDeclList_6160', parent=Declaration140353576806224)
PassUpNode140353576806096 = Node('Declarator_6096', parent=InitDeclList140353576806160)
PassUpNode140353576805968 = Node('DirectDeclarator_5968', parent=PassUpNode140353576806096)
Identifier140353576805840 = Node('Identifier_5840', parent=PassUpNode140353576805968)
leaf = Node('a4_5840', parent=Identifier140353576805840)
leaf = Node("Type='int', TokenLocation=(12, 117, 11)", parent=Identifier140353576805840)
PassUpNode140353576806416 = Node('Statement_6416', parent=SelectionStatement140353576829584)
CompoundStatement140353576806352 = Node('CompoundStatement_6352', parent=PassUpNode140353576806416)
DeclList140353576806672 = Node('DeclList_6672', parent=CompoundStatement140353576806352)
Declaration140353576806864 = Node('Declaration_6864', parent=DeclList140353576806672)
DeclarationSpecifiers140353576806544 = Node('DeclarationSpecifiers_6544', parent=Declaration140353576806864)
leaf = Node('int_6544', parent=DeclarationSpecifiers140353576806544)
InitDeclList140353576806800 = Node('InitDeclList_6800', parent=Declaration140353576806864)
PassUpNode140353576806736 = Node('Declarator_6736', parent=InitDeclList140353576806800)
PassUpNode140353576806608 = Node('DirectDeclarator_6608', parent=PassUpNode140353576806736)
Identifier140353576806480 = Node('Identifier_6480', parent=PassUpNode140353576806608)
leaf = Node('b6_6480', parent=Identifier140353576806480)
leaf = Node("Type='int', TokenLocation=(16, 146, 11)", parent=Identifier140353576806480)
PassUpNode140353576829456 = Node('StatementList_9456', parent=CompoundStatement140353576806352)
PassUpNode140353576807824 = Node('Statement_7824', parent=PassUpNode140353576829456)
PassUpNode140353576829392 = Node('Expression_9392', parent=PassUpNode140353576807824)
AssignmentExpression140353576829328 = Node('AssignmentExpression_9328', parent=PassUpNode140353576829392)
PassUpNode140353576807184 = Node('UnaryExpression_7184', parent=AssignmentExpression140353576829328)
PassUpNode140353576807120 = Node('PostfixExpression_7120', parent=PassUpNode140353576807184)
PrimaryExpression140353576806992 = Node('PrimaryExpression_6992', parent=PassUpNode140353576807120)
Identifier140353576806928 = Node('Identifier_6928', parent=PrimaryExpression140353576806992)
leaf = Node('b6_6928', parent=Identifier140353576806928)
leaf = Node("Type='int', TokenLocation=(16, 146, 11)", parent=Identifier140353576806928)
PassUpNode140353576829264 = Node('AssignmentExpression_9264', parent=AssignmentExpression140353576829328)
PassUpNode140353576829200 = Node('ConditionalExpression_9200', parent=PassUpNode140353576829264)
PassUpNode140353576829136 = Node('LogicalOrExpression_9136', parent=PassUpNode140353576829200)
PassUpNode140353576829072 = Node('LogicalAndExpression_9072', parent=PassUpNode140353576829136)
PassUpNode140353576829008 = Node('InclusiveOrExpression_9008', parent=PassUpNode140353576829072)
PassUpNode140353576808400 = Node('ExclusiveOrExpression_8400', parent=PassUpNode140353576829008)
PassUpNode140353576808336 = Node('AndExpression_8336', parent=PassUpNode140353576808400)
PassUpNode140353576808272 = Node('EqalityExpression_8272', parent=PassUpNode140353576808336)
PassUpNode140353576808208 = Node('ShiftExpression_8208', parent=PassUpNode140353576808272)
PassUpNode140353576807376 = Node('ShiftExpression_7376', parent=PassUpNode140353576808208)
BinOp140353576808144 = Node('BinOp_8144', parent=PassUpNode140353576807376)
PassUpNode140353576807632 = Node('AdditiveExpression_7632', parent=BinOp140353576808144)
PassUpNode140353576807568 = Node('MultiplicativeExpression_7568', parent=PassUpNode140353576807632)
PassUpNode140353576807504 = Node('CastExpression_7504', parent=PassUpNode140353576807568)
PassUpNode140353576807440 = Node('UnaryExpression_7440', parent=PassUpNode140353576807504)
PassUpNode140353576807248 = Node('PostfixExpression_7248', parent=PassUpNode140353576807440)
PrimaryExpression140353576807312 = Node('PrimaryExpression_7312', parent=PassUpNode140353576807248)
Constant140353576807056 = Node('Constant_7056', parent=PrimaryExpression140353576807312)
leaf = Node('4_7056', parent=Constant140353576807056)
leaf = Node('+_8144', parent=BinOp140353576808144)
PassUpNode140353576808080 = Node('MultiplicativeExpression_8080', parent=BinOp140353576808144)
PassUpNode140353576808016 = Node('CastExpression_8016', parent=PassUpNode140353576808080)
PassUpNode140353576807952 = Node('UnaryExpression_7952', parent=PassUpNode140353576808016)
PassUpNode140353576807888 = Node('PostfixExpression_7888', parent=PassUpNode140353576807952)
PrimaryExpression140353576807760 = Node('PrimaryExpression_7760', parent=PassUpNode140353576807888)
Constant140353576807696 = Node('Constant_7696', parent=PrimaryExpression140353576807760)
leaf = Node('2_7696', parent=Constant140353576807696)
PassUpNode140353576806288 = Node('Statement_6288', parent=PassUpNode140353576829648)
IterationStatement140353576831888 = Node('IterationStatement_1888', parent=PassUpNode140353576806288)
PassUpNode140353576831056 = Node('Expression_1056', parent=IterationStatement140353576831888)
AssignmentExpression140353576830992 = Node('AssignmentExpression_0992', parent=PassUpNode140353576831056)
PassUpNode140353576829840 = Node('UnaryExpression_9840', parent=AssignmentExpression140353576830992)
PassUpNode140353576829776 = Node('PostfixExpression_9776', parent=PassUpNode140353576829840)
PrimaryExpression140353576829520 = Node('PrimaryExpression_9520', parent=PassUpNode140353576829776)
Identifier140353576804688 = Node('Identifier_4688', parent=PrimaryExpression140353576829520)
leaf = Node('a_4688', parent=Identifier140353576804688)
leaf = Node("Type='char', TokenLocation=(6, 43, 10)", parent=Identifier140353576804688)
PassUpNode140353576830928 = Node('AssignmentExpression_0928', parent=AssignmentExpression140353576830992)
PassUpNode140353576830864 = Node('ConditionalExpression_0864', parent=PassUpNode140353576830928)
PassUpNode140353576830800 = Node('LogicalOrExpression_0800', parent=PassUpNode140353576830864)
PassUpNode140353576830736 = Node('LogicalAndExpression_0736', parent=PassUpNode140353576830800)
PassUpNode140353576830672 = Node('InclusiveOrExpression_0672', parent=PassUpNode140353576830736)
PassUpNode140353576830608 = Node('ExclusiveOrExpression_0608', parent=PassUpNode140353576830672)
PassUpNode140353576830544 = Node('AndExpression_0544', parent=PassUpNode140353576830608)
PassUpNode140353576830480 = Node('EqalityExpression_0480', parent=PassUpNode140353576830544)
PassUpNode140353576830416 = Node('ShiftExpression_0416', parent=PassUpNode140353576830480)
PassUpNode140353576830352 = Node('ShiftExpression_0352', parent=PassUpNode140353576830416)
PassUpNode140353576830288 = Node('AdditiveExpression_0288', parent=PassUpNode140353576830352)
PassUpNode140353576830224 = Node('MultiplicativeExpression_0224', parent=PassUpNode140353576830288)
PassUpNode140353576830160 = Node('CastExpression_0160', parent=PassUpNode140353576830224)
PassUpNode140353576830096 = Node('UnaryExpression_0096', parent=PassUpNode140353576830160)
PassUpNode140353576829904 = Node('PostfixExpression_9904', parent=PassUpNode140353576830096)
PrimaryExpression140353576829968 = Node('PrimaryExpression_9968', parent=PassUpNode140353576829904)
Constant140353576829712 = Node('Constant_9712', parent=PrimaryExpression140353576829968)
leaf = Node('4_9712', parent=Constant140353576829712)
PassUpNode140353576831376 = Node('Statement_1376', parent=IterationStatement140353576831888)
CompoundStatement140353576831120 = Node('CompoundStatement_1120', parent=PassUpNode140353576831376)
DeclList140353576831568 = Node('DeclList_1568', parent=CompoundStatement140353576831120)
Declaration140353576831760 = Node('Declaration_1760', parent=DeclList140353576831568)
DeclarationSpecifiers140353576831440 = Node('DeclarationSpecifiers_1440', parent=Declaration140353576831760)
leaf = Node('int_1440', parent=DeclarationSpecifiers140353576831440)
InitDeclList140353576831696 = Node('InitDeclList_1696', parent=Declaration140353576831760)
PassUpNode140353576831632 = Node('Declarator_1632', parent=InitDeclList140353576831696)
PassUpNode140353576831504 = Node('DirectDeclarator_1504', parent=PassUpNode140353576831632)
Identifier140353576831312 = Node('Identifier_1312', parent=PassUpNode140353576831504)
leaf = Node('q_1312', parent=Identifier140353576831312)
leaf = Node("Type='int', TokenLocation=(23, 212, 11)", parent=Identifier140353576831312)
PassUpNode140353576862096 = Node('Statement_2096', parent=PassUpNode140353576863184)
PassUpNode140353576863120 = Node('Expression_3120', parent=PassUpNode140353576862096)
AssignmentExpression140353576863056 = Node('AssignmentExpression_3056', parent=PassUpNode140353576863120)
PassUpNode140353576831184 = Node('UnaryExpression_1184', parent=AssignmentExpression140353576863056)
ArrayAccess140353576861904 = Node('ArrayAccess_1904', parent=PassUpNode140353576831184)
PassUpNode140353576831248 = Node('PostfixExpression_1248', parent=ArrayAccess140353576861904)
PrimaryExpression140353576831952 = Node('PrimaryExpression_1952', parent=PassUpNode140353576831248)
Identifier140353576830032 = Node('Identifier_0032', parent=PrimaryExpression140353576831952)
leaf = Node('arr_0032', parent=Identifier140353576830032)
leaf = Node("Array Size=['8'], Subtype='Array', Type='int', TokenLocation=(8, 70, 9)", parent=Identifier140353576830032)
PassUpNode140353576861840 = Node('Expression_1840', parent=ArrayAccess140353576861904)
PassUpNode140353576861776 = Node('AssignmentExpression_1776', parent=PassUpNode140353576861840)
PassUpNode140353576832976 = Node('ConditionalExpression_2976', parent=PassUpNode140353576861776)
PassUpNode140353576832912 = Node('LogicalOrExpression_2912', parent=PassUpNode140353576832976)
PassUpNode140353576832848 = Node('LogicalAndExpression_2848', parent=PassUpNode140353576832912)
PassUpNode140353576832784 = Node('InclusiveOrExpression_2784', parent=PassUpNode140353576832848)
PassUpNode140353576832720 = Node('ExclusiveOrExpression_2720', parent=PassUpNode140353576832784)
PassUpNode140353576832656 = Node('AndExpression_2656', parent=PassUpNode140353576832720)
PassUpNode140353576832592 = Node('EqalityExpression_2592', parent=PassUpNode140353576832656)
PassUpNode140353576832528 = Node('ShiftExpression_2528', parent=PassUpNode140353576832592)
PassUpNode140353576832464 = Node('ShiftExpression_2464', parent=PassUpNode140353576832528)
PassUpNode140353576832400 = Node('AdditiveExpression_2400', parent=PassUpNode140353576832464)
PassUpNode140353576832336 = Node('MultiplicativeExpression_2336', parent=PassUpNode140353576832400)
PassUpNode140353576832272 = Node('CastExpression_2272', parent=PassUpNode140353576832336)
PassUpNode140353576832208 = Node('UnaryExpression_2208', parent=PassUpNode140353576832272)
PassUpNode140353576832144 = Node('PostfixExpression_2144', parent=PassUpNode140353576832208)
PrimaryExpression140353576832016 = Node('PrimaryExpression_2016', parent=PassUpNode140353576832144)
Constant140353576831824 = Node('Constant_1824', parent=PrimaryExpression140353576832016)
leaf = Node('3_1824', parent=Constant140353576831824)
PassUpNode140353576862992 = Node('AssignmentExpression_2992', parent=AssignmentExpression140353576863056)
PassUpNode140353576862928 = Node('ConditionalExpression_2928', parent=PassUpNode140353576862992)
PassUpNode140353576862864 = Node('LogicalOrExpression_2864', parent=PassUpNode140353576862928)
PassUpNode140353576862800 = Node('LogicalAndExpression_2800', parent=PassUpNode140353576862864)
PassUpNode140353576862736 = Node('InclusiveOrExpression_2736', parent=PassUpNode140353576862800)
PassUpNode140353576862672 = Node('ExclusiveOrExpression_2672', parent=PassUpNode140353576862736)
PassUpNode140353576862608 = Node('AndExpression_2608', parent=PassUpNode140353576862672)
PassUpNode140353576862544 = Node('EqalityExpression_2544', parent=PassUpNode140353576862608)
PassUpNode140353576862480 = Node('ShiftExpression_2480', parent=PassUpNode140353576862544)
PassUpNode140353576862416 = Node('ShiftExpression_2416', parent=PassUpNode140353576862480)
PassUpNode140353576862352 = Node('AdditiveExpression_2352', parent=PassUpNode140353576862416)
PassUpNode140353576862288 = Node('MultiplicativeExpression_2288', parent=PassUpNode140353576862352)
PassUpNode140353576862224 = Node('CastExpression_2224', parent=PassUpNode140353576862288)
PassUpNode140353576862160 = Node('UnaryExpression_2160', parent=PassUpNode140353576862224)
PassUpNode140353576861968 = Node('PostfixExpression_1968', parent=PassUpNode140353576862160)
PrimaryExpression140353576862032 = Node('PrimaryExpression_2032', parent=PassUpNode140353576861968)
Constant140353576832080 = Node('Constant_2080', parent=PrimaryExpression140353576862032)
leaf = Node('5_2080', parent=Constant140353576832080)

for pre, fill, node in RenderTree(PassUpNode140353576863248):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140353576863248, nodeattrfunc=f).to_picture("AST.png")
        