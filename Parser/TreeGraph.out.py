from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode55614224 = Node('TranslationUnit_4224')
PassUpNode55557744 = Node('TranslationUnit_7744', parent=PassUpNode55614224)
PassUpNode55556912 = Node('TranslationUnit_6912', parent=PassUpNode55557744)
PassUpNode55556240 = Node('TranslationUnit_6240', parent=PassUpNode55556912)
PassUpNode55556080 = Node('TranslationUnit_6080', parent=PassUpNode55556240)
PassUpNode55555408 = Node('TranslationUnit_5408', parent=PassUpNode55556080)
Declaration55555824 = Node('Declaration_5824', parent=PassUpNode55555408)
DeclarationSpecifiers55555504 = Node('DeclarationSpecifiers_5504', parent=Declaration55555824)
leaf = Node('int_5504', parent=DeclarationSpecifiers55555504)
InitDeclList55555600 = Node('InitDeclList_5600', parent=Declaration55555824)
Identifier55555696 = Node('Identifier_5696', parent=InitDeclList55555600)
leaf = Node('var0_5696', parent=Identifier55555696)
leaf = Node("TokenLocation=(1, 4, 5), Type=['int']", parent=Identifier55555696)
Declaration55555664 = Node('Declaration_5664', parent=PassUpNode55555408)
DeclarationSpecifiers55555920 = Node('DeclarationSpecifiers_5920', parent=Declaration55555664)
leaf = Node('char_5920', parent=DeclarationSpecifiers55555920)
InitDeclList55555856 = Node('InitDeclList_5856', parent=Declaration55555664)
Identifier55556048 = Node('Identifier_6048', parent=InitDeclList55555856)
leaf = Node('var1_6048', parent=Identifier55556048)
leaf = Node("TokenLocation=(2, 15, 6), Type=['char']", parent=Identifier55556048)
Declaration55555760 = Node('Declaration_5760', parent=PassUpNode55556080)
DeclarationSpecifiers55556176 = Node('DeclarationSpecifiers_6176', parent=Declaration55555760)
leaf = Node('int_6176', parent=DeclarationSpecifiers55556176)
InitDeclList55556816 = Node('InitDeclList_6816', parent=Declaration55555760)
FunctionPrototype55556720 = Node('FunctionPrototype_6720', parent=InitDeclList55556816)
Identifier55556272 = Node('Identifier_6272', parent=FunctionPrototype55556720)
leaf = Node('fun1_6272', parent=Identifier55556272)
leaf = Node("TokenLocation=(6, 53, 5), Arguments=[{'Type': ['int']}, {'Type': ['char']}], Subtype='Function Prototype', Label='fun1', Return Type=['int']", parent=Identifier55556272)
PassUpNode55556496 = Node('ParameterList_6496', parent=FunctionPrototype55556720)
PassUpNode55556144 = Node('ParameterDeclaration_6144', parent=PassUpNode55556496)
DeclarationSpecifiers55556304 = Node('DeclarationSpecifiers_6304', parent=PassUpNode55556144)
leaf = Node('int_6304', parent=DeclarationSpecifiers55556304)
PassUpNode55556016 = Node('DirectAbstractDeclarator_6016', parent=PassUpNode55556144)
PrimaryExpression55556432 = Node('PrimaryExpression_6432', parent=PassUpNode55556016)
Constant55555952 = Node('Constant_5952', parent=PrimaryExpression55556432)
leaf = Node('30_5952', parent=Constant55555952)
PrimaryExpression55556560 = Node('PrimaryExpression_6560', parent=PassUpNode55556016)
Constant55556368 = Node('Constant_6368', parent=PrimaryExpression55556560)
leaf = Node('20_6368', parent=Constant55556368)
DeclarationSpecifiers55556688 = Node('DeclarationSpecifiers_6688', parent=PassUpNode55556496)
leaf = Node('char_6688', parent=DeclarationSpecifiers55556688)
Declaration55556208 = Node('Declaration_6208', parent=PassUpNode55556240)
DeclarationSpecifiers55556624 = Node('DeclarationSpecifiers_6624', parent=Declaration55556208)
leaf = Node('int_6624', parent=DeclarationSpecifiers55556624)
InitDeclList55557136 = Node('InitDeclList_7136', parent=Declaration55556208)
FunctionPrototype55556848 = Node('FunctionPrototype_6848', parent=InitDeclList55557136)
Identifier55556944 = Node('Identifier_6944', parent=FunctionPrototype55556848)
leaf = Node('fun2_6944', parent=Identifier55556944)
leaf = Node("TokenLocation=(7, 82, 5), Arguments=[{'Type': ['int']}], Subtype='Function Prototype', Label='fun2', Return Type=['int']", parent=Identifier55556944)
DeclarationSpecifiers55556976 = Node('DeclarationSpecifiers_6976', parent=FunctionPrototype55556848)
leaf = Node('int_6976', parent=DeclarationSpecifiers55556976)
FunctionDefintion55557488 = Node('FunctionDefintion_7488', parent=PassUpNode55556912)
DeclarationSpecifiers55557168 = Node('DeclarationSpecifiers_7168', parent=FunctionDefintion55557488)
leaf = Node('int_7168', parent=DeclarationSpecifiers55557168)
FunctionPrototype55557680 = Node('FunctionPrototype_7680', parent=FunctionDefintion55557488)
Identifier55557264 = Node('Identifier_7264', parent=FunctionPrototype55557680)
leaf = Node('main_7264', parent=Identifier55557264)
leaf = Node("TokenLocation=(9, 98, 5), Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}, {'Type': ['char']}], Subtype='Function Prototype', Label='main'", parent=Identifier55557264)
PassUpNode55557552 = Node('ParameterList_7552', parent=FunctionPrototype55557680)
Declaration55556656 = Node('Declaration_6656', parent=PassUpNode55557552)
DeclarationSpecifiers55555984 = Node('DeclarationSpecifiers_5984', parent=Declaration55556656)
leaf = Node('const_5984', parent=DeclarationSpecifiers55555984)
DeclarationSpecifiers55557360 = Node('DeclarationSpecifiers_7360', parent=DeclarationSpecifiers55555984)
leaf = Node('int_7360', parent=DeclarationSpecifiers55557360)
Identifier55557296 = Node('Identifier_7296', parent=Declaration55556656)
leaf = Node('arg1_7296', parent=Identifier55557296)
leaf = Node("TokenLocation=(9, 113, 20), Type=['int'], Type Qualifier=['const']", parent=Identifier55557296)
Declaration55557104 = Node('Declaration_7104', parent=PassUpNode55557552)
DeclarationSpecifiers55557424 = Node('DeclarationSpecifiers_7424', parent=Declaration55557104)
leaf = Node('char_7424', parent=DeclarationSpecifiers55557424)
Identifier55557648 = Node('Identifier_7648', parent=Declaration55557104)
leaf = Node('arg2_7648', parent=Identifier55557648)
leaf = Node("TokenLocation=(9, 124, 31), Type=['char']", parent=Identifier55557648)
CompoundStatement55612240 = Node('CompoundStatement_2240', parent=FunctionDefintion55557488)
DeclList55557968 = Node('DeclList_7968', parent=CompoundStatement55612240)
Declaration55558064 = Node('Declaration_8064', parent=DeclList55557968)
DeclarationSpecifiers55557040 = Node('DeclarationSpecifiers_7040', parent=Declaration55558064)
leaf = Node('int_7040', parent=DeclarationSpecifiers55557040)
InitDeclList55611728 = Node('InitDeclList_1728', parent=Declaration55558064)
ArrayDeclaration55611600 = Node('ArrayDeclaration_1600', parent=InitDeclList55611728)
ArrayDeclaration55611472 = Node('ArrayDeclaration_1472', parent=ArrayDeclaration55611600)
ArrayDeclaration55557808 = Node('ArrayDeclaration_7808', parent=ArrayDeclaration55611472)
Identifier55557904 = Node('Identifier_7904', parent=ArrayDeclaration55557808)
leaf = Node('arr1_7904', parent=Identifier55557904)
leaf = Node("TokenLocation=(10, 137, 7), Array Size=['10', '20', '30'], Subtype='Array', Type=['int']", parent=Identifier55557904)
PrimaryExpression55558000 = Node('PrimaryExpression_8000', parent=ArrayDeclaration55557808)
Constant55557936 = Node('Constant_7936', parent=PrimaryExpression55558000)
leaf = Node('10_7936', parent=Constant55557936)
PrimaryExpression55558096 = Node('PrimaryExpression_8096', parent=ArrayDeclaration55611472)
Constant55557776 = Node('Constant_7776', parent=PrimaryExpression55558096)
leaf = Node('20_7776', parent=Constant55557776)
PrimaryExpression55611632 = Node('PrimaryExpression_1632', parent=ArrayDeclaration55611600)
Constant55558128 = Node('Constant_8128', parent=PrimaryExpression55611632)
leaf = Node('30_8128', parent=Constant55558128)
FunctionCall55611920 = Node('FunctionCall_1920', parent=CompoundStatement55612240)
PrimaryExpression55611696 = Node('PrimaryExpression_1696', parent=FunctionCall55611920)
Identifier55611568 = Node('Identifier_1568', parent=PrimaryExpression55611696)
leaf = Node('fun1_1568', parent=Identifier55611568)
leaf = Node("TokenLocation=(6, 53, 5), Arguments=[{'Type': ['int']}, {'Type': ['char']}], Subtype='Function Prototype', Label='fun1', Return Type=['int']", parent=Identifier55611568)
PassUpNode55557712 = Node('ArgumentExpressionList_7712', parent=FunctionCall55611920)
PrimaryExpression55611792 = Node('PrimaryExpression_1792', parent=PassUpNode55557712)
Identifier55611824 = Node('Identifier_1824', parent=PrimaryExpression55611792)
leaf = Node('var0_1824', parent=Identifier55611824)
leaf = Node("TokenLocation=(1, 4, 5), Type=['int']", parent=Identifier55611824)
PrimaryExpression55611952 = Node('PrimaryExpression_1952', parent=PassUpNode55557712)
Identifier55611984 = Node('Identifier_1984', parent=PrimaryExpression55611952)
leaf = Node('var1_1984', parent=Identifier55611984)
leaf = Node("TokenLocation=(2, 15, 6), Type=['char']", parent=Identifier55611984)
FunctionDefintion55614064 = Node('FunctionDefintion_4064', parent=PassUpNode55557744)
DeclarationSpecifiers55611440 = Node('DeclarationSpecifiers_1440', parent=FunctionDefintion55614064)
leaf = Node('int_1440', parent=DeclarationSpecifiers55611440)
FunctionPrototype55613008 = Node('FunctionPrototype_3008', parent=FunctionDefintion55614064)
Identifier55556880 = Node('Identifier_6880', parent=FunctionPrototype55613008)
leaf = Node('fun1_6880', parent=Identifier55556880)
leaf = Node("TokenLocation=(6, 53, 5), Arguments=[{'Type': ['int']}, {'Type': ['char']}], Subtype='Function Prototype', Label='fun1', Return Type=['int']", parent=Identifier55556880)
PassUpNode55612496 = Node('ParameterList_2496', parent=FunctionPrototype55613008)
Declaration55612432 = Node('Declaration_2432', parent=PassUpNode55612496)
DeclarationSpecifiers55612112 = Node('DeclarationSpecifiers_2112', parent=Declaration55612432)
leaf = Node('int_2112', parent=DeclarationSpecifiers55612112)
ArrayDeclaration55612720 = Node('ArrayDeclaration_2720', parent=Declaration55612432)
ArrayDeclaration55612592 = Node('ArrayDeclaration_2592', parent=ArrayDeclaration55612720)
ArrayDeclaration55612272 = Node('ArrayDeclaration_2272', parent=ArrayDeclaration55612592)
Identifier55556784 = Node('Identifier_6784', parent=ArrayDeclaration55612272)
leaf = Node('arg3_6784', parent=Identifier55556784)
leaf = Node("TokenLocation=(15, 192, 14), Array Size=['30', '20', '10'], Subtype='Array', Type=['int']", parent=Identifier55556784)
PrimaryExpression55612080 = Node('PrimaryExpression_2080', parent=ArrayDeclaration55612272)
Constant55612464 = Node('Constant_2464', parent=PrimaryExpression55612080)
leaf = Node('30_2464', parent=Constant55612464)
PrimaryExpression55612624 = Node('PrimaryExpression_2624', parent=ArrayDeclaration55612592)
Constant55612368 = Node('Constant_2368', parent=PrimaryExpression55612624)
leaf = Node('20_2368', parent=Constant55612368)
PrimaryExpression55612752 = Node('PrimaryExpression_2752', parent=ArrayDeclaration55612720)
Constant55612528 = Node('Constant_2528', parent=PrimaryExpression55612752)
leaf = Node('10_2528', parent=Constant55612528)
Declaration55612304 = Node('Declaration_2304', parent=PassUpNode55612496)
DeclarationSpecifiers55612848 = Node('DeclarationSpecifiers_2848', parent=Declaration55612304)
leaf = Node('char_2848', parent=DeclarationSpecifiers55612848)
Identifier55612912 = Node('Identifier_2912', parent=Declaration55612304)
leaf = Node('arg4_2912', parent=Identifier55612912)
leaf = Node("TokenLocation=(15, 215, 37), Type=['char']", parent=Identifier55612912)
CompoundStatement55614416 = Node('CompoundStatement_4416', parent=FunctionDefintion55614064)
DeclList55613232 = Node('DeclList_3232', parent=CompoundStatement55614416)
Declaration55613200 = Node('Declaration_3200', parent=DeclList55613232)
DeclarationSpecifiers55612816 = Node('DeclarationSpecifiers_2816', parent=Declaration55613200)
leaf = Node('int_2816', parent=DeclarationSpecifiers55612816)
InitDeclList55612944 = Node('InitDeclList_2944', parent=Declaration55613200)
Identifier55613168 = Node('Identifier_3168', parent=InitDeclList55612944)
leaf = Node('var2_3168', parent=Identifier55613168)
leaf = Node("TokenLocation=(16, 230, 9), Type=['int']", parent=Identifier55613168)
PassUpNode55614096 = Node('StatementList_4096', parent=CompoundStatement55614416)
AssignmentExpression55613584 = Node('AssignmentExpression_3584', parent=PassUpNode55614096)
PrimaryExpression55613360 = Node('PrimaryExpression_3360', parent=AssignmentExpression55613584)
Identifier55613136 = Node('Identifier_3136', parent=PrimaryExpression55613360)
leaf = Node('var2_3136', parent=Identifier55613136)
leaf = Node("TokenLocation=(16, 230, 9), Type=['int']", parent=Identifier55613136)
BinOp55613712 = Node('BinOp_3712', parent=AssignmentExpression55613584)
CastNode55613776 = Node('CastNode_3776', parent=BinOp55613712)
leaf = Node('int _3776', parent=CastNode55613776)
leaf = Node('char _3776', parent=CastNode55613776)
PrimaryExpression55613392 = Node('PrimaryExpression_3392', parent=CastNode55613776)
Identifier55613264 = Node('Identifier_3264', parent=PrimaryExpression55613392)
leaf = Node('arg4_3264', parent=Identifier55613264)
leaf = Node("TokenLocation=(15, 215, 37), Type=['char']", parent=Identifier55613264)
leaf = Node('+_3712', parent=BinOp55613712)
PrimaryExpression55613552 = Node('PrimaryExpression_3552', parent=BinOp55613712)
Constant55613520 = Node('Constant_3520', parent=PrimaryExpression55613552)
leaf = Node('33_3520', parent=Constant55613520)
leaf = Node('int _3712', parent=BinOp55613712)
FunctionCall55614032 = Node('FunctionCall_4032', parent=PassUpNode55614096)
PrimaryExpression55613744 = Node('PrimaryExpression_3744', parent=FunctionCall55614032)
Identifier55613680 = Node('Identifier_3680', parent=PrimaryExpression55613744)
leaf = Node('fun2_3680', parent=Identifier55613680)
leaf = Node("TokenLocation=(7, 82, 5), Arguments=[{'Type': ['int']}], Subtype='Function Prototype', Label='fun2', Return Type=['int']", parent=Identifier55613680)
PrimaryExpression55613872 = Node('PrimaryExpression_3872', parent=FunctionCall55614032)
Identifier55613936 = Node('Identifier_3936', parent=PrimaryExpression55613872)
leaf = Node('arg3_3936', parent=Identifier55613936)
leaf = Node("TokenLocation=(15, 192, 14), Array Size=['30', '20', '10'], Subtype='Array', Type=['int']", parent=Identifier55613936)
FunctionDefintion55613968 = Node('FunctionDefintion_3968', parent=PassUpNode55614224)
DeclarationSpecifiers55613328 = Node('DeclarationSpecifiers_3328', parent=FunctionDefintion55613968)
leaf = Node('int_3328', parent=DeclarationSpecifiers55613328)
FunctionPrototype55614256 = Node('FunctionPrototype_4256', parent=FunctionDefintion55613968)
Identifier55557200 = Node('Identifier_7200', parent=FunctionPrototype55614256)
leaf = Node('fun2_7200', parent=Identifier55557200)
leaf = Node("TokenLocation=(7, 82, 5), Arguments=[{'Type': ['int']}], Subtype='Function Prototype', Label='fun2', Return Type=['int']", parent=Identifier55557200)
Declaration55614192 = Node('Declaration_4192', parent=FunctionPrototype55614256)
DeclarationSpecifiers55614000 = Node('DeclarationSpecifiers_4000', parent=Declaration55614192)
leaf = Node('int_4000', parent=DeclarationSpecifiers55614000)
Identifier55614288 = Node('Identifier_4288', parent=Declaration55614192)
leaf = Node('arg5_4288', parent=Identifier55614288)
leaf = Node("TokenLocation=(25, 294, 14), Type=['int']", parent=Identifier55614288)
CompoundStatement55614512 = Node('CompoundStatement_4512', parent=FunctionDefintion55613968)
FunctionCall55614672 = Node('FunctionCall_4672', parent=CompoundStatement55614512)
PrimaryExpression55613904 = Node('PrimaryExpression_3904', parent=FunctionCall55614672)
Identifier55614480 = Node('Identifier_4480', parent=PrimaryExpression55613904)
leaf = Node('fun2_4480', parent=Identifier55614480)
leaf = Node("TokenLocation=(7, 82, 5), Arguments=[{'Type': ['int']}], Subtype='Function Prototype', Label='fun2', Return Type=['int']", parent=Identifier55614480)
PrimaryExpression55614544 = Node('PrimaryExpression_4544', parent=FunctionCall55614672)
Identifier55614320 = Node('Identifier_4320', parent=PrimaryExpression55614544)
leaf = Node('arg5_4320', parent=Identifier55614320)
leaf = Node("TokenLocation=(25, 294, 14), Type=['int']", parent=Identifier55614320)

for pre, fill, node in RenderTree(PassUpNode55614224):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode55614224, nodeattrfunc=f).to_picture("AST.png")
        