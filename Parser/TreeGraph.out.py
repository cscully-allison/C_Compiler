from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140296339923472 = Node('TranslationUnit_3472')
PassUpNode140296340375824 = Node('TranslationUnit_5824', parent=PassUpNode140296339923472)
PassUpNode140296340293456 = Node('TranslationUnit_3456', parent=PassUpNode140296340375824)
PassUpNode140296340293328 = Node('ExternalDeclaration_3328', parent=PassUpNode140296340293456)
Declaration140296340293392 = Node('Declaration_3392', parent=PassUpNode140296340293328)
DeclarationSpecifiers140296342965520 = Node('DeclarationSpecifiers_5520', parent=Declaration140296340293392)
leaf = Node('int_5520', parent=DeclarationSpecifiers140296342965520)
InitDeclList140296340293136 = Node('InitDeclList_3136', parent=Declaration140296340293392)
PassUpNode140296340518288 = Node('Declarator_8288', parent=InitDeclList140296340293136)
FunctionPrototype140296340293264 = Node('FunctionPrototype_3264', parent=PassUpNode140296340518288)
PassUpNode140296342965584 = Node('DirectDeclarator_5584', parent=FunctionPrototype140296340293264)
Identifier140296343042256 = Node('Identifier_2256', parent=PassUpNode140296342965584)
leaf = Node('funct_2256', parent=Identifier140296343042256)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct', Arguments=[{'Array Size Info': ['10', '50', '20'], 'Type Qualifier': ['const'], 'Type': ['int'], 'Subtype': 'Array Argument'}, {'Type': ['char']}, {'Array Size Info': ['30'], 'Type': ['int'], 'Subtype': 'Array Argument'}], TokenLocation=(2, 13, 5)", parent=Identifier140296343042256)
PassUpNode140296340291728 = Node('ParameterTypeList_1728', parent=FunctionPrototype140296340293264)
PassUpNode140296340293200 = Node('ParameterList_3200', parent=PassUpNode140296340291728)
PassUpNode140296340291792 = Node('ParameterList_1792', parent=PassUpNode140296340293200)
PassUpNode140296340238224 = Node('ParameterList_8224', parent=PassUpNode140296340291792)
PassUpNode140296340237200 = Node('ParameterDeclaration_7200', parent=PassUpNode140296340238224)
DeclarationSpecifiers140296340234512 = Node('DeclarationSpecifiers_4512', parent=PassUpNode140296340237200)
leaf = Node('const_4512', parent=DeclarationSpecifiers140296340234512)
DeclarationSpecifiers140296340234576 = Node('DeclarationSpecifiers_4576', parent=DeclarationSpecifiers140296340234512)
leaf = Node('int_4576', parent=DeclarationSpecifiers140296340234576)
PassUpNode140296340237008 = Node('AbstractDeclarator_7008', parent=PassUpNode140296340237200)
PassUpNode140296340238096 = Node('DirectAbstractDeclarator_8096', parent=PassUpNode140296340237008)
PassUpNode140296340236944 = Node('DirectAbstractDeclarator_6944', parent=PassUpNode140296340238096)
PassUpNode140296340235792 = Node('DirectAbstractDeclarator_5792', parent=PassUpNode140296340236944)
PassUpNode140296340235728 = Node('ConstantExpression_5728', parent=PassUpNode140296340235792)
PassUpNode140296340235664 = Node('ConditionalExpression_5664', parent=PassUpNode140296340235728)
PassUpNode140296340235600 = Node('LogicalOrExpression_5600', parent=PassUpNode140296340235664)
PassUpNode140296340235536 = Node('LogicalAndExpression_5536', parent=PassUpNode140296340235600)
PassUpNode140296340235472 = Node('InclusiveOrExpression_5472', parent=PassUpNode140296340235536)
PassUpNode140296340235408 = Node('ExclusiveOrExpression_5408', parent=PassUpNode140296340235472)
PassUpNode140296340235344 = Node('AndExpression_5344', parent=PassUpNode140296340235408)
PassUpNode140296340235280 = Node('EqalityExpression_5280', parent=PassUpNode140296340235344)
PassUpNode140296340235216 = Node('ShiftExpression_5216', parent=PassUpNode140296340235280)
PassUpNode140296340235152 = Node('ShiftExpression_5152', parent=PassUpNode140296340235216)
PassUpNode140296340235088 = Node('AdditiveExpression_5088', parent=PassUpNode140296340235152)
PassUpNode140296340235024 = Node('MultiplicativeExpression_5024', parent=PassUpNode140296340235088)
PassUpNode140296340234960 = Node('CastExpression_4960', parent=PassUpNode140296340235024)
PassUpNode140296340234896 = Node('UnaryExpression_4896', parent=PassUpNode140296340234960)
PassUpNode140296340234832 = Node('PostfixExpression_4832', parent=PassUpNode140296340234896)
PrimaryExpression140296340234704 = Node('PrimaryExpression_4704', parent=PassUpNode140296340234832)
Constant140296340234448 = Node('Constant_4448', parent=PrimaryExpression140296340234704)
leaf = Node('10_4448', parent=Constant140296340234448)
PassUpNode140296340236880 = Node('ConstantExpression_6880', parent=PassUpNode140296340236944)
PassUpNode140296340236816 = Node('ConditionalExpression_6816', parent=PassUpNode140296340236880)
PassUpNode140296340236752 = Node('LogicalOrExpression_6752', parent=PassUpNode140296340236816)
PassUpNode140296340236688 = Node('LogicalAndExpression_6688', parent=PassUpNode140296340236752)
PassUpNode140296340236624 = Node('InclusiveOrExpression_6624', parent=PassUpNode140296340236688)
PassUpNode140296340236560 = Node('ExclusiveOrExpression_6560', parent=PassUpNode140296340236624)
PassUpNode140296340236496 = Node('AndExpression_6496', parent=PassUpNode140296340236560)
PassUpNode140296340236432 = Node('EqalityExpression_6432', parent=PassUpNode140296340236496)
PassUpNode140296340236368 = Node('ShiftExpression_6368', parent=PassUpNode140296340236432)
PassUpNode140296340236304 = Node('ShiftExpression_6304', parent=PassUpNode140296340236368)
PassUpNode140296340236240 = Node('AdditiveExpression_6240', parent=PassUpNode140296340236304)
PassUpNode140296340236176 = Node('MultiplicativeExpression_6176', parent=PassUpNode140296340236240)
PassUpNode140296340236112 = Node('CastExpression_6112', parent=PassUpNode140296340236176)
PassUpNode140296340235920 = Node('UnaryExpression_5920', parent=PassUpNode140296340236112)
PassUpNode140296340234768 = Node('PostfixExpression_4768', parent=PassUpNode140296340235920)
PrimaryExpression140296340235984 = Node('PrimaryExpression_5984', parent=PassUpNode140296340234768)
Constant140296340234640 = Node('Constant_4640', parent=PrimaryExpression140296340235984)
leaf = Node('50_4640', parent=Constant140296340234640)
PassUpNode140296340238032 = Node('ConstantExpression_8032', parent=PassUpNode140296340238096)
PassUpNode140296340237968 = Node('ConditionalExpression_7968', parent=PassUpNode140296340238032)
PassUpNode140296340237904 = Node('LogicalOrExpression_7904', parent=PassUpNode140296340237968)
PassUpNode140296340237840 = Node('LogicalAndExpression_7840', parent=PassUpNode140296340237904)
PassUpNode140296340237776 = Node('InclusiveOrExpression_7776', parent=PassUpNode140296340237840)
PassUpNode140296340237712 = Node('ExclusiveOrExpression_7712', parent=PassUpNode140296340237776)
PassUpNode140296340237648 = Node('AndExpression_7648', parent=PassUpNode140296340237712)
PassUpNode140296340237584 = Node('EqalityExpression_7584', parent=PassUpNode140296340237648)
PassUpNode140296340237520 = Node('ShiftExpression_7520', parent=PassUpNode140296340237584)
PassUpNode140296340237456 = Node('ShiftExpression_7456', parent=PassUpNode140296340237520)
PassUpNode140296340237392 = Node('AdditiveExpression_7392', parent=PassUpNode140296340237456)
PassUpNode140296340237328 = Node('MultiplicativeExpression_7328', parent=PassUpNode140296340237392)
PassUpNode140296340237264 = Node('CastExpression_7264', parent=PassUpNode140296340237328)
PassUpNode140296340237072 = Node('UnaryExpression_7072', parent=PassUpNode140296340237264)
PassUpNode140296340236048 = Node('PostfixExpression_6048', parent=PassUpNode140296340237072)
PrimaryExpression140296340237136 = Node('PrimaryExpression_7136', parent=PassUpNode140296340236048)
Constant140296340235856 = Node('Constant_5856', parent=PrimaryExpression140296340237136)
leaf = Node('20_5856', parent=Constant140296340235856)
PassUpNode140296340291664 = Node('ParameterDeclaration_1664', parent=PassUpNode140296340291792)
DeclarationSpecifiers140296340238288 = Node('DeclarationSpecifiers_8288', parent=PassUpNode140296340291664)
leaf = Node('char_8288', parent=DeclarationSpecifiers140296340238288)
PassUpNode140296340292048 = Node('ParameterDeclaration_2048', parent=PassUpNode140296340293200)
DeclarationSpecifiers140296340238160 = Node('DeclarationSpecifiers_8160', parent=PassUpNode140296340292048)
leaf = Node('int_8160', parent=DeclarationSpecifiers140296340238160)
PassUpNode140296340291984 = Node('AbstractDeclarator_1984', parent=PassUpNode140296340292048)
PassUpNode140296340293072 = Node('DirectAbstractDeclarator_3072', parent=PassUpNode140296340291984)
PassUpNode140296340293008 = Node('ConstantExpression_3008', parent=PassUpNode140296340293072)
PassUpNode140296340292944 = Node('ConditionalExpression_2944', parent=PassUpNode140296340293008)
PassUpNode140296340292880 = Node('LogicalOrExpression_2880', parent=PassUpNode140296340292944)
PassUpNode140296340292816 = Node('LogicalAndExpression_2816', parent=PassUpNode140296340292880)
PassUpNode140296340292752 = Node('InclusiveOrExpression_2752', parent=PassUpNode140296340292816)
PassUpNode140296340292688 = Node('ExclusiveOrExpression_2688', parent=PassUpNode140296340292752)
PassUpNode140296340292624 = Node('AndExpression_2624', parent=PassUpNode140296340292688)
PassUpNode140296340292560 = Node('EqalityExpression_2560', parent=PassUpNode140296340292624)
PassUpNode140296340292496 = Node('ShiftExpression_2496', parent=PassUpNode140296340292560)
PassUpNode140296340292432 = Node('ShiftExpression_2432', parent=PassUpNode140296340292496)
PassUpNode140296340292368 = Node('AdditiveExpression_2368', parent=PassUpNode140296340292432)
PassUpNode140296340292304 = Node('MultiplicativeExpression_2304', parent=PassUpNode140296340292368)
PassUpNode140296340292240 = Node('CastExpression_2240', parent=PassUpNode140296340292304)
PassUpNode140296340292176 = Node('UnaryExpression_2176', parent=PassUpNode140296340292240)
PassUpNode140296340292112 = Node('PostfixExpression_2112', parent=PassUpNode140296340292176)
PrimaryExpression140296340291856 = Node('PrimaryExpression_1856', parent=PassUpNode140296340292112)
Constant140296340291920 = Node('Constant_1920', parent=PrimaryExpression140296340291856)
leaf = Node('30_1920', parent=Constant140296340291920)
PassUpNode140296340377168 = Node('ExternalDeclaration_7168', parent=PassUpNode140296340375824)
FunctionDefintion140296340294480 = Node('FunctionDefintion_4480', parent=PassUpNode140296340377168)
DeclarationSpecifiers140296340293520 = Node('DeclarationSpecifiers_3520', parent=FunctionDefintion140296340294480)
leaf = Node('const_3520', parent=DeclarationSpecifiers140296340293520)
DeclarationSpecifiers140296340293648 = Node('DeclarationSpecifiers_3648', parent=DeclarationSpecifiers140296340293520)
leaf = Node('int_3648', parent=DeclarationSpecifiers140296340293648)
PassUpNode140296340293776 = Node('Declarator_3776', parent=FunctionDefintion140296340294480)
FunctionPrototype140296340294416 = Node('FunctionPrototype_4416', parent=PassUpNode140296340293776)
PassUpNode140296340293712 = Node('DirectDeclarator_3712', parent=FunctionPrototype140296340294416)
Identifier140296340293584 = Node('Identifier_3584', parent=PassUpNode140296340293712)
leaf = Node('main_3584', parent=Identifier140296340293584)
leaf = Node("Subtype='Function Prototype', Label='main', Arguments=[{'Type Qualifier': ['const'], 'Type': ['int']}], TokenLocation=(5, 78, 11)", parent=Identifier140296340293584)
PassUpNode140296340294352 = Node('ParameterTypeList_4352', parent=FunctionPrototype140296340294416)
PassUpNode140296340294288 = Node('ParameterList_4288', parent=PassUpNode140296340294352)
Declaration140296340294224 = Node('Declaration_4224', parent=PassUpNode140296340294288)
DeclarationSpecifiers140296340293904 = Node('DeclarationSpecifiers_3904', parent=Declaration140296340294224)
leaf = Node('const_3904', parent=DeclarationSpecifiers140296340293904)
DeclarationSpecifiers140296340293968 = Node('DeclarationSpecifiers_3968', parent=DeclarationSpecifiers140296340293904)
leaf = Node('int_3968', parent=DeclarationSpecifiers140296340293968)
PassUpNode140296340294160 = Node('Declarator_4160', parent=Declaration140296340294224)
PassUpNode140296340294032 = Node('DirectDeclarator_4032', parent=PassUpNode140296340294160)
Identifier140296340293840 = Node('Identifier_3840', parent=PassUpNode140296340294032)
leaf = Node('g_3840', parent=Identifier140296340293840)
leaf = Node("Type Qualifier=['const'], Type=['int'], TokenLocation=(5, 93, 26)", parent=Identifier140296340293840)
CompoundStatement140296340294096 = Node('CompoundStatement_4096', parent=FunctionDefintion140296340294480)
DeclList140296340350288 = Node('DeclList_0288', parent=CompoundStatement140296340294096)
DeclList140296340295248 = Node('DeclList_5248', parent=DeclList140296340350288)
DeclList140296340294800 = Node('DeclList_4800', parent=DeclList140296340295248)
Declaration140296340294992 = Node('Declaration_4992', parent=DeclList140296340294800)
DeclarationSpecifiers140296340294608 = Node('DeclarationSpecifiers_4608', parent=Declaration140296340294992)
leaf = Node('static_4608', parent=DeclarationSpecifiers140296340294608)
DeclarationSpecifiers140296340294672 = Node('DeclarationSpecifiers_4672', parent=DeclarationSpecifiers140296340294608)
leaf = Node('int_4672', parent=DeclarationSpecifiers140296340294672)
InitDeclList140296340294928 = Node('InitDeclList_4928', parent=Declaration140296340294992)
PassUpNode140296340294864 = Node('Declarator_4864', parent=InitDeclList140296340294928)
PassUpNode140296340294736 = Node('DirectDeclarator_4736', parent=PassUpNode140296340294864)
Identifier140296340294544 = Node('Identifier_4544', parent=PassUpNode140296340294736)
leaf = Node('l_4544', parent=Identifier140296340294544)
leaf = Node("Storage Class Specifier='static', Type=['int'], TokenLocation=(6, 112, 16)", parent=Identifier140296340294544)
Declaration140296340295440 = Node('Declaration_5440', parent=DeclList140296340295248)
DeclarationSpecifiers140296340295120 = Node('DeclarationSpecifiers_5120', parent=Declaration140296340295440)
leaf = Node('char_5120', parent=DeclarationSpecifiers140296340295120)
InitDeclList140296340295376 = Node('InitDeclList_5376', parent=Declaration140296340295440)
PassUpNode140296340295312 = Node('Declarator_5312', parent=InitDeclList140296340295376)
PassUpNode140296340295184 = Node('DirectDeclarator_5184', parent=PassUpNode140296340295312)
Identifier140296340295056 = Node('Identifier_5056', parent=PassUpNode140296340295184)
leaf = Node('b_5056', parent=Identifier140296340295056)
leaf = Node("Type=['char'], TokenLocation=(7, 124, 10)", parent=Identifier140296340295056)
Declaration140296340350352 = Node('Declaration_0352', parent=DeclList140296340350288)
DeclarationSpecifiers140296340295568 = Node('DeclarationSpecifiers_5568', parent=Declaration140296340350352)
leaf = Node('int_5568', parent=DeclarationSpecifiers140296340295568)
InitDeclList140296340349200 = Node('InitDeclList_9200', parent=Declaration140296340350352)
PassUpNode140296340349008 = Node('Declarator_9008', parent=InitDeclList140296340349200)
ArrayDeclaration140296340350224 = Node('ArrayDeclaration_0224', parent=PassUpNode140296340349008)
PassUpNode140296340295632 = Node('DirectDeclarator_5632', parent=ArrayDeclaration140296340350224)
Identifier140296340295504 = Node('Identifier_5504', parent=PassUpNode140296340295632)
leaf = Node('arr_5504', parent=Identifier140296340295504)
leaf = Node("Array Size=['10'], Subtype='Array', Type=['int'], TokenLocation=(8, 135, 9)", parent=Identifier140296340295504)
PassUpNode140296340350160 = Node('ConstantExpression_0160', parent=ArrayDeclaration140296340350224)
PassUpNode140296340350096 = Node('ConditionalExpression_0096', parent=PassUpNode140296340350160)
PassUpNode140296340350032 = Node('LogicalOrExpression_0032', parent=PassUpNode140296340350096)
PassUpNode140296340349968 = Node('LogicalAndExpression_9968', parent=PassUpNode140296340350032)
PassUpNode140296340349904 = Node('InclusiveOrExpression_9904', parent=PassUpNode140296340349968)
PassUpNode140296340349840 = Node('ExclusiveOrExpression_9840', parent=PassUpNode140296340349904)
PassUpNode140296340349776 = Node('AndExpression_9776', parent=PassUpNode140296340349840)
PassUpNode140296340349712 = Node('EqalityExpression_9712', parent=PassUpNode140296340349776)
PassUpNode140296340349648 = Node('ShiftExpression_9648', parent=PassUpNode140296340349712)
PassUpNode140296340349584 = Node('ShiftExpression_9584', parent=PassUpNode140296340349648)
PassUpNode140296340349520 = Node('AdditiveExpression_9520', parent=PassUpNode140296340349584)
PassUpNode140296340349456 = Node('MultiplicativeExpression_9456', parent=PassUpNode140296340349520)
PassUpNode140296340349392 = Node('CastExpression_9392', parent=PassUpNode140296340349456)
PassUpNode140296340349328 = Node('UnaryExpression_9328', parent=PassUpNode140296340349392)
PassUpNode140296340349264 = Node('PostfixExpression_9264', parent=PassUpNode140296340349328)
PrimaryExpression140296340349136 = Node('PrimaryExpression_9136', parent=PassUpNode140296340349264)
Constant140296340349072 = Node('Constant_9072', parent=PrimaryExpression140296340349136)
leaf = Node('10_9072', parent=Constant140296340349072)
PassUpNode140296340375760 = Node('StatementList_5760', parent=CompoundStatement140296340294096)
PassUpNode140296340375696 = Node('StatementList_5696', parent=PassUpNode140296340375760)
PassUpNode140296340374864 = Node('Statement_4864', parent=PassUpNode140296340375696)
PassUpNode140296340375632 = Node('Expression_5632', parent=PassUpNode140296340374864)
PassUpNode140296340375568 = Node('AssignmentExpression_5568', parent=PassUpNode140296340375632)
PassUpNode140296340375504 = Node('ConditionalExpression_5504', parent=PassUpNode140296340375568)
PassUpNode140296340375440 = Node('LogicalOrExpression_5440', parent=PassUpNode140296340375504)
PassUpNode140296340375376 = Node('LogicalAndExpression_5376', parent=PassUpNode140296340375440)
PassUpNode140296340375312 = Node('InclusiveOrExpression_5312', parent=PassUpNode140296340375376)
PassUpNode140296340375248 = Node('ExclusiveOrExpression_5248', parent=PassUpNode140296340375312)
PassUpNode140296340375184 = Node('AndExpression_5184', parent=PassUpNode140296340375248)
PassUpNode140296340375120 = Node('EqalityExpression_5120', parent=PassUpNode140296340375184)
PassUpNode140296340375056 = Node('ShiftExpression_5056', parent=PassUpNode140296340375120)
PassUpNode140296340374992 = Node('ShiftExpression_4992', parent=PassUpNode140296340375056)
PassUpNode140296340374928 = Node('AdditiveExpression_4928', parent=PassUpNode140296340374992)
PassUpNode140296340374800 = Node('MultiplicativeExpression_4800', parent=PassUpNode140296340374928)
PassUpNode140296340373776 = Node('CastExpression_3776', parent=PassUpNode140296340374800)
PassUpNode140296340350544 = Node('UnaryExpression_0544', parent=PassUpNode140296340373776)
FunctionCall140296340352016 = Node('FunctionCall_2016', parent=PassUpNode140296340350544)
PassUpNode140296340350608 = Node('PostfixExpression_0608', parent=FunctionCall140296340352016)
PrimaryExpression140296340350480 = Node('PrimaryExpression_0480', parent=PassUpNode140296340350608)
Identifier140296340350416 = Node('Identifier_0416', parent=PrimaryExpression140296340350480)
leaf = Node('funct_0416', parent=Identifier140296340350416)
PassUpNode140296340374736 = Node('ArgumentExpressionList_4736', parent=FunctionCall140296340352016)
PassUpNode140296340373584 = Node('ArgumentExpressionList_3584', parent=PassUpNode140296340374736)
PassUpNode140296340351824 = Node('ArgumentExpressionList_1824', parent=PassUpNode140296340373584)
PassUpNode140296340351760 = Node('AssignmentExpression_1760', parent=PassUpNode140296340351824)
PassUpNode140296340351696 = Node('ConditionalExpression_1696', parent=PassUpNode140296340351760)
PassUpNode140296340351632 = Node('LogicalOrExpression_1632', parent=PassUpNode140296340351696)
PassUpNode140296340351568 = Node('LogicalAndExpression_1568', parent=PassUpNode140296340351632)
PassUpNode140296340351504 = Node('InclusiveOrExpression_1504', parent=PassUpNode140296340351568)
PassUpNode140296340351440 = Node('ExclusiveOrExpression_1440', parent=PassUpNode140296340351504)
PassUpNode140296340351376 = Node('AndExpression_1376', parent=PassUpNode140296340351440)
PassUpNode140296340351312 = Node('EqalityExpression_1312', parent=PassUpNode140296340351376)
PassUpNode140296340351248 = Node('ShiftExpression_1248', parent=PassUpNode140296340351312)
PassUpNode140296340351184 = Node('ShiftExpression_1184', parent=PassUpNode140296340351248)
PassUpNode140296340351120 = Node('AdditiveExpression_1120', parent=PassUpNode140296340351184)
PassUpNode140296340351056 = Node('MultiplicativeExpression_1056', parent=PassUpNode140296340351120)
PassUpNode140296340350992 = Node('CastExpression_0992', parent=PassUpNode140296340351056)
PassUpNode140296340350928 = Node('UnaryExpression_0928', parent=PassUpNode140296340350992)
PassUpNode140296340350864 = Node('PostfixExpression_0864', parent=PassUpNode140296340350928)
PrimaryExpression140296340350736 = Node('PrimaryExpression_0736', parent=PassUpNode140296340350864)
Identifier140296340350672 = Node('Identifier_0672', parent=PrimaryExpression140296340350736)
leaf = Node('arr_0672', parent=Identifier140296340350672)
leaf = Node("Array Size=['10'], Subtype='Array', Type=['int'], TokenLocation=(8, 135, 9)", parent=Identifier140296340350672)
PassUpNode140296340352976 = Node('AssignmentExpression_2976', parent=PassUpNode140296340373584)
PassUpNode140296340352912 = Node('ConditionalExpression_2912', parent=PassUpNode140296340352976)
PassUpNode140296340352848 = Node('LogicalOrExpression_2848', parent=PassUpNode140296340352912)
PassUpNode140296340352784 = Node('LogicalAndExpression_2784', parent=PassUpNode140296340352848)
PassUpNode140296340352720 = Node('InclusiveOrExpression_2720', parent=PassUpNode140296340352784)
PassUpNode140296340352656 = Node('ExclusiveOrExpression_2656', parent=PassUpNode140296340352720)
PassUpNode140296340352592 = Node('AndExpression_2592', parent=PassUpNode140296340352656)
PassUpNode140296340352528 = Node('EqalityExpression_2528', parent=PassUpNode140296340352592)
PassUpNode140296340352464 = Node('ShiftExpression_2464', parent=PassUpNode140296340352528)
PassUpNode140296340352400 = Node('ShiftExpression_2400', parent=PassUpNode140296340352464)
PassUpNode140296340352336 = Node('AdditiveExpression_2336', parent=PassUpNode140296340352400)
PassUpNode140296340352272 = Node('MultiplicativeExpression_2272', parent=PassUpNode140296340352336)
PassUpNode140296340352208 = Node('CastExpression_2208', parent=PassUpNode140296340352272)
PassUpNode140296340352144 = Node('UnaryExpression_2144', parent=PassUpNode140296340352208)
PassUpNode140296340352080 = Node('PostfixExpression_2080', parent=PassUpNode140296340352144)
PrimaryExpression140296340351952 = Node('PrimaryExpression_1952', parent=PassUpNode140296340352080)
Constant140296340351888 = Node('Constant_1888', parent=PrimaryExpression140296340351952)
leaf = Node('4_1888', parent=Constant140296340351888)
PassUpNode140296340374672 = Node('AssignmentExpression_4672', parent=PassUpNode140296340374736)
PassUpNode140296340374608 = Node('ConditionalExpression_4608', parent=PassUpNode140296340374672)
PassUpNode140296340374544 = Node('LogicalOrExpression_4544', parent=PassUpNode140296340374608)
PassUpNode140296340374480 = Node('LogicalAndExpression_4480', parent=PassUpNode140296340374544)
PassUpNode140296340374416 = Node('InclusiveOrExpression_4416', parent=PassUpNode140296340374480)
PassUpNode140296340374352 = Node('ExclusiveOrExpression_4352', parent=PassUpNode140296340374416)
PassUpNode140296340374288 = Node('AndExpression_4288', parent=PassUpNode140296340374352)
PassUpNode140296340374224 = Node('EqalityExpression_4224', parent=PassUpNode140296340374288)
PassUpNode140296340374160 = Node('ShiftExpression_4160', parent=PassUpNode140296340374224)
PassUpNode140296340374096 = Node('ShiftExpression_4096', parent=PassUpNode140296340374160)
PassUpNode140296340374032 = Node('AdditiveExpression_4032', parent=PassUpNode140296340374096)
PassUpNode140296340373968 = Node('MultiplicativeExpression_3968', parent=PassUpNode140296340374032)
PassUpNode140296340373904 = Node('CastExpression_3904', parent=PassUpNode140296340373968)
PassUpNode140296340373840 = Node('UnaryExpression_3840', parent=PassUpNode140296340373904)
PassUpNode140296340373648 = Node('PostfixExpression_3648', parent=PassUpNode140296340373840)
PrimaryExpression140296340373712 = Node('PrimaryExpression_3712', parent=PassUpNode140296340373648)
Constant140296340350800 = Node('Constant_0800', parent=PrimaryExpression140296340373712)
leaf = Node('1_0800', parent=Constant140296340350800)
PassUpNode140296340375888 = Node('Statement_5888', parent=PassUpNode140296340375760)
PassUpNode140296339923792 = Node('ExternalDeclaration_3792', parent=PassUpNode140296339923472)
FunctionDefintion140296339923664 = Node('FunctionDefintion_3664', parent=PassUpNode140296339923792)
DeclarationSpecifiers140296340376976 = Node('DeclarationSpecifiers_6976', parent=FunctionDefintion140296339923664)
leaf = Node('int_6976', parent=DeclarationSpecifiers140296340376976)
PassUpNode140296340376784 = Node('Declarator_6784', parent=FunctionDefintion140296339923664)
FunctionPrototype140296339923600 = Node('FunctionPrototype_3600', parent=PassUpNode140296340376784)
PassUpNode140296340376848 = Node('DirectDeclarator_6848', parent=FunctionPrototype140296339923600)
Identifier140296340376912 = Node('Identifier_6912', parent=PassUpNode140296340376848)
leaf = Node('funct_6912', parent=Identifier140296340376912)
leaf = Node("Return Type=['int'], Subtype='Function Prototype', Label='funct', Arguments=[{'Array Size Info': ['10', '50', '20'], 'Type Qualifier': ['const'], 'Type': ['int'], 'Subtype': 'Array Argument'}, {'Type': ['char']}, {'Array Size Info': ['30'], 'Type': ['int'], 'Subtype': 'Array Argument'}], TokenLocation=(2, 13, 5)", parent=Identifier140296340376912)
PassUpNode140296339897168 = Node('ParameterTypeList_7168', parent=FunctionPrototype140296339923600)
PassUpNode140296339923536 = Node('ParameterList_3536', parent=PassUpNode140296339897168)
PassUpNode140296339897360 = Node('ParameterList_7360', parent=PassUpNode140296339923536)
PassUpNode140296339896912 = Node('ParameterList_6912', parent=PassUpNode140296339897360)
Declaration140296339895888 = Node('Declaration_5888', parent=PassUpNode140296339896912)
DeclarationSpecifiers140296340376656 = Node('DeclarationSpecifiers_6656', parent=Declaration140296339895888)
leaf = Node('const_6656', parent=DeclarationSpecifiers140296340376656)
DeclarationSpecifiers140296340376592 = Node('DeclarationSpecifiers_6592', parent=DeclarationSpecifiers140296340376656)
leaf = Node('int_6592', parent=DeclarationSpecifiers140296340376592)
PassUpNode140296339895696 = Node('Declarator_5696', parent=Declaration140296339895888)
ArrayDeclaration140296339896784 = Node('ArrayDeclaration_6784', parent=PassUpNode140296339895696)
ArrayDeclaration140296339895632 = Node('ArrayDeclaration_5632', parent=ArrayDeclaration140296339896784)
ArrayDeclaration140296339894480 = Node('ArrayDeclaration_4480', parent=ArrayDeclaration140296339895632)
PassUpNode140296340376528 = Node('DirectDeclarator_6528', parent=ArrayDeclaration140296339894480)
Identifier140296340376720 = Node('Identifier_6720', parent=PassUpNode140296340376528)
leaf = Node('a_6720', parent=Identifier140296340376720)
leaf = Node("Array Size=['10', '50', '20'], Subtype='Array', Type Qualifier=['const'], Type=['int'], TokenLocation=(18, 232, 21)", parent=Identifier140296340376720)
PassUpNode140296339894416 = Node('ConstantExpression_4416', parent=ArrayDeclaration140296339894480)
PassUpNode140296339894352 = Node('ConditionalExpression_4352', parent=PassUpNode140296339894416)
PassUpNode140296340377552 = Node('LogicalOrExpression_7552', parent=PassUpNode140296339894352)
PassUpNode140296340377488 = Node('LogicalAndExpression_7488', parent=PassUpNode140296340377552)
PassUpNode140296340377424 = Node('InclusiveOrExpression_7424', parent=PassUpNode140296340377488)
PassUpNode140296340377360 = Node('ExclusiveOrExpression_7360', parent=PassUpNode140296340377424)
PassUpNode140296340377296 = Node('AndExpression_7296', parent=PassUpNode140296340377360)
PassUpNode140296340377232 = Node('EqalityExpression_7232', parent=PassUpNode140296340377296)
PassUpNode140296340377104 = Node('ShiftExpression_7104', parent=PassUpNode140296340377232)
PassUpNode140296340377040 = Node('ShiftExpression_7040', parent=PassUpNode140296340377104)
PassUpNode140296340375952 = Node('AdditiveExpression_5952', parent=PassUpNode140296340377040)
PassUpNode140296340376016 = Node('MultiplicativeExpression_6016', parent=PassUpNode140296340375952)
PassUpNode140296340376080 = Node('CastExpression_6080', parent=PassUpNode140296340376016)
PassUpNode140296340376144 = Node('UnaryExpression_6144', parent=PassUpNode140296340376080)
PassUpNode140296340376208 = Node('PostfixExpression_6208', parent=PassUpNode140296340376144)
PrimaryExpression140296340376336 = Node('PrimaryExpression_6336', parent=PassUpNode140296340376208)
Constant140296340376400 = Node('Constant_6400', parent=PrimaryExpression140296340376336)
leaf = Node('10_6400', parent=Constant140296340376400)
PassUpNode140296339895568 = Node('ConstantExpression_5568', parent=ArrayDeclaration140296339895632)
PassUpNode140296339895504 = Node('ConditionalExpression_5504', parent=PassUpNode140296339895568)
PassUpNode140296339895440 = Node('LogicalOrExpression_5440', parent=PassUpNode140296339895504)
PassUpNode140296339895376 = Node('LogicalAndExpression_5376', parent=PassUpNode140296339895440)
PassUpNode140296339895312 = Node('InclusiveOrExpression_5312', parent=PassUpNode140296339895376)
PassUpNode140296339895248 = Node('ExclusiveOrExpression_5248', parent=PassUpNode140296339895312)
PassUpNode140296339895184 = Node('AndExpression_5184', parent=PassUpNode140296339895248)
PassUpNode140296339895120 = Node('EqalityExpression_5120', parent=PassUpNode140296339895184)
PassUpNode140296339895056 = Node('ShiftExpression_5056', parent=PassUpNode140296339895120)
PassUpNode140296339894992 = Node('ShiftExpression_4992', parent=PassUpNode140296339895056)
PassUpNode140296339894928 = Node('AdditiveExpression_4928', parent=PassUpNode140296339894992)
PassUpNode140296339894864 = Node('MultiplicativeExpression_4864', parent=PassUpNode140296339894928)
PassUpNode140296339894800 = Node('CastExpression_4800', parent=PassUpNode140296339894864)
PassUpNode140296339894608 = Node('UnaryExpression_4608', parent=PassUpNode140296339894800)
PassUpNode140296339894672 = Node('PostfixExpression_4672', parent=PassUpNode140296339894608)
PrimaryExpression140296340376272 = Node('PrimaryExpression_6272', parent=PassUpNode140296339894672)
Constant140296340376464 = Node('Constant_6464', parent=PrimaryExpression140296340376272)
leaf = Node('50_6464', parent=Constant140296340376464)
PassUpNode140296339896720 = Node('ConstantExpression_6720', parent=ArrayDeclaration140296339896784)
PassUpNode140296339896656 = Node('ConditionalExpression_6656', parent=PassUpNode140296339896720)
PassUpNode140296339896592 = Node('LogicalOrExpression_6592', parent=PassUpNode140296339896656)
PassUpNode140296339896528 = Node('LogicalAndExpression_6528', parent=PassUpNode140296339896592)
PassUpNode140296339896464 = Node('InclusiveOrExpression_6464', parent=PassUpNode140296339896528)
PassUpNode140296339896400 = Node('ExclusiveOrExpression_6400', parent=PassUpNode140296339896464)
PassUpNode140296339896336 = Node('AndExpression_6336', parent=PassUpNode140296339896400)
PassUpNode140296339896272 = Node('EqalityExpression_6272', parent=PassUpNode140296339896336)
PassUpNode140296339896208 = Node('ShiftExpression_6208', parent=PassUpNode140296339896272)
PassUpNode140296339896144 = Node('ShiftExpression_6144', parent=PassUpNode140296339896208)
PassUpNode140296339896080 = Node('AdditiveExpression_6080', parent=PassUpNode140296339896144)
PassUpNode140296339896016 = Node('MultiplicativeExpression_6016', parent=PassUpNode140296339896080)
PassUpNode140296339895952 = Node('CastExpression_5952', parent=PassUpNode140296339896016)
PassUpNode140296339895760 = Node('UnaryExpression_5760', parent=PassUpNode140296339895952)
PassUpNode140296339894736 = Node('PostfixExpression_4736', parent=PassUpNode140296339895760)
PrimaryExpression140296339895824 = Node('PrimaryExpression_5824', parent=PassUpNode140296339894736)
Constant140296339894544 = Node('Constant_4544', parent=PrimaryExpression140296339895824)
leaf = Node('20_4544', parent=Constant140296339894544)
Declaration140296339897296 = Node('Declaration_7296', parent=PassUpNode140296339897360)
DeclarationSpecifiers140296339897040 = Node('DeclarationSpecifiers_7040', parent=Declaration140296339897296)
leaf = Node('char_7040', parent=DeclarationSpecifiers140296339897040)
PassUpNode140296339897232 = Node('Declarator_7232', parent=Declaration140296339897296)
PassUpNode140296339897104 = Node('DirectDeclarator_7104', parent=PassUpNode140296339897232)
Identifier140296339896976 = Node('Identifier_6976', parent=PassUpNode140296339897104)
leaf = Node('d_6976', parent=Identifier140296339896976)
leaf = Node("Type=['char'], TokenLocation=(18, 252, 41)", parent=Identifier140296339896976)
Declaration140296339897744 = Node('Declaration_7744', parent=PassUpNode140296339923536)
DeclarationSpecifiers140296339897488 = Node('DeclarationSpecifiers_7488', parent=Declaration140296339897744)
leaf = Node('int_7488', parent=DeclarationSpecifiers140296339897488)
PassUpNode140296339897424 = Node('Declarator_7424', parent=Declaration140296339897744)
ArrayDeclaration140296339923408 = Node('ArrayDeclaration_3408', parent=PassUpNode140296339897424)
PassUpNode140296339897552 = Node('DirectDeclarator_7552', parent=ArrayDeclaration140296339923408)
Identifier140296339896848 = Node('Identifier_6848', parent=PassUpNode140296339897552)
leaf = Node('f_6848', parent=Identifier140296339896848)
leaf = Node("Array Size=['30'], Subtype='Array', Type=['int'], TokenLocation=(18, 259, 48)", parent=Identifier140296339896848)
PassUpNode140296339923344 = Node('ConstantExpression_3344', parent=ArrayDeclaration140296339923408)
PassUpNode140296339923280 = Node('ConditionalExpression_3280', parent=PassUpNode140296339923344)
PassUpNode140296339923216 = Node('LogicalOrExpression_3216', parent=PassUpNode140296339923280)
PassUpNode140296339923152 = Node('LogicalAndExpression_3152', parent=PassUpNode140296339923216)
PassUpNode140296339923088 = Node('InclusiveOrExpression_3088', parent=PassUpNode140296339923152)
PassUpNode140296339923024 = Node('ExclusiveOrExpression_3024', parent=PassUpNode140296339923088)
PassUpNode140296339898320 = Node('AndExpression_8320', parent=PassUpNode140296339923024)
PassUpNode140296339898256 = Node('EqalityExpression_8256', parent=PassUpNode140296339898320)
PassUpNode140296339898192 = Node('ShiftExpression_8192', parent=PassUpNode140296339898256)
PassUpNode140296339898128 = Node('ShiftExpression_8128', parent=PassUpNode140296339898192)
PassUpNode140296339898064 = Node('AdditiveExpression_8064', parent=PassUpNode140296339898128)
PassUpNode140296339898000 = Node('MultiplicativeExpression_8000', parent=PassUpNode140296339898064)
PassUpNode140296339897936 = Node('CastExpression_7936', parent=PassUpNode140296339898000)
PassUpNode140296339897872 = Node('UnaryExpression_7872', parent=PassUpNode140296339897936)
PassUpNode140296339897808 = Node('PostfixExpression_7808', parent=PassUpNode140296339897872)
PrimaryExpression140296339897680 = Node('PrimaryExpression_7680', parent=PassUpNode140296339897808)
Constant140296339897616 = Node('Constant_7616', parent=PrimaryExpression140296339897680)
leaf = Node('30_7616', parent=Constant140296339897616)
CompoundStatement140296339923728 = Node('CompoundStatement_3728', parent=FunctionDefintion140296339923664)

for pre, fill, node in RenderTree(PassUpNode140296339923472):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140296339923472, nodeattrfunc=f).to_picture("AST.png")
        