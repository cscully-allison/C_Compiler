from anytree import Node, RenderTree 
from anytree.exporter import DotExporter
PassUpNode140439672508368 = Node('TranslationUnit_8368')
PassUpNode140439672506448 = Node('ExternalDeclaration_6448', parent=PassUpNode140439672508368)
FunctionDefintion140439672355216 = Node('FunctionDefintion_5216', parent=PassUpNode140439672506448)
DeclarationSpecifiers140439675885008 = Node('DeclarationSpecifiers_5008', parent=FunctionDefintion140439672355216)
leaf = Node('int_5008', parent=DeclarationSpecifiers140439675885008)
PassUpNode140439675968976 = Node('Declarator_8976', parent=FunctionDefintion140439672355216)
PassUpNode140439672355088 = Node('DirectDeclarator_5088', parent=PassUpNode140439675968976)
PassUpNode140439675885072 = Node('DirectDeclarator_5072', parent=PassUpNode140439672355088)
Identifier140439675965776 = Node('Identifier_5776', parent=PassUpNode140439675885072)
leaf = Node('main_5776', parent=Identifier140439675965776)
leaf = Node("TokenLocation=(3, 6, 5)", parent=Identifier140439675965776)
CompoundStatement140439672355152 = Node('CompoundStatement_5152', parent=FunctionDefintion140439672355216)
DeclList140439672413712 = Node('DeclList_3712', parent=CompoundStatement140439672355152)
DeclList140439672412112 = Node('DeclList_2112', parent=DeclList140439672413712)
DeclList140439672355920 = Node('DeclList_5920', parent=DeclList140439672412112)
DeclList140439672355472 = Node('DeclList_5472', parent=DeclList140439672355920)
Declaration140439672355664 = Node('Declaration_5664', parent=DeclList140439672355472)
DeclarationSpecifiers140439672355344 = Node('DeclarationSpecifiers_5344', parent=Declaration140439672355664)
leaf = Node('int_5344', parent=DeclarationSpecifiers140439672355344)
InitDeclList140439672355600 = Node('InitDeclList_5600', parent=Declaration140439672355664)
PassUpNode140439672355536 = Node('Declarator_5536', parent=InitDeclList140439672355600)
PassUpNode140439672355408 = Node('DirectDeclarator_5408', parent=PassUpNode140439672355536)
Identifier140439672355280 = Node('Identifier_5280', parent=PassUpNode140439672355408)
leaf = Node('a_5280', parent=Identifier140439672355280)
leaf = Node("Type=['int'], TokenLocation=(4, 19, 6)", parent=Identifier140439672355280)
Declaration140439672356112 = Node('Declaration_6112', parent=DeclList140439672355920)
DeclarationSpecifiers140439672355792 = Node('DeclarationSpecifiers_5792', parent=Declaration140439672356112)
leaf = Node('int_5792', parent=DeclarationSpecifiers140439672355792)
InitDeclList140439672356048 = Node('InitDeclList_6048', parent=Declaration140439672356112)
PassUpNode140439672355984 = Node('Declarator_5984', parent=InitDeclList140439672356048)
PassUpNode140439672355856 = Node('DirectDeclarator_5856', parent=PassUpNode140439672355984)
Identifier140439672355728 = Node('Identifier_5728', parent=PassUpNode140439672355856)
leaf = Node('c_5728', parent=Identifier140439672355728)
leaf = Node("Type=['int'], TokenLocation=(5, 27, 6)", parent=Identifier140439672355728)
Declaration140439672412176 = Node('Declaration_2176', parent=DeclList140439672412112)
DeclarationSpecifiers140439672356240 = Node('DeclarationSpecifiers_6240', parent=Declaration140439672412176)
leaf = Node('int_6240', parent=DeclarationSpecifiers140439672356240)
InitDeclList140439672411152 = Node('InitDeclList_1152', parent=Declaration140439672412176)
PassUpNode140439672410960 = Node('Declarator_0960', parent=InitDeclList140439672411152)
ArrayDeclaration140439672412048 = Node('ArrayDeclaration_2048', parent=PassUpNode140439672410960)
ArrayDeclaration140439672410896 = Node('ArrayDeclaration_0896', parent=ArrayDeclaration140439672412048)
PassUpNode140439672356304 = Node('DirectDeclarator_6304', parent=ArrayDeclaration140439672410896)
Identifier140439672356176 = Node('Identifier_6176', parent=PassUpNode140439672356304)
leaf = Node('arr_6176', parent=Identifier140439672356176)
leaf = Node("Array Size=['6', '8'], Subtype='Array', Type=['int'], TokenLocation=(6, 35, 6)", parent=Identifier140439672356176)
PassUpNode140439672410832 = Node('ConstantExpression_0832', parent=ArrayDeclaration140439672410896)
PassUpNode140439672410768 = Node('ConditionalExpression_0768', parent=PassUpNode140439672410832)
PassUpNode140439672410704 = Node('LogicalOrExpression_0704', parent=PassUpNode140439672410768)
PassUpNode140439672410640 = Node('LogicalAndExpression_0640', parent=PassUpNode140439672410704)
PassUpNode140439672410576 = Node('InclusiveOrExpression_0576', parent=PassUpNode140439672410640)
PassUpNode140439672410512 = Node('ExclusiveOrExpression_0512', parent=PassUpNode140439672410576)
PassUpNode140439672410448 = Node('AndExpression_0448', parent=PassUpNode140439672410512)
PassUpNode140439672410384 = Node('EqalityExpression_0384', parent=PassUpNode140439672410448)
PassUpNode140439672410320 = Node('ShiftExpression_0320', parent=PassUpNode140439672410384)
PassUpNode140439672410256 = Node('ShiftExpression_0256', parent=PassUpNode140439672410320)
PassUpNode140439672410192 = Node('AdditiveExpression_0192', parent=PassUpNode140439672410256)
PassUpNode140439672356816 = Node('MultiplicativeExpression_6816', parent=PassUpNode140439672410192)
PassUpNode140439672356752 = Node('CastExpression_6752', parent=PassUpNode140439672356816)
PassUpNode140439672356688 = Node('UnaryExpression_6688', parent=PassUpNode140439672356752)
PassUpNode140439672356624 = Node('PostfixExpression_6624', parent=PassUpNode140439672356688)
PrimaryExpression140439672356496 = Node('PrimaryExpression_6496', parent=PassUpNode140439672356624)
Constant140439672356432 = Node('Constant_6432', parent=PrimaryExpression140439672356496)
leaf = Node('6_6432', parent=Constant140439672356432)
PassUpNode140439672411984 = Node('ConstantExpression_1984', parent=ArrayDeclaration140439672412048)
PassUpNode140439672411920 = Node('ConditionalExpression_1920', parent=PassUpNode140439672411984)
PassUpNode140439672411856 = Node('LogicalOrExpression_1856', parent=PassUpNode140439672411920)
PassUpNode140439672411792 = Node('LogicalAndExpression_1792', parent=PassUpNode140439672411856)
PassUpNode140439672411728 = Node('InclusiveOrExpression_1728', parent=PassUpNode140439672411792)
PassUpNode140439672411664 = Node('ExclusiveOrExpression_1664', parent=PassUpNode140439672411728)
PassUpNode140439672411600 = Node('AndExpression_1600', parent=PassUpNode140439672411664)
PassUpNode140439672411536 = Node('EqalityExpression_1536', parent=PassUpNode140439672411600)
PassUpNode140439672411472 = Node('ShiftExpression_1472', parent=PassUpNode140439672411536)
PassUpNode140439672411408 = Node('ShiftExpression_1408', parent=PassUpNode140439672411472)
PassUpNode140439672411344 = Node('AdditiveExpression_1344', parent=PassUpNode140439672411408)
PassUpNode140439672411280 = Node('MultiplicativeExpression_1280', parent=PassUpNode140439672411344)
PassUpNode140439672411216 = Node('CastExpression_1216', parent=PassUpNode140439672411280)
PassUpNode140439672411024 = Node('UnaryExpression_1024', parent=PassUpNode140439672411216)
PassUpNode140439672411088 = Node('PostfixExpression_1088', parent=PassUpNode140439672411024)
PrimaryExpression140439672356560 = Node('PrimaryExpression_6560', parent=PassUpNode140439672411088)
Constant140439672356368 = Node('Constant_6368', parent=PrimaryExpression140439672356560)
leaf = Node('8_6368', parent=Constant140439672356368)
Declaration140439672413776 = Node('Declaration_3776', parent=DeclList140439672413712)
DeclarationSpecifiers140439672412304 = Node('DeclarationSpecifiers_2304', parent=Declaration140439672413776)
leaf = Node('int_2304', parent=DeclarationSpecifiers140439672412304)
InitDeclList140439672412624 = Node('InitDeclList_2624', parent=Declaration140439672413776)
PassUpNode140439672412432 = Node('Declarator_2432', parent=InitDeclList140439672412624)
ArrayDeclaration140439672413648 = Node('ArrayDeclaration_3648', parent=PassUpNode140439672412432)
PassUpNode140439672412368 = Node('DirectDeclarator_2368', parent=ArrayDeclaration140439672413648)
Identifier140439672412240 = Node('Identifier_2240', parent=PassUpNode140439672412368)
leaf = Node('arr2_2240', parent=Identifier140439672412240)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(7, 51, 6)", parent=Identifier140439672412240)
PassUpNode140439672413584 = Node('ConstantExpression_3584', parent=ArrayDeclaration140439672413648)
PassUpNode140439672413520 = Node('ConditionalExpression_3520', parent=PassUpNode140439672413584)
PassUpNode140439672413456 = Node('LogicalOrExpression_3456', parent=PassUpNode140439672413520)
PassUpNode140439672413392 = Node('LogicalAndExpression_3392', parent=PassUpNode140439672413456)
PassUpNode140439672413328 = Node('InclusiveOrExpression_3328', parent=PassUpNode140439672413392)
PassUpNode140439672413264 = Node('ExclusiveOrExpression_3264', parent=PassUpNode140439672413328)
PassUpNode140439672413200 = Node('AndExpression_3200', parent=PassUpNode140439672413264)
PassUpNode140439672413136 = Node('EqalityExpression_3136', parent=PassUpNode140439672413200)
PassUpNode140439672413072 = Node('ShiftExpression_3072', parent=PassUpNode140439672413136)
PassUpNode140439672413008 = Node('ShiftExpression_3008', parent=PassUpNode140439672413072)
PassUpNode140439672412944 = Node('AdditiveExpression_2944', parent=PassUpNode140439672413008)
PassUpNode140439672412880 = Node('MultiplicativeExpression_2880', parent=PassUpNode140439672412944)
PassUpNode140439672412816 = Node('CastExpression_2816', parent=PassUpNode140439672412880)
PassUpNode140439672412752 = Node('UnaryExpression_2752', parent=PassUpNode140439672412816)
PassUpNode140439672412688 = Node('PostfixExpression_2688', parent=PassUpNode140439672412752)
PrimaryExpression140439672412560 = Node('PrimaryExpression_2560', parent=PassUpNode140439672412688)
Constant140439672412496 = Node('Constant_2496', parent=PrimaryExpression140439672412560)
leaf = Node('9_2496', parent=Constant140439672412496)
PassUpNode140439672505744 = Node('StatementList_5744', parent=CompoundStatement140439672355152)
PassUpNode140439672505680 = Node('StatementList_5680', parent=PassUpNode140439672505744)
PassUpNode140439672505488 = Node('StatementList_5488', parent=PassUpNode140439672505680)
PassUpNode140439672479248 = Node('StatementList_9248', parent=PassUpNode140439672505488)
PassUpNode140439672475920 = Node('StatementList_5920', parent=PassUpNode140439672479248)
PassUpNode140439672475728 = Node('StatementList_5728', parent=PassUpNode140439672475920)
PassUpNode140439672448208 = Node('StatementList_8208', parent=PassUpNode140439672475728)
PassUpNode140439672447120 = Node('Statement_7120', parent=PassUpNode140439672448208)
PassUpNode140439672448144 = Node('Expression_8144', parent=PassUpNode140439672447120)
AssignmentExpression140439672448080 = Node('AssignmentExpression_8080', parent=PassUpNode140439672448144)
PassUpNode140439672414096 = Node('UnaryExpression_4096', parent=AssignmentExpression140439672448080)
PassUpNode140439672414032 = Node('PostfixExpression_4032', parent=PassUpNode140439672414096)
PrimaryExpression140439672413904 = Node('PrimaryExpression_3904', parent=PassUpNode140439672414032)
Identifier140439672413840 = Node('Identifier_3840', parent=PrimaryExpression140439672413904)
leaf = Node('a_3840', parent=Identifier140439672413840)
leaf = Node("Type=['int'], TokenLocation=(4, 19, 6)", parent=Identifier140439672413840)
PassUpNode140439672448016 = Node('AssignmentExpression_8016', parent=AssignmentExpression140439672448080)
PassUpNode140439672447952 = Node('ConditionalExpression_7952', parent=PassUpNode140439672448016)
PassUpNode140439672447888 = Node('LogicalOrExpression_7888', parent=PassUpNode140439672447952)
PassUpNode140439672447824 = Node('LogicalAndExpression_7824', parent=PassUpNode140439672447888)
PassUpNode140439672447760 = Node('InclusiveOrExpression_7760', parent=PassUpNode140439672447824)
PassUpNode140439672447696 = Node('ExclusiveOrExpression_7696', parent=PassUpNode140439672447760)
PassUpNode140439672447632 = Node('AndExpression_7632', parent=PassUpNode140439672447696)
PassUpNode140439672447568 = Node('EqalityExpression_7568', parent=PassUpNode140439672447632)
PassUpNode140439672447504 = Node('ShiftExpression_7504', parent=PassUpNode140439672447568)
PassUpNode140439672447440 = Node('ShiftExpression_7440', parent=PassUpNode140439672447504)
PassUpNode140439672447376 = Node('AdditiveExpression_7376', parent=PassUpNode140439672447440)
PassUpNode140439672447312 = Node('MultiplicativeExpression_7312', parent=PassUpNode140439672447376)
PassUpNode140439672447248 = Node('CastExpression_7248', parent=PassUpNode140439672447312)
PassUpNode140439672447184 = Node('UnaryExpression_7184', parent=PassUpNode140439672447248)
PassUpNode140439672447056 = Node('PostfixExpression_7056', parent=PassUpNode140439672447184)
PrimaryExpression140439672414160 = Node('PrimaryExpression_4160', parent=PassUpNode140439672447056)
Constant140439672413968 = Node('Constant_3968', parent=PrimaryExpression140439672414160)
leaf = Node('5_3968', parent=Constant140439672413968)
PassUpNode140439672450000 = Node('Statement_0000', parent=PassUpNode140439672475728)
PassUpNode140439672451024 = Node('Expression_1024', parent=PassUpNode140439672450000)
AssignmentExpression140439672450960 = Node('AssignmentExpression_0960', parent=PassUpNode140439672451024)
PassUpNode140439672448400 = Node('UnaryExpression_8400', parent=AssignmentExpression140439672450960)
ArrayAccess140439672449744 = Node('ArrayAccess_9744', parent=PassUpNode140439672448400)
PassUpNode140439672449680 = Node('Expression_9680', parent=ArrayAccess140439672449744)
PassUpNode140439672449616 = Node('AssignmentExpression_9616', parent=PassUpNode140439672449680)
PassUpNode140439672449552 = Node('ConditionalExpression_9552', parent=PassUpNode140439672449616)
PassUpNode140439672449488 = Node('LogicalOrExpression_9488', parent=PassUpNode140439672449552)
PassUpNode140439672449424 = Node('LogicalAndExpression_9424', parent=PassUpNode140439672449488)
PassUpNode140439672449360 = Node('InclusiveOrExpression_9360', parent=PassUpNode140439672449424)
PassUpNode140439672449296 = Node('ExclusiveOrExpression_9296', parent=PassUpNode140439672449360)
PassUpNode140439672449232 = Node('AndExpression_9232', parent=PassUpNode140439672449296)
PassUpNode140439672449168 = Node('EqalityExpression_9168', parent=PassUpNode140439672449232)
PassUpNode140439672449104 = Node('ShiftExpression_9104', parent=PassUpNode140439672449168)
PassUpNode140439672449040 = Node('ShiftExpression_9040', parent=PassUpNode140439672449104)
PassUpNode140439672448976 = Node('AdditiveExpression_8976', parent=PassUpNode140439672449040)
PassUpNode140439672448912 = Node('MultiplicativeExpression_8912', parent=PassUpNode140439672448976)
PassUpNode140439672448848 = Node('CastExpression_8848', parent=PassUpNode140439672448912)
PassUpNode140439672448784 = Node('UnaryExpression_8784', parent=PassUpNode140439672448848)
PassUpNode140439672448720 = Node('PostfixExpression_8720', parent=PassUpNode140439672448784)
PrimaryExpression140439672448592 = Node('PrimaryExpression_8592', parent=PassUpNode140439672448720)
Constant140439672448528 = Node('Constant_8528', parent=PrimaryExpression140439672448592)
leaf = Node('3_8528', parent=Constant140439672448528)
PassUpNode140439672448464 = Node('PostfixExpression_8464', parent=ArrayAccess140439672449744)
PrimaryExpression140439672448336 = Node('PrimaryExpression_8336', parent=PassUpNode140439672448464)
Identifier140439672448272 = Node('Identifier_8272', parent=PrimaryExpression140439672448336)
leaf = Node('arr2_8272', parent=Identifier140439672448272)
leaf = Node("Array Size=['9'], Subtype='Array', Type=['int'], TokenLocation=(7, 51, 6)", parent=Identifier140439672448272)
leaf = Node('9 _9744', parent=ArrayAccess140439672449744)
leaf = Node('3_9744', parent=ArrayAccess140439672449744)
PassUpNode140439672450896 = Node('AssignmentExpression_0896', parent=AssignmentExpression140439672450960)
PassUpNode140439672450832 = Node('ConditionalExpression_0832', parent=PassUpNode140439672450896)
PassUpNode140439672450768 = Node('LogicalOrExpression_0768', parent=PassUpNode140439672450832)
PassUpNode140439672450704 = Node('LogicalAndExpression_0704', parent=PassUpNode140439672450768)
PassUpNode140439672450640 = Node('InclusiveOrExpression_0640', parent=PassUpNode140439672450704)
PassUpNode140439672450576 = Node('ExclusiveOrExpression_0576', parent=PassUpNode140439672450640)
PassUpNode140439672450512 = Node('AndExpression_0512', parent=PassUpNode140439672450576)
PassUpNode140439672450448 = Node('EqalityExpression_0448', parent=PassUpNode140439672450512)
PassUpNode140439672450384 = Node('ShiftExpression_0384', parent=PassUpNode140439672450448)
PassUpNode140439672450320 = Node('ShiftExpression_0320', parent=PassUpNode140439672450384)
PassUpNode140439672450256 = Node('AdditiveExpression_0256', parent=PassUpNode140439672450320)
PassUpNode140439672450192 = Node('MultiplicativeExpression_0192', parent=PassUpNode140439672450256)
PassUpNode140439672450128 = Node('CastExpression_0128', parent=PassUpNode140439672450192)
PassUpNode140439672450064 = Node('UnaryExpression_0064', parent=PassUpNode140439672450128)
PassUpNode140439672448656 = Node('PostfixExpression_8656', parent=PassUpNode140439672450064)
PrimaryExpression140439672449872 = Node('PrimaryExpression_9872', parent=PassUpNode140439672448656)
Constant140439672449808 = Node('Constant_9808', parent=PrimaryExpression140439672449872)
leaf = Node('100_9808', parent=Constant140439672449808)
PassUpNode140439672475792 = Node('Statement_5792', parent=PassUpNode140439672475920)
IterationStatement140439672477328 = Node('IterationStatement_7328', parent=PassUpNode140439672475792)
PassUpNode140439672477072 = Node('Expression_7072', parent=IterationStatement140439672477328)
PassUpNode140439672477008 = Node('AssignmentExpression_7008', parent=PassUpNode140439672477072)
PassUpNode140439672476944 = Node('ConditionalExpression_6944', parent=PassUpNode140439672477008)
PassUpNode140439672476880 = Node('LogicalOrExpression_6880', parent=PassUpNode140439672476944)
PassUpNode140439672476816 = Node('LogicalAndExpression_6816', parent=PassUpNode140439672476880)
PassUpNode140439672476752 = Node('InclusiveOrExpression_6752', parent=PassUpNode140439672476816)
PassUpNode140439672476688 = Node('ExclusiveOrExpression_6688', parent=PassUpNode140439672476752)
PassUpNode140439672476624 = Node('AndExpression_6624', parent=PassUpNode140439672476688)
PassUpNode140439672476560 = Node('EqalityExpression_6560', parent=PassUpNode140439672476624)
PassUpNode140439672476496 = Node('ShiftExpression_6496', parent=PassUpNode140439672476560)
PassUpNode140439672476432 = Node('ShiftExpression_6432', parent=PassUpNode140439672476496)
PassUpNode140439672476368 = Node('AdditiveExpression_6368', parent=PassUpNode140439672476432)
PassUpNode140439672476304 = Node('MultiplicativeExpression_6304', parent=PassUpNode140439672476368)
PassUpNode140439672476240 = Node('CastExpression_6240', parent=PassUpNode140439672476304)
PassUpNode140439672476176 = Node('UnaryExpression_6176', parent=PassUpNode140439672476240)
PassUpNode140439672476112 = Node('PostfixExpression_6112', parent=PassUpNode140439672476176)
PrimaryExpression140439672475984 = Node('PrimaryExpression_5984', parent=PassUpNode140439672476112)
Identifier140439672475856 = Node('Identifier_5856', parent=PrimaryExpression140439672475984)
leaf = Node('a_5856', parent=Identifier140439672475856)
leaf = Node("Type=['int'], TokenLocation=(4, 19, 6)", parent=Identifier140439672475856)
PassUpNode140439672477264 = Node('Statement_7264', parent=IterationStatement140439672477328)
CompoundStatement140439672477136 = Node('CompoundStatement_7136', parent=PassUpNode140439672477264)
PassUpNode140439672478160 = Node('Statement_8160', parent=PassUpNode140439672479248)
PassUpNode140439672479184 = Node('Expression_9184', parent=PassUpNode140439672478160)
AssignmentExpression140439672479120 = Node('AssignmentExpression_9120', parent=PassUpNode140439672479184)
PassUpNode140439672477520 = Node('UnaryExpression_7520', parent=AssignmentExpression140439672479120)
PassUpNode140439672477456 = Node('PostfixExpression_7456', parent=PassUpNode140439672477520)
PrimaryExpression140439672477392 = Node('PrimaryExpression_7392', parent=PassUpNode140439672477456)
Identifier140439672476048 = Node('Identifier_6048', parent=PrimaryExpression140439672477392)
leaf = Node('c_6048', parent=Identifier140439672476048)
leaf = Node("Type=['int'], TokenLocation=(5, 27, 6)", parent=Identifier140439672476048)
PassUpNode140439672479056 = Node('AssignmentExpression_9056', parent=AssignmentExpression140439672479120)
PassUpNode140439672478992 = Node('ConditionalExpression_8992', parent=PassUpNode140439672479056)
PassUpNode140439672478928 = Node('LogicalOrExpression_8928', parent=PassUpNode140439672478992)
PassUpNode140439672478864 = Node('LogicalAndExpression_8864', parent=PassUpNode140439672478928)
PassUpNode140439672478800 = Node('InclusiveOrExpression_8800', parent=PassUpNode140439672478864)
PassUpNode140439672478736 = Node('ExclusiveOrExpression_8736', parent=PassUpNode140439672478800)
PassUpNode140439672478672 = Node('AndExpression_8672', parent=PassUpNode140439672478736)
PassUpNode140439672478608 = Node('EqalityExpression_8608', parent=PassUpNode140439672478672)
PassUpNode140439672478544 = Node('ShiftExpression_8544', parent=PassUpNode140439672478608)
PassUpNode140439672477712 = Node('ShiftExpression_7712', parent=PassUpNode140439672478544)
BinOp140439672478480 = Node('BinOp_8480', parent=PassUpNode140439672477712)
PassUpNode140439672477968 = Node('AdditiveExpression_7968', parent=BinOp140439672478480)
PassUpNode140439672477904 = Node('MultiplicativeExpression_7904', parent=PassUpNode140439672477968)
PassUpNode140439672477840 = Node('CastExpression_7840', parent=PassUpNode140439672477904)
PassUpNode140439672477776 = Node('UnaryExpression_7776', parent=PassUpNode140439672477840)
PassUpNode140439672477584 = Node('PostfixExpression_7584', parent=PassUpNode140439672477776)
PrimaryExpression140439672477648 = Node('PrimaryExpression_7648', parent=PassUpNode140439672477584)
Constant140439672477200 = Node('Constant_7200', parent=PrimaryExpression140439672477648)
leaf = Node('5_7200', parent=Constant140439672477200)
leaf = Node('+_8480', parent=BinOp140439672478480)
PassUpNode140439672478416 = Node('MultiplicativeExpression_8416', parent=BinOp140439672478480)
PassUpNode140439672478352 = Node('CastExpression_8352', parent=PassUpNode140439672478416)
PassUpNode140439672478288 = Node('UnaryExpression_8288', parent=PassUpNode140439672478352)
PassUpNode140439672478224 = Node('PostfixExpression_8224', parent=PassUpNode140439672478288)
PrimaryExpression140439672478096 = Node('PrimaryExpression_8096', parent=PassUpNode140439672478224)
Identifier140439672478032 = Node('Identifier_8032', parent=PrimaryExpression140439672478096)
leaf = Node('a_8032', parent=Identifier140439672478032)
leaf = Node("Type=['int'], TokenLocation=(4, 19, 6)", parent=Identifier140439672478032)
leaf = Node('int _8480', parent=BinOp140439672478480)
PassUpNode140439672504400 = Node('Statement_4400', parent=PassUpNode140439672505488)
PassUpNode140439672505424 = Node('Expression_5424', parent=PassUpNode140439672504400)
AssignmentExpression140439672505360 = Node('AssignmentExpression_5360', parent=PassUpNode140439672505424)
PassUpNode140439672479568 = Node('UnaryExpression_9568', parent=AssignmentExpression140439672505360)
PassUpNode140439672479504 = Node('PostfixExpression_9504', parent=PassUpNode140439672479568)
PrimaryExpression140439672479376 = Node('PrimaryExpression_9376', parent=PassUpNode140439672479504)
Identifier140439672479312 = Node('Identifier_9312', parent=PrimaryExpression140439672479376)
leaf = Node('a_9312', parent=Identifier140439672479312)
leaf = Node("Type=['int'], TokenLocation=(4, 19, 6)", parent=Identifier140439672479312)
PassUpNode140439672505296 = Node('AssignmentExpression_5296', parent=AssignmentExpression140439672505360)
PassUpNode140439672505232 = Node('ConditionalExpression_5232', parent=PassUpNode140439672505296)
PassUpNode140439672505168 = Node('LogicalOrExpression_5168', parent=PassUpNode140439672505232)
PassUpNode140439672505104 = Node('LogicalAndExpression_5104', parent=PassUpNode140439672505168)
PassUpNode140439672505040 = Node('InclusiveOrExpression_5040', parent=PassUpNode140439672505104)
PassUpNode140439672504976 = Node('ExclusiveOrExpression_4976', parent=PassUpNode140439672505040)
PassUpNode140439672504912 = Node('AndExpression_4912', parent=PassUpNode140439672504976)
PassUpNode140439672504848 = Node('EqalityExpression_4848', parent=PassUpNode140439672504912)
PassUpNode140439672504784 = Node('ShiftExpression_4784', parent=PassUpNode140439672504848)
PassUpNode140439672504720 = Node('ShiftExpression_4720', parent=PassUpNode140439672504784)
PassUpNode140439672504656 = Node('AdditiveExpression_4656', parent=PassUpNode140439672504720)
PassUpNode140439672504592 = Node('MultiplicativeExpression_4592', parent=PassUpNode140439672504656)
PassUpNode140439672504528 = Node('CastExpression_4528', parent=PassUpNode140439672504592)
PassUpNode140439672504464 = Node('UnaryExpression_4464', parent=PassUpNode140439672504528)
PassUpNode140439672479632 = Node('PostfixExpression_9632', parent=PassUpNode140439672504464)
PrimaryExpression140439672479696 = Node('PrimaryExpression_9696', parent=PassUpNode140439672479632)
Identifier140439672479440 = Node('Identifier_9440', parent=PrimaryExpression140439672479696)
leaf = Node('c_9440', parent=Identifier140439672479440)
leaf = Node("Type=['int'], TokenLocation=(5, 27, 6)", parent=Identifier140439672479440)
PassUpNode140439672505616 = Node('Statement_5616', parent=PassUpNode140439672505680)
IterationStatement140439672507728 = Node('IterationStatement_7728', parent=PassUpNode140439672505616)
PassUpNode140439672506000 = Node('Statement_6000', parent=IterationStatement140439672507728)
CompoundStatement140439672505552 = Node('CompoundStatement_5552', parent=PassUpNode140439672506000)
PassUpNode140439672506192 = Node('StatementList_6192', parent=CompoundStatement140439672505552)
PassUpNode140439672506064 = Node('Statement_6064', parent=PassUpNode140439672506192)
IterationStatement140439672507536 = Node('IterationStatement_7536', parent=PassUpNode140439672506064)
PassUpNode140439672507472 = Node('Expression_7472', parent=IterationStatement140439672507536)
PassUpNode140439672507408 = Node('AssignmentExpression_7408', parent=PassUpNode140439672507472)
PassUpNode140439672507344 = Node('ConditionalExpression_7344', parent=PassUpNode140439672507408)
PassUpNode140439672507280 = Node('LogicalOrExpression_7280', parent=PassUpNode140439672507344)
PassUpNode140439672507216 = Node('LogicalAndExpression_7216', parent=PassUpNode140439672507280)
PassUpNode140439672507152 = Node('InclusiveOrExpression_7152', parent=PassUpNode140439672507216)
PassUpNode140439672507088 = Node('ExclusiveOrExpression_7088', parent=PassUpNode140439672507152)
PassUpNode140439672507024 = Node('AndExpression_7024', parent=PassUpNode140439672507088)
PassUpNode140439672506960 = Node('EqalityExpression_6960', parent=PassUpNode140439672507024)
PassUpNode140439672506896 = Node('ShiftExpression_6896', parent=PassUpNode140439672506960)
PassUpNode140439672506832 = Node('ShiftExpression_6832', parent=PassUpNode140439672506896)
PassUpNode140439672506768 = Node('AdditiveExpression_6768', parent=PassUpNode140439672506832)
PassUpNode140439672506704 = Node('MultiplicativeExpression_6704', parent=PassUpNode140439672506768)
PassUpNode140439672506640 = Node('CastExpression_6640', parent=PassUpNode140439672506704)
PassUpNode140439672506576 = Node('UnaryExpression_6576', parent=PassUpNode140439672506640)
PassUpNode140439672506512 = Node('PostfixExpression_6512', parent=PassUpNode140439672506576)
PrimaryExpression140439672506384 = Node('PrimaryExpression_6384', parent=PassUpNode140439672506512)
Identifier140439672506256 = Node('Identifier_6256', parent=PrimaryExpression140439672506384)
leaf = Node('c_6256', parent=Identifier140439672506256)
PassUpNode140439672506128 = Node('Statement_6128', parent=IterationStatement140439672507536)
CompoundStatement140439672505936 = Node('CompoundStatement_5936', parent=PassUpNode140439672506128)
PassUpNode140439672505808 = Node('Statement_5808', parent=PassUpNode140439672505744)

for pre, fill, node in RenderTree(PassUpNode140439672508368):
    if "TokenLocation" in node.name: print("%s%s" % (pre, node.name))
    else: print("%s%s" % (pre, node.name[:-5]) )

    
def f(node):
    if node.is_leaf and "TokenLocation" in node.name:
        return 'label="%s"' % (node.name)
    return 'label="%s"' % (node.name[:-5])

DotExporter(PassUpNode140439672508368, nodeattrfunc=f).to_picture("AST.png")
        