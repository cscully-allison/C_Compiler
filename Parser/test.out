	declaration -->  PD_O
	external_declaration -->  declaration
	translation_unit -->  external_declaration
	type_specifier -->  INT
	declaration_specifiers -->  type_specifier
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	init_declarator -->  declarator
	init_declarator_list -->  init_declarator
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	init_declarator -->  declarator
	init_declarator_list -->  init_declarator_list COMMA init_declarator
	declaration -->  declaration_specifiers init_declarator_list SEMI
	external_declaration -->  declaration
	translation_unit -->  translation_unit external_declaration
	type_specifier -->  INT
	declaration_specifiers -->  type_specifier
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	type_specifier -->  INT
	declaration_specifiers -->  type_specifier
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	parameter_declaration -->  declaration_specifiers declarator
	parameter_list -->  parameter_declaration
	type_specifier -->  CHAR
	declaration_specifiers -->  type_specifier
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	parameter_declaration -->  declaration_specifiers declarator
	parameter_list -->  parameter_list COMMA parameter_declaration
	parameter_type_list -->  parameter_list
	direct_declarator -->  direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
	declarator -->  direct_declarator
push_scope_e -->
insert_mode_e -->
	type_specifier -->  INT
	declaration_specifiers -->  type_specifier
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	init_declarator -->  declarator
	init_declarator_list -->  init_declarator
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	init_declarator -->  declarator
	init_declarator_list -->  init_declarator_list COMMA init_declarator
	identifier -->  IDENTIFIER
	direct_declarator -->  identifier
	declarator -->  direct_declarator
	init_declarator -->  declarator
	init_declarator_list -->  init_declarator_list COMMA init_declarator
	declaration -->  declaration_specifiers init_declarator_list SEMI
	declaration_list -->  declaration
insert_mode_e -->


LexToken(INT,'int',12,89)
LexToken(IDENTIFIER,{'lexeme': 'a', 'additional': {'TokenLocation': (12, 93, 8)}},12,93)
LexToken(INT,'int',13,99)
Warning: a on line 12 is a shadowded variable. Previous declaration in scope level 0 at line 2.
int a, b;

    ^

LexToken(IDENTIFIER,{'lexeme': 'q', 'additional': {'TokenLocation': (13, 103, 8)}},13,103)
LexToken(CHAR,'char',14,109)
LexToken(IDENTIFIER,{'lexeme': 'm', 'additional': {'TokenLocation': (14, 114, 9)}},14,114)
LexToken(IDENTIFIER,{'lexeme': 'q', 'additional': {'TokenLocation': (15, 120, 4)}},15,120)
LexToken(IDENTIFIER,{'lexeme': 'c', 'additional': {'TokenLocation': (15, 124, 8)}},15,124)
LexToken(IDENTIFIER,{'lexeme': 'a', 'additional': {'TokenLocation': (15, 126, 10)}},15,126)
LexToken(IF,'if',18,136)
Warning: a on line 21 is a shadowded variable. Previous declaration in scope level 0 at line 2.
int a, b;

    ^



('Insert symbol is called: ', 'In Read Mode?', False, 'f', {'Type': 'int', 'TokenLocation': (22, 172, 8)})
('Insert symbol is called: ', 'In Read Mode?', False, 'c', {'Type': 'char', 'TokenLocation': (24, 190, 9)})
Warning: c on line 24 is a shadowded variable. Previous declaration in scope level 1 at line 7.
  int l, c, d;

         ^

Warning: d on line 29 is a shadowded variable. Previous declaration in scope level 1 at line 7.
  int l, c, d;

            ^
