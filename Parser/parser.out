Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DST
    LD_F
    LD_O
    RANGE
    SINGLE_LINE_COMMENT
    ST2_F
    ST2_O
    VARYING_COMMENT

Grammar

Rule 0     S' -> translation_unit
Rule 1     translation_unit -> external_declaration
Rule 2     translation_unit -> translation_unit external_declaration
Rule 3     external_declaration -> function_definition
Rule 4     external_declaration -> declaration
Rule 5     function_definition -> declarator compound_statement
Rule 6     function_definition -> declarator declaration_list compound_statement
Rule 7     function_definition -> declaration_specifiers declarator compound_statement
Rule 8     function_definition -> declaration_specifiers declarator declaration_list compound_statement
Rule 9     declaration -> declaration_specifiers SEMI
Rule 10    declaration -> declaration_specifiers init_declarator_list SEMI
Rule 11    declaration -> PD_O
Rule 12    declaration -> PD_F
Rule 13    declaration_list -> insert_mode_e declaration
Rule 14    declaration_list -> declaration_list insert_mode_e declaration
Rule 15    declaration_specifiers -> storage_class_specifier
Rule 16    declaration_specifiers -> storage_class_specifier declaration_specifiers
Rule 17    declaration_specifiers -> type_specifier
Rule 18    declaration_specifiers -> type_specifier declaration_specifiers
Rule 19    declaration_specifiers -> type_qualifier
Rule 20    declaration_specifiers -> type_qualifier declaration_specifiers
Rule 21    storage_class_specifier -> AUTO
Rule 22    storage_class_specifier -> REGISTER
Rule 23    storage_class_specifier -> STATIC
Rule 24    storage_class_specifier -> EXTERN
Rule 25    storage_class_specifier -> TYPEDEF
Rule 26    type_specifier -> VOID
Rule 27    type_specifier -> CHAR
Rule 28    type_specifier -> SHORT
Rule 29    type_specifier -> INT
Rule 30    type_specifier -> LONG
Rule 31    type_specifier -> FLOAT
Rule 32    type_specifier -> DOUBLE
Rule 33    type_specifier -> SIGNED
Rule 34    type_specifier -> UNSIGNED
Rule 35    type_specifier -> struct_or_union_specifier
Rule 36    type_specifier -> enum_specifier
Rule 37    type_specifier -> TYPEDEF_NAME
Rule 38    type_qualifier -> CONST
Rule 39    type_qualifier -> VOLATILE
Rule 40    struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
Rule 41    struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
Rule 42    struct_or_union_specifier -> struct_or_union identifier
Rule 43    struct_or_union -> STRUCT
Rule 44    struct_or_union -> UNION
Rule 45    struct_declaration_list -> struct_declaration
Rule 46    struct_declaration_list -> struct_declaration_list struct_declaration
Rule 47    init_declarator_list -> init_declarator
Rule 48    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 49    init_declarator -> declarator
Rule 50    init_declarator -> declarator ASSIGN initializer
Rule 51    struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI
Rule 52    specifier_qualifier_list -> type_specifier
Rule 53    specifier_qualifier_list -> type_specifier specifier_qualifier_list
Rule 54    specifier_qualifier_list -> type_qualifier
Rule 55    specifier_qualifier_list -> type_qualifier specifier_qualifier_list
Rule 56    struct_declarator_list -> struct_declarator
Rule 57    struct_declarator_list -> struct_declarator_list COMMA struct_declarator
Rule 58    struct_declarator -> declarator
Rule 59    struct_declarator -> COLON constant_expression
Rule 60    struct_declarator -> declarator COLON constant_expression
Rule 61    enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE
Rule 62    enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
Rule 63    enum_specifier -> ENUM identifier
Rule 64    enumerator_list -> enumerator
Rule 65    enumerator_list -> enumerator_list COMMA enumerator
Rule 66    enumerator -> identifier
Rule 67    enumerator -> identifier ASSIGN constant_expression
Rule 68    declarator -> direct_declarator
Rule 69    declarator -> pointer direct_declarator
Rule 70    direct_declarator -> identifier
Rule 71    direct_declarator -> OPENPAREN declarator CLOSEPAREN
Rule 72    direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET
Rule 73    direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
Rule 74    direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN
Rule 75    direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
Rule 76    direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN
Rule 77    pointer -> ASTERISK
Rule 78    pointer -> ASTERISK type_qualifier_list
Rule 79    pointer -> ASTERISK pointer
Rule 80    pointer -> ASTERISK type_qualifier_list pointer
Rule 81    type_qualifier_list -> type_qualifier
Rule 82    type_qualifier_list -> type_qualifier_list type_qualifier
Rule 83    parameter_type_list -> parameter_list
Rule 84    parameter_type_list -> parameter_list COMMA ELIPSIS
Rule 85    parameter_list -> parameter_declaration
Rule 86    parameter_list -> parameter_list COMMA parameter_declaration
Rule 87    parameter_declaration -> declaration_specifiers declarator
Rule 88    parameter_declaration -> declaration_specifiers
Rule 89    parameter_declaration -> declaration_specifiers abstract_declarator
Rule 90    identifier_list -> identifier
Rule 91    identifier_list -> identifier_list COMMA identifier
Rule 92    initializer -> assignment_expression
Rule 93    initializer -> OPENBRACE initializer_list CLOSEBRACE
Rule 94    initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE
Rule 95    initializer_list -> initializer
Rule 96    initializer_list -> initializer_list COMMA initializer
Rule 97    type_name -> specifier_qualifier_list
Rule 98    type_name -> specifier_qualifier_list abstract_declarator
Rule 99    abstract_declarator -> pointer
Rule 100   abstract_declarator -> direct_abstract_declarator
Rule 101   abstract_declarator -> pointer direct_abstract_declarator
Rule 102   direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN
Rule 103   direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET
Rule 104   direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET
Rule 105   direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET
Rule 106   direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
Rule 107   direct_abstract_declarator -> OPENPAREN CLOSEPAREN
Rule 108   direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN
Rule 109   direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN
Rule 110   direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
Rule 111   statement -> labeled_statement
Rule 112   statement -> compound_statement
Rule 113   statement -> expression_statement
Rule 114   statement -> selection_statement
Rule 115   statement -> iteration_statement
Rule 116   statement -> jump_statement
Rule 117   statement -> PD_O
Rule 118   statement -> PD_F
Rule 119   labeled_statement -> identifier COLON statement
Rule 120   labeled_statement -> CASE constant_expression COLON statement
Rule 121   labeled_statement -> DEFAULT COLON statement
Rule 122   expression_statement -> SEMI
Rule 123   expression_statement -> expression SEMI
Rule 124   compound_statement -> OPENBRACE CLOSEBRACE
Rule 125   compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
Rule 126   compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
Rule 127   compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
Rule 128   statement_list -> read_mode_e statement
Rule 129   statement_list -> statement_list read_mode_e statement
Rule 130   selection_statement -> IF OPENPAREN expression CLOSEPAREN statement
Rule 131   selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement
Rule 132   selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement
Rule 133   iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement
Rule 134   iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
Rule 135   iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
Rule 136   iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
Rule 137   iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
Rule 138   iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
Rule 139   iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
Rule 140   iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
Rule 141   iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
Rule 142   iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
Rule 143   jump_statement -> GOTO identifier SEMI
Rule 144   jump_statement -> CONTINUE SEMI
Rule 145   jump_statement -> BREAK SEMI
Rule 146   jump_statement -> RETURN SEMI
Rule 147   jump_statement -> RETURN expression SEMI
Rule 148   expression -> assignment_expression
Rule 149   expression -> expression COMMA assignment_expression
Rule 150   assignment_expression -> conditional_expression
Rule 151   assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 152   assignment_operator -> ASSIGN
Rule 153   assignment_operator -> MUL_ASSIGN
Rule 154   assignment_operator -> DIV_ASSIGN
Rule 155   assignment_operator -> MOD_ASSIGN
Rule 156   assignment_operator -> ADD_ASSIGN
Rule 157   assignment_operator -> SUB_ASSIGN
Rule 158   assignment_operator -> LEFT_ASSIGN
Rule 159   assignment_operator -> RIGHT_ASSIGN
Rule 160   assignment_operator -> AND_ASSIGN
Rule 161   assignment_operator -> XOR_ASSIGN
Rule 162   assignment_operator -> OR_ASSIGN
Rule 163   conditional_expression -> logical_or_expression
Rule 164   conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression
Rule 165   constant_expression -> conditional_expression
Rule 166   logical_or_expression -> logical_and_expression
Rule 167   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
Rule 168   logical_and_expression -> inclusive_or_expression
Rule 169   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
Rule 170   inclusive_or_expression -> exclusive_or_expression
Rule 171   inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
Rule 172   exclusive_or_expression -> and_expression
Rule 173   exclusive_or_expression -> exclusive_or_expression CARAT and_expression
Rule 174   and_expression -> equality_expression
Rule 175   and_expression -> and_expression AMPERSAND equality_expression
Rule 176   equality_expression -> relational_expression
Rule 177   equality_expression -> equality_expression EQ_OP relational_expression
Rule 178   equality_expression -> equality_expression NE_OP relational_expression
Rule 179   relational_expression -> shift_expression
Rule 180   relational_expression -> relational_expression LE shift_expression
Rule 181   relational_expression -> relational_expression GT shift_expression
Rule 182   relational_expression -> relational_expression LE_OP shift_expression
Rule 183   relational_expression -> relational_expression GE_OP shift_expression
Rule 184   shift_expression -> additive_expression
Rule 185   shift_expression -> shift_expression LEFT_OP additive_expression
Rule 186   shift_expression -> shift_expression RIGHT_OP additive_expression
Rule 187   additive_expression -> multiplicative_expression
Rule 188   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 189   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 190   multiplicative_expression -> cast_expression
Rule 191   multiplicative_expression -> multiplicative_expression ASTERISK cast_expression
Rule 192   multiplicative_expression -> multiplicative_expression DIV cast_expression
Rule 193   multiplicative_expression -> multiplicative_expression PERCENT cast_expression
Rule 194   cast_expression -> unary_expression
Rule 195   cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression
Rule 196   unary_expression -> postfix_expression
Rule 197   unary_expression -> INC_OP unary_expression
Rule 198   unary_expression -> DEC_OP unary_expression
Rule 199   unary_expression -> unary_operator cast_expression
Rule 200   unary_expression -> SIZEOF unary_expression
Rule 201   unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN
Rule 202   unary_operator -> AMPERSAND
Rule 203   unary_operator -> ASTERISK
Rule 204   unary_operator -> PLUS
Rule 205   unary_operator -> MINUS
Rule 206   unary_operator -> TILDE
Rule 207   unary_operator -> BANG
Rule 208   postfix_expression -> primary_expression
Rule 209   postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET
Rule 210   postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN
Rule 211   postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
Rule 212   postfix_expression -> postfix_expression PERIOD identifier
Rule 213   postfix_expression -> postfix_expression PTR_OP identifier
Rule 214   postfix_expression -> postfix_expression INC_OP
Rule 215   postfix_expression -> postfix_expression DEC_OP
Rule 216   primary_expression -> identifier
Rule 217   primary_expression -> constant
Rule 218   primary_expression -> string
Rule 219   primary_expression -> OPENPAREN expression CLOSEPAREN
Rule 220   argument_expression_list -> assignment_expression
Rule 221   argument_expression_list -> argument_expression_list COMMA assignment_expression
Rule 222   constant -> INTEGER_CONSTANT
Rule 223   constant -> CHARACTER_CONSTANT
Rule 224   constant -> FLOATING_CONSTANT
Rule 225   constant -> ENUMERATION_CONSTANT
Rule 226   string -> STRING_LITERAL
Rule 227   identifier -> IDENTIFIER
Rule 228   insert_mode_e -> <empty>
Rule 229   read_mode_e -> <empty>
Rule 230   push_scope_e -> <empty>
Rule 231   pop_scope_e -> <empty>

Terminals, with rules where they appear

ADD_ASSIGN           : 156
AMPERSAND            : 175 202
AND_ASSIGN           : 160
AND_OP               : 169
ASSIGN               : 50 67 152
ASTERISK             : 77 78 79 80 191 203
AUTO                 : 21
BANG                 : 207
BREAK                : 145
CARAT                : 173
CASE                 : 120
CHAR                 : 27
CHARACTER_CONSTANT   : 223
CLOSEBRACE           : 40 41 61 62 93 94 124 125 126 127
CLOSEBRACKET         : 72 73 103 104 105 106 209
CLOSEPAREN           : 71 74 75 76 102 107 108 109 110 130 131 132 133 134 135 136 137 138 139 140 141 142 195 201 210 211 219
COLON                : 59 60 119 120 121 164
COMMA                : 48 57 65 84 86 91 94 96 149 221
CONST                : 38
CONTINUE             : 144
DEC_OP               : 198 215
DEFAULT              : 121
DIV                  : 192
DIV_ASSIGN           : 154
DO                   : 134
DOUBLE               : 32
DST                  : 
ELIPSIS              : 84
ELSE                 : 131
ENUM                 : 61 62 63
ENUMERATION_CONSTANT : 225
EQ_OP                : 177
EXTERN               : 24
FLOAT                : 31
FLOATING_CONSTANT    : 224
FOR                  : 135 136 137 138 139 140 141 142
GE_OP                : 183
GOTO                 : 143
GT                   : 181
IDENTIFIER           : 227
IF                   : 130 131
INC_OP               : 197 214
INT                  : 29
INTEGER_CONSTANT     : 222
LD_F                 : 
LD_O                 : 
LE                   : 180
LEFT_ASSIGN          : 158
LEFT_OP              : 185
LE_OP                : 182
LONG                 : 30
MINUS                : 189 205
MOD_ASSIGN           : 155
MUL_ASSIGN           : 153
NE_OP                : 178
OPENBRACE            : 40 41 61 62 93 94 124 125 126 127
OPENBRACKET          : 72 73 103 104 105 106 209
OPENPAREN            : 71 74 75 76 102 107 108 109 110 130 131 132 133 134 135 136 137 138 139 140 141 142 195 201 210 211 219
OR_ASSIGN            : 162
OR_OP                : 167
PD_F                 : 12 118
PD_O                 : 11 117
PERCENT              : 193
PERIOD               : 212
PIPE                 : 171
PLUS                 : 188 204
PTR_OP               : 213
QMARK                : 164
RANGE                : 
REGISTER             : 22
RETURN               : 146 147
RIGHT_ASSIGN         : 159
RIGHT_OP             : 186
SEMI                 : 9 10 51 122 123 134 135 135 136 136 137 137 138 138 139 139 140 140 141 141 142 142 143 144 145 146 147
SHORT                : 28
SIGNED               : 33
SINGLE_LINE_COMMENT  : 
SIZEOF               : 200 201
ST2_F                : 
ST2_O                : 
STATIC               : 23
STRING_LITERAL       : 226
STRUCT               : 43
SUB_ASSIGN           : 157
SWITCH               : 132
TILDE                : 206
TYPEDEF              : 25
TYPEDEF_NAME         : 37
UNION                : 44
UNSIGNED             : 34
VARYING_COMMENT      : 
VOID                 : 26
VOLATILE             : 39
WHILE                : 133 134
XOR_ASSIGN           : 161
error                : 

Nonterminals, with rules where they appear

abstract_declarator  : 89 98 102
additive_expression  : 184 185 186 188 189
and_expression       : 172 173 175
argument_expression_list : 211 221
assignment_expression : 92 148 149 151 220 221
assignment_operator  : 151
cast_expression      : 190 191 192 193 195 199
compound_statement   : 5 6 7 8 112
conditional_expression : 150 164 165
constant             : 217
constant_expression  : 59 60 67 73 104 106 120
declaration          : 4 13 14
declaration_list     : 6 8 14 126 127
declaration_specifiers : 7 8 9 10 16 18 20 87 88 89
declarator           : 5 6 7 8 49 50 58 60 71 87
direct_abstract_declarator : 100 101 105 106 109 110
direct_declarator    : 68 69 72 73 74 75 76
enum_specifier       : 36
enumerator           : 64 65
enumerator_list      : 61 62 65
equality_expression  : 174 175 177 178
exclusive_or_expression : 170 171 173
expression           : 123 130 131 132 133 134 136 137 138 138 139 140 140 141 141 142 142 142 147 149 164 209 219
expression_statement : 113
external_declaration : 1 2
function_definition  : 3
identifier           : 40 42 62 63 66 67 70 90 91 119 143 212 213 216
identifier_list      : 76 91
inclusive_or_expression : 168 169 171
init_declarator      : 47 48
init_declarator_list : 10 48
initializer          : 50 95 96
initializer_list     : 93 94 96
insert_mode_e        : 13 14 127
iteration_statement  : 115
jump_statement       : 116
labeled_statement    : 111
logical_and_expression : 166 167 169
logical_or_expression : 163 164 167
multiplicative_expression : 187 188 189 191 192 193
parameter_declaration : 85 86
parameter_list       : 83 84 86
parameter_type_list  : 75 108 110
pointer              : 69 79 80 99 101
pop_scope_e          : 125 126 127
postfix_expression   : 196 209 210 211 212 213 214 215
primary_expression   : 208
push_scope_e         : 125 126 127
read_mode_e          : 128 129
relational_expression : 176 177 178 180 181 182 183
selection_statement  : 114
shift_expression     : 179 180 181 182 183 185 186
specifier_qualifier_list : 51 53 55 97 98
statement            : 119 120 121 128 129 130 131 131 132 133 134 135 136 137 138 139 140 141 142
statement_list       : 125 127 129
storage_class_specifier : 15 16
string               : 218
struct_declaration   : 45 46
struct_declaration_list : 40 41 46
struct_declarator    : 56 57
struct_declarator_list : 51 57
struct_or_union      : 40 41 42
struct_or_union_specifier : 35
translation_unit     : 2 0
type_name            : 195 201
type_qualifier       : 19 20 54 55 81 82
type_qualifier_list  : 78 80 82
type_specifier       : 17 18 52 53
unary_expression     : 151 194 197 198 200
unary_operator       : 199

Parsing method: LALR

state 0

    (0) S' -> . translation_unit
    (1) translation_unit -> . external_declaration
    (2) translation_unit -> . translation_unit external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declarator compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declaration_specifiers declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (11) declaration -> . PD_O
    (12) declaration -> . PD_F
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (227) identifier -> . IDENTIFIER
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    PD_O            shift and go to state 7
    PD_F            shift and go to state 8
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    IDENTIFIER      shift and go to state 36
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    translation_unit               shift and go to state 1
    external_declaration           shift and go to state 2
    function_definition            shift and go to state 3
    declaration                    shift and go to state 4
    declarator                     shift and go to state 5
    declaration_specifiers         shift and go to state 6
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    identifier                     shift and go to state 14
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 1

    (0) S' -> translation_unit .
    (2) translation_unit -> translation_unit . external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declarator compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declaration_specifiers declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (11) declaration -> . PD_O
    (12) declaration -> . PD_F
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (227) identifier -> . IDENTIFIER
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    PD_O            shift and go to state 7
    PD_F            shift and go to state 8
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    IDENTIFIER      shift and go to state 36
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    external_declaration           shift and go to state 41
    function_definition            shift and go to state 3
    declaration                    shift and go to state 4
    declarator                     shift and go to state 5
    declaration_specifiers         shift and go to state 6
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    identifier                     shift and go to state 14
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 2

    (1) translation_unit -> external_declaration .

    PD_O            reduce using rule 1 (translation_unit -> external_declaration .)
    PD_F            reduce using rule 1 (translation_unit -> external_declaration .)
    OPENPAREN       reduce using rule 1 (translation_unit -> external_declaration .)
    ASTERISK        reduce using rule 1 (translation_unit -> external_declaration .)
    AUTO            reduce using rule 1 (translation_unit -> external_declaration .)
    REGISTER        reduce using rule 1 (translation_unit -> external_declaration .)
    STATIC          reduce using rule 1 (translation_unit -> external_declaration .)
    EXTERN          reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEDEF         reduce using rule 1 (translation_unit -> external_declaration .)
    VOID            reduce using rule 1 (translation_unit -> external_declaration .)
    CHAR            reduce using rule 1 (translation_unit -> external_declaration .)
    SHORT           reduce using rule 1 (translation_unit -> external_declaration .)
    INT             reduce using rule 1 (translation_unit -> external_declaration .)
    LONG            reduce using rule 1 (translation_unit -> external_declaration .)
    FLOAT           reduce using rule 1 (translation_unit -> external_declaration .)
    DOUBLE          reduce using rule 1 (translation_unit -> external_declaration .)
    SIGNED          reduce using rule 1 (translation_unit -> external_declaration .)
    UNSIGNED        reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEDEF_NAME    reduce using rule 1 (translation_unit -> external_declaration .)
    CONST           reduce using rule 1 (translation_unit -> external_declaration .)
    VOLATILE        reduce using rule 1 (translation_unit -> external_declaration .)
    IDENTIFIER      reduce using rule 1 (translation_unit -> external_declaration .)
    ENUM            reduce using rule 1 (translation_unit -> external_declaration .)
    STRUCT          reduce using rule 1 (translation_unit -> external_declaration .)
    UNION           reduce using rule 1 (translation_unit -> external_declaration .)
    $end            reduce using rule 1 (translation_unit -> external_declaration .)


state 3

    (3) external_declaration -> function_definition .

    PD_O            reduce using rule 3 (external_declaration -> function_definition .)
    PD_F            reduce using rule 3 (external_declaration -> function_definition .)
    OPENPAREN       reduce using rule 3 (external_declaration -> function_definition .)
    ASTERISK        reduce using rule 3 (external_declaration -> function_definition .)
    AUTO            reduce using rule 3 (external_declaration -> function_definition .)
    REGISTER        reduce using rule 3 (external_declaration -> function_definition .)
    STATIC          reduce using rule 3 (external_declaration -> function_definition .)
    EXTERN          reduce using rule 3 (external_declaration -> function_definition .)
    TYPEDEF         reduce using rule 3 (external_declaration -> function_definition .)
    VOID            reduce using rule 3 (external_declaration -> function_definition .)
    CHAR            reduce using rule 3 (external_declaration -> function_definition .)
    SHORT           reduce using rule 3 (external_declaration -> function_definition .)
    INT             reduce using rule 3 (external_declaration -> function_definition .)
    LONG            reduce using rule 3 (external_declaration -> function_definition .)
    FLOAT           reduce using rule 3 (external_declaration -> function_definition .)
    DOUBLE          reduce using rule 3 (external_declaration -> function_definition .)
    SIGNED          reduce using rule 3 (external_declaration -> function_definition .)
    UNSIGNED        reduce using rule 3 (external_declaration -> function_definition .)
    TYPEDEF_NAME    reduce using rule 3 (external_declaration -> function_definition .)
    CONST           reduce using rule 3 (external_declaration -> function_definition .)
    VOLATILE        reduce using rule 3 (external_declaration -> function_definition .)
    IDENTIFIER      reduce using rule 3 (external_declaration -> function_definition .)
    ENUM            reduce using rule 3 (external_declaration -> function_definition .)
    STRUCT          reduce using rule 3 (external_declaration -> function_definition .)
    UNION           reduce using rule 3 (external_declaration -> function_definition .)
    $end            reduce using rule 3 (external_declaration -> function_definition .)


state 4

    (4) external_declaration -> declaration .

    PD_O            reduce using rule 4 (external_declaration -> declaration .)
    PD_F            reduce using rule 4 (external_declaration -> declaration .)
    OPENPAREN       reduce using rule 4 (external_declaration -> declaration .)
    ASTERISK        reduce using rule 4 (external_declaration -> declaration .)
    AUTO            reduce using rule 4 (external_declaration -> declaration .)
    REGISTER        reduce using rule 4 (external_declaration -> declaration .)
    STATIC          reduce using rule 4 (external_declaration -> declaration .)
    EXTERN          reduce using rule 4 (external_declaration -> declaration .)
    TYPEDEF         reduce using rule 4 (external_declaration -> declaration .)
    VOID            reduce using rule 4 (external_declaration -> declaration .)
    CHAR            reduce using rule 4 (external_declaration -> declaration .)
    SHORT           reduce using rule 4 (external_declaration -> declaration .)
    INT             reduce using rule 4 (external_declaration -> declaration .)
    LONG            reduce using rule 4 (external_declaration -> declaration .)
    FLOAT           reduce using rule 4 (external_declaration -> declaration .)
    DOUBLE          reduce using rule 4 (external_declaration -> declaration .)
    SIGNED          reduce using rule 4 (external_declaration -> declaration .)
    UNSIGNED        reduce using rule 4 (external_declaration -> declaration .)
    TYPEDEF_NAME    reduce using rule 4 (external_declaration -> declaration .)
    CONST           reduce using rule 4 (external_declaration -> declaration .)
    VOLATILE        reduce using rule 4 (external_declaration -> declaration .)
    IDENTIFIER      reduce using rule 4 (external_declaration -> declaration .)
    ENUM            reduce using rule 4 (external_declaration -> declaration .)
    STRUCT          reduce using rule 4 (external_declaration -> declaration .)
    UNION           reduce using rule 4 (external_declaration -> declaration .)
    $end            reduce using rule 4 (external_declaration -> declaration .)


state 5

    (5) function_definition -> declarator . compound_statement
    (6) function_definition -> declarator . declaration_list compound_statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (13) declaration_list -> . insert_mode_e declaration
    (14) declaration_list -> . declaration_list insert_mode_e declaration
    (228) insert_mode_e -> .

    OPENBRACE       shift and go to state 44
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)

    compound_statement             shift and go to state 42
    declaration_list               shift and go to state 43
    insert_mode_e                  shift and go to state 45

state 6

    (7) function_definition -> declaration_specifiers . declarator compound_statement
    (8) function_definition -> declaration_specifiers . declarator declaration_list compound_statement
    (9) declaration -> declaration_specifiers . SEMI
    (10) declaration -> declaration_specifiers . init_declarator_list SEMI
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (47) init_declarator_list -> . init_declarator
    (48) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (49) init_declarator -> . declarator
    (50) init_declarator -> . declarator ASSIGN initializer
    (227) identifier -> . IDENTIFIER

    SEMI            shift and go to state 47
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    declarator                     shift and go to state 46
    init_declarator_list           shift and go to state 48
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    init_declarator                shift and go to state 49
    identifier                     shift and go to state 14

state 7

    (11) declaration -> PD_O .

    PD_O            reduce using rule 11 (declaration -> PD_O .)
    PD_F            reduce using rule 11 (declaration -> PD_O .)
    OPENPAREN       reduce using rule 11 (declaration -> PD_O .)
    ASTERISK        reduce using rule 11 (declaration -> PD_O .)
    AUTO            reduce using rule 11 (declaration -> PD_O .)
    REGISTER        reduce using rule 11 (declaration -> PD_O .)
    STATIC          reduce using rule 11 (declaration -> PD_O .)
    EXTERN          reduce using rule 11 (declaration -> PD_O .)
    TYPEDEF         reduce using rule 11 (declaration -> PD_O .)
    VOID            reduce using rule 11 (declaration -> PD_O .)
    CHAR            reduce using rule 11 (declaration -> PD_O .)
    SHORT           reduce using rule 11 (declaration -> PD_O .)
    INT             reduce using rule 11 (declaration -> PD_O .)
    LONG            reduce using rule 11 (declaration -> PD_O .)
    FLOAT           reduce using rule 11 (declaration -> PD_O .)
    DOUBLE          reduce using rule 11 (declaration -> PD_O .)
    SIGNED          reduce using rule 11 (declaration -> PD_O .)
    UNSIGNED        reduce using rule 11 (declaration -> PD_O .)
    TYPEDEF_NAME    reduce using rule 11 (declaration -> PD_O .)
    CONST           reduce using rule 11 (declaration -> PD_O .)
    VOLATILE        reduce using rule 11 (declaration -> PD_O .)
    IDENTIFIER      reduce using rule 11 (declaration -> PD_O .)
    ENUM            reduce using rule 11 (declaration -> PD_O .)
    STRUCT          reduce using rule 11 (declaration -> PD_O .)
    UNION           reduce using rule 11 (declaration -> PD_O .)
    $end            reduce using rule 11 (declaration -> PD_O .)
    OPENBRACE       reduce using rule 11 (declaration -> PD_O .)
    CLOSEBRACE      reduce using rule 11 (declaration -> PD_O .)
    CASE            reduce using rule 11 (declaration -> PD_O .)
    DEFAULT         reduce using rule 11 (declaration -> PD_O .)
    SEMI            reduce using rule 11 (declaration -> PD_O .)
    IF              reduce using rule 11 (declaration -> PD_O .)
    SWITCH          reduce using rule 11 (declaration -> PD_O .)
    WHILE           reduce using rule 11 (declaration -> PD_O .)
    DO              reduce using rule 11 (declaration -> PD_O .)
    FOR             reduce using rule 11 (declaration -> PD_O .)
    GOTO            reduce using rule 11 (declaration -> PD_O .)
    CONTINUE        reduce using rule 11 (declaration -> PD_O .)
    BREAK           reduce using rule 11 (declaration -> PD_O .)
    RETURN          reduce using rule 11 (declaration -> PD_O .)
    INC_OP          reduce using rule 11 (declaration -> PD_O .)
    DEC_OP          reduce using rule 11 (declaration -> PD_O .)
    SIZEOF          reduce using rule 11 (declaration -> PD_O .)
    AMPERSAND       reduce using rule 11 (declaration -> PD_O .)
    PLUS            reduce using rule 11 (declaration -> PD_O .)
    MINUS           reduce using rule 11 (declaration -> PD_O .)
    TILDE           reduce using rule 11 (declaration -> PD_O .)
    BANG            reduce using rule 11 (declaration -> PD_O .)
    INTEGER_CONSTANT reduce using rule 11 (declaration -> PD_O .)
    CHARACTER_CONSTANT reduce using rule 11 (declaration -> PD_O .)
    FLOATING_CONSTANT reduce using rule 11 (declaration -> PD_O .)
    ENUMERATION_CONSTANT reduce using rule 11 (declaration -> PD_O .)
    STRING_LITERAL  reduce using rule 11 (declaration -> PD_O .)


state 8

    (12) declaration -> PD_F .

    PD_O            reduce using rule 12 (declaration -> PD_F .)
    PD_F            reduce using rule 12 (declaration -> PD_F .)
    OPENPAREN       reduce using rule 12 (declaration -> PD_F .)
    ASTERISK        reduce using rule 12 (declaration -> PD_F .)
    AUTO            reduce using rule 12 (declaration -> PD_F .)
    REGISTER        reduce using rule 12 (declaration -> PD_F .)
    STATIC          reduce using rule 12 (declaration -> PD_F .)
    EXTERN          reduce using rule 12 (declaration -> PD_F .)
    TYPEDEF         reduce using rule 12 (declaration -> PD_F .)
    VOID            reduce using rule 12 (declaration -> PD_F .)
    CHAR            reduce using rule 12 (declaration -> PD_F .)
    SHORT           reduce using rule 12 (declaration -> PD_F .)
    INT             reduce using rule 12 (declaration -> PD_F .)
    LONG            reduce using rule 12 (declaration -> PD_F .)
    FLOAT           reduce using rule 12 (declaration -> PD_F .)
    DOUBLE          reduce using rule 12 (declaration -> PD_F .)
    SIGNED          reduce using rule 12 (declaration -> PD_F .)
    UNSIGNED        reduce using rule 12 (declaration -> PD_F .)
    TYPEDEF_NAME    reduce using rule 12 (declaration -> PD_F .)
    CONST           reduce using rule 12 (declaration -> PD_F .)
    VOLATILE        reduce using rule 12 (declaration -> PD_F .)
    IDENTIFIER      reduce using rule 12 (declaration -> PD_F .)
    ENUM            reduce using rule 12 (declaration -> PD_F .)
    STRUCT          reduce using rule 12 (declaration -> PD_F .)
    UNION           reduce using rule 12 (declaration -> PD_F .)
    $end            reduce using rule 12 (declaration -> PD_F .)
    OPENBRACE       reduce using rule 12 (declaration -> PD_F .)
    CLOSEBRACE      reduce using rule 12 (declaration -> PD_F .)
    CASE            reduce using rule 12 (declaration -> PD_F .)
    DEFAULT         reduce using rule 12 (declaration -> PD_F .)
    SEMI            reduce using rule 12 (declaration -> PD_F .)
    IF              reduce using rule 12 (declaration -> PD_F .)
    SWITCH          reduce using rule 12 (declaration -> PD_F .)
    WHILE           reduce using rule 12 (declaration -> PD_F .)
    DO              reduce using rule 12 (declaration -> PD_F .)
    FOR             reduce using rule 12 (declaration -> PD_F .)
    GOTO            reduce using rule 12 (declaration -> PD_F .)
    CONTINUE        reduce using rule 12 (declaration -> PD_F .)
    BREAK           reduce using rule 12 (declaration -> PD_F .)
    RETURN          reduce using rule 12 (declaration -> PD_F .)
    INC_OP          reduce using rule 12 (declaration -> PD_F .)
    DEC_OP          reduce using rule 12 (declaration -> PD_F .)
    SIZEOF          reduce using rule 12 (declaration -> PD_F .)
    AMPERSAND       reduce using rule 12 (declaration -> PD_F .)
    PLUS            reduce using rule 12 (declaration -> PD_F .)
    MINUS           reduce using rule 12 (declaration -> PD_F .)
    TILDE           reduce using rule 12 (declaration -> PD_F .)
    BANG            reduce using rule 12 (declaration -> PD_F .)
    INTEGER_CONSTANT reduce using rule 12 (declaration -> PD_F .)
    CHARACTER_CONSTANT reduce using rule 12 (declaration -> PD_F .)
    FLOATING_CONSTANT reduce using rule 12 (declaration -> PD_F .)
    ENUMERATION_CONSTANT reduce using rule 12 (declaration -> PD_F .)
    STRING_LITERAL  reduce using rule 12 (declaration -> PD_F .)


state 9

    (68) declarator -> direct_declarator .
    (72) direct_declarator -> direct_declarator . OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> direct_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> direct_declarator . OPENPAREN CLOSEPAREN
    (75) direct_declarator -> direct_declarator . OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> direct_declarator . OPENPAREN identifier_list CLOSEPAREN

    OPENBRACE       reduce using rule 68 (declarator -> direct_declarator .)
    PD_O            reduce using rule 68 (declarator -> direct_declarator .)
    PD_F            reduce using rule 68 (declarator -> direct_declarator .)
    AUTO            reduce using rule 68 (declarator -> direct_declarator .)
    REGISTER        reduce using rule 68 (declarator -> direct_declarator .)
    STATIC          reduce using rule 68 (declarator -> direct_declarator .)
    EXTERN          reduce using rule 68 (declarator -> direct_declarator .)
    TYPEDEF         reduce using rule 68 (declarator -> direct_declarator .)
    VOID            reduce using rule 68 (declarator -> direct_declarator .)
    CHAR            reduce using rule 68 (declarator -> direct_declarator .)
    SHORT           reduce using rule 68 (declarator -> direct_declarator .)
    INT             reduce using rule 68 (declarator -> direct_declarator .)
    LONG            reduce using rule 68 (declarator -> direct_declarator .)
    FLOAT           reduce using rule 68 (declarator -> direct_declarator .)
    DOUBLE          reduce using rule 68 (declarator -> direct_declarator .)
    SIGNED          reduce using rule 68 (declarator -> direct_declarator .)
    UNSIGNED        reduce using rule 68 (declarator -> direct_declarator .)
    TYPEDEF_NAME    reduce using rule 68 (declarator -> direct_declarator .)
    CONST           reduce using rule 68 (declarator -> direct_declarator .)
    VOLATILE        reduce using rule 68 (declarator -> direct_declarator .)
    ENUM            reduce using rule 68 (declarator -> direct_declarator .)
    STRUCT          reduce using rule 68 (declarator -> direct_declarator .)
    UNION           reduce using rule 68 (declarator -> direct_declarator .)
    ASSIGN          reduce using rule 68 (declarator -> direct_declarator .)
    SEMI            reduce using rule 68 (declarator -> direct_declarator .)
    COMMA           reduce using rule 68 (declarator -> direct_declarator .)
    CLOSEPAREN      reduce using rule 68 (declarator -> direct_declarator .)
    COLON           reduce using rule 68 (declarator -> direct_declarator .)
    OPENBRACKET     shift and go to state 50
    OPENPAREN       shift and go to state 51


state 10

    (69) declarator -> pointer . direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (227) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 15
    IDENTIFIER      shift and go to state 36

    direct_declarator              shift and go to state 52
    identifier                     shift and go to state 14

state 11

    (15) declaration_specifiers -> storage_class_specifier .
    (16) declaration_specifiers -> storage_class_specifier . declaration_specifiers
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    SEMI            reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    OPENPAREN       reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    ASTERISK        reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    IDENTIFIER      reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    OPENBRACKET     reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    COMMA           reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    CLOSEPAREN      reduce using rule 15 (declaration_specifiers -> storage_class_specifier .)
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    storage_class_specifier        shift and go to state 11
    declaration_specifiers         shift and go to state 53
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 12

    (17) declaration_specifiers -> type_specifier .
    (18) declaration_specifiers -> type_specifier . declaration_specifiers
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    SEMI            reduce using rule 17 (declaration_specifiers -> type_specifier .)
    OPENPAREN       reduce using rule 17 (declaration_specifiers -> type_specifier .)
    ASTERISK        reduce using rule 17 (declaration_specifiers -> type_specifier .)
    IDENTIFIER      reduce using rule 17 (declaration_specifiers -> type_specifier .)
    OPENBRACKET     reduce using rule 17 (declaration_specifiers -> type_specifier .)
    COMMA           reduce using rule 17 (declaration_specifiers -> type_specifier .)
    CLOSEPAREN      reduce using rule 17 (declaration_specifiers -> type_specifier .)
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    type_specifier                 shift and go to state 12
    declaration_specifiers         shift and go to state 54
    storage_class_specifier        shift and go to state 11
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 13

    (19) declaration_specifiers -> type_qualifier .
    (20) declaration_specifiers -> type_qualifier . declaration_specifiers
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    SEMI            reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    OPENPAREN       reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    ASTERISK        reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    IDENTIFIER      reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    OPENBRACKET     reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    COMMA           reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    CLOSEPAREN      reduce using rule 19 (declaration_specifiers -> type_qualifier .)
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    type_qualifier                 shift and go to state 13
    declaration_specifiers         shift and go to state 55
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 14

    (70) direct_declarator -> identifier .

    OPENBRACKET     reduce using rule 70 (direct_declarator -> identifier .)
    OPENPAREN       reduce using rule 70 (direct_declarator -> identifier .)
    OPENBRACE       reduce using rule 70 (direct_declarator -> identifier .)
    PD_O            reduce using rule 70 (direct_declarator -> identifier .)
    PD_F            reduce using rule 70 (direct_declarator -> identifier .)
    AUTO            reduce using rule 70 (direct_declarator -> identifier .)
    REGISTER        reduce using rule 70 (direct_declarator -> identifier .)
    STATIC          reduce using rule 70 (direct_declarator -> identifier .)
    EXTERN          reduce using rule 70 (direct_declarator -> identifier .)
    TYPEDEF         reduce using rule 70 (direct_declarator -> identifier .)
    VOID            reduce using rule 70 (direct_declarator -> identifier .)
    CHAR            reduce using rule 70 (direct_declarator -> identifier .)
    SHORT           reduce using rule 70 (direct_declarator -> identifier .)
    INT             reduce using rule 70 (direct_declarator -> identifier .)
    LONG            reduce using rule 70 (direct_declarator -> identifier .)
    FLOAT           reduce using rule 70 (direct_declarator -> identifier .)
    DOUBLE          reduce using rule 70 (direct_declarator -> identifier .)
    SIGNED          reduce using rule 70 (direct_declarator -> identifier .)
    UNSIGNED        reduce using rule 70 (direct_declarator -> identifier .)
    TYPEDEF_NAME    reduce using rule 70 (direct_declarator -> identifier .)
    CONST           reduce using rule 70 (direct_declarator -> identifier .)
    VOLATILE        reduce using rule 70 (direct_declarator -> identifier .)
    ENUM            reduce using rule 70 (direct_declarator -> identifier .)
    STRUCT          reduce using rule 70 (direct_declarator -> identifier .)
    UNION           reduce using rule 70 (direct_declarator -> identifier .)
    ASSIGN          reduce using rule 70 (direct_declarator -> identifier .)
    SEMI            reduce using rule 70 (direct_declarator -> identifier .)
    COMMA           reduce using rule 70 (direct_declarator -> identifier .)
    CLOSEPAREN      reduce using rule 70 (direct_declarator -> identifier .)
    COLON           reduce using rule 70 (direct_declarator -> identifier .)


state 15

    (71) direct_declarator -> OPENPAREN . declarator CLOSEPAREN
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (227) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    declarator                     shift and go to state 56
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    identifier                     shift and go to state 14

state 16

    (77) pointer -> ASTERISK .
    (78) pointer -> ASTERISK . type_qualifier_list
    (79) pointer -> ASTERISK . pointer
    (80) pointer -> ASTERISK . type_qualifier_list pointer
    (81) type_qualifier_list -> . type_qualifier
    (82) type_qualifier_list -> . type_qualifier_list type_qualifier
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE

    OPENPAREN       reduce using rule 77 (pointer -> ASTERISK .)
    IDENTIFIER      reduce using rule 77 (pointer -> ASTERISK .)
    OPENBRACKET     reduce using rule 77 (pointer -> ASTERISK .)
    COMMA           reduce using rule 77 (pointer -> ASTERISK .)
    CLOSEPAREN      reduce using rule 77 (pointer -> ASTERISK .)
    ASTERISK        shift and go to state 16
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35

    type_qualifier_list            shift and go to state 57
    pointer                        shift and go to state 58
    type_qualifier                 shift and go to state 59

state 17

    (21) storage_class_specifier -> AUTO .

    AUTO            reduce using rule 21 (storage_class_specifier -> AUTO .)
    REGISTER        reduce using rule 21 (storage_class_specifier -> AUTO .)
    STATIC          reduce using rule 21 (storage_class_specifier -> AUTO .)
    EXTERN          reduce using rule 21 (storage_class_specifier -> AUTO .)
    TYPEDEF         reduce using rule 21 (storage_class_specifier -> AUTO .)
    VOID            reduce using rule 21 (storage_class_specifier -> AUTO .)
    CHAR            reduce using rule 21 (storage_class_specifier -> AUTO .)
    SHORT           reduce using rule 21 (storage_class_specifier -> AUTO .)
    INT             reduce using rule 21 (storage_class_specifier -> AUTO .)
    LONG            reduce using rule 21 (storage_class_specifier -> AUTO .)
    FLOAT           reduce using rule 21 (storage_class_specifier -> AUTO .)
    DOUBLE          reduce using rule 21 (storage_class_specifier -> AUTO .)
    SIGNED          reduce using rule 21 (storage_class_specifier -> AUTO .)
    UNSIGNED        reduce using rule 21 (storage_class_specifier -> AUTO .)
    TYPEDEF_NAME    reduce using rule 21 (storage_class_specifier -> AUTO .)
    CONST           reduce using rule 21 (storage_class_specifier -> AUTO .)
    VOLATILE        reduce using rule 21 (storage_class_specifier -> AUTO .)
    ENUM            reduce using rule 21 (storage_class_specifier -> AUTO .)
    STRUCT          reduce using rule 21 (storage_class_specifier -> AUTO .)
    UNION           reduce using rule 21 (storage_class_specifier -> AUTO .)
    SEMI            reduce using rule 21 (storage_class_specifier -> AUTO .)
    OPENPAREN       reduce using rule 21 (storage_class_specifier -> AUTO .)
    ASTERISK        reduce using rule 21 (storage_class_specifier -> AUTO .)
    IDENTIFIER      reduce using rule 21 (storage_class_specifier -> AUTO .)
    OPENBRACKET     reduce using rule 21 (storage_class_specifier -> AUTO .)
    COMMA           reduce using rule 21 (storage_class_specifier -> AUTO .)
    CLOSEPAREN      reduce using rule 21 (storage_class_specifier -> AUTO .)


state 18

    (22) storage_class_specifier -> REGISTER .

    AUTO            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    REGISTER        reduce using rule 22 (storage_class_specifier -> REGISTER .)
    STATIC          reduce using rule 22 (storage_class_specifier -> REGISTER .)
    EXTERN          reduce using rule 22 (storage_class_specifier -> REGISTER .)
    TYPEDEF         reduce using rule 22 (storage_class_specifier -> REGISTER .)
    VOID            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    CHAR            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    SHORT           reduce using rule 22 (storage_class_specifier -> REGISTER .)
    INT             reduce using rule 22 (storage_class_specifier -> REGISTER .)
    LONG            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    FLOAT           reduce using rule 22 (storage_class_specifier -> REGISTER .)
    DOUBLE          reduce using rule 22 (storage_class_specifier -> REGISTER .)
    SIGNED          reduce using rule 22 (storage_class_specifier -> REGISTER .)
    UNSIGNED        reduce using rule 22 (storage_class_specifier -> REGISTER .)
    TYPEDEF_NAME    reduce using rule 22 (storage_class_specifier -> REGISTER .)
    CONST           reduce using rule 22 (storage_class_specifier -> REGISTER .)
    VOLATILE        reduce using rule 22 (storage_class_specifier -> REGISTER .)
    ENUM            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    STRUCT          reduce using rule 22 (storage_class_specifier -> REGISTER .)
    UNION           reduce using rule 22 (storage_class_specifier -> REGISTER .)
    SEMI            reduce using rule 22 (storage_class_specifier -> REGISTER .)
    OPENPAREN       reduce using rule 22 (storage_class_specifier -> REGISTER .)
    ASTERISK        reduce using rule 22 (storage_class_specifier -> REGISTER .)
    IDENTIFIER      reduce using rule 22 (storage_class_specifier -> REGISTER .)
    OPENBRACKET     reduce using rule 22 (storage_class_specifier -> REGISTER .)
    COMMA           reduce using rule 22 (storage_class_specifier -> REGISTER .)
    CLOSEPAREN      reduce using rule 22 (storage_class_specifier -> REGISTER .)


state 19

    (23) storage_class_specifier -> STATIC .

    AUTO            reduce using rule 23 (storage_class_specifier -> STATIC .)
    REGISTER        reduce using rule 23 (storage_class_specifier -> STATIC .)
    STATIC          reduce using rule 23 (storage_class_specifier -> STATIC .)
    EXTERN          reduce using rule 23 (storage_class_specifier -> STATIC .)
    TYPEDEF         reduce using rule 23 (storage_class_specifier -> STATIC .)
    VOID            reduce using rule 23 (storage_class_specifier -> STATIC .)
    CHAR            reduce using rule 23 (storage_class_specifier -> STATIC .)
    SHORT           reduce using rule 23 (storage_class_specifier -> STATIC .)
    INT             reduce using rule 23 (storage_class_specifier -> STATIC .)
    LONG            reduce using rule 23 (storage_class_specifier -> STATIC .)
    FLOAT           reduce using rule 23 (storage_class_specifier -> STATIC .)
    DOUBLE          reduce using rule 23 (storage_class_specifier -> STATIC .)
    SIGNED          reduce using rule 23 (storage_class_specifier -> STATIC .)
    UNSIGNED        reduce using rule 23 (storage_class_specifier -> STATIC .)
    TYPEDEF_NAME    reduce using rule 23 (storage_class_specifier -> STATIC .)
    CONST           reduce using rule 23 (storage_class_specifier -> STATIC .)
    VOLATILE        reduce using rule 23 (storage_class_specifier -> STATIC .)
    ENUM            reduce using rule 23 (storage_class_specifier -> STATIC .)
    STRUCT          reduce using rule 23 (storage_class_specifier -> STATIC .)
    UNION           reduce using rule 23 (storage_class_specifier -> STATIC .)
    SEMI            reduce using rule 23 (storage_class_specifier -> STATIC .)
    OPENPAREN       reduce using rule 23 (storage_class_specifier -> STATIC .)
    ASTERISK        reduce using rule 23 (storage_class_specifier -> STATIC .)
    IDENTIFIER      reduce using rule 23 (storage_class_specifier -> STATIC .)
    OPENBRACKET     reduce using rule 23 (storage_class_specifier -> STATIC .)
    COMMA           reduce using rule 23 (storage_class_specifier -> STATIC .)
    CLOSEPAREN      reduce using rule 23 (storage_class_specifier -> STATIC .)


state 20

    (24) storage_class_specifier -> EXTERN .

    AUTO            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    REGISTER        reduce using rule 24 (storage_class_specifier -> EXTERN .)
    STATIC          reduce using rule 24 (storage_class_specifier -> EXTERN .)
    EXTERN          reduce using rule 24 (storage_class_specifier -> EXTERN .)
    TYPEDEF         reduce using rule 24 (storage_class_specifier -> EXTERN .)
    VOID            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    CHAR            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    SHORT           reduce using rule 24 (storage_class_specifier -> EXTERN .)
    INT             reduce using rule 24 (storage_class_specifier -> EXTERN .)
    LONG            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    FLOAT           reduce using rule 24 (storage_class_specifier -> EXTERN .)
    DOUBLE          reduce using rule 24 (storage_class_specifier -> EXTERN .)
    SIGNED          reduce using rule 24 (storage_class_specifier -> EXTERN .)
    UNSIGNED        reduce using rule 24 (storage_class_specifier -> EXTERN .)
    TYPEDEF_NAME    reduce using rule 24 (storage_class_specifier -> EXTERN .)
    CONST           reduce using rule 24 (storage_class_specifier -> EXTERN .)
    VOLATILE        reduce using rule 24 (storage_class_specifier -> EXTERN .)
    ENUM            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    STRUCT          reduce using rule 24 (storage_class_specifier -> EXTERN .)
    UNION           reduce using rule 24 (storage_class_specifier -> EXTERN .)
    SEMI            reduce using rule 24 (storage_class_specifier -> EXTERN .)
    OPENPAREN       reduce using rule 24 (storage_class_specifier -> EXTERN .)
    ASTERISK        reduce using rule 24 (storage_class_specifier -> EXTERN .)
    IDENTIFIER      reduce using rule 24 (storage_class_specifier -> EXTERN .)
    OPENBRACKET     reduce using rule 24 (storage_class_specifier -> EXTERN .)
    COMMA           reduce using rule 24 (storage_class_specifier -> EXTERN .)
    CLOSEPAREN      reduce using rule 24 (storage_class_specifier -> EXTERN .)


state 21

    (25) storage_class_specifier -> TYPEDEF .

    AUTO            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    REGISTER        reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    STATIC          reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    EXTERN          reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF         reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    VOID            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    CHAR            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    SHORT           reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    INT             reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    LONG            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    FLOAT           reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    DOUBLE          reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    SIGNED          reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    UNSIGNED        reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF_NAME    reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    CONST           reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    VOLATILE        reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    ENUM            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    STRUCT          reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    UNION           reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    SEMI            reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    OPENPAREN       reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    ASTERISK        reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    IDENTIFIER      reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    OPENBRACKET     reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    COMMA           reduce using rule 25 (storage_class_specifier -> TYPEDEF .)
    CLOSEPAREN      reduce using rule 25 (storage_class_specifier -> TYPEDEF .)


state 22

    (26) type_specifier -> VOID .

    AUTO            reduce using rule 26 (type_specifier -> VOID .)
    REGISTER        reduce using rule 26 (type_specifier -> VOID .)
    STATIC          reduce using rule 26 (type_specifier -> VOID .)
    EXTERN          reduce using rule 26 (type_specifier -> VOID .)
    TYPEDEF         reduce using rule 26 (type_specifier -> VOID .)
    VOID            reduce using rule 26 (type_specifier -> VOID .)
    CHAR            reduce using rule 26 (type_specifier -> VOID .)
    SHORT           reduce using rule 26 (type_specifier -> VOID .)
    INT             reduce using rule 26 (type_specifier -> VOID .)
    LONG            reduce using rule 26 (type_specifier -> VOID .)
    FLOAT           reduce using rule 26 (type_specifier -> VOID .)
    DOUBLE          reduce using rule 26 (type_specifier -> VOID .)
    SIGNED          reduce using rule 26 (type_specifier -> VOID .)
    UNSIGNED        reduce using rule 26 (type_specifier -> VOID .)
    TYPEDEF_NAME    reduce using rule 26 (type_specifier -> VOID .)
    CONST           reduce using rule 26 (type_specifier -> VOID .)
    VOLATILE        reduce using rule 26 (type_specifier -> VOID .)
    ENUM            reduce using rule 26 (type_specifier -> VOID .)
    STRUCT          reduce using rule 26 (type_specifier -> VOID .)
    UNION           reduce using rule 26 (type_specifier -> VOID .)
    SEMI            reduce using rule 26 (type_specifier -> VOID .)
    OPENPAREN       reduce using rule 26 (type_specifier -> VOID .)
    ASTERISK        reduce using rule 26 (type_specifier -> VOID .)
    IDENTIFIER      reduce using rule 26 (type_specifier -> VOID .)
    OPENBRACKET     reduce using rule 26 (type_specifier -> VOID .)
    COMMA           reduce using rule 26 (type_specifier -> VOID .)
    CLOSEPAREN      reduce using rule 26 (type_specifier -> VOID .)
    COLON           reduce using rule 26 (type_specifier -> VOID .)


state 23

    (27) type_specifier -> CHAR .

    AUTO            reduce using rule 27 (type_specifier -> CHAR .)
    REGISTER        reduce using rule 27 (type_specifier -> CHAR .)
    STATIC          reduce using rule 27 (type_specifier -> CHAR .)
    EXTERN          reduce using rule 27 (type_specifier -> CHAR .)
    TYPEDEF         reduce using rule 27 (type_specifier -> CHAR .)
    VOID            reduce using rule 27 (type_specifier -> CHAR .)
    CHAR            reduce using rule 27 (type_specifier -> CHAR .)
    SHORT           reduce using rule 27 (type_specifier -> CHAR .)
    INT             reduce using rule 27 (type_specifier -> CHAR .)
    LONG            reduce using rule 27 (type_specifier -> CHAR .)
    FLOAT           reduce using rule 27 (type_specifier -> CHAR .)
    DOUBLE          reduce using rule 27 (type_specifier -> CHAR .)
    SIGNED          reduce using rule 27 (type_specifier -> CHAR .)
    UNSIGNED        reduce using rule 27 (type_specifier -> CHAR .)
    TYPEDEF_NAME    reduce using rule 27 (type_specifier -> CHAR .)
    CONST           reduce using rule 27 (type_specifier -> CHAR .)
    VOLATILE        reduce using rule 27 (type_specifier -> CHAR .)
    ENUM            reduce using rule 27 (type_specifier -> CHAR .)
    STRUCT          reduce using rule 27 (type_specifier -> CHAR .)
    UNION           reduce using rule 27 (type_specifier -> CHAR .)
    SEMI            reduce using rule 27 (type_specifier -> CHAR .)
    OPENPAREN       reduce using rule 27 (type_specifier -> CHAR .)
    ASTERISK        reduce using rule 27 (type_specifier -> CHAR .)
    IDENTIFIER      reduce using rule 27 (type_specifier -> CHAR .)
    OPENBRACKET     reduce using rule 27 (type_specifier -> CHAR .)
    COMMA           reduce using rule 27 (type_specifier -> CHAR .)
    CLOSEPAREN      reduce using rule 27 (type_specifier -> CHAR .)
    COLON           reduce using rule 27 (type_specifier -> CHAR .)


state 24

    (28) type_specifier -> SHORT .

    AUTO            reduce using rule 28 (type_specifier -> SHORT .)
    REGISTER        reduce using rule 28 (type_specifier -> SHORT .)
    STATIC          reduce using rule 28 (type_specifier -> SHORT .)
    EXTERN          reduce using rule 28 (type_specifier -> SHORT .)
    TYPEDEF         reduce using rule 28 (type_specifier -> SHORT .)
    VOID            reduce using rule 28 (type_specifier -> SHORT .)
    CHAR            reduce using rule 28 (type_specifier -> SHORT .)
    SHORT           reduce using rule 28 (type_specifier -> SHORT .)
    INT             reduce using rule 28 (type_specifier -> SHORT .)
    LONG            reduce using rule 28 (type_specifier -> SHORT .)
    FLOAT           reduce using rule 28 (type_specifier -> SHORT .)
    DOUBLE          reduce using rule 28 (type_specifier -> SHORT .)
    SIGNED          reduce using rule 28 (type_specifier -> SHORT .)
    UNSIGNED        reduce using rule 28 (type_specifier -> SHORT .)
    TYPEDEF_NAME    reduce using rule 28 (type_specifier -> SHORT .)
    CONST           reduce using rule 28 (type_specifier -> SHORT .)
    VOLATILE        reduce using rule 28 (type_specifier -> SHORT .)
    ENUM            reduce using rule 28 (type_specifier -> SHORT .)
    STRUCT          reduce using rule 28 (type_specifier -> SHORT .)
    UNION           reduce using rule 28 (type_specifier -> SHORT .)
    SEMI            reduce using rule 28 (type_specifier -> SHORT .)
    OPENPAREN       reduce using rule 28 (type_specifier -> SHORT .)
    ASTERISK        reduce using rule 28 (type_specifier -> SHORT .)
    IDENTIFIER      reduce using rule 28 (type_specifier -> SHORT .)
    OPENBRACKET     reduce using rule 28 (type_specifier -> SHORT .)
    COMMA           reduce using rule 28 (type_specifier -> SHORT .)
    CLOSEPAREN      reduce using rule 28 (type_specifier -> SHORT .)
    COLON           reduce using rule 28 (type_specifier -> SHORT .)


state 25

    (29) type_specifier -> INT .

    AUTO            reduce using rule 29 (type_specifier -> INT .)
    REGISTER        reduce using rule 29 (type_specifier -> INT .)
    STATIC          reduce using rule 29 (type_specifier -> INT .)
    EXTERN          reduce using rule 29 (type_specifier -> INT .)
    TYPEDEF         reduce using rule 29 (type_specifier -> INT .)
    VOID            reduce using rule 29 (type_specifier -> INT .)
    CHAR            reduce using rule 29 (type_specifier -> INT .)
    SHORT           reduce using rule 29 (type_specifier -> INT .)
    INT             reduce using rule 29 (type_specifier -> INT .)
    LONG            reduce using rule 29 (type_specifier -> INT .)
    FLOAT           reduce using rule 29 (type_specifier -> INT .)
    DOUBLE          reduce using rule 29 (type_specifier -> INT .)
    SIGNED          reduce using rule 29 (type_specifier -> INT .)
    UNSIGNED        reduce using rule 29 (type_specifier -> INT .)
    TYPEDEF_NAME    reduce using rule 29 (type_specifier -> INT .)
    CONST           reduce using rule 29 (type_specifier -> INT .)
    VOLATILE        reduce using rule 29 (type_specifier -> INT .)
    ENUM            reduce using rule 29 (type_specifier -> INT .)
    STRUCT          reduce using rule 29 (type_specifier -> INT .)
    UNION           reduce using rule 29 (type_specifier -> INT .)
    SEMI            reduce using rule 29 (type_specifier -> INT .)
    OPENPAREN       reduce using rule 29 (type_specifier -> INT .)
    ASTERISK        reduce using rule 29 (type_specifier -> INT .)
    IDENTIFIER      reduce using rule 29 (type_specifier -> INT .)
    OPENBRACKET     reduce using rule 29 (type_specifier -> INT .)
    COMMA           reduce using rule 29 (type_specifier -> INT .)
    CLOSEPAREN      reduce using rule 29 (type_specifier -> INT .)
    COLON           reduce using rule 29 (type_specifier -> INT .)


state 26

    (30) type_specifier -> LONG .

    AUTO            reduce using rule 30 (type_specifier -> LONG .)
    REGISTER        reduce using rule 30 (type_specifier -> LONG .)
    STATIC          reduce using rule 30 (type_specifier -> LONG .)
    EXTERN          reduce using rule 30 (type_specifier -> LONG .)
    TYPEDEF         reduce using rule 30 (type_specifier -> LONG .)
    VOID            reduce using rule 30 (type_specifier -> LONG .)
    CHAR            reduce using rule 30 (type_specifier -> LONG .)
    SHORT           reduce using rule 30 (type_specifier -> LONG .)
    INT             reduce using rule 30 (type_specifier -> LONG .)
    LONG            reduce using rule 30 (type_specifier -> LONG .)
    FLOAT           reduce using rule 30 (type_specifier -> LONG .)
    DOUBLE          reduce using rule 30 (type_specifier -> LONG .)
    SIGNED          reduce using rule 30 (type_specifier -> LONG .)
    UNSIGNED        reduce using rule 30 (type_specifier -> LONG .)
    TYPEDEF_NAME    reduce using rule 30 (type_specifier -> LONG .)
    CONST           reduce using rule 30 (type_specifier -> LONG .)
    VOLATILE        reduce using rule 30 (type_specifier -> LONG .)
    ENUM            reduce using rule 30 (type_specifier -> LONG .)
    STRUCT          reduce using rule 30 (type_specifier -> LONG .)
    UNION           reduce using rule 30 (type_specifier -> LONG .)
    SEMI            reduce using rule 30 (type_specifier -> LONG .)
    OPENPAREN       reduce using rule 30 (type_specifier -> LONG .)
    ASTERISK        reduce using rule 30 (type_specifier -> LONG .)
    IDENTIFIER      reduce using rule 30 (type_specifier -> LONG .)
    OPENBRACKET     reduce using rule 30 (type_specifier -> LONG .)
    COMMA           reduce using rule 30 (type_specifier -> LONG .)
    CLOSEPAREN      reduce using rule 30 (type_specifier -> LONG .)
    COLON           reduce using rule 30 (type_specifier -> LONG .)


state 27

    (31) type_specifier -> FLOAT .

    AUTO            reduce using rule 31 (type_specifier -> FLOAT .)
    REGISTER        reduce using rule 31 (type_specifier -> FLOAT .)
    STATIC          reduce using rule 31 (type_specifier -> FLOAT .)
    EXTERN          reduce using rule 31 (type_specifier -> FLOAT .)
    TYPEDEF         reduce using rule 31 (type_specifier -> FLOAT .)
    VOID            reduce using rule 31 (type_specifier -> FLOAT .)
    CHAR            reduce using rule 31 (type_specifier -> FLOAT .)
    SHORT           reduce using rule 31 (type_specifier -> FLOAT .)
    INT             reduce using rule 31 (type_specifier -> FLOAT .)
    LONG            reduce using rule 31 (type_specifier -> FLOAT .)
    FLOAT           reduce using rule 31 (type_specifier -> FLOAT .)
    DOUBLE          reduce using rule 31 (type_specifier -> FLOAT .)
    SIGNED          reduce using rule 31 (type_specifier -> FLOAT .)
    UNSIGNED        reduce using rule 31 (type_specifier -> FLOAT .)
    TYPEDEF_NAME    reduce using rule 31 (type_specifier -> FLOAT .)
    CONST           reduce using rule 31 (type_specifier -> FLOAT .)
    VOLATILE        reduce using rule 31 (type_specifier -> FLOAT .)
    ENUM            reduce using rule 31 (type_specifier -> FLOAT .)
    STRUCT          reduce using rule 31 (type_specifier -> FLOAT .)
    UNION           reduce using rule 31 (type_specifier -> FLOAT .)
    SEMI            reduce using rule 31 (type_specifier -> FLOAT .)
    OPENPAREN       reduce using rule 31 (type_specifier -> FLOAT .)
    ASTERISK        reduce using rule 31 (type_specifier -> FLOAT .)
    IDENTIFIER      reduce using rule 31 (type_specifier -> FLOAT .)
    OPENBRACKET     reduce using rule 31 (type_specifier -> FLOAT .)
    COMMA           reduce using rule 31 (type_specifier -> FLOAT .)
    CLOSEPAREN      reduce using rule 31 (type_specifier -> FLOAT .)
    COLON           reduce using rule 31 (type_specifier -> FLOAT .)


state 28

    (32) type_specifier -> DOUBLE .

    AUTO            reduce using rule 32 (type_specifier -> DOUBLE .)
    REGISTER        reduce using rule 32 (type_specifier -> DOUBLE .)
    STATIC          reduce using rule 32 (type_specifier -> DOUBLE .)
    EXTERN          reduce using rule 32 (type_specifier -> DOUBLE .)
    TYPEDEF         reduce using rule 32 (type_specifier -> DOUBLE .)
    VOID            reduce using rule 32 (type_specifier -> DOUBLE .)
    CHAR            reduce using rule 32 (type_specifier -> DOUBLE .)
    SHORT           reduce using rule 32 (type_specifier -> DOUBLE .)
    INT             reduce using rule 32 (type_specifier -> DOUBLE .)
    LONG            reduce using rule 32 (type_specifier -> DOUBLE .)
    FLOAT           reduce using rule 32 (type_specifier -> DOUBLE .)
    DOUBLE          reduce using rule 32 (type_specifier -> DOUBLE .)
    SIGNED          reduce using rule 32 (type_specifier -> DOUBLE .)
    UNSIGNED        reduce using rule 32 (type_specifier -> DOUBLE .)
    TYPEDEF_NAME    reduce using rule 32 (type_specifier -> DOUBLE .)
    CONST           reduce using rule 32 (type_specifier -> DOUBLE .)
    VOLATILE        reduce using rule 32 (type_specifier -> DOUBLE .)
    ENUM            reduce using rule 32 (type_specifier -> DOUBLE .)
    STRUCT          reduce using rule 32 (type_specifier -> DOUBLE .)
    UNION           reduce using rule 32 (type_specifier -> DOUBLE .)
    SEMI            reduce using rule 32 (type_specifier -> DOUBLE .)
    OPENPAREN       reduce using rule 32 (type_specifier -> DOUBLE .)
    ASTERISK        reduce using rule 32 (type_specifier -> DOUBLE .)
    IDENTIFIER      reduce using rule 32 (type_specifier -> DOUBLE .)
    OPENBRACKET     reduce using rule 32 (type_specifier -> DOUBLE .)
    COMMA           reduce using rule 32 (type_specifier -> DOUBLE .)
    CLOSEPAREN      reduce using rule 32 (type_specifier -> DOUBLE .)
    COLON           reduce using rule 32 (type_specifier -> DOUBLE .)


state 29

    (33) type_specifier -> SIGNED .

    AUTO            reduce using rule 33 (type_specifier -> SIGNED .)
    REGISTER        reduce using rule 33 (type_specifier -> SIGNED .)
    STATIC          reduce using rule 33 (type_specifier -> SIGNED .)
    EXTERN          reduce using rule 33 (type_specifier -> SIGNED .)
    TYPEDEF         reduce using rule 33 (type_specifier -> SIGNED .)
    VOID            reduce using rule 33 (type_specifier -> SIGNED .)
    CHAR            reduce using rule 33 (type_specifier -> SIGNED .)
    SHORT           reduce using rule 33 (type_specifier -> SIGNED .)
    INT             reduce using rule 33 (type_specifier -> SIGNED .)
    LONG            reduce using rule 33 (type_specifier -> SIGNED .)
    FLOAT           reduce using rule 33 (type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 33 (type_specifier -> SIGNED .)
    SIGNED          reduce using rule 33 (type_specifier -> SIGNED .)
    UNSIGNED        reduce using rule 33 (type_specifier -> SIGNED .)
    TYPEDEF_NAME    reduce using rule 33 (type_specifier -> SIGNED .)
    CONST           reduce using rule 33 (type_specifier -> SIGNED .)
    VOLATILE        reduce using rule 33 (type_specifier -> SIGNED .)
    ENUM            reduce using rule 33 (type_specifier -> SIGNED .)
    STRUCT          reduce using rule 33 (type_specifier -> SIGNED .)
    UNION           reduce using rule 33 (type_specifier -> SIGNED .)
    SEMI            reduce using rule 33 (type_specifier -> SIGNED .)
    OPENPAREN       reduce using rule 33 (type_specifier -> SIGNED .)
    ASTERISK        reduce using rule 33 (type_specifier -> SIGNED .)
    IDENTIFIER      reduce using rule 33 (type_specifier -> SIGNED .)
    OPENBRACKET     reduce using rule 33 (type_specifier -> SIGNED .)
    COMMA           reduce using rule 33 (type_specifier -> SIGNED .)
    CLOSEPAREN      reduce using rule 33 (type_specifier -> SIGNED .)
    COLON           reduce using rule 33 (type_specifier -> SIGNED .)


state 30

    (34) type_specifier -> UNSIGNED .

    AUTO            reduce using rule 34 (type_specifier -> UNSIGNED .)
    REGISTER        reduce using rule 34 (type_specifier -> UNSIGNED .)
    STATIC          reduce using rule 34 (type_specifier -> UNSIGNED .)
    EXTERN          reduce using rule 34 (type_specifier -> UNSIGNED .)
    TYPEDEF         reduce using rule 34 (type_specifier -> UNSIGNED .)
    VOID            reduce using rule 34 (type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 34 (type_specifier -> UNSIGNED .)
    SHORT           reduce using rule 34 (type_specifier -> UNSIGNED .)
    INT             reduce using rule 34 (type_specifier -> UNSIGNED .)
    LONG            reduce using rule 34 (type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 34 (type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 34 (type_specifier -> UNSIGNED .)
    SIGNED          reduce using rule 34 (type_specifier -> UNSIGNED .)
    UNSIGNED        reduce using rule 34 (type_specifier -> UNSIGNED .)
    TYPEDEF_NAME    reduce using rule 34 (type_specifier -> UNSIGNED .)
    CONST           reduce using rule 34 (type_specifier -> UNSIGNED .)
    VOLATILE        reduce using rule 34 (type_specifier -> UNSIGNED .)
    ENUM            reduce using rule 34 (type_specifier -> UNSIGNED .)
    STRUCT          reduce using rule 34 (type_specifier -> UNSIGNED .)
    UNION           reduce using rule 34 (type_specifier -> UNSIGNED .)
    SEMI            reduce using rule 34 (type_specifier -> UNSIGNED .)
    OPENPAREN       reduce using rule 34 (type_specifier -> UNSIGNED .)
    ASTERISK        reduce using rule 34 (type_specifier -> UNSIGNED .)
    IDENTIFIER      reduce using rule 34 (type_specifier -> UNSIGNED .)
    OPENBRACKET     reduce using rule 34 (type_specifier -> UNSIGNED .)
    COMMA           reduce using rule 34 (type_specifier -> UNSIGNED .)
    CLOSEPAREN      reduce using rule 34 (type_specifier -> UNSIGNED .)
    COLON           reduce using rule 34 (type_specifier -> UNSIGNED .)


state 31

    (35) type_specifier -> struct_or_union_specifier .

    AUTO            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    REGISTER        reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    STATIC          reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    EXTERN          reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF         reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    VOID            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    CHAR            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    SHORT           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    INT             reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    LONG            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    FLOAT           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    DOUBLE          reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    SIGNED          reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    UNSIGNED        reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF_NAME    reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    CONST           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    VOLATILE        reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    ENUM            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    STRUCT          reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    UNION           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    SEMI            reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    OPENPAREN       reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    ASTERISK        reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    IDENTIFIER      reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    OPENBRACKET     reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    COMMA           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    CLOSEPAREN      reduce using rule 35 (type_specifier -> struct_or_union_specifier .)
    COLON           reduce using rule 35 (type_specifier -> struct_or_union_specifier .)


state 32

    (36) type_specifier -> enum_specifier .

    AUTO            reduce using rule 36 (type_specifier -> enum_specifier .)
    REGISTER        reduce using rule 36 (type_specifier -> enum_specifier .)
    STATIC          reduce using rule 36 (type_specifier -> enum_specifier .)
    EXTERN          reduce using rule 36 (type_specifier -> enum_specifier .)
    TYPEDEF         reduce using rule 36 (type_specifier -> enum_specifier .)
    VOID            reduce using rule 36 (type_specifier -> enum_specifier .)
    CHAR            reduce using rule 36 (type_specifier -> enum_specifier .)
    SHORT           reduce using rule 36 (type_specifier -> enum_specifier .)
    INT             reduce using rule 36 (type_specifier -> enum_specifier .)
    LONG            reduce using rule 36 (type_specifier -> enum_specifier .)
    FLOAT           reduce using rule 36 (type_specifier -> enum_specifier .)
    DOUBLE          reduce using rule 36 (type_specifier -> enum_specifier .)
    SIGNED          reduce using rule 36 (type_specifier -> enum_specifier .)
    UNSIGNED        reduce using rule 36 (type_specifier -> enum_specifier .)
    TYPEDEF_NAME    reduce using rule 36 (type_specifier -> enum_specifier .)
    CONST           reduce using rule 36 (type_specifier -> enum_specifier .)
    VOLATILE        reduce using rule 36 (type_specifier -> enum_specifier .)
    ENUM            reduce using rule 36 (type_specifier -> enum_specifier .)
    STRUCT          reduce using rule 36 (type_specifier -> enum_specifier .)
    UNION           reduce using rule 36 (type_specifier -> enum_specifier .)
    SEMI            reduce using rule 36 (type_specifier -> enum_specifier .)
    OPENPAREN       reduce using rule 36 (type_specifier -> enum_specifier .)
    ASTERISK        reduce using rule 36 (type_specifier -> enum_specifier .)
    IDENTIFIER      reduce using rule 36 (type_specifier -> enum_specifier .)
    OPENBRACKET     reduce using rule 36 (type_specifier -> enum_specifier .)
    COMMA           reduce using rule 36 (type_specifier -> enum_specifier .)
    CLOSEPAREN      reduce using rule 36 (type_specifier -> enum_specifier .)
    COLON           reduce using rule 36 (type_specifier -> enum_specifier .)


state 33

    (37) type_specifier -> TYPEDEF_NAME .

    AUTO            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    REGISTER        reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    STATIC          reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    EXTERN          reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    TYPEDEF         reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    VOID            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    CHAR            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    SHORT           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    INT             reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    LONG            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    FLOAT           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    DOUBLE          reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    SIGNED          reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    UNSIGNED        reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    TYPEDEF_NAME    reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    CONST           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    VOLATILE        reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    ENUM            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    STRUCT          reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    UNION           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    SEMI            reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    OPENPAREN       reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    ASTERISK        reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    IDENTIFIER      reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    OPENBRACKET     reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    COMMA           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    CLOSEPAREN      reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)
    COLON           reduce using rule 37 (type_specifier -> TYPEDEF_NAME .)


state 34

    (38) type_qualifier -> CONST .

    AUTO            reduce using rule 38 (type_qualifier -> CONST .)
    REGISTER        reduce using rule 38 (type_qualifier -> CONST .)
    STATIC          reduce using rule 38 (type_qualifier -> CONST .)
    EXTERN          reduce using rule 38 (type_qualifier -> CONST .)
    TYPEDEF         reduce using rule 38 (type_qualifier -> CONST .)
    VOID            reduce using rule 38 (type_qualifier -> CONST .)
    CHAR            reduce using rule 38 (type_qualifier -> CONST .)
    SHORT           reduce using rule 38 (type_qualifier -> CONST .)
    INT             reduce using rule 38 (type_qualifier -> CONST .)
    LONG            reduce using rule 38 (type_qualifier -> CONST .)
    FLOAT           reduce using rule 38 (type_qualifier -> CONST .)
    DOUBLE          reduce using rule 38 (type_qualifier -> CONST .)
    SIGNED          reduce using rule 38 (type_qualifier -> CONST .)
    UNSIGNED        reduce using rule 38 (type_qualifier -> CONST .)
    TYPEDEF_NAME    reduce using rule 38 (type_qualifier -> CONST .)
    CONST           reduce using rule 38 (type_qualifier -> CONST .)
    VOLATILE        reduce using rule 38 (type_qualifier -> CONST .)
    ENUM            reduce using rule 38 (type_qualifier -> CONST .)
    STRUCT          reduce using rule 38 (type_qualifier -> CONST .)
    UNION           reduce using rule 38 (type_qualifier -> CONST .)
    SEMI            reduce using rule 38 (type_qualifier -> CONST .)
    OPENPAREN       reduce using rule 38 (type_qualifier -> CONST .)
    ASTERISK        reduce using rule 38 (type_qualifier -> CONST .)
    IDENTIFIER      reduce using rule 38 (type_qualifier -> CONST .)
    OPENBRACKET     reduce using rule 38 (type_qualifier -> CONST .)
    COMMA           reduce using rule 38 (type_qualifier -> CONST .)
    CLOSEPAREN      reduce using rule 38 (type_qualifier -> CONST .)
    COLON           reduce using rule 38 (type_qualifier -> CONST .)


state 35

    (39) type_qualifier -> VOLATILE .

    AUTO            reduce using rule 39 (type_qualifier -> VOLATILE .)
    REGISTER        reduce using rule 39 (type_qualifier -> VOLATILE .)
    STATIC          reduce using rule 39 (type_qualifier -> VOLATILE .)
    EXTERN          reduce using rule 39 (type_qualifier -> VOLATILE .)
    TYPEDEF         reduce using rule 39 (type_qualifier -> VOLATILE .)
    VOID            reduce using rule 39 (type_qualifier -> VOLATILE .)
    CHAR            reduce using rule 39 (type_qualifier -> VOLATILE .)
    SHORT           reduce using rule 39 (type_qualifier -> VOLATILE .)
    INT             reduce using rule 39 (type_qualifier -> VOLATILE .)
    LONG            reduce using rule 39 (type_qualifier -> VOLATILE .)
    FLOAT           reduce using rule 39 (type_qualifier -> VOLATILE .)
    DOUBLE          reduce using rule 39 (type_qualifier -> VOLATILE .)
    SIGNED          reduce using rule 39 (type_qualifier -> VOLATILE .)
    UNSIGNED        reduce using rule 39 (type_qualifier -> VOLATILE .)
    TYPEDEF_NAME    reduce using rule 39 (type_qualifier -> VOLATILE .)
    CONST           reduce using rule 39 (type_qualifier -> VOLATILE .)
    VOLATILE        reduce using rule 39 (type_qualifier -> VOLATILE .)
    ENUM            reduce using rule 39 (type_qualifier -> VOLATILE .)
    STRUCT          reduce using rule 39 (type_qualifier -> VOLATILE .)
    UNION           reduce using rule 39 (type_qualifier -> VOLATILE .)
    SEMI            reduce using rule 39 (type_qualifier -> VOLATILE .)
    OPENPAREN       reduce using rule 39 (type_qualifier -> VOLATILE .)
    ASTERISK        reduce using rule 39 (type_qualifier -> VOLATILE .)
    IDENTIFIER      reduce using rule 39 (type_qualifier -> VOLATILE .)
    OPENBRACKET     reduce using rule 39 (type_qualifier -> VOLATILE .)
    COMMA           reduce using rule 39 (type_qualifier -> VOLATILE .)
    CLOSEPAREN      reduce using rule 39 (type_qualifier -> VOLATILE .)
    COLON           reduce using rule 39 (type_qualifier -> VOLATILE .)


state 36

    (227) identifier -> IDENTIFIER .

    OPENBRACKET     reduce using rule 227 (identifier -> IDENTIFIER .)
    OPENPAREN       reduce using rule 227 (identifier -> IDENTIFIER .)
    OPENBRACE       reduce using rule 227 (identifier -> IDENTIFIER .)
    PD_O            reduce using rule 227 (identifier -> IDENTIFIER .)
    PD_F            reduce using rule 227 (identifier -> IDENTIFIER .)
    AUTO            reduce using rule 227 (identifier -> IDENTIFIER .)
    REGISTER        reduce using rule 227 (identifier -> IDENTIFIER .)
    STATIC          reduce using rule 227 (identifier -> IDENTIFIER .)
    EXTERN          reduce using rule 227 (identifier -> IDENTIFIER .)
    TYPEDEF         reduce using rule 227 (identifier -> IDENTIFIER .)
    VOID            reduce using rule 227 (identifier -> IDENTIFIER .)
    CHAR            reduce using rule 227 (identifier -> IDENTIFIER .)
    SHORT           reduce using rule 227 (identifier -> IDENTIFIER .)
    INT             reduce using rule 227 (identifier -> IDENTIFIER .)
    LONG            reduce using rule 227 (identifier -> IDENTIFIER .)
    FLOAT           reduce using rule 227 (identifier -> IDENTIFIER .)
    DOUBLE          reduce using rule 227 (identifier -> IDENTIFIER .)
    SIGNED          reduce using rule 227 (identifier -> IDENTIFIER .)
    UNSIGNED        reduce using rule 227 (identifier -> IDENTIFIER .)
    TYPEDEF_NAME    reduce using rule 227 (identifier -> IDENTIFIER .)
    CONST           reduce using rule 227 (identifier -> IDENTIFIER .)
    VOLATILE        reduce using rule 227 (identifier -> IDENTIFIER .)
    ENUM            reduce using rule 227 (identifier -> IDENTIFIER .)
    STRUCT          reduce using rule 227 (identifier -> IDENTIFIER .)
    UNION           reduce using rule 227 (identifier -> IDENTIFIER .)
    ASSIGN          reduce using rule 227 (identifier -> IDENTIFIER .)
    SEMI            reduce using rule 227 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 227 (identifier -> IDENTIFIER .)
    CLOSEPAREN      reduce using rule 227 (identifier -> IDENTIFIER .)
    COLON           reduce using rule 227 (identifier -> IDENTIFIER .)
    ASTERISK        reduce using rule 227 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 227 (identifier -> IDENTIFIER .)
    PERIOD          reduce using rule 227 (identifier -> IDENTIFIER .)
    PTR_OP          reduce using rule 227 (identifier -> IDENTIFIER .)
    INC_OP          reduce using rule 227 (identifier -> IDENTIFIER .)
    DEC_OP          reduce using rule 227 (identifier -> IDENTIFIER .)
    DIV             reduce using rule 227 (identifier -> IDENTIFIER .)
    PERCENT         reduce using rule 227 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 227 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 227 (identifier -> IDENTIFIER .)
    LEFT_OP         reduce using rule 227 (identifier -> IDENTIFIER .)
    RIGHT_OP        reduce using rule 227 (identifier -> IDENTIFIER .)
    LE              reduce using rule 227 (identifier -> IDENTIFIER .)
    GT              reduce using rule 227 (identifier -> IDENTIFIER .)
    LE_OP           reduce using rule 227 (identifier -> IDENTIFIER .)
    GE_OP           reduce using rule 227 (identifier -> IDENTIFIER .)
    EQ_OP           reduce using rule 227 (identifier -> IDENTIFIER .)
    NE_OP           reduce using rule 227 (identifier -> IDENTIFIER .)
    AMPERSAND       reduce using rule 227 (identifier -> IDENTIFIER .)
    CARAT           reduce using rule 227 (identifier -> IDENTIFIER .)
    PIPE            reduce using rule 227 (identifier -> IDENTIFIER .)
    AND_OP          reduce using rule 227 (identifier -> IDENTIFIER .)
    QMARK           reduce using rule 227 (identifier -> IDENTIFIER .)
    OR_OP           reduce using rule 227 (identifier -> IDENTIFIER .)
    CLOSEBRACKET    reduce using rule 227 (identifier -> IDENTIFIER .)
    CLOSEBRACE      reduce using rule 227 (identifier -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 227 (identifier -> IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 227 (identifier -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 227 (identifier -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 227 (identifier -> IDENTIFIER .)


state 37

    (40) struct_or_union_specifier -> struct_or_union . identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> struct_or_union . OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> struct_or_union . identifier
    (227) identifier -> . IDENTIFIER

    OPENBRACE       shift and go to state 61
    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 60

state 38

    (61) enum_specifier -> ENUM . OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> ENUM . identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> ENUM . identifier
    (227) identifier -> . IDENTIFIER

    OPENBRACE       shift and go to state 62
    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 63

state 39

    (43) struct_or_union -> STRUCT .

    OPENBRACE       reduce using rule 43 (struct_or_union -> STRUCT .)
    IDENTIFIER      reduce using rule 43 (struct_or_union -> STRUCT .)


state 40

    (44) struct_or_union -> UNION .

    OPENBRACE       reduce using rule 44 (struct_or_union -> UNION .)
    IDENTIFIER      reduce using rule 44 (struct_or_union -> UNION .)


state 41

    (2) translation_unit -> translation_unit external_declaration .

    PD_O            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    PD_F            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    OPENPAREN       reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ASTERISK        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    AUTO            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    REGISTER        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STATIC          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    EXTERN          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF         reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOID            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CHAR            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SHORT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    INT             reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    LONG            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    FLOAT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    DOUBLE          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SIGNED          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNSIGNED        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF_NAME    reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CONST           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOLATILE        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    IDENTIFIER      reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ENUM            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STRUCT          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNION           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    $end            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)


state 42

    (5) function_definition -> declarator compound_statement .

    PD_O            reduce using rule 5 (function_definition -> declarator compound_statement .)
    PD_F            reduce using rule 5 (function_definition -> declarator compound_statement .)
    OPENPAREN       reduce using rule 5 (function_definition -> declarator compound_statement .)
    ASTERISK        reduce using rule 5 (function_definition -> declarator compound_statement .)
    AUTO            reduce using rule 5 (function_definition -> declarator compound_statement .)
    REGISTER        reduce using rule 5 (function_definition -> declarator compound_statement .)
    STATIC          reduce using rule 5 (function_definition -> declarator compound_statement .)
    EXTERN          reduce using rule 5 (function_definition -> declarator compound_statement .)
    TYPEDEF         reduce using rule 5 (function_definition -> declarator compound_statement .)
    VOID            reduce using rule 5 (function_definition -> declarator compound_statement .)
    CHAR            reduce using rule 5 (function_definition -> declarator compound_statement .)
    SHORT           reduce using rule 5 (function_definition -> declarator compound_statement .)
    INT             reduce using rule 5 (function_definition -> declarator compound_statement .)
    LONG            reduce using rule 5 (function_definition -> declarator compound_statement .)
    FLOAT           reduce using rule 5 (function_definition -> declarator compound_statement .)
    DOUBLE          reduce using rule 5 (function_definition -> declarator compound_statement .)
    SIGNED          reduce using rule 5 (function_definition -> declarator compound_statement .)
    UNSIGNED        reduce using rule 5 (function_definition -> declarator compound_statement .)
    TYPEDEF_NAME    reduce using rule 5 (function_definition -> declarator compound_statement .)
    CONST           reduce using rule 5 (function_definition -> declarator compound_statement .)
    VOLATILE        reduce using rule 5 (function_definition -> declarator compound_statement .)
    IDENTIFIER      reduce using rule 5 (function_definition -> declarator compound_statement .)
    ENUM            reduce using rule 5 (function_definition -> declarator compound_statement .)
    STRUCT          reduce using rule 5 (function_definition -> declarator compound_statement .)
    UNION           reduce using rule 5 (function_definition -> declarator compound_statement .)
    $end            reduce using rule 5 (function_definition -> declarator compound_statement .)


state 43

    (6) function_definition -> declarator declaration_list . compound_statement
    (14) declaration_list -> declaration_list . insert_mode_e declaration
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (228) insert_mode_e -> .

    OPENBRACE       shift and go to state 44
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)

    compound_statement             shift and go to state 64
    insert_mode_e                  shift and go to state 65

state 44

    (124) compound_statement -> OPENBRACE . CLOSEBRACE
    (125) compound_statement -> OPENBRACE . push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> OPENBRACE . push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> OPENBRACE . push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (230) push_scope_e -> .

    CLOSEBRACE      shift and go to state 66
    PD_O            reduce using rule 230 (push_scope_e -> .)
    PD_F            reduce using rule 230 (push_scope_e -> .)
    CASE            reduce using rule 230 (push_scope_e -> .)
    DEFAULT         reduce using rule 230 (push_scope_e -> .)
    OPENBRACE       reduce using rule 230 (push_scope_e -> .)
    SEMI            reduce using rule 230 (push_scope_e -> .)
    IF              reduce using rule 230 (push_scope_e -> .)
    SWITCH          reduce using rule 230 (push_scope_e -> .)
    WHILE           reduce using rule 230 (push_scope_e -> .)
    DO              reduce using rule 230 (push_scope_e -> .)
    FOR             reduce using rule 230 (push_scope_e -> .)
    GOTO            reduce using rule 230 (push_scope_e -> .)
    CONTINUE        reduce using rule 230 (push_scope_e -> .)
    BREAK           reduce using rule 230 (push_scope_e -> .)
    RETURN          reduce using rule 230 (push_scope_e -> .)
    IDENTIFIER      reduce using rule 230 (push_scope_e -> .)
    INC_OP          reduce using rule 230 (push_scope_e -> .)
    DEC_OP          reduce using rule 230 (push_scope_e -> .)
    SIZEOF          reduce using rule 230 (push_scope_e -> .)
    AMPERSAND       reduce using rule 230 (push_scope_e -> .)
    ASTERISK        reduce using rule 230 (push_scope_e -> .)
    PLUS            reduce using rule 230 (push_scope_e -> .)
    MINUS           reduce using rule 230 (push_scope_e -> .)
    TILDE           reduce using rule 230 (push_scope_e -> .)
    BANG            reduce using rule 230 (push_scope_e -> .)
    OPENPAREN       reduce using rule 230 (push_scope_e -> .)
    INTEGER_CONSTANT reduce using rule 230 (push_scope_e -> .)
    CHARACTER_CONSTANT reduce using rule 230 (push_scope_e -> .)
    FLOATING_CONSTANT reduce using rule 230 (push_scope_e -> .)
    ENUMERATION_CONSTANT reduce using rule 230 (push_scope_e -> .)
    STRING_LITERAL  reduce using rule 230 (push_scope_e -> .)
    AUTO            reduce using rule 230 (push_scope_e -> .)
    REGISTER        reduce using rule 230 (push_scope_e -> .)
    STATIC          reduce using rule 230 (push_scope_e -> .)
    EXTERN          reduce using rule 230 (push_scope_e -> .)
    TYPEDEF         reduce using rule 230 (push_scope_e -> .)
    VOID            reduce using rule 230 (push_scope_e -> .)
    CHAR            reduce using rule 230 (push_scope_e -> .)
    SHORT           reduce using rule 230 (push_scope_e -> .)
    INT             reduce using rule 230 (push_scope_e -> .)
    LONG            reduce using rule 230 (push_scope_e -> .)
    FLOAT           reduce using rule 230 (push_scope_e -> .)
    DOUBLE          reduce using rule 230 (push_scope_e -> .)
    SIGNED          reduce using rule 230 (push_scope_e -> .)
    UNSIGNED        reduce using rule 230 (push_scope_e -> .)
    TYPEDEF_NAME    reduce using rule 230 (push_scope_e -> .)
    CONST           reduce using rule 230 (push_scope_e -> .)
    VOLATILE        reduce using rule 230 (push_scope_e -> .)
    ENUM            reduce using rule 230 (push_scope_e -> .)
    STRUCT          reduce using rule 230 (push_scope_e -> .)
    UNION           reduce using rule 230 (push_scope_e -> .)

    push_scope_e                   shift and go to state 67

state 45

    (13) declaration_list -> insert_mode_e . declaration
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (11) declaration -> . PD_O
    (12) declaration -> . PD_F
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    PD_O            shift and go to state 7
    PD_F            shift and go to state 8
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    declaration                    shift and go to state 68
    declaration_specifiers         shift and go to state 69
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 46

    (7) function_definition -> declaration_specifiers declarator . compound_statement
    (8) function_definition -> declaration_specifiers declarator . declaration_list compound_statement
    (49) init_declarator -> declarator .
    (50) init_declarator -> declarator . ASSIGN initializer
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (13) declaration_list -> . insert_mode_e declaration
    (14) declaration_list -> . declaration_list insert_mode_e declaration
    (228) insert_mode_e -> .

    SEMI            reduce using rule 49 (init_declarator -> declarator .)
    COMMA           reduce using rule 49 (init_declarator -> declarator .)
    ASSIGN          shift and go to state 72
    OPENBRACE       shift and go to state 44
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)

    compound_statement             shift and go to state 70
    declaration_list               shift and go to state 71
    insert_mode_e                  shift and go to state 45

state 47

    (9) declaration -> declaration_specifiers SEMI .

    PD_O            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    PD_F            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    OPENPAREN       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ASTERISK        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    AUTO            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    REGISTER        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STATIC          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    EXTERN          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TYPEDEF         reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    VOID            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CHAR            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SHORT           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INT             reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    LONG            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FLOAT           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DOUBLE          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SIGNED          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    UNSIGNED        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TYPEDEF_NAME    reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CONST           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    VOLATILE        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    IDENTIFIER      reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ENUM            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STRUCT          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    UNION           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    $end            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    OPENBRACE       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CLOSEBRACE      reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CASE            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DEFAULT         reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SEMI            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    IF              reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SWITCH          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    WHILE           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DO              reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FOR             reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    GOTO            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CONTINUE        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    BREAK           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    RETURN          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INC_OP          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DEC_OP          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SIZEOF          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    AMPERSAND       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    PLUS            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    MINUS           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TILDE           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    BANG            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INTEGER_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CHARACTER_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FLOATING_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ENUMERATION_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STRING_LITERAL  reduce using rule 9 (declaration -> declaration_specifiers SEMI .)


state 48

    (10) declaration -> declaration_specifiers init_declarator_list . SEMI
    (48) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMI            shift and go to state 73
    COMMA           shift and go to state 74


state 49

    (47) init_declarator_list -> init_declarator .

    SEMI            reduce using rule 47 (init_declarator_list -> init_declarator .)
    COMMA           reduce using rule 47 (init_declarator_list -> init_declarator .)


state 50

    (72) direct_declarator -> direct_declarator OPENBRACKET . CLOSEBRACKET
    (73) direct_declarator -> direct_declarator OPENBRACKET . constant_expression CLOSEBRACKET
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 75
    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 76
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 51

    (74) direct_declarator -> direct_declarator OPENPAREN . CLOSEPAREN
    (75) direct_declarator -> direct_declarator OPENPAREN . parameter_type_list CLOSEPAREN
    (76) direct_declarator -> direct_declarator OPENPAREN . identifier_list CLOSEPAREN
    (83) parameter_type_list -> . parameter_list
    (84) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (90) identifier_list -> . identifier
    (91) identifier_list -> . identifier_list COMMA identifier
    (85) parameter_list -> . parameter_declaration
    (86) parameter_list -> . parameter_list COMMA parameter_declaration
    (227) identifier -> . IDENTIFIER
    (87) parameter_declaration -> . declaration_specifiers declarator
    (88) parameter_declaration -> . declaration_specifiers
    (89) parameter_declaration -> . declaration_specifiers abstract_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 111
    IDENTIFIER      shift and go to state 36
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    parameter_type_list            shift and go to state 112
    identifier_list                shift and go to state 113
    parameter_list                 shift and go to state 114
    identifier                     shift and go to state 115
    parameter_declaration          shift and go to state 116
    declaration_specifiers         shift and go to state 117
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 52

    (69) declarator -> pointer direct_declarator .
    (72) direct_declarator -> direct_declarator . OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> direct_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> direct_declarator . OPENPAREN CLOSEPAREN
    (75) direct_declarator -> direct_declarator . OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> direct_declarator . OPENPAREN identifier_list CLOSEPAREN

    OPENBRACE       reduce using rule 69 (declarator -> pointer direct_declarator .)
    PD_O            reduce using rule 69 (declarator -> pointer direct_declarator .)
    PD_F            reduce using rule 69 (declarator -> pointer direct_declarator .)
    AUTO            reduce using rule 69 (declarator -> pointer direct_declarator .)
    REGISTER        reduce using rule 69 (declarator -> pointer direct_declarator .)
    STATIC          reduce using rule 69 (declarator -> pointer direct_declarator .)
    EXTERN          reduce using rule 69 (declarator -> pointer direct_declarator .)
    TYPEDEF         reduce using rule 69 (declarator -> pointer direct_declarator .)
    VOID            reduce using rule 69 (declarator -> pointer direct_declarator .)
    CHAR            reduce using rule 69 (declarator -> pointer direct_declarator .)
    SHORT           reduce using rule 69 (declarator -> pointer direct_declarator .)
    INT             reduce using rule 69 (declarator -> pointer direct_declarator .)
    LONG            reduce using rule 69 (declarator -> pointer direct_declarator .)
    FLOAT           reduce using rule 69 (declarator -> pointer direct_declarator .)
    DOUBLE          reduce using rule 69 (declarator -> pointer direct_declarator .)
    SIGNED          reduce using rule 69 (declarator -> pointer direct_declarator .)
    UNSIGNED        reduce using rule 69 (declarator -> pointer direct_declarator .)
    TYPEDEF_NAME    reduce using rule 69 (declarator -> pointer direct_declarator .)
    CONST           reduce using rule 69 (declarator -> pointer direct_declarator .)
    VOLATILE        reduce using rule 69 (declarator -> pointer direct_declarator .)
    ENUM            reduce using rule 69 (declarator -> pointer direct_declarator .)
    STRUCT          reduce using rule 69 (declarator -> pointer direct_declarator .)
    UNION           reduce using rule 69 (declarator -> pointer direct_declarator .)
    ASSIGN          reduce using rule 69 (declarator -> pointer direct_declarator .)
    SEMI            reduce using rule 69 (declarator -> pointer direct_declarator .)
    COMMA           reduce using rule 69 (declarator -> pointer direct_declarator .)
    CLOSEPAREN      reduce using rule 69 (declarator -> pointer direct_declarator .)
    COLON           reduce using rule 69 (declarator -> pointer direct_declarator .)
    OPENBRACKET     shift and go to state 50
    OPENPAREN       shift and go to state 51


state 53

    (16) declaration_specifiers -> storage_class_specifier declaration_specifiers .

    SEMI            reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    OPENPAREN       reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    ASTERISK        reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    COMMA           reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 16 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)


state 54

    (18) declaration_specifiers -> type_specifier declaration_specifiers .

    SEMI            reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    OPENPAREN       reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    ASTERISK        reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    COMMA           reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 18 (declaration_specifiers -> type_specifier declaration_specifiers .)


state 55

    (20) declaration_specifiers -> type_qualifier declaration_specifiers .

    SEMI            reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    OPENPAREN       reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    ASTERISK        reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    COMMA           reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 20 (declaration_specifiers -> type_qualifier declaration_specifiers .)


state 56

    (71) direct_declarator -> OPENPAREN declarator . CLOSEPAREN

    CLOSEPAREN      shift and go to state 118


state 57

    (78) pointer -> ASTERISK type_qualifier_list .
    (80) pointer -> ASTERISK type_qualifier_list . pointer
    (82) type_qualifier_list -> type_qualifier_list . type_qualifier
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE

    OPENPAREN       reduce using rule 78 (pointer -> ASTERISK type_qualifier_list .)
    IDENTIFIER      reduce using rule 78 (pointer -> ASTERISK type_qualifier_list .)
    OPENBRACKET     reduce using rule 78 (pointer -> ASTERISK type_qualifier_list .)
    COMMA           reduce using rule 78 (pointer -> ASTERISK type_qualifier_list .)
    CLOSEPAREN      reduce using rule 78 (pointer -> ASTERISK type_qualifier_list .)
    ASTERISK        shift and go to state 16
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35

    pointer                        shift and go to state 119
    type_qualifier                 shift and go to state 120

state 58

    (79) pointer -> ASTERISK pointer .

    OPENPAREN       reduce using rule 79 (pointer -> ASTERISK pointer .)
    IDENTIFIER      reduce using rule 79 (pointer -> ASTERISK pointer .)
    OPENBRACKET     reduce using rule 79 (pointer -> ASTERISK pointer .)
    COMMA           reduce using rule 79 (pointer -> ASTERISK pointer .)
    CLOSEPAREN      reduce using rule 79 (pointer -> ASTERISK pointer .)


state 59

    (81) type_qualifier_list -> type_qualifier .

    ASTERISK        reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    CONST           reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    VOLATILE        reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    OPENPAREN       reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    OPENBRACKET     reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    COMMA           reduce using rule 81 (type_qualifier_list -> type_qualifier .)
    CLOSEPAREN      reduce using rule 81 (type_qualifier_list -> type_qualifier .)


state 60

    (40) struct_or_union_specifier -> struct_or_union identifier . OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> struct_or_union identifier .

    OPENBRACE       shift and go to state 121
    AUTO            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    REGISTER        reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    STATIC          reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    EXTERN          reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    TYPEDEF         reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    VOID            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    CHAR            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    SHORT           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    INT             reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    LONG            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    FLOAT           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    DOUBLE          reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    SIGNED          reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    UNSIGNED        reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    TYPEDEF_NAME    reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    CONST           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    VOLATILE        reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    ENUM            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    STRUCT          reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    UNION           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    SEMI            reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    OPENPAREN       reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    ASTERISK        reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    IDENTIFIER      reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    OPENBRACKET     reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    COMMA           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    CLOSEPAREN      reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)
    COLON           reduce using rule 42 (struct_or_union_specifier -> struct_or_union identifier .)


state 61

    (41) struct_or_union_specifier -> struct_or_union OPENBRACE . struct_declaration_list CLOSEBRACE
    (45) struct_declaration_list -> . struct_declaration
    (46) struct_declaration_list -> . struct_declaration_list struct_declaration
    (51) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    struct_or_union                shift and go to state 37
    struct_declaration_list        shift and go to state 122
    struct_declaration             shift and go to state 123
    specifier_qualifier_list       shift and go to state 124
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32

state 62

    (61) enum_specifier -> ENUM OPENBRACE . enumerator_list CLOSEBRACE
    (64) enumerator_list -> . enumerator
    (65) enumerator_list -> . enumerator_list COMMA enumerator
    (66) enumerator -> . identifier
    (67) enumerator -> . identifier ASSIGN constant_expression
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    enumerator_list                shift and go to state 127
    enumerator                     shift and go to state 128
    identifier                     shift and go to state 129

state 63

    (62) enum_specifier -> ENUM identifier . OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> ENUM identifier .

    OPENBRACE       shift and go to state 130
    AUTO            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    REGISTER        reduce using rule 63 (enum_specifier -> ENUM identifier .)
    STATIC          reduce using rule 63 (enum_specifier -> ENUM identifier .)
    EXTERN          reduce using rule 63 (enum_specifier -> ENUM identifier .)
    TYPEDEF         reduce using rule 63 (enum_specifier -> ENUM identifier .)
    VOID            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    CHAR            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    SHORT           reduce using rule 63 (enum_specifier -> ENUM identifier .)
    INT             reduce using rule 63 (enum_specifier -> ENUM identifier .)
    LONG            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    FLOAT           reduce using rule 63 (enum_specifier -> ENUM identifier .)
    DOUBLE          reduce using rule 63 (enum_specifier -> ENUM identifier .)
    SIGNED          reduce using rule 63 (enum_specifier -> ENUM identifier .)
    UNSIGNED        reduce using rule 63 (enum_specifier -> ENUM identifier .)
    TYPEDEF_NAME    reduce using rule 63 (enum_specifier -> ENUM identifier .)
    CONST           reduce using rule 63 (enum_specifier -> ENUM identifier .)
    VOLATILE        reduce using rule 63 (enum_specifier -> ENUM identifier .)
    ENUM            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    STRUCT          reduce using rule 63 (enum_specifier -> ENUM identifier .)
    UNION           reduce using rule 63 (enum_specifier -> ENUM identifier .)
    SEMI            reduce using rule 63 (enum_specifier -> ENUM identifier .)
    OPENPAREN       reduce using rule 63 (enum_specifier -> ENUM identifier .)
    ASTERISK        reduce using rule 63 (enum_specifier -> ENUM identifier .)
    IDENTIFIER      reduce using rule 63 (enum_specifier -> ENUM identifier .)
    OPENBRACKET     reduce using rule 63 (enum_specifier -> ENUM identifier .)
    COMMA           reduce using rule 63 (enum_specifier -> ENUM identifier .)
    CLOSEPAREN      reduce using rule 63 (enum_specifier -> ENUM identifier .)
    COLON           reduce using rule 63 (enum_specifier -> ENUM identifier .)


state 64

    (6) function_definition -> declarator declaration_list compound_statement .

    PD_O            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    PD_F            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    OPENPAREN       reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ASTERISK        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    AUTO            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STATIC          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOID            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CHAR            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SHORT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    INT             reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    LONG            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEDEF_NAME    reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CONST           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ENUM            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNION           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    $end            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)


state 65

    (14) declaration_list -> declaration_list insert_mode_e . declaration
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (11) declaration -> . PD_O
    (12) declaration -> . PD_F
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    PD_O            shift and go to state 7
    PD_F            shift and go to state 8
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    declaration                    shift and go to state 131
    declaration_specifiers         shift and go to state 69
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 66

    (124) compound_statement -> OPENBRACE CLOSEBRACE .

    PD_O            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    PD_F            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    OPENPAREN       reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ASTERISK        reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    AUTO            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    REGISTER        reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STATIC          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    EXTERN          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TYPEDEF         reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    VOID            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CHAR            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SHORT           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INT             reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    LONG            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FLOAT           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DOUBLE          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SIGNED          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    UNSIGNED        reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CONST           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    VOLATILE        reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    IDENTIFIER      reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ENUM            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STRUCT          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    UNION           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    $end            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CASE            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DEFAULT         reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    OPENBRACE       reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SEMI            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    IF              reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SWITCH          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    WHILE           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DO              reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FOR             reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    GOTO            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CONTINUE        reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    BREAK           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    RETURN          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INC_OP          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DEC_OP          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SIZEOF          reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    AMPERSAND       reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    PLUS            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    MINUS           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TILDE           reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    BANG            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ELSE            reduce using rule 124 (compound_statement -> OPENBRACE CLOSEBRACE .)


state 67

    (125) compound_statement -> OPENBRACE push_scope_e . statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> OPENBRACE push_scope_e . declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> OPENBRACE push_scope_e . declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (128) statement_list -> . read_mode_e statement
    (129) statement_list -> . statement_list read_mode_e statement
    (13) declaration_list -> . insert_mode_e declaration
    (14) declaration_list -> . declaration_list insert_mode_e declaration
    (229) read_mode_e -> .
    (228) insert_mode_e -> .

  ! reduce/reduce conflict for PD_O resolved using rule 228 (insert_mode_e -> .)
  ! reduce/reduce conflict for PD_F resolved using rule 228 (insert_mode_e -> .)
    CASE            reduce using rule 229 (read_mode_e -> .)
    DEFAULT         reduce using rule 229 (read_mode_e -> .)
    OPENBRACE       reduce using rule 229 (read_mode_e -> .)
    SEMI            reduce using rule 229 (read_mode_e -> .)
    IF              reduce using rule 229 (read_mode_e -> .)
    SWITCH          reduce using rule 229 (read_mode_e -> .)
    WHILE           reduce using rule 229 (read_mode_e -> .)
    DO              reduce using rule 229 (read_mode_e -> .)
    FOR             reduce using rule 229 (read_mode_e -> .)
    GOTO            reduce using rule 229 (read_mode_e -> .)
    CONTINUE        reduce using rule 229 (read_mode_e -> .)
    BREAK           reduce using rule 229 (read_mode_e -> .)
    RETURN          reduce using rule 229 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 229 (read_mode_e -> .)
    INC_OP          reduce using rule 229 (read_mode_e -> .)
    DEC_OP          reduce using rule 229 (read_mode_e -> .)
    SIZEOF          reduce using rule 229 (read_mode_e -> .)
    AMPERSAND       reduce using rule 229 (read_mode_e -> .)
    ASTERISK        reduce using rule 229 (read_mode_e -> .)
    PLUS            reduce using rule 229 (read_mode_e -> .)
    MINUS           reduce using rule 229 (read_mode_e -> .)
    TILDE           reduce using rule 229 (read_mode_e -> .)
    BANG            reduce using rule 229 (read_mode_e -> .)
    OPENPAREN       reduce using rule 229 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 229 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 229 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 229 (read_mode_e -> .)
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)

  ! PD_O            [ reduce using rule 229 (read_mode_e -> .) ]
  ! PD_F            [ reduce using rule 229 (read_mode_e -> .) ]

    statement_list                 shift and go to state 132
    declaration_list               shift and go to state 133
    insert_mode_e                  shift and go to state 45
    read_mode_e                    shift and go to state 134

state 68

    (13) declaration_list -> insert_mode_e declaration .

    OPENBRACE       reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    PD_O            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    PD_F            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    AUTO            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    REGISTER        reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    STATIC          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    EXTERN          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    TYPEDEF         reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    VOID            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CHAR            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    SHORT           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    INT             reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    LONG            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    FLOAT           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    DOUBLE          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    SIGNED          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    UNSIGNED        reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    TYPEDEF_NAME    reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CONST           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    VOLATILE        reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    ENUM            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    STRUCT          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    UNION           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CLOSEBRACE      reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CASE            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    DEFAULT         reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    SEMI            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    IF              reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    SWITCH          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    WHILE           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    DO              reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    FOR             reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    GOTO            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CONTINUE        reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    BREAK           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    RETURN          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    IDENTIFIER      reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    INC_OP          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    DEC_OP          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    SIZEOF          reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    AMPERSAND       reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    ASTERISK        reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    PLUS            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    MINUS           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    TILDE           reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    BANG            reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    OPENPAREN       reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    INTEGER_CONSTANT reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    CHARACTER_CONSTANT reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    FLOATING_CONSTANT reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    ENUMERATION_CONSTANT reduce using rule 13 (declaration_list -> insert_mode_e declaration .)
    STRING_LITERAL  reduce using rule 13 (declaration_list -> insert_mode_e declaration .)


state 69

    (9) declaration -> declaration_specifiers . SEMI
    (10) declaration -> declaration_specifiers . init_declarator_list SEMI
    (47) init_declarator_list -> . init_declarator
    (48) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (49) init_declarator -> . declarator
    (50) init_declarator -> . declarator ASSIGN initializer
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (227) identifier -> . IDENTIFIER

    SEMI            shift and go to state 47
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    init_declarator_list           shift and go to state 48
    init_declarator                shift and go to state 49
    declarator                     shift and go to state 135
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    identifier                     shift and go to state 14

state 70

    (7) function_definition -> declaration_specifiers declarator compound_statement .

    PD_O            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    PD_F            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    OPENPAREN       reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    ASTERISK        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    AUTO            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    REGISTER        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    STATIC          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    EXTERN          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEDEF         reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOID            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    CHAR            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    SHORT           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    INT             reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    LONG            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    FLOAT           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    DOUBLE          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    SIGNED          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNSIGNED        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEDEF_NAME    reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    CONST           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOLATILE        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    IDENTIFIER      reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    ENUM            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    STRUCT          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNION           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    $end            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)


state 71

    (8) function_definition -> declaration_specifiers declarator declaration_list . compound_statement
    (14) declaration_list -> declaration_list . insert_mode_e declaration
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (228) insert_mode_e -> .

    OPENBRACE       shift and go to state 44
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)

    compound_statement             shift and go to state 136
    insert_mode_e                  shift and go to state 65

state 72

    (50) init_declarator -> declarator ASSIGN . initializer
    (92) initializer -> . assignment_expression
    (93) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (94) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    OPENBRACE       shift and go to state 139
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    initializer                    shift and go to state 137
    assignment_expression          shift and go to state 138
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 73

    (10) declaration -> declaration_specifiers init_declarator_list SEMI .

    PD_O            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    PD_F            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    OPENPAREN       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ASTERISK        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    AUTO            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    REGISTER        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STATIC          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    EXTERN          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEDEF         reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOID            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CHAR            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SHORT           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INT             reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LONG            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FLOAT           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DOUBLE          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIGNED          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNSIGNED        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEDEF_NAME    reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONST           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOLATILE        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    IDENTIFIER      reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ENUM            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STRUCT          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNION           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    $end            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    OPENBRACE       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CLOSEBRACE      reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CASE            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DEFAULT         reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SEMI            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    IF              reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SWITCH          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    WHILE           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DO              reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FOR             reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    GOTO            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONTINUE        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BREAK           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    RETURN          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INC_OP          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DEC_OP          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIZEOF          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    AMPERSAND       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    PLUS            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    MINUS           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TILDE           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BANG            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INTEGER_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CHARACTER_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FLOATING_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ENUMERATION_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STRING_LITERAL  reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)


state 74

    (48) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (49) init_declarator -> . declarator
    (50) init_declarator -> . declarator ASSIGN initializer
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (227) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    init_declarator                shift and go to state 143
    declarator                     shift and go to state 135
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    identifier                     shift and go to state 14

state 75

    (72) direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    OPENBRACE       reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    PD_O            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    PD_F            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    AUTO            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    REGISTER        reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    STATIC          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    EXTERN          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    TYPEDEF         reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    VOID            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CHAR            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SHORT           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    INT             reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    LONG            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    FLOAT           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    DOUBLE          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SIGNED          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    UNSIGNED        reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    TYPEDEF_NAME    reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CONST           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    VOLATILE        reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    ENUM            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    STRUCT          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    UNION           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    ASSIGN          reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SEMI            reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    COLON           reduce using rule 72 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)


state 76

    (73) direct_declarator -> direct_declarator OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 144


state 77

    (165) constant_expression -> conditional_expression .

    CLOSEBRACKET    reduce using rule 165 (constant_expression -> conditional_expression .)
    SEMI            reduce using rule 165 (constant_expression -> conditional_expression .)
    COMMA           reduce using rule 165 (constant_expression -> conditional_expression .)
    CLOSEBRACE      reduce using rule 165 (constant_expression -> conditional_expression .)
    COLON           reduce using rule 165 (constant_expression -> conditional_expression .)


state 78

    (163) conditional_expression -> logical_or_expression .
    (164) conditional_expression -> logical_or_expression . QMARK expression COLON conditional_expression
    (167) logical_or_expression -> logical_or_expression . OR_OP logical_and_expression

    CLOSEBRACKET    reduce using rule 163 (conditional_expression -> logical_or_expression .)
    SEMI            reduce using rule 163 (conditional_expression -> logical_or_expression .)
    COMMA           reduce using rule 163 (conditional_expression -> logical_or_expression .)
    CLOSEPAREN      reduce using rule 163 (conditional_expression -> logical_or_expression .)
    CLOSEBRACE      reduce using rule 163 (conditional_expression -> logical_or_expression .)
    COLON           reduce using rule 163 (conditional_expression -> logical_or_expression .)
    QMARK           shift and go to state 145
    OR_OP           shift and go to state 146


state 79

    (166) logical_or_expression -> logical_and_expression .
    (169) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QMARK           reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    OR_OP           reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    CLOSEBRACKET    reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    SEMI            reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    COMMA           reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    CLOSEPAREN      reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    CLOSEBRACE      reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    COLON           reduce using rule 166 (logical_or_expression -> logical_and_expression .)
    AND_OP          shift and go to state 147


state 80

    (168) logical_and_expression -> inclusive_or_expression .
    (171) inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression

    AND_OP          reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    QMARK           reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    OR_OP           reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    SEMI            reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    CLOSEPAREN      reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    CLOSEBRACE      reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    COLON           reduce using rule 168 (logical_and_expression -> inclusive_or_expression .)
    PIPE            shift and go to state 148


state 81

    (170) inclusive_or_expression -> exclusive_or_expression .
    (173) exclusive_or_expression -> exclusive_or_expression . CARAT and_expression

    PIPE            reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    AND_OP          reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    QMARK           reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    OR_OP           reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    SEMI            reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEPAREN      reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEBRACE      reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    COLON           reduce using rule 170 (inclusive_or_expression -> exclusive_or_expression .)
    CARAT           shift and go to state 149


state 82

    (172) exclusive_or_expression -> and_expression .
    (175) and_expression -> and_expression . AMPERSAND equality_expression

    CARAT           reduce using rule 172 (exclusive_or_expression -> and_expression .)
    PIPE            reduce using rule 172 (exclusive_or_expression -> and_expression .)
    AND_OP          reduce using rule 172 (exclusive_or_expression -> and_expression .)
    QMARK           reduce using rule 172 (exclusive_or_expression -> and_expression .)
    OR_OP           reduce using rule 172 (exclusive_or_expression -> and_expression .)
    CLOSEBRACKET    reduce using rule 172 (exclusive_or_expression -> and_expression .)
    SEMI            reduce using rule 172 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 172 (exclusive_or_expression -> and_expression .)
    CLOSEPAREN      reduce using rule 172 (exclusive_or_expression -> and_expression .)
    CLOSEBRACE      reduce using rule 172 (exclusive_or_expression -> and_expression .)
    COLON           reduce using rule 172 (exclusive_or_expression -> and_expression .)
    AMPERSAND       shift and go to state 150


state 83

    (174) and_expression -> equality_expression .
    (177) equality_expression -> equality_expression . EQ_OP relational_expression
    (178) equality_expression -> equality_expression . NE_OP relational_expression

    AMPERSAND       reduce using rule 174 (and_expression -> equality_expression .)
    CARAT           reduce using rule 174 (and_expression -> equality_expression .)
    PIPE            reduce using rule 174 (and_expression -> equality_expression .)
    AND_OP          reduce using rule 174 (and_expression -> equality_expression .)
    QMARK           reduce using rule 174 (and_expression -> equality_expression .)
    OR_OP           reduce using rule 174 (and_expression -> equality_expression .)
    CLOSEBRACKET    reduce using rule 174 (and_expression -> equality_expression .)
    SEMI            reduce using rule 174 (and_expression -> equality_expression .)
    COMMA           reduce using rule 174 (and_expression -> equality_expression .)
    CLOSEPAREN      reduce using rule 174 (and_expression -> equality_expression .)
    CLOSEBRACE      reduce using rule 174 (and_expression -> equality_expression .)
    COLON           reduce using rule 174 (and_expression -> equality_expression .)
    EQ_OP           shift and go to state 151
    NE_OP           shift and go to state 152


state 84

    (202) unary_operator -> AMPERSAND .

    OPENPAREN       reduce using rule 202 (unary_operator -> AMPERSAND .)
    INC_OP          reduce using rule 202 (unary_operator -> AMPERSAND .)
    DEC_OP          reduce using rule 202 (unary_operator -> AMPERSAND .)
    SIZEOF          reduce using rule 202 (unary_operator -> AMPERSAND .)
    AMPERSAND       reduce using rule 202 (unary_operator -> AMPERSAND .)
    ASTERISK        reduce using rule 202 (unary_operator -> AMPERSAND .)
    PLUS            reduce using rule 202 (unary_operator -> AMPERSAND .)
    MINUS           reduce using rule 202 (unary_operator -> AMPERSAND .)
    TILDE           reduce using rule 202 (unary_operator -> AMPERSAND .)
    BANG            reduce using rule 202 (unary_operator -> AMPERSAND .)
    IDENTIFIER      reduce using rule 202 (unary_operator -> AMPERSAND .)
    INTEGER_CONSTANT reduce using rule 202 (unary_operator -> AMPERSAND .)
    CHARACTER_CONSTANT reduce using rule 202 (unary_operator -> AMPERSAND .)
    FLOATING_CONSTANT reduce using rule 202 (unary_operator -> AMPERSAND .)
    ENUMERATION_CONSTANT reduce using rule 202 (unary_operator -> AMPERSAND .)
    STRING_LITERAL  reduce using rule 202 (unary_operator -> AMPERSAND .)


state 85

    (176) equality_expression -> relational_expression .
    (180) relational_expression -> relational_expression . LE shift_expression
    (181) relational_expression -> relational_expression . GT shift_expression
    (182) relational_expression -> relational_expression . LE_OP shift_expression
    (183) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 176 (equality_expression -> relational_expression .)
    NE_OP           reduce using rule 176 (equality_expression -> relational_expression .)
    AMPERSAND       reduce using rule 176 (equality_expression -> relational_expression .)
    CARAT           reduce using rule 176 (equality_expression -> relational_expression .)
    PIPE            reduce using rule 176 (equality_expression -> relational_expression .)
    AND_OP          reduce using rule 176 (equality_expression -> relational_expression .)
    QMARK           reduce using rule 176 (equality_expression -> relational_expression .)
    OR_OP           reduce using rule 176 (equality_expression -> relational_expression .)
    CLOSEBRACKET    reduce using rule 176 (equality_expression -> relational_expression .)
    SEMI            reduce using rule 176 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 176 (equality_expression -> relational_expression .)
    CLOSEPAREN      reduce using rule 176 (equality_expression -> relational_expression .)
    CLOSEBRACE      reduce using rule 176 (equality_expression -> relational_expression .)
    COLON           reduce using rule 176 (equality_expression -> relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 154
    LE_OP           shift and go to state 155
    GE_OP           shift and go to state 156


state 86

    (179) relational_expression -> shift_expression .
    (185) shift_expression -> shift_expression . LEFT_OP additive_expression
    (186) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 179 (relational_expression -> shift_expression .)
    GT              reduce using rule 179 (relational_expression -> shift_expression .)
    LE_OP           reduce using rule 179 (relational_expression -> shift_expression .)
    GE_OP           reduce using rule 179 (relational_expression -> shift_expression .)
    EQ_OP           reduce using rule 179 (relational_expression -> shift_expression .)
    NE_OP           reduce using rule 179 (relational_expression -> shift_expression .)
    AMPERSAND       reduce using rule 179 (relational_expression -> shift_expression .)
    CARAT           reduce using rule 179 (relational_expression -> shift_expression .)
    PIPE            reduce using rule 179 (relational_expression -> shift_expression .)
    AND_OP          reduce using rule 179 (relational_expression -> shift_expression .)
    QMARK           reduce using rule 179 (relational_expression -> shift_expression .)
    OR_OP           reduce using rule 179 (relational_expression -> shift_expression .)
    CLOSEBRACKET    reduce using rule 179 (relational_expression -> shift_expression .)
    SEMI            reduce using rule 179 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 179 (relational_expression -> shift_expression .)
    CLOSEPAREN      reduce using rule 179 (relational_expression -> shift_expression .)
    CLOSEBRACE      reduce using rule 179 (relational_expression -> shift_expression .)
    COLON           reduce using rule 179 (relational_expression -> shift_expression .)
    LEFT_OP         shift and go to state 157
    RIGHT_OP        shift and go to state 158


state 87

    (184) shift_expression -> additive_expression .
    (188) additive_expression -> additive_expression . PLUS multiplicative_expression
    (189) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 184 (shift_expression -> additive_expression .)
    RIGHT_OP        reduce using rule 184 (shift_expression -> additive_expression .)
    LE              reduce using rule 184 (shift_expression -> additive_expression .)
    GT              reduce using rule 184 (shift_expression -> additive_expression .)
    LE_OP           reduce using rule 184 (shift_expression -> additive_expression .)
    GE_OP           reduce using rule 184 (shift_expression -> additive_expression .)
    EQ_OP           reduce using rule 184 (shift_expression -> additive_expression .)
    NE_OP           reduce using rule 184 (shift_expression -> additive_expression .)
    AMPERSAND       reduce using rule 184 (shift_expression -> additive_expression .)
    CARAT           reduce using rule 184 (shift_expression -> additive_expression .)
    PIPE            reduce using rule 184 (shift_expression -> additive_expression .)
    AND_OP          reduce using rule 184 (shift_expression -> additive_expression .)
    QMARK           reduce using rule 184 (shift_expression -> additive_expression .)
    OR_OP           reduce using rule 184 (shift_expression -> additive_expression .)
    CLOSEBRACKET    reduce using rule 184 (shift_expression -> additive_expression .)
    SEMI            reduce using rule 184 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 184 (shift_expression -> additive_expression .)
    CLOSEPAREN      reduce using rule 184 (shift_expression -> additive_expression .)
    CLOSEBRACE      reduce using rule 184 (shift_expression -> additive_expression .)
    COLON           reduce using rule 184 (shift_expression -> additive_expression .)
    PLUS            shift and go to state 159
    MINUS           shift and go to state 160


state 88

    (187) additive_expression -> multiplicative_expression .
    (191) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (192) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (193) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 187 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    LEFT_OP         reduce using rule 187 (additive_expression -> multiplicative_expression .)
    RIGHT_OP        reduce using rule 187 (additive_expression -> multiplicative_expression .)
    LE              reduce using rule 187 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 187 (additive_expression -> multiplicative_expression .)
    LE_OP           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    GE_OP           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    EQ_OP           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    NE_OP           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    AMPERSAND       reduce using rule 187 (additive_expression -> multiplicative_expression .)
    CARAT           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    PIPE            reduce using rule 187 (additive_expression -> multiplicative_expression .)
    AND_OP          reduce using rule 187 (additive_expression -> multiplicative_expression .)
    QMARK           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    OR_OP           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 187 (additive_expression -> multiplicative_expression .)
    SEMI            reduce using rule 187 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    CLOSEPAREN      reduce using rule 187 (additive_expression -> multiplicative_expression .)
    CLOSEBRACE      reduce using rule 187 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 187 (additive_expression -> multiplicative_expression .)
    ASTERISK        shift and go to state 161
    DIV             shift and go to state 162
    PERCENT         shift and go to state 163


state 89

    (204) unary_operator -> PLUS .

    OPENPAREN       reduce using rule 204 (unary_operator -> PLUS .)
    INC_OP          reduce using rule 204 (unary_operator -> PLUS .)
    DEC_OP          reduce using rule 204 (unary_operator -> PLUS .)
    SIZEOF          reduce using rule 204 (unary_operator -> PLUS .)
    AMPERSAND       reduce using rule 204 (unary_operator -> PLUS .)
    ASTERISK        reduce using rule 204 (unary_operator -> PLUS .)
    PLUS            reduce using rule 204 (unary_operator -> PLUS .)
    MINUS           reduce using rule 204 (unary_operator -> PLUS .)
    TILDE           reduce using rule 204 (unary_operator -> PLUS .)
    BANG            reduce using rule 204 (unary_operator -> PLUS .)
    IDENTIFIER      reduce using rule 204 (unary_operator -> PLUS .)
    INTEGER_CONSTANT reduce using rule 204 (unary_operator -> PLUS .)
    CHARACTER_CONSTANT reduce using rule 204 (unary_operator -> PLUS .)
    FLOATING_CONSTANT reduce using rule 204 (unary_operator -> PLUS .)
    ENUMERATION_CONSTANT reduce using rule 204 (unary_operator -> PLUS .)
    STRING_LITERAL  reduce using rule 204 (unary_operator -> PLUS .)


state 90

    (205) unary_operator -> MINUS .

    OPENPAREN       reduce using rule 205 (unary_operator -> MINUS .)
    INC_OP          reduce using rule 205 (unary_operator -> MINUS .)
    DEC_OP          reduce using rule 205 (unary_operator -> MINUS .)
    SIZEOF          reduce using rule 205 (unary_operator -> MINUS .)
    AMPERSAND       reduce using rule 205 (unary_operator -> MINUS .)
    ASTERISK        reduce using rule 205 (unary_operator -> MINUS .)
    PLUS            reduce using rule 205 (unary_operator -> MINUS .)
    MINUS           reduce using rule 205 (unary_operator -> MINUS .)
    TILDE           reduce using rule 205 (unary_operator -> MINUS .)
    BANG            reduce using rule 205 (unary_operator -> MINUS .)
    IDENTIFIER      reduce using rule 205 (unary_operator -> MINUS .)
    INTEGER_CONSTANT reduce using rule 205 (unary_operator -> MINUS .)
    CHARACTER_CONSTANT reduce using rule 205 (unary_operator -> MINUS .)
    FLOATING_CONSTANT reduce using rule 205 (unary_operator -> MINUS .)
    ENUMERATION_CONSTANT reduce using rule 205 (unary_operator -> MINUS .)
    STRING_LITERAL  reduce using rule 205 (unary_operator -> MINUS .)


state 91

    (190) multiplicative_expression -> cast_expression .

    ASTERISK        reduce using rule 190 (multiplicative_expression -> cast_expression .)
    DIV             reduce using rule 190 (multiplicative_expression -> cast_expression .)
    PERCENT         reduce using rule 190 (multiplicative_expression -> cast_expression .)
    PLUS            reduce using rule 190 (multiplicative_expression -> cast_expression .)
    MINUS           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    LEFT_OP         reduce using rule 190 (multiplicative_expression -> cast_expression .)
    RIGHT_OP        reduce using rule 190 (multiplicative_expression -> cast_expression .)
    LE              reduce using rule 190 (multiplicative_expression -> cast_expression .)
    GT              reduce using rule 190 (multiplicative_expression -> cast_expression .)
    LE_OP           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    GE_OP           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    EQ_OP           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    NE_OP           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    AMPERSAND       reduce using rule 190 (multiplicative_expression -> cast_expression .)
    CARAT           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    PIPE            reduce using rule 190 (multiplicative_expression -> cast_expression .)
    AND_OP          reduce using rule 190 (multiplicative_expression -> cast_expression .)
    QMARK           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    OR_OP           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    CLOSEBRACKET    reduce using rule 190 (multiplicative_expression -> cast_expression .)
    SEMI            reduce using rule 190 (multiplicative_expression -> cast_expression .)
    COMMA           reduce using rule 190 (multiplicative_expression -> cast_expression .)
    CLOSEPAREN      reduce using rule 190 (multiplicative_expression -> cast_expression .)
    CLOSEBRACE      reduce using rule 190 (multiplicative_expression -> cast_expression .)
    COLON           reduce using rule 190 (multiplicative_expression -> cast_expression .)


state 92

    (203) unary_operator -> ASTERISK .

    OPENPAREN       reduce using rule 203 (unary_operator -> ASTERISK .)
    INC_OP          reduce using rule 203 (unary_operator -> ASTERISK .)
    DEC_OP          reduce using rule 203 (unary_operator -> ASTERISK .)
    SIZEOF          reduce using rule 203 (unary_operator -> ASTERISK .)
    AMPERSAND       reduce using rule 203 (unary_operator -> ASTERISK .)
    ASTERISK        reduce using rule 203 (unary_operator -> ASTERISK .)
    PLUS            reduce using rule 203 (unary_operator -> ASTERISK .)
    MINUS           reduce using rule 203 (unary_operator -> ASTERISK .)
    TILDE           reduce using rule 203 (unary_operator -> ASTERISK .)
    BANG            reduce using rule 203 (unary_operator -> ASTERISK .)
    IDENTIFIER      reduce using rule 203 (unary_operator -> ASTERISK .)
    INTEGER_CONSTANT reduce using rule 203 (unary_operator -> ASTERISK .)
    CHARACTER_CONSTANT reduce using rule 203 (unary_operator -> ASTERISK .)
    FLOATING_CONSTANT reduce using rule 203 (unary_operator -> ASTERISK .)
    ENUMERATION_CONSTANT reduce using rule 203 (unary_operator -> ASTERISK .)
    STRING_LITERAL  reduce using rule 203 (unary_operator -> ASTERISK .)


state 93

    (194) cast_expression -> unary_expression .

    ASTERISK        reduce using rule 194 (cast_expression -> unary_expression .)
    DIV             reduce using rule 194 (cast_expression -> unary_expression .)
    PERCENT         reduce using rule 194 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 194 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 194 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 194 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 194 (cast_expression -> unary_expression .)
    LE              reduce using rule 194 (cast_expression -> unary_expression .)
    GT              reduce using rule 194 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    AMPERSAND       reduce using rule 194 (cast_expression -> unary_expression .)
    CARAT           reduce using rule 194 (cast_expression -> unary_expression .)
    PIPE            reduce using rule 194 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 194 (cast_expression -> unary_expression .)
    QMARK           reduce using rule 194 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEBRACKET    reduce using rule 194 (cast_expression -> unary_expression .)
    ASSIGN          reduce using rule 194 (cast_expression -> unary_expression .)
    MUL_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    DIV_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    MOD_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    ADD_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    SUB_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    LEFT_ASSIGN     reduce using rule 194 (cast_expression -> unary_expression .)
    RIGHT_ASSIGN    reduce using rule 194 (cast_expression -> unary_expression .)
    AND_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    XOR_ASSIGN      reduce using rule 194 (cast_expression -> unary_expression .)
    OR_ASSIGN       reduce using rule 194 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 194 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEPAREN      reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEBRACE      reduce using rule 194 (cast_expression -> unary_expression .)
    COLON           reduce using rule 194 (cast_expression -> unary_expression .)


state 94

    (195) cast_expression -> OPENPAREN . type_name CLOSEPAREN cast_expression
    (219) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (97) type_name -> . specifier_qualifier_list
    (98) type_name -> . specifier_qualifier_list abstract_declarator
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    ENUM            shift and go to state 38
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    type_name                      shift and go to state 164
    cast_expression                shift and go to state 91
    expression                     shift and go to state 165
    specifier_qualifier_list       shift and go to state 166
    assignment_expression          shift and go to state 167
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    struct_or_union                shift and go to state 37
    identifier                     shift and go to state 101
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 95

    (196) unary_expression -> postfix_expression .
    (209) postfix_expression -> postfix_expression . OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> postfix_expression . OPENPAREN CLOSEPAREN
    (211) postfix_expression -> postfix_expression . OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> postfix_expression . PERIOD identifier
    (213) postfix_expression -> postfix_expression . PTR_OP identifier
    (214) postfix_expression -> postfix_expression . INC_OP
    (215) postfix_expression -> postfix_expression . DEC_OP

    ASTERISK        reduce using rule 196 (unary_expression -> postfix_expression .)
    DIV             reduce using rule 196 (unary_expression -> postfix_expression .)
    PERCENT         reduce using rule 196 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 196 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 196 (unary_expression -> postfix_expression .)
    LEFT_OP         reduce using rule 196 (unary_expression -> postfix_expression .)
    RIGHT_OP        reduce using rule 196 (unary_expression -> postfix_expression .)
    LE              reduce using rule 196 (unary_expression -> postfix_expression .)
    GT              reduce using rule 196 (unary_expression -> postfix_expression .)
    LE_OP           reduce using rule 196 (unary_expression -> postfix_expression .)
    GE_OP           reduce using rule 196 (unary_expression -> postfix_expression .)
    EQ_OP           reduce using rule 196 (unary_expression -> postfix_expression .)
    NE_OP           reduce using rule 196 (unary_expression -> postfix_expression .)
    AMPERSAND       reduce using rule 196 (unary_expression -> postfix_expression .)
    CARAT           reduce using rule 196 (unary_expression -> postfix_expression .)
    PIPE            reduce using rule 196 (unary_expression -> postfix_expression .)
    AND_OP          reduce using rule 196 (unary_expression -> postfix_expression .)
    QMARK           reduce using rule 196 (unary_expression -> postfix_expression .)
    OR_OP           reduce using rule 196 (unary_expression -> postfix_expression .)
    CLOSEBRACKET    reduce using rule 196 (unary_expression -> postfix_expression .)
    ASSIGN          reduce using rule 196 (unary_expression -> postfix_expression .)
    MUL_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    DIV_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    MOD_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    ADD_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    SUB_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    LEFT_ASSIGN     reduce using rule 196 (unary_expression -> postfix_expression .)
    RIGHT_ASSIGN    reduce using rule 196 (unary_expression -> postfix_expression .)
    AND_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    XOR_ASSIGN      reduce using rule 196 (unary_expression -> postfix_expression .)
    OR_ASSIGN       reduce using rule 196 (unary_expression -> postfix_expression .)
    SEMI            reduce using rule 196 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 196 (unary_expression -> postfix_expression .)
    CLOSEPAREN      reduce using rule 196 (unary_expression -> postfix_expression .)
    CLOSEBRACE      reduce using rule 196 (unary_expression -> postfix_expression .)
    COLON           reduce using rule 196 (unary_expression -> postfix_expression .)
    OPENBRACKET     shift and go to state 168
    OPENPAREN       shift and go to state 169
    PERIOD          shift and go to state 170
    PTR_OP          shift and go to state 171
    INC_OP          shift and go to state 172
    DEC_OP          shift and go to state 173


state 96

    (197) unary_expression -> INC_OP . unary_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 175
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    unary_expression               shift and go to state 174
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 97

    (198) unary_expression -> DEC_OP . unary_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 175
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    unary_expression               shift and go to state 176
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 98

    (199) unary_expression -> unary_operator . cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 177
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 99

    (200) unary_expression -> SIZEOF . unary_expression
    (201) unary_expression -> SIZEOF . OPENPAREN type_name CLOSEPAREN
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 179
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    unary_expression               shift and go to state 178
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 100

    (208) postfix_expression -> primary_expression .

    OPENBRACKET     reduce using rule 208 (postfix_expression -> primary_expression .)
    OPENPAREN       reduce using rule 208 (postfix_expression -> primary_expression .)
    PERIOD          reduce using rule 208 (postfix_expression -> primary_expression .)
    PTR_OP          reduce using rule 208 (postfix_expression -> primary_expression .)
    INC_OP          reduce using rule 208 (postfix_expression -> primary_expression .)
    DEC_OP          reduce using rule 208 (postfix_expression -> primary_expression .)
    ASTERISK        reduce using rule 208 (postfix_expression -> primary_expression .)
    DIV             reduce using rule 208 (postfix_expression -> primary_expression .)
    PERCENT         reduce using rule 208 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 208 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 208 (postfix_expression -> primary_expression .)
    LEFT_OP         reduce using rule 208 (postfix_expression -> primary_expression .)
    RIGHT_OP        reduce using rule 208 (postfix_expression -> primary_expression .)
    LE              reduce using rule 208 (postfix_expression -> primary_expression .)
    GT              reduce using rule 208 (postfix_expression -> primary_expression .)
    LE_OP           reduce using rule 208 (postfix_expression -> primary_expression .)
    GE_OP           reduce using rule 208 (postfix_expression -> primary_expression .)
    EQ_OP           reduce using rule 208 (postfix_expression -> primary_expression .)
    NE_OP           reduce using rule 208 (postfix_expression -> primary_expression .)
    AMPERSAND       reduce using rule 208 (postfix_expression -> primary_expression .)
    CARAT           reduce using rule 208 (postfix_expression -> primary_expression .)
    PIPE            reduce using rule 208 (postfix_expression -> primary_expression .)
    AND_OP          reduce using rule 208 (postfix_expression -> primary_expression .)
    QMARK           reduce using rule 208 (postfix_expression -> primary_expression .)
    OR_OP           reduce using rule 208 (postfix_expression -> primary_expression .)
    CLOSEBRACKET    reduce using rule 208 (postfix_expression -> primary_expression .)
    ASSIGN          reduce using rule 208 (postfix_expression -> primary_expression .)
    MUL_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    DIV_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    MOD_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    ADD_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    SUB_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    LEFT_ASSIGN     reduce using rule 208 (postfix_expression -> primary_expression .)
    RIGHT_ASSIGN    reduce using rule 208 (postfix_expression -> primary_expression .)
    AND_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    XOR_ASSIGN      reduce using rule 208 (postfix_expression -> primary_expression .)
    OR_ASSIGN       reduce using rule 208 (postfix_expression -> primary_expression .)
    SEMI            reduce using rule 208 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 208 (postfix_expression -> primary_expression .)
    CLOSEPAREN      reduce using rule 208 (postfix_expression -> primary_expression .)
    CLOSEBRACE      reduce using rule 208 (postfix_expression -> primary_expression .)
    COLON           reduce using rule 208 (postfix_expression -> primary_expression .)


state 101

    (216) primary_expression -> identifier .

    OPENBRACKET     reduce using rule 216 (primary_expression -> identifier .)
    OPENPAREN       reduce using rule 216 (primary_expression -> identifier .)
    PERIOD          reduce using rule 216 (primary_expression -> identifier .)
    PTR_OP          reduce using rule 216 (primary_expression -> identifier .)
    INC_OP          reduce using rule 216 (primary_expression -> identifier .)
    DEC_OP          reduce using rule 216 (primary_expression -> identifier .)
    ASTERISK        reduce using rule 216 (primary_expression -> identifier .)
    DIV             reduce using rule 216 (primary_expression -> identifier .)
    PERCENT         reduce using rule 216 (primary_expression -> identifier .)
    PLUS            reduce using rule 216 (primary_expression -> identifier .)
    MINUS           reduce using rule 216 (primary_expression -> identifier .)
    LEFT_OP         reduce using rule 216 (primary_expression -> identifier .)
    RIGHT_OP        reduce using rule 216 (primary_expression -> identifier .)
    LE              reduce using rule 216 (primary_expression -> identifier .)
    GT              reduce using rule 216 (primary_expression -> identifier .)
    LE_OP           reduce using rule 216 (primary_expression -> identifier .)
    GE_OP           reduce using rule 216 (primary_expression -> identifier .)
    EQ_OP           reduce using rule 216 (primary_expression -> identifier .)
    NE_OP           reduce using rule 216 (primary_expression -> identifier .)
    AMPERSAND       reduce using rule 216 (primary_expression -> identifier .)
    CARAT           reduce using rule 216 (primary_expression -> identifier .)
    PIPE            reduce using rule 216 (primary_expression -> identifier .)
    AND_OP          reduce using rule 216 (primary_expression -> identifier .)
    QMARK           reduce using rule 216 (primary_expression -> identifier .)
    OR_OP           reduce using rule 216 (primary_expression -> identifier .)
    CLOSEBRACKET    reduce using rule 216 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 216 (primary_expression -> identifier .)
    MUL_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    DIV_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    MOD_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    ADD_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    SUB_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    LEFT_ASSIGN     reduce using rule 216 (primary_expression -> identifier .)
    RIGHT_ASSIGN    reduce using rule 216 (primary_expression -> identifier .)
    AND_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    XOR_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    OR_ASSIGN       reduce using rule 216 (primary_expression -> identifier .)
    SEMI            reduce using rule 216 (primary_expression -> identifier .)
    COMMA           reduce using rule 216 (primary_expression -> identifier .)
    CLOSEPAREN      reduce using rule 216 (primary_expression -> identifier .)
    CLOSEBRACE      reduce using rule 216 (primary_expression -> identifier .)
    COLON           reduce using rule 216 (primary_expression -> identifier .)


state 102

    (206) unary_operator -> TILDE .

    OPENPAREN       reduce using rule 206 (unary_operator -> TILDE .)
    INC_OP          reduce using rule 206 (unary_operator -> TILDE .)
    DEC_OP          reduce using rule 206 (unary_operator -> TILDE .)
    SIZEOF          reduce using rule 206 (unary_operator -> TILDE .)
    AMPERSAND       reduce using rule 206 (unary_operator -> TILDE .)
    ASTERISK        reduce using rule 206 (unary_operator -> TILDE .)
    PLUS            reduce using rule 206 (unary_operator -> TILDE .)
    MINUS           reduce using rule 206 (unary_operator -> TILDE .)
    TILDE           reduce using rule 206 (unary_operator -> TILDE .)
    BANG            reduce using rule 206 (unary_operator -> TILDE .)
    IDENTIFIER      reduce using rule 206 (unary_operator -> TILDE .)
    INTEGER_CONSTANT reduce using rule 206 (unary_operator -> TILDE .)
    CHARACTER_CONSTANT reduce using rule 206 (unary_operator -> TILDE .)
    FLOATING_CONSTANT reduce using rule 206 (unary_operator -> TILDE .)
    ENUMERATION_CONSTANT reduce using rule 206 (unary_operator -> TILDE .)
    STRING_LITERAL  reduce using rule 206 (unary_operator -> TILDE .)


state 103

    (207) unary_operator -> BANG .

    OPENPAREN       reduce using rule 207 (unary_operator -> BANG .)
    INC_OP          reduce using rule 207 (unary_operator -> BANG .)
    DEC_OP          reduce using rule 207 (unary_operator -> BANG .)
    SIZEOF          reduce using rule 207 (unary_operator -> BANG .)
    AMPERSAND       reduce using rule 207 (unary_operator -> BANG .)
    ASTERISK        reduce using rule 207 (unary_operator -> BANG .)
    PLUS            reduce using rule 207 (unary_operator -> BANG .)
    MINUS           reduce using rule 207 (unary_operator -> BANG .)
    TILDE           reduce using rule 207 (unary_operator -> BANG .)
    BANG            reduce using rule 207 (unary_operator -> BANG .)
    IDENTIFIER      reduce using rule 207 (unary_operator -> BANG .)
    INTEGER_CONSTANT reduce using rule 207 (unary_operator -> BANG .)
    CHARACTER_CONSTANT reduce using rule 207 (unary_operator -> BANG .)
    FLOATING_CONSTANT reduce using rule 207 (unary_operator -> BANG .)
    ENUMERATION_CONSTANT reduce using rule 207 (unary_operator -> BANG .)
    STRING_LITERAL  reduce using rule 207 (unary_operator -> BANG .)


state 104

    (217) primary_expression -> constant .

    OPENBRACKET     reduce using rule 217 (primary_expression -> constant .)
    OPENPAREN       reduce using rule 217 (primary_expression -> constant .)
    PERIOD          reduce using rule 217 (primary_expression -> constant .)
    PTR_OP          reduce using rule 217 (primary_expression -> constant .)
    INC_OP          reduce using rule 217 (primary_expression -> constant .)
    DEC_OP          reduce using rule 217 (primary_expression -> constant .)
    ASTERISK        reduce using rule 217 (primary_expression -> constant .)
    DIV             reduce using rule 217 (primary_expression -> constant .)
    PERCENT         reduce using rule 217 (primary_expression -> constant .)
    PLUS            reduce using rule 217 (primary_expression -> constant .)
    MINUS           reduce using rule 217 (primary_expression -> constant .)
    LEFT_OP         reduce using rule 217 (primary_expression -> constant .)
    RIGHT_OP        reduce using rule 217 (primary_expression -> constant .)
    LE              reduce using rule 217 (primary_expression -> constant .)
    GT              reduce using rule 217 (primary_expression -> constant .)
    LE_OP           reduce using rule 217 (primary_expression -> constant .)
    GE_OP           reduce using rule 217 (primary_expression -> constant .)
    EQ_OP           reduce using rule 217 (primary_expression -> constant .)
    NE_OP           reduce using rule 217 (primary_expression -> constant .)
    AMPERSAND       reduce using rule 217 (primary_expression -> constant .)
    CARAT           reduce using rule 217 (primary_expression -> constant .)
    PIPE            reduce using rule 217 (primary_expression -> constant .)
    AND_OP          reduce using rule 217 (primary_expression -> constant .)
    QMARK           reduce using rule 217 (primary_expression -> constant .)
    OR_OP           reduce using rule 217 (primary_expression -> constant .)
    CLOSEBRACKET    reduce using rule 217 (primary_expression -> constant .)
    ASSIGN          reduce using rule 217 (primary_expression -> constant .)
    MUL_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    DIV_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    MOD_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    ADD_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    SUB_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    LEFT_ASSIGN     reduce using rule 217 (primary_expression -> constant .)
    RIGHT_ASSIGN    reduce using rule 217 (primary_expression -> constant .)
    AND_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    XOR_ASSIGN      reduce using rule 217 (primary_expression -> constant .)
    OR_ASSIGN       reduce using rule 217 (primary_expression -> constant .)
    SEMI            reduce using rule 217 (primary_expression -> constant .)
    COMMA           reduce using rule 217 (primary_expression -> constant .)
    CLOSEPAREN      reduce using rule 217 (primary_expression -> constant .)
    CLOSEBRACE      reduce using rule 217 (primary_expression -> constant .)
    COLON           reduce using rule 217 (primary_expression -> constant .)


state 105

    (218) primary_expression -> string .

    OPENBRACKET     reduce using rule 218 (primary_expression -> string .)
    OPENPAREN       reduce using rule 218 (primary_expression -> string .)
    PERIOD          reduce using rule 218 (primary_expression -> string .)
    PTR_OP          reduce using rule 218 (primary_expression -> string .)
    INC_OP          reduce using rule 218 (primary_expression -> string .)
    DEC_OP          reduce using rule 218 (primary_expression -> string .)
    ASTERISK        reduce using rule 218 (primary_expression -> string .)
    DIV             reduce using rule 218 (primary_expression -> string .)
    PERCENT         reduce using rule 218 (primary_expression -> string .)
    PLUS            reduce using rule 218 (primary_expression -> string .)
    MINUS           reduce using rule 218 (primary_expression -> string .)
    LEFT_OP         reduce using rule 218 (primary_expression -> string .)
    RIGHT_OP        reduce using rule 218 (primary_expression -> string .)
    LE              reduce using rule 218 (primary_expression -> string .)
    GT              reduce using rule 218 (primary_expression -> string .)
    LE_OP           reduce using rule 218 (primary_expression -> string .)
    GE_OP           reduce using rule 218 (primary_expression -> string .)
    EQ_OP           reduce using rule 218 (primary_expression -> string .)
    NE_OP           reduce using rule 218 (primary_expression -> string .)
    AMPERSAND       reduce using rule 218 (primary_expression -> string .)
    CARAT           reduce using rule 218 (primary_expression -> string .)
    PIPE            reduce using rule 218 (primary_expression -> string .)
    AND_OP          reduce using rule 218 (primary_expression -> string .)
    QMARK           reduce using rule 218 (primary_expression -> string .)
    OR_OP           reduce using rule 218 (primary_expression -> string .)
    CLOSEBRACKET    reduce using rule 218 (primary_expression -> string .)
    ASSIGN          reduce using rule 218 (primary_expression -> string .)
    MUL_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    DIV_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    MOD_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    ADD_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    SUB_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    LEFT_ASSIGN     reduce using rule 218 (primary_expression -> string .)
    RIGHT_ASSIGN    reduce using rule 218 (primary_expression -> string .)
    AND_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    XOR_ASSIGN      reduce using rule 218 (primary_expression -> string .)
    OR_ASSIGN       reduce using rule 218 (primary_expression -> string .)
    SEMI            reduce using rule 218 (primary_expression -> string .)
    COMMA           reduce using rule 218 (primary_expression -> string .)
    CLOSEPAREN      reduce using rule 218 (primary_expression -> string .)
    CLOSEBRACE      reduce using rule 218 (primary_expression -> string .)
    COLON           reduce using rule 218 (primary_expression -> string .)


state 106

    (222) constant -> INTEGER_CONSTANT .

    OPENBRACKET     reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    OPENPAREN       reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    PERIOD          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    PTR_OP          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    INC_OP          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    DEC_OP          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    ASTERISK        reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    DIV             reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    PERCENT         reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    PLUS            reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    MINUS           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    LEFT_OP         reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    RIGHT_OP        reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    LE              reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    GT              reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    LE_OP           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    GE_OP           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    EQ_OP           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    NE_OP           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    AMPERSAND       reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    CARAT           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    PIPE            reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    AND_OP          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    QMARK           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    OR_OP           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    CLOSEBRACKET    reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    ASSIGN          reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    MUL_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    DIV_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    MOD_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    ADD_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    SUB_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    AND_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    XOR_ASSIGN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    OR_ASSIGN       reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    SEMI            reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    COMMA           reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    CLOSEPAREN      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    CLOSEBRACE      reduce using rule 222 (constant -> INTEGER_CONSTANT .)
    COLON           reduce using rule 222 (constant -> INTEGER_CONSTANT .)


state 107

    (223) constant -> CHARACTER_CONSTANT .

    OPENBRACKET     reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    OPENPAREN       reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    PERIOD          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    PTR_OP          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    INC_OP          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    DEC_OP          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    ASTERISK        reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    DIV             reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    PERCENT         reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    PLUS            reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    MINUS           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    LEFT_OP         reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    RIGHT_OP        reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    LE              reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    GT              reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    LE_OP           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    GE_OP           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    EQ_OP           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    NE_OP           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    AMPERSAND       reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    CARAT           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    PIPE            reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    AND_OP          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    QMARK           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    OR_OP           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    CLOSEBRACKET    reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    ASSIGN          reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    MUL_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    DIV_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    MOD_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    ADD_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    SUB_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    AND_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    XOR_ASSIGN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    OR_ASSIGN       reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    SEMI            reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    COMMA           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    CLOSEPAREN      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    CLOSEBRACE      reduce using rule 223 (constant -> CHARACTER_CONSTANT .)
    COLON           reduce using rule 223 (constant -> CHARACTER_CONSTANT .)


state 108

    (224) constant -> FLOATING_CONSTANT .

    OPENBRACKET     reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    OPENPAREN       reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    PERIOD          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    PTR_OP          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    INC_OP          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    DEC_OP          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    ASTERISK        reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    DIV             reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    PERCENT         reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    PLUS            reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    MINUS           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    LEFT_OP         reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    RIGHT_OP        reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    LE              reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    GT              reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    LE_OP           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    GE_OP           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    EQ_OP           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    NE_OP           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    AMPERSAND       reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    CARAT           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    PIPE            reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    AND_OP          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    QMARK           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    OR_OP           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    CLOSEBRACKET    reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    ASSIGN          reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    MUL_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    DIV_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    MOD_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    ADD_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    SUB_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    AND_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    XOR_ASSIGN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    OR_ASSIGN       reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    SEMI            reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    COMMA           reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    CLOSEPAREN      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    CLOSEBRACE      reduce using rule 224 (constant -> FLOATING_CONSTANT .)
    COLON           reduce using rule 224 (constant -> FLOATING_CONSTANT .)


state 109

    (225) constant -> ENUMERATION_CONSTANT .

    OPENBRACKET     reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    OPENPAREN       reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    PERIOD          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    PTR_OP          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    INC_OP          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    DEC_OP          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    ASTERISK        reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    DIV             reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    PERCENT         reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    PLUS            reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    MINUS           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    LEFT_OP         reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    RIGHT_OP        reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    LE              reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    GT              reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    LE_OP           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    GE_OP           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    EQ_OP           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    NE_OP           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    AMPERSAND       reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    CARAT           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    PIPE            reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    AND_OP          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    QMARK           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    OR_OP           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    CLOSEBRACKET    reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    ASSIGN          reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    MUL_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    DIV_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    MOD_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    ADD_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    SUB_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    AND_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    XOR_ASSIGN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    OR_ASSIGN       reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    SEMI            reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    COMMA           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    CLOSEPAREN      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    CLOSEBRACE      reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)
    COLON           reduce using rule 225 (constant -> ENUMERATION_CONSTANT .)


state 110

    (226) string -> STRING_LITERAL .

    OPENBRACKET     reduce using rule 226 (string -> STRING_LITERAL .)
    OPENPAREN       reduce using rule 226 (string -> STRING_LITERAL .)
    PERIOD          reduce using rule 226 (string -> STRING_LITERAL .)
    PTR_OP          reduce using rule 226 (string -> STRING_LITERAL .)
    INC_OP          reduce using rule 226 (string -> STRING_LITERAL .)
    DEC_OP          reduce using rule 226 (string -> STRING_LITERAL .)
    ASTERISK        reduce using rule 226 (string -> STRING_LITERAL .)
    DIV             reduce using rule 226 (string -> STRING_LITERAL .)
    PERCENT         reduce using rule 226 (string -> STRING_LITERAL .)
    PLUS            reduce using rule 226 (string -> STRING_LITERAL .)
    MINUS           reduce using rule 226 (string -> STRING_LITERAL .)
    LEFT_OP         reduce using rule 226 (string -> STRING_LITERAL .)
    RIGHT_OP        reduce using rule 226 (string -> STRING_LITERAL .)
    LE              reduce using rule 226 (string -> STRING_LITERAL .)
    GT              reduce using rule 226 (string -> STRING_LITERAL .)
    LE_OP           reduce using rule 226 (string -> STRING_LITERAL .)
    GE_OP           reduce using rule 226 (string -> STRING_LITERAL .)
    EQ_OP           reduce using rule 226 (string -> STRING_LITERAL .)
    NE_OP           reduce using rule 226 (string -> STRING_LITERAL .)
    AMPERSAND       reduce using rule 226 (string -> STRING_LITERAL .)
    CARAT           reduce using rule 226 (string -> STRING_LITERAL .)
    PIPE            reduce using rule 226 (string -> STRING_LITERAL .)
    AND_OP          reduce using rule 226 (string -> STRING_LITERAL .)
    QMARK           reduce using rule 226 (string -> STRING_LITERAL .)
    OR_OP           reduce using rule 226 (string -> STRING_LITERAL .)
    CLOSEBRACKET    reduce using rule 226 (string -> STRING_LITERAL .)
    ASSIGN          reduce using rule 226 (string -> STRING_LITERAL .)
    MUL_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    DIV_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    MOD_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    ADD_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    SUB_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    LEFT_ASSIGN     reduce using rule 226 (string -> STRING_LITERAL .)
    RIGHT_ASSIGN    reduce using rule 226 (string -> STRING_LITERAL .)
    AND_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    XOR_ASSIGN      reduce using rule 226 (string -> STRING_LITERAL .)
    OR_ASSIGN       reduce using rule 226 (string -> STRING_LITERAL .)
    SEMI            reduce using rule 226 (string -> STRING_LITERAL .)
    COMMA           reduce using rule 226 (string -> STRING_LITERAL .)
    CLOSEPAREN      reduce using rule 226 (string -> STRING_LITERAL .)
    CLOSEBRACE      reduce using rule 226 (string -> STRING_LITERAL .)
    COLON           reduce using rule 226 (string -> STRING_LITERAL .)


state 111

    (74) direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    OPENBRACE       reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    PD_O            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    PD_F            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    AUTO            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    REGISTER        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    STATIC          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    EXTERN          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    TYPEDEF         reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    VOID            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CHAR            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SHORT           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    INT             reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    LONG            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    FLOAT           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    DOUBLE          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SIGNED          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    UNSIGNED        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CONST           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    VOLATILE        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    ENUM            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    STRUCT          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    UNION           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    ASSIGN          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SEMI            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    COLON           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)


state 112

    (75) direct_declarator -> direct_declarator OPENPAREN parameter_type_list . CLOSEPAREN

    CLOSEPAREN      shift and go to state 180


state 113

    (76) direct_declarator -> direct_declarator OPENPAREN identifier_list . CLOSEPAREN
    (91) identifier_list -> identifier_list . COMMA identifier

    CLOSEPAREN      shift and go to state 181
    COMMA           shift and go to state 182


state 114

    (83) parameter_type_list -> parameter_list .
    (84) parameter_type_list -> parameter_list . COMMA ELIPSIS
    (86) parameter_list -> parameter_list . COMMA parameter_declaration

    CLOSEPAREN      reduce using rule 83 (parameter_type_list -> parameter_list .)
    COMMA           shift and go to state 183


state 115

    (90) identifier_list -> identifier .

    CLOSEPAREN      reduce using rule 90 (identifier_list -> identifier .)
    COMMA           reduce using rule 90 (identifier_list -> identifier .)


state 116

    (85) parameter_list -> parameter_declaration .

    COMMA           reduce using rule 85 (parameter_list -> parameter_declaration .)
    CLOSEPAREN      reduce using rule 85 (parameter_list -> parameter_declaration .)


state 117

    (87) parameter_declaration -> declaration_specifiers . declarator
    (88) parameter_declaration -> declaration_specifiers .
    (89) parameter_declaration -> declaration_specifiers . abstract_declarator
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (99) abstract_declarator -> . pointer
    (100) abstract_declarator -> . direct_abstract_declarator
    (101) abstract_declarator -> . pointer direct_abstract_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (227) identifier -> . IDENTIFIER

    COMMA           reduce using rule 88 (parameter_declaration -> declaration_specifiers .)
    CLOSEPAREN      reduce using rule 88 (parameter_declaration -> declaration_specifiers .)
    OPENPAREN       shift and go to state 188
    ASTERISK        shift and go to state 16
    OPENBRACKET     shift and go to state 189
    IDENTIFIER      shift and go to state 36

    declarator                     shift and go to state 184
    abstract_declarator            shift and go to state 185
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 186
    direct_abstract_declarator     shift and go to state 187
    identifier                     shift and go to state 14

state 118

    (71) direct_declarator -> OPENPAREN declarator CLOSEPAREN .

    OPENBRACKET     reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    OPENPAREN       reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    OPENBRACE       reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    PD_O            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    PD_F            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    AUTO            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    REGISTER        reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    STATIC          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    EXTERN          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    TYPEDEF         reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    VOID            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CHAR            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SHORT           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    INT             reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    LONG            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    FLOAT           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    DOUBLE          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SIGNED          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    UNSIGNED        reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CONST           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    VOLATILE        reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    ENUM            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    STRUCT          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    UNION           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    ASSIGN          reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SEMI            reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    COMMA           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    COLON           reduce using rule 71 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)


state 119

    (80) pointer -> ASTERISK type_qualifier_list pointer .

    OPENPAREN       reduce using rule 80 (pointer -> ASTERISK type_qualifier_list pointer .)
    IDENTIFIER      reduce using rule 80 (pointer -> ASTERISK type_qualifier_list pointer .)
    OPENBRACKET     reduce using rule 80 (pointer -> ASTERISK type_qualifier_list pointer .)
    COMMA           reduce using rule 80 (pointer -> ASTERISK type_qualifier_list pointer .)
    CLOSEPAREN      reduce using rule 80 (pointer -> ASTERISK type_qualifier_list pointer .)


state 120

    (82) type_qualifier_list -> type_qualifier_list type_qualifier .

    ASTERISK        reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CONST           reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    VOLATILE        reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    OPENPAREN       reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    IDENTIFIER      reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    OPENBRACKET     reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    COMMA           reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CLOSEPAREN      reduce using rule 82 (type_qualifier_list -> type_qualifier_list type_qualifier .)


state 121

    (40) struct_or_union_specifier -> struct_or_union identifier OPENBRACE . struct_declaration_list CLOSEBRACE
    (45) struct_declaration_list -> . struct_declaration
    (46) struct_declaration_list -> . struct_declaration_list struct_declaration
    (51) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    struct_or_union                shift and go to state 37
    struct_declaration_list        shift and go to state 190
    struct_declaration             shift and go to state 123
    specifier_qualifier_list       shift and go to state 124
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32

state 122

    (41) struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list . CLOSEBRACE
    (46) struct_declaration_list -> struct_declaration_list . struct_declaration
    (51) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEBRACE      shift and go to state 191
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    struct_or_union                shift and go to state 37
    struct_declaration             shift and go to state 192
    specifier_qualifier_list       shift and go to state 124
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32

state 123

    (45) struct_declaration_list -> struct_declaration .

    CLOSEBRACE      reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    VOID            reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    CHAR            reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    SHORT           reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    INT             reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    LONG            reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    FLOAT           reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    DOUBLE          reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    SIGNED          reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    UNSIGNED        reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    TYPEDEF_NAME    reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    CONST           reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    VOLATILE        reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    ENUM            reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    STRUCT          reduce using rule 45 (struct_declaration_list -> struct_declaration .)
    UNION           reduce using rule 45 (struct_declaration_list -> struct_declaration .)


state 124

    (51) struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMI
    (56) struct_declarator_list -> . struct_declarator
    (57) struct_declarator_list -> . struct_declarator_list COMMA struct_declarator
    (58) struct_declarator -> . declarator
    (59) struct_declarator -> . COLON constant_expression
    (60) struct_declarator -> . declarator COLON constant_expression
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (227) identifier -> . IDENTIFIER

    COLON           shift and go to state 196
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    struct_declarator_list         shift and go to state 193
    struct_declarator              shift and go to state 194
    declarator                     shift and go to state 195
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    identifier                     shift and go to state 14

state 125

    (52) specifier_qualifier_list -> type_specifier .
    (53) specifier_qualifier_list -> type_specifier . specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    COLON           reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    OPENPAREN       reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    ASTERISK        reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    IDENTIFIER      reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    OPENBRACKET     reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    CLOSEPAREN      reduce using rule 52 (specifier_qualifier_list -> type_specifier .)
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    type_specifier                 shift and go to state 125
    specifier_qualifier_list       shift and go to state 197
    type_qualifier                 shift and go to state 126
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 126

    (54) specifier_qualifier_list -> type_qualifier .
    (55) specifier_qualifier_list -> type_qualifier . specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    COLON           reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    OPENPAREN       reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    ASTERISK        reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    OPENBRACKET     reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    CLOSEPAREN      reduce using rule 54 (specifier_qualifier_list -> type_qualifier .)
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    type_qualifier                 shift and go to state 126
    specifier_qualifier_list       shift and go to state 198
    type_specifier                 shift and go to state 125
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 127

    (61) enum_specifier -> ENUM OPENBRACE enumerator_list . CLOSEBRACE
    (65) enumerator_list -> enumerator_list . COMMA enumerator

    CLOSEBRACE      shift and go to state 199
    COMMA           shift and go to state 200


state 128

    (64) enumerator_list -> enumerator .

    CLOSEBRACE      reduce using rule 64 (enumerator_list -> enumerator .)
    COMMA           reduce using rule 64 (enumerator_list -> enumerator .)


state 129

    (66) enumerator -> identifier .
    (67) enumerator -> identifier . ASSIGN constant_expression

    CLOSEBRACE      reduce using rule 66 (enumerator -> identifier .)
    COMMA           reduce using rule 66 (enumerator -> identifier .)
    ASSIGN          shift and go to state 201


state 130

    (62) enum_specifier -> ENUM identifier OPENBRACE . enumerator_list CLOSEBRACE
    (64) enumerator_list -> . enumerator
    (65) enumerator_list -> . enumerator_list COMMA enumerator
    (66) enumerator -> . identifier
    (67) enumerator -> . identifier ASSIGN constant_expression
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 129
    enumerator_list                shift and go to state 202
    enumerator                     shift and go to state 128

state 131

    (14) declaration_list -> declaration_list insert_mode_e declaration .

    OPENBRACE       reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    PD_O            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    PD_F            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    AUTO            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    REGISTER        reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    STATIC          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    EXTERN          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    TYPEDEF         reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    VOID            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CHAR            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    SHORT           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    INT             reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    LONG            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    FLOAT           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    DOUBLE          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    SIGNED          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    UNSIGNED        reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    TYPEDEF_NAME    reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CONST           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    VOLATILE        reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    ENUM            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    STRUCT          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    UNION           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CLOSEBRACE      reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CASE            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    DEFAULT         reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    SEMI            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    IF              reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    SWITCH          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    WHILE           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    DO              reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    FOR             reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    GOTO            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CONTINUE        reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    BREAK           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    RETURN          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    IDENTIFIER      reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    INC_OP          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    DEC_OP          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    SIZEOF          reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    AMPERSAND       reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    ASTERISK        reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    PLUS            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    MINUS           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    TILDE           reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    BANG            reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    OPENPAREN       reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    INTEGER_CONSTANT reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    CHARACTER_CONSTANT reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    FLOATING_CONSTANT reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    ENUMERATION_CONSTANT reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)
    STRING_LITERAL  reduce using rule 14 (declaration_list -> declaration_list insert_mode_e declaration .)


state 132

    (125) compound_statement -> OPENBRACE push_scope_e statement_list . pop_scope_e CLOSEBRACE
    (129) statement_list -> statement_list . read_mode_e statement
    (231) pop_scope_e -> .
    (229) read_mode_e -> .

    CLOSEBRACE      reduce using rule 231 (pop_scope_e -> .)
    PD_O            reduce using rule 229 (read_mode_e -> .)
    PD_F            reduce using rule 229 (read_mode_e -> .)
    CASE            reduce using rule 229 (read_mode_e -> .)
    DEFAULT         reduce using rule 229 (read_mode_e -> .)
    OPENBRACE       reduce using rule 229 (read_mode_e -> .)
    SEMI            reduce using rule 229 (read_mode_e -> .)
    IF              reduce using rule 229 (read_mode_e -> .)
    SWITCH          reduce using rule 229 (read_mode_e -> .)
    WHILE           reduce using rule 229 (read_mode_e -> .)
    DO              reduce using rule 229 (read_mode_e -> .)
    FOR             reduce using rule 229 (read_mode_e -> .)
    GOTO            reduce using rule 229 (read_mode_e -> .)
    CONTINUE        reduce using rule 229 (read_mode_e -> .)
    BREAK           reduce using rule 229 (read_mode_e -> .)
    RETURN          reduce using rule 229 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 229 (read_mode_e -> .)
    INC_OP          reduce using rule 229 (read_mode_e -> .)
    DEC_OP          reduce using rule 229 (read_mode_e -> .)
    SIZEOF          reduce using rule 229 (read_mode_e -> .)
    AMPERSAND       reduce using rule 229 (read_mode_e -> .)
    ASTERISK        reduce using rule 229 (read_mode_e -> .)
    PLUS            reduce using rule 229 (read_mode_e -> .)
    MINUS           reduce using rule 229 (read_mode_e -> .)
    TILDE           reduce using rule 229 (read_mode_e -> .)
    BANG            reduce using rule 229 (read_mode_e -> .)
    OPENPAREN       reduce using rule 229 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 229 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 229 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 229 (read_mode_e -> .)

    pop_scope_e                    shift and go to state 203
    read_mode_e                    shift and go to state 204

state 133

    (126) compound_statement -> OPENBRACE push_scope_e declaration_list . pop_scope_e CLOSEBRACE
    (127) compound_statement -> OPENBRACE push_scope_e declaration_list . statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (14) declaration_list -> declaration_list . insert_mode_e declaration
    (231) pop_scope_e -> .
    (128) statement_list -> . read_mode_e statement
    (129) statement_list -> . statement_list read_mode_e statement
    (228) insert_mode_e -> .
    (229) read_mode_e -> .

  ! reduce/reduce conflict for PD_O resolved using rule 228 (insert_mode_e -> .)
  ! reduce/reduce conflict for PD_F resolved using rule 228 (insert_mode_e -> .)
    CLOSEBRACE      reduce using rule 231 (pop_scope_e -> .)
    PD_O            reduce using rule 228 (insert_mode_e -> .)
    PD_F            reduce using rule 228 (insert_mode_e -> .)
    AUTO            reduce using rule 228 (insert_mode_e -> .)
    REGISTER        reduce using rule 228 (insert_mode_e -> .)
    STATIC          reduce using rule 228 (insert_mode_e -> .)
    EXTERN          reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 228 (insert_mode_e -> .)
    VOID            reduce using rule 228 (insert_mode_e -> .)
    CHAR            reduce using rule 228 (insert_mode_e -> .)
    SHORT           reduce using rule 228 (insert_mode_e -> .)
    INT             reduce using rule 228 (insert_mode_e -> .)
    LONG            reduce using rule 228 (insert_mode_e -> .)
    FLOAT           reduce using rule 228 (insert_mode_e -> .)
    DOUBLE          reduce using rule 228 (insert_mode_e -> .)
    SIGNED          reduce using rule 228 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 228 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 228 (insert_mode_e -> .)
    CONST           reduce using rule 228 (insert_mode_e -> .)
    VOLATILE        reduce using rule 228 (insert_mode_e -> .)
    ENUM            reduce using rule 228 (insert_mode_e -> .)
    STRUCT          reduce using rule 228 (insert_mode_e -> .)
    UNION           reduce using rule 228 (insert_mode_e -> .)
    CASE            reduce using rule 229 (read_mode_e -> .)
    DEFAULT         reduce using rule 229 (read_mode_e -> .)
    OPENBRACE       reduce using rule 229 (read_mode_e -> .)
    SEMI            reduce using rule 229 (read_mode_e -> .)
    IF              reduce using rule 229 (read_mode_e -> .)
    SWITCH          reduce using rule 229 (read_mode_e -> .)
    WHILE           reduce using rule 229 (read_mode_e -> .)
    DO              reduce using rule 229 (read_mode_e -> .)
    FOR             reduce using rule 229 (read_mode_e -> .)
    GOTO            reduce using rule 229 (read_mode_e -> .)
    CONTINUE        reduce using rule 229 (read_mode_e -> .)
    BREAK           reduce using rule 229 (read_mode_e -> .)
    RETURN          reduce using rule 229 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 229 (read_mode_e -> .)
    INC_OP          reduce using rule 229 (read_mode_e -> .)
    DEC_OP          reduce using rule 229 (read_mode_e -> .)
    SIZEOF          reduce using rule 229 (read_mode_e -> .)
    AMPERSAND       reduce using rule 229 (read_mode_e -> .)
    ASTERISK        reduce using rule 229 (read_mode_e -> .)
    PLUS            reduce using rule 229 (read_mode_e -> .)
    MINUS           reduce using rule 229 (read_mode_e -> .)
    TILDE           reduce using rule 229 (read_mode_e -> .)
    BANG            reduce using rule 229 (read_mode_e -> .)
    OPENPAREN       reduce using rule 229 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 229 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 229 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 229 (read_mode_e -> .)

  ! PD_O            [ reduce using rule 229 (read_mode_e -> .) ]
  ! PD_F            [ reduce using rule 229 (read_mode_e -> .) ]

    pop_scope_e                    shift and go to state 205
    statement_list                 shift and go to state 206
    insert_mode_e                  shift and go to state 65
    read_mode_e                    shift and go to state 134

state 134

    (128) statement_list -> read_mode_e . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 207
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 135

    (49) init_declarator -> declarator .
    (50) init_declarator -> declarator . ASSIGN initializer

    SEMI            reduce using rule 49 (init_declarator -> declarator .)
    COMMA           reduce using rule 49 (init_declarator -> declarator .)
    ASSIGN          shift and go to state 72


state 136

    (8) function_definition -> declaration_specifiers declarator declaration_list compound_statement .

    PD_O            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    PD_F            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    OPENPAREN       reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ASTERISK        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    AUTO            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STATIC          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOID            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CHAR            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SHORT           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    INT             reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LONG            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEDEF_NAME    reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CONST           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ENUM            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNION           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    $end            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)


state 137

    (50) init_declarator -> declarator ASSIGN initializer .

    SEMI            reduce using rule 50 (init_declarator -> declarator ASSIGN initializer .)
    COMMA           reduce using rule 50 (init_declarator -> declarator ASSIGN initializer .)


state 138

    (92) initializer -> assignment_expression .

    SEMI            reduce using rule 92 (initializer -> assignment_expression .)
    COMMA           reduce using rule 92 (initializer -> assignment_expression .)
    CLOSEBRACE      reduce using rule 92 (initializer -> assignment_expression .)


state 139

    (93) initializer -> OPENBRACE . initializer_list CLOSEBRACE
    (94) initializer -> OPENBRACE . initializer_list COMMA CLOSEBRACE
    (95) initializer_list -> . initializer
    (96) initializer_list -> . initializer_list COMMA initializer
    (92) initializer -> . assignment_expression
    (93) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (94) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    OPENBRACE       shift and go to state 139
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    initializer_list               shift and go to state 230
    initializer                    shift and go to state 231
    assignment_expression          shift and go to state 138
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 140

    (150) assignment_expression -> conditional_expression .

    SEMI            reduce using rule 150 (assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 150 (assignment_expression -> conditional_expression .)
    CLOSEPAREN      reduce using rule 150 (assignment_expression -> conditional_expression .)
    CLOSEBRACE      reduce using rule 150 (assignment_expression -> conditional_expression .)
    COLON           reduce using rule 150 (assignment_expression -> conditional_expression .)
    CLOSEBRACKET    reduce using rule 150 (assignment_expression -> conditional_expression .)


state 141

    (151) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (194) cast_expression -> unary_expression .
    (152) assignment_operator -> . ASSIGN
    (153) assignment_operator -> . MUL_ASSIGN
    (154) assignment_operator -> . DIV_ASSIGN
    (155) assignment_operator -> . MOD_ASSIGN
    (156) assignment_operator -> . ADD_ASSIGN
    (157) assignment_operator -> . SUB_ASSIGN
    (158) assignment_operator -> . LEFT_ASSIGN
    (159) assignment_operator -> . RIGHT_ASSIGN
    (160) assignment_operator -> . AND_ASSIGN
    (161) assignment_operator -> . XOR_ASSIGN
    (162) assignment_operator -> . OR_ASSIGN

    ASTERISK        reduce using rule 194 (cast_expression -> unary_expression .)
    DIV             reduce using rule 194 (cast_expression -> unary_expression .)
    PERCENT         reduce using rule 194 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 194 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 194 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 194 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 194 (cast_expression -> unary_expression .)
    LE              reduce using rule 194 (cast_expression -> unary_expression .)
    GT              reduce using rule 194 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    AMPERSAND       reduce using rule 194 (cast_expression -> unary_expression .)
    CARAT           reduce using rule 194 (cast_expression -> unary_expression .)
    PIPE            reduce using rule 194 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 194 (cast_expression -> unary_expression .)
    QMARK           reduce using rule 194 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 194 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 194 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEPAREN      reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEBRACE      reduce using rule 194 (cast_expression -> unary_expression .)
    COLON           reduce using rule 194 (cast_expression -> unary_expression .)
    CLOSEBRACKET    reduce using rule 194 (cast_expression -> unary_expression .)
    ASSIGN          shift and go to state 233
    MUL_ASSIGN      shift and go to state 234
    DIV_ASSIGN      shift and go to state 235
    MOD_ASSIGN      shift and go to state 236
    ADD_ASSIGN      shift and go to state 237
    SUB_ASSIGN      shift and go to state 238
    LEFT_ASSIGN     shift and go to state 239
    RIGHT_ASSIGN    shift and go to state 240
    AND_ASSIGN      shift and go to state 241
    XOR_ASSIGN      shift and go to state 242
    OR_ASSIGN       shift and go to state 243

    assignment_operator            shift and go to state 232

state 142

    (219) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (195) cast_expression -> OPENPAREN . type_name CLOSEPAREN cast_expression
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (97) type_name -> . specifier_qualifier_list
    (98) type_name -> . specifier_qualifier_list abstract_declarator
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    ENUM            shift and go to state 38
    OPENPAREN       shift and go to state 142
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 165
    type_name                      shift and go to state 164
    cast_expression                shift and go to state 91
    assignment_expression          shift and go to state 167
    specifier_qualifier_list       shift and go to state 166
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    struct_or_union                shift and go to state 37
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 143

    (48) init_declarator_list -> init_declarator_list COMMA init_declarator .

    SEMI            reduce using rule 48 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    COMMA           reduce using rule 48 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 144

    (73) direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENBRACE       reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    PD_O            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    PD_F            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    AUTO            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    REGISTER        reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    STATIC          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    EXTERN          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    TYPEDEF         reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    VOID            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CHAR            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SHORT           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    INT             reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    LONG            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    FLOAT           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    DOUBLE          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SIGNED          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    UNSIGNED        reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    TYPEDEF_NAME    reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CONST           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    VOLATILE        reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    ENUM            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    STRUCT          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    UNION           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    ASSIGN          reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SEMI            reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COLON           reduce using rule 73 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)


state 145

    (164) conditional_expression -> logical_or_expression QMARK . expression COLON conditional_expression
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    logical_or_expression          shift and go to state 78
    expression                     shift and go to state 244
    conditional_expression         shift and go to state 140
    assignment_expression          shift and go to state 167
    unary_expression               shift and go to state 141
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 146

    (167) logical_or_expression -> logical_or_expression OR_OP . logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    logical_and_expression         shift and go to state 245
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 147

    (169) logical_and_expression -> logical_and_expression AND_OP . inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    inclusive_or_expression        shift and go to state 246
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 148

    (171) inclusive_or_expression -> inclusive_or_expression PIPE . exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    exclusive_or_expression        shift and go to state 247
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 149

    (173) exclusive_or_expression -> exclusive_or_expression CARAT . and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    and_expression                 shift and go to state 248
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 150

    (175) and_expression -> and_expression AMPERSAND . equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    equality_expression            shift and go to state 249
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 151

    (177) equality_expression -> equality_expression EQ_OP . relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    relational_expression          shift and go to state 250
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 152

    (178) equality_expression -> equality_expression NE_OP . relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    relational_expression          shift and go to state 251
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 153

    (180) relational_expression -> relational_expression LE . shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    shift_expression               shift and go to state 252
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 154

    (181) relational_expression -> relational_expression GT . shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    shift_expression               shift and go to state 253
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 155

    (182) relational_expression -> relational_expression LE_OP . shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    shift_expression               shift and go to state 254
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 156

    (183) relational_expression -> relational_expression GE_OP . shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    shift_expression               shift and go to state 255
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 157

    (185) shift_expression -> shift_expression LEFT_OP . additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    additive_expression            shift and go to state 256
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 158

    (186) shift_expression -> shift_expression RIGHT_OP . additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    additive_expression            shift and go to state 257
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 159

    (188) additive_expression -> additive_expression PLUS . multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    multiplicative_expression      shift and go to state 258
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 160

    (189) additive_expression -> additive_expression MINUS . multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    multiplicative_expression      shift and go to state 259
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 161

    (191) multiplicative_expression -> multiplicative_expression ASTERISK . cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    cast_expression                shift and go to state 260
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 162

    (192) multiplicative_expression -> multiplicative_expression DIV . cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    cast_expression                shift and go to state 261
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 163

    (193) multiplicative_expression -> multiplicative_expression PERCENT . cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    cast_expression                shift and go to state 262
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 164

    (195) cast_expression -> OPENPAREN type_name . CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 263


state 165

    (219) primary_expression -> OPENPAREN expression . CLOSEPAREN
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 264
    COMMA           shift and go to state 265


state 166

    (97) type_name -> specifier_qualifier_list .
    (98) type_name -> specifier_qualifier_list . abstract_declarator
    (99) abstract_declarator -> . pointer
    (100) abstract_declarator -> . direct_abstract_declarator
    (101) abstract_declarator -> . pointer direct_abstract_declarator
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN

    CLOSEPAREN      reduce using rule 97 (type_name -> specifier_qualifier_list .)
    ASTERISK        shift and go to state 16
    OPENPAREN       shift and go to state 268
    OPENBRACKET     shift and go to state 189

    abstract_declarator            shift and go to state 266
    pointer                        shift and go to state 267
    direct_abstract_declarator     shift and go to state 187

state 167

    (148) expression -> assignment_expression .

    CLOSEPAREN      reduce using rule 148 (expression -> assignment_expression .)
    COMMA           reduce using rule 148 (expression -> assignment_expression .)
    SEMI            reduce using rule 148 (expression -> assignment_expression .)
    COLON           reduce using rule 148 (expression -> assignment_expression .)
    CLOSEBRACKET    reduce using rule 148 (expression -> assignment_expression .)


state 168

    (209) postfix_expression -> postfix_expression OPENBRACKET . expression CLOSEBRACKET
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    postfix_expression             shift and go to state 95
    expression                     shift and go to state 269
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 169

    (210) postfix_expression -> postfix_expression OPENPAREN . CLOSEPAREN
    (211) postfix_expression -> postfix_expression OPENPAREN . argument_expression_list CLOSEPAREN
    (220) argument_expression_list -> . assignment_expression
    (221) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 270
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    postfix_expression             shift and go to state 95
    argument_expression_list       shift and go to state 271
    assignment_expression          shift and go to state 272
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 170

    (212) postfix_expression -> postfix_expression PERIOD . identifier
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 273

state 171

    (213) postfix_expression -> postfix_expression PTR_OP . identifier
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 274

state 172

    (214) postfix_expression -> postfix_expression INC_OP .

    OPENBRACKET     reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    OPENPAREN       reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    PERIOD          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    PTR_OP          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    INC_OP          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    DEC_OP          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    ASTERISK        reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    DIV             reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    PERCENT         reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    PLUS            reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    MINUS           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_OP         reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_OP        reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    LE              reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    GT              reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    LE_OP           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    GE_OP           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    EQ_OP           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    NE_OP           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    AMPERSAND       reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    CARAT           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    PIPE            reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    AND_OP          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    QMARK           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    OR_OP           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEBRACKET    reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    ASSIGN          reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    MUL_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    DIV_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    MOD_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    ADD_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    SUB_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_ASSIGN     reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_ASSIGN    reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    AND_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    XOR_ASSIGN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    OR_ASSIGN       reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    SEMI            reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    COMMA           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEPAREN      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEBRACE      reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)
    COLON           reduce using rule 214 (postfix_expression -> postfix_expression INC_OP .)


state 173

    (215) postfix_expression -> postfix_expression DEC_OP .

    OPENBRACKET     reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    OPENPAREN       reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    PERIOD          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    PTR_OP          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    INC_OP          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    DEC_OP          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    ASTERISK        reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    DIV             reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    PERCENT         reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    PLUS            reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    MINUS           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_OP         reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_OP        reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    LE              reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    GT              reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    LE_OP           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    GE_OP           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    EQ_OP           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    NE_OP           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    AMPERSAND       reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    CARAT           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    PIPE            reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    AND_OP          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    QMARK           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    OR_OP           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEBRACKET    reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    ASSIGN          reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    MUL_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    DIV_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    MOD_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    ADD_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    SUB_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_ASSIGN     reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_ASSIGN    reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    AND_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    XOR_ASSIGN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    OR_ASSIGN       reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    SEMI            reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    COMMA           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEPAREN      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEBRACE      reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)
    COLON           reduce using rule 215 (postfix_expression -> postfix_expression DEC_OP .)


state 174

    (197) unary_expression -> INC_OP unary_expression .

    ASTERISK        reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    DIV             reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    PERCENT         reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    PLUS            reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    MINUS           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    LEFT_OP         reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    RIGHT_OP        reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    LE              reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    GT              reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    LE_OP           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    GE_OP           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    EQ_OP           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    NE_OP           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    AMPERSAND       reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    CARAT           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    PIPE            reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    AND_OP          reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    QMARK           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    OR_OP           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    CLOSEBRACKET    reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    ASSIGN          reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    SEMI            reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    COMMA           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    CLOSEPAREN      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    CLOSEBRACE      reduce using rule 197 (unary_expression -> INC_OP unary_expression .)
    COLON           reduce using rule 197 (unary_expression -> INC_OP unary_expression .)


state 175

    (219) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 165
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 176

    (198) unary_expression -> DEC_OP unary_expression .

    ASTERISK        reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    DIV             reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    PERCENT         reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    PLUS            reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    MINUS           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    LEFT_OP         reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_OP        reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    LE              reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    GT              reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    LE_OP           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    GE_OP           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    EQ_OP           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    NE_OP           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    AMPERSAND       reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    CARAT           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    PIPE            reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    AND_OP          reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    QMARK           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    OR_OP           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    CLOSEBRACKET    reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    ASSIGN          reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    SEMI            reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    COMMA           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    CLOSEPAREN      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    CLOSEBRACE      reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)
    COLON           reduce using rule 198 (unary_expression -> DEC_OP unary_expression .)


state 177

    (199) unary_expression -> unary_operator cast_expression .

    ASTERISK        reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    DIV             reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    PERCENT         reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    PLUS            reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    MINUS           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    LEFT_OP         reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    RIGHT_OP        reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    LE              reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    GT              reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    LE_OP           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    GE_OP           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    EQ_OP           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    NE_OP           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    AMPERSAND       reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    CARAT           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    PIPE            reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    AND_OP          reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    QMARK           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    OR_OP           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    CLOSEBRACKET    reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    ASSIGN          reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    MUL_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    DIV_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    MOD_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    ADD_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    SUB_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    LEFT_ASSIGN     reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    RIGHT_ASSIGN    reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    AND_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    XOR_ASSIGN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    OR_ASSIGN       reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    SEMI            reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    CLOSEPAREN      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    CLOSEBRACE      reduce using rule 199 (unary_expression -> unary_operator cast_expression .)
    COLON           reduce using rule 199 (unary_expression -> unary_operator cast_expression .)


state 178

    (200) unary_expression -> SIZEOF unary_expression .

    ASTERISK        reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    DIV             reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    PERCENT         reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    PLUS            reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    MINUS           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    LEFT_OP         reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_OP        reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    LE              reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    GT              reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    LE_OP           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    GE_OP           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    EQ_OP           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    NE_OP           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    AMPERSAND       reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    CARAT           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    PIPE            reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    AND_OP          reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    QMARK           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    OR_OP           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    CLOSEBRACKET    reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    ASSIGN          reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    MUL_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    DIV_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    MOD_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    ADD_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    SUB_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    LEFT_ASSIGN     reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_ASSIGN    reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    AND_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    XOR_ASSIGN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    OR_ASSIGN       reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    SEMI            reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    COMMA           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    CLOSEPAREN      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    CLOSEBRACE      reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)
    COLON           reduce using rule 200 (unary_expression -> SIZEOF unary_expression .)


state 179

    (201) unary_expression -> SIZEOF OPENPAREN . type_name CLOSEPAREN
    (219) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (97) type_name -> . specifier_qualifier_list
    (98) type_name -> . specifier_qualifier_list abstract_declarator
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    ENUM            shift and go to state 38
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    type_name                      shift and go to state 275
    expression                     shift and go to state 165
    specifier_qualifier_list       shift and go to state 166
    assignment_expression          shift and go to state 167
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    struct_or_union                shift and go to state 37
    identifier                     shift and go to state 101
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 180

    (75) direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENBRACE       reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    PD_O            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    PD_F            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    AUTO            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    REGISTER        reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    STATIC          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    EXTERN          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    TYPEDEF         reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    VOID            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    CHAR            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    SHORT           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    INT             reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    LONG            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    FLOAT           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    DOUBLE          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    SIGNED          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    UNSIGNED        reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    CONST           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    VOLATILE        reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    ENUM            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    STRUCT          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    UNION           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    ASSIGN          reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    SEMI            reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    COMMA           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    COLON           reduce using rule 75 (direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN .)


state 181

    (76) direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    OPENBRACE       reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    PD_O            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    PD_F            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    AUTO            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    REGISTER        reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    STATIC          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    EXTERN          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    TYPEDEF         reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    VOID            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CHAR            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SHORT           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    INT             reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    LONG            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    FLOAT           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    DOUBLE          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SIGNED          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    UNSIGNED        reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CONST           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    VOLATILE        reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    ENUM            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    STRUCT          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    UNION           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    ASSIGN          reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SEMI            reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    COMMA           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    COLON           reduce using rule 76 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)


state 182

    (91) identifier_list -> identifier_list COMMA . identifier
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 276

state 183

    (84) parameter_type_list -> parameter_list COMMA . ELIPSIS
    (86) parameter_list -> parameter_list COMMA . parameter_declaration
    (87) parameter_declaration -> . declaration_specifiers declarator
    (88) parameter_declaration -> . declaration_specifiers
    (89) parameter_declaration -> . declaration_specifiers abstract_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    ELIPSIS         shift and go to state 277
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    parameter_declaration          shift and go to state 278
    declaration_specifiers         shift and go to state 117
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 184

    (87) parameter_declaration -> declaration_specifiers declarator .

    COMMA           reduce using rule 87 (parameter_declaration -> declaration_specifiers declarator .)
    CLOSEPAREN      reduce using rule 87 (parameter_declaration -> declaration_specifiers declarator .)


state 185

    (89) parameter_declaration -> declaration_specifiers abstract_declarator .

    COMMA           reduce using rule 89 (parameter_declaration -> declaration_specifiers abstract_declarator .)
    CLOSEPAREN      reduce using rule 89 (parameter_declaration -> declaration_specifiers abstract_declarator .)


state 186

    (69) declarator -> pointer . direct_declarator
    (99) abstract_declarator -> pointer .
    (101) abstract_declarator -> pointer . direct_abstract_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (227) identifier -> . IDENTIFIER

    COMMA           reduce using rule 99 (abstract_declarator -> pointer .)
    CLOSEPAREN      reduce using rule 99 (abstract_declarator -> pointer .)
    OPENPAREN       shift and go to state 188
    OPENBRACKET     shift and go to state 189
    IDENTIFIER      shift and go to state 36

    direct_declarator              shift and go to state 52
    direct_abstract_declarator     shift and go to state 279
    identifier                     shift and go to state 14

state 187

    (100) abstract_declarator -> direct_abstract_declarator .
    (105) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (109) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN parameter_type_list CLOSEPAREN

    COMMA           reduce using rule 100 (abstract_declarator -> direct_abstract_declarator .)
    CLOSEPAREN      reduce using rule 100 (abstract_declarator -> direct_abstract_declarator .)
    OPENBRACKET     shift and go to state 280
    OPENPAREN       shift and go to state 281


state 188

    (71) direct_declarator -> OPENPAREN . declarator CLOSEPAREN
    (102) direct_abstract_declarator -> OPENPAREN . abstract_declarator CLOSEPAREN
    (107) direct_abstract_declarator -> OPENPAREN . CLOSEPAREN
    (108) direct_abstract_declarator -> OPENPAREN . parameter_type_list CLOSEPAREN
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (99) abstract_declarator -> . pointer
    (100) abstract_declarator -> . direct_abstract_declarator
    (101) abstract_declarator -> . pointer direct_abstract_declarator
    (83) parameter_type_list -> . parameter_list
    (84) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (85) parameter_list -> . parameter_declaration
    (86) parameter_list -> . parameter_list COMMA parameter_declaration
    (227) identifier -> . IDENTIFIER
    (87) parameter_declaration -> . declaration_specifiers declarator
    (88) parameter_declaration -> . declaration_specifiers
    (89) parameter_declaration -> . declaration_specifiers abstract_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 282
    OPENPAREN       shift and go to state 188
    ASTERISK        shift and go to state 16
    OPENBRACKET     shift and go to state 189
    IDENTIFIER      shift and go to state 36
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    declarator                     shift and go to state 56
    abstract_declarator            shift and go to state 283
    parameter_type_list            shift and go to state 284
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 186
    direct_abstract_declarator     shift and go to state 187
    parameter_list                 shift and go to state 114
    identifier                     shift and go to state 14
    parameter_declaration          shift and go to state 116
    declaration_specifiers         shift and go to state 117
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 189

    (103) direct_abstract_declarator -> OPENBRACKET . CLOSEBRACKET
    (104) direct_abstract_declarator -> OPENBRACKET . constant_expression CLOSEBRACKET
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 285
    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 286
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 190

    (40) struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list . CLOSEBRACE
    (46) struct_declaration_list -> struct_declaration_list . struct_declaration
    (51) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (52) specifier_qualifier_list -> . type_specifier
    (53) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (54) specifier_qualifier_list -> . type_qualifier
    (55) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEBRACE      shift and go to state 287
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    struct_or_union                shift and go to state 37
    struct_declaration             shift and go to state 192
    specifier_qualifier_list       shift and go to state 124
    type_specifier                 shift and go to state 125
    type_qualifier                 shift and go to state 126
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32

state 191

    (41) struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .

    AUTO            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    REGISTER        reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    STATIC          reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    EXTERN          reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOID            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CHAR            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SHORT           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    INT             reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    LONG            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    FLOAT           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    DOUBLE          reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SIGNED          reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CONST           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOLATILE        reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    ENUM            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    STRUCT          reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNION           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SEMI            reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    ASTERISK        reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    COMMA           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    COLON           reduce using rule 41 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)


state 192

    (46) struct_declaration_list -> struct_declaration_list struct_declaration .

    CLOSEBRACE      reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOID            reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CHAR            reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SHORT           reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    INT             reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    LONG            reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    FLOAT           reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    DOUBLE          reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SIGNED          reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNSIGNED        reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    TYPEDEF_NAME    reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CONST           reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOLATILE        reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    ENUM            reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    STRUCT          reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNION           reduce using rule 46 (struct_declaration_list -> struct_declaration_list struct_declaration .)


state 193

    (51) struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMI
    (57) struct_declarator_list -> struct_declarator_list . COMMA struct_declarator

    SEMI            shift and go to state 288
    COMMA           shift and go to state 289


state 194

    (56) struct_declarator_list -> struct_declarator .

    SEMI            reduce using rule 56 (struct_declarator_list -> struct_declarator .)
    COMMA           reduce using rule 56 (struct_declarator_list -> struct_declarator .)


state 195

    (58) struct_declarator -> declarator .
    (60) struct_declarator -> declarator . COLON constant_expression

    SEMI            reduce using rule 58 (struct_declarator -> declarator .)
    COMMA           reduce using rule 58 (struct_declarator -> declarator .)
    COLON           shift and go to state 290


state 196

    (59) struct_declarator -> COLON . constant_expression
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 291
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 197

    (53) specifier_qualifier_list -> type_specifier specifier_qualifier_list .

    COLON           reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    OPENPAREN       reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    ASTERISK        reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    OPENBRACKET     reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    CLOSEPAREN      reduce using rule 53 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)


state 198

    (55) specifier_qualifier_list -> type_qualifier specifier_qualifier_list .

    COLON           reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    OPENPAREN       reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    ASTERISK        reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    OPENBRACKET     reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    CLOSEPAREN      reduce using rule 55 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)


state 199

    (61) enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .

    AUTO            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    REGISTER        reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    STATIC          reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    EXTERN          reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    VOID            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CHAR            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SHORT           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    INT             reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    LONG            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    FLOAT           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    DOUBLE          reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SIGNED          reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CONST           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    VOLATILE        reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    ENUM            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    STRUCT          reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    UNION           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SEMI            reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    ASTERISK        reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    COMMA           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    COLON           reduce using rule 61 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)


state 200

    (65) enumerator_list -> enumerator_list COMMA . enumerator
    (66) enumerator -> . identifier
    (67) enumerator -> . identifier ASSIGN constant_expression
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    enumerator                     shift and go to state 292
    identifier                     shift and go to state 129

state 201

    (67) enumerator -> identifier ASSIGN . constant_expression
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    identifier                     shift and go to state 101
    constant_expression            shift and go to state 293
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 202

    (62) enum_specifier -> ENUM identifier OPENBRACE enumerator_list . CLOSEBRACE
    (65) enumerator_list -> enumerator_list . COMMA enumerator

    CLOSEBRACE      shift and go to state 294
    COMMA           shift and go to state 200


state 203

    (125) compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 295


state 204

    (129) statement_list -> statement_list read_mode_e . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 296
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 205

    (126) compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 297


state 206

    (127) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list . insert_mode_e pop_scope_e CLOSEBRACE
    (129) statement_list -> statement_list . read_mode_e statement
    (228) insert_mode_e -> .
    (229) read_mode_e -> .

    CLOSEBRACE      reduce using rule 228 (insert_mode_e -> .)
    PD_O            reduce using rule 229 (read_mode_e -> .)
    PD_F            reduce using rule 229 (read_mode_e -> .)
    CASE            reduce using rule 229 (read_mode_e -> .)
    DEFAULT         reduce using rule 229 (read_mode_e -> .)
    OPENBRACE       reduce using rule 229 (read_mode_e -> .)
    SEMI            reduce using rule 229 (read_mode_e -> .)
    IF              reduce using rule 229 (read_mode_e -> .)
    SWITCH          reduce using rule 229 (read_mode_e -> .)
    WHILE           reduce using rule 229 (read_mode_e -> .)
    DO              reduce using rule 229 (read_mode_e -> .)
    FOR             reduce using rule 229 (read_mode_e -> .)
    GOTO            reduce using rule 229 (read_mode_e -> .)
    CONTINUE        reduce using rule 229 (read_mode_e -> .)
    BREAK           reduce using rule 229 (read_mode_e -> .)
    RETURN          reduce using rule 229 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 229 (read_mode_e -> .)
    INC_OP          reduce using rule 229 (read_mode_e -> .)
    DEC_OP          reduce using rule 229 (read_mode_e -> .)
    SIZEOF          reduce using rule 229 (read_mode_e -> .)
    AMPERSAND       reduce using rule 229 (read_mode_e -> .)
    ASTERISK        reduce using rule 229 (read_mode_e -> .)
    PLUS            reduce using rule 229 (read_mode_e -> .)
    MINUS           reduce using rule 229 (read_mode_e -> .)
    TILDE           reduce using rule 229 (read_mode_e -> .)
    BANG            reduce using rule 229 (read_mode_e -> .)
    OPENPAREN       reduce using rule 229 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 229 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 229 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 229 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 229 (read_mode_e -> .)

    insert_mode_e                  shift and go to state 298
    read_mode_e                    shift and go to state 204

state 207

    (128) statement_list -> read_mode_e statement .

    CLOSEBRACE      reduce using rule 128 (statement_list -> read_mode_e statement .)
    PD_O            reduce using rule 128 (statement_list -> read_mode_e statement .)
    PD_F            reduce using rule 128 (statement_list -> read_mode_e statement .)
    CASE            reduce using rule 128 (statement_list -> read_mode_e statement .)
    DEFAULT         reduce using rule 128 (statement_list -> read_mode_e statement .)
    OPENBRACE       reduce using rule 128 (statement_list -> read_mode_e statement .)
    SEMI            reduce using rule 128 (statement_list -> read_mode_e statement .)
    IF              reduce using rule 128 (statement_list -> read_mode_e statement .)
    SWITCH          reduce using rule 128 (statement_list -> read_mode_e statement .)
    WHILE           reduce using rule 128 (statement_list -> read_mode_e statement .)
    DO              reduce using rule 128 (statement_list -> read_mode_e statement .)
    FOR             reduce using rule 128 (statement_list -> read_mode_e statement .)
    GOTO            reduce using rule 128 (statement_list -> read_mode_e statement .)
    CONTINUE        reduce using rule 128 (statement_list -> read_mode_e statement .)
    BREAK           reduce using rule 128 (statement_list -> read_mode_e statement .)
    RETURN          reduce using rule 128 (statement_list -> read_mode_e statement .)
    IDENTIFIER      reduce using rule 128 (statement_list -> read_mode_e statement .)
    INC_OP          reduce using rule 128 (statement_list -> read_mode_e statement .)
    DEC_OP          reduce using rule 128 (statement_list -> read_mode_e statement .)
    SIZEOF          reduce using rule 128 (statement_list -> read_mode_e statement .)
    AMPERSAND       reduce using rule 128 (statement_list -> read_mode_e statement .)
    ASTERISK        reduce using rule 128 (statement_list -> read_mode_e statement .)
    PLUS            reduce using rule 128 (statement_list -> read_mode_e statement .)
    MINUS           reduce using rule 128 (statement_list -> read_mode_e statement .)
    TILDE           reduce using rule 128 (statement_list -> read_mode_e statement .)
    BANG            reduce using rule 128 (statement_list -> read_mode_e statement .)
    OPENPAREN       reduce using rule 128 (statement_list -> read_mode_e statement .)
    INTEGER_CONSTANT reduce using rule 128 (statement_list -> read_mode_e statement .)
    CHARACTER_CONSTANT reduce using rule 128 (statement_list -> read_mode_e statement .)
    FLOATING_CONSTANT reduce using rule 128 (statement_list -> read_mode_e statement .)
    ENUMERATION_CONSTANT reduce using rule 128 (statement_list -> read_mode_e statement .)
    STRING_LITERAL  reduce using rule 128 (statement_list -> read_mode_e statement .)


state 208

    (111) statement -> labeled_statement .

    CLOSEBRACE      reduce using rule 111 (statement -> labeled_statement .)
    PD_O            reduce using rule 111 (statement -> labeled_statement .)
    PD_F            reduce using rule 111 (statement -> labeled_statement .)
    CASE            reduce using rule 111 (statement -> labeled_statement .)
    DEFAULT         reduce using rule 111 (statement -> labeled_statement .)
    OPENBRACE       reduce using rule 111 (statement -> labeled_statement .)
    SEMI            reduce using rule 111 (statement -> labeled_statement .)
    IF              reduce using rule 111 (statement -> labeled_statement .)
    SWITCH          reduce using rule 111 (statement -> labeled_statement .)
    WHILE           reduce using rule 111 (statement -> labeled_statement .)
    DO              reduce using rule 111 (statement -> labeled_statement .)
    FOR             reduce using rule 111 (statement -> labeled_statement .)
    GOTO            reduce using rule 111 (statement -> labeled_statement .)
    CONTINUE        reduce using rule 111 (statement -> labeled_statement .)
    BREAK           reduce using rule 111 (statement -> labeled_statement .)
    RETURN          reduce using rule 111 (statement -> labeled_statement .)
    IDENTIFIER      reduce using rule 111 (statement -> labeled_statement .)
    INC_OP          reduce using rule 111 (statement -> labeled_statement .)
    DEC_OP          reduce using rule 111 (statement -> labeled_statement .)
    SIZEOF          reduce using rule 111 (statement -> labeled_statement .)
    AMPERSAND       reduce using rule 111 (statement -> labeled_statement .)
    ASTERISK        reduce using rule 111 (statement -> labeled_statement .)
    PLUS            reduce using rule 111 (statement -> labeled_statement .)
    MINUS           reduce using rule 111 (statement -> labeled_statement .)
    TILDE           reduce using rule 111 (statement -> labeled_statement .)
    BANG            reduce using rule 111 (statement -> labeled_statement .)
    OPENPAREN       reduce using rule 111 (statement -> labeled_statement .)
    INTEGER_CONSTANT reduce using rule 111 (statement -> labeled_statement .)
    CHARACTER_CONSTANT reduce using rule 111 (statement -> labeled_statement .)
    FLOATING_CONSTANT reduce using rule 111 (statement -> labeled_statement .)
    ENUMERATION_CONSTANT reduce using rule 111 (statement -> labeled_statement .)
    STRING_LITERAL  reduce using rule 111 (statement -> labeled_statement .)
    ELSE            reduce using rule 111 (statement -> labeled_statement .)


state 209

    (112) statement -> compound_statement .

    CLOSEBRACE      reduce using rule 112 (statement -> compound_statement .)
    PD_O            reduce using rule 112 (statement -> compound_statement .)
    PD_F            reduce using rule 112 (statement -> compound_statement .)
    CASE            reduce using rule 112 (statement -> compound_statement .)
    DEFAULT         reduce using rule 112 (statement -> compound_statement .)
    OPENBRACE       reduce using rule 112 (statement -> compound_statement .)
    SEMI            reduce using rule 112 (statement -> compound_statement .)
    IF              reduce using rule 112 (statement -> compound_statement .)
    SWITCH          reduce using rule 112 (statement -> compound_statement .)
    WHILE           reduce using rule 112 (statement -> compound_statement .)
    DO              reduce using rule 112 (statement -> compound_statement .)
    FOR             reduce using rule 112 (statement -> compound_statement .)
    GOTO            reduce using rule 112 (statement -> compound_statement .)
    CONTINUE        reduce using rule 112 (statement -> compound_statement .)
    BREAK           reduce using rule 112 (statement -> compound_statement .)
    RETURN          reduce using rule 112 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 112 (statement -> compound_statement .)
    INC_OP          reduce using rule 112 (statement -> compound_statement .)
    DEC_OP          reduce using rule 112 (statement -> compound_statement .)
    SIZEOF          reduce using rule 112 (statement -> compound_statement .)
    AMPERSAND       reduce using rule 112 (statement -> compound_statement .)
    ASTERISK        reduce using rule 112 (statement -> compound_statement .)
    PLUS            reduce using rule 112 (statement -> compound_statement .)
    MINUS           reduce using rule 112 (statement -> compound_statement .)
    TILDE           reduce using rule 112 (statement -> compound_statement .)
    BANG            reduce using rule 112 (statement -> compound_statement .)
    OPENPAREN       reduce using rule 112 (statement -> compound_statement .)
    INTEGER_CONSTANT reduce using rule 112 (statement -> compound_statement .)
    CHARACTER_CONSTANT reduce using rule 112 (statement -> compound_statement .)
    FLOATING_CONSTANT reduce using rule 112 (statement -> compound_statement .)
    ENUMERATION_CONSTANT reduce using rule 112 (statement -> compound_statement .)
    STRING_LITERAL  reduce using rule 112 (statement -> compound_statement .)
    ELSE            reduce using rule 112 (statement -> compound_statement .)


state 210

    (113) statement -> expression_statement .

    CLOSEBRACE      reduce using rule 113 (statement -> expression_statement .)
    PD_O            reduce using rule 113 (statement -> expression_statement .)
    PD_F            reduce using rule 113 (statement -> expression_statement .)
    CASE            reduce using rule 113 (statement -> expression_statement .)
    DEFAULT         reduce using rule 113 (statement -> expression_statement .)
    OPENBRACE       reduce using rule 113 (statement -> expression_statement .)
    SEMI            reduce using rule 113 (statement -> expression_statement .)
    IF              reduce using rule 113 (statement -> expression_statement .)
    SWITCH          reduce using rule 113 (statement -> expression_statement .)
    WHILE           reduce using rule 113 (statement -> expression_statement .)
    DO              reduce using rule 113 (statement -> expression_statement .)
    FOR             reduce using rule 113 (statement -> expression_statement .)
    GOTO            reduce using rule 113 (statement -> expression_statement .)
    CONTINUE        reduce using rule 113 (statement -> expression_statement .)
    BREAK           reduce using rule 113 (statement -> expression_statement .)
    RETURN          reduce using rule 113 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 113 (statement -> expression_statement .)
    INC_OP          reduce using rule 113 (statement -> expression_statement .)
    DEC_OP          reduce using rule 113 (statement -> expression_statement .)
    SIZEOF          reduce using rule 113 (statement -> expression_statement .)
    AMPERSAND       reduce using rule 113 (statement -> expression_statement .)
    ASTERISK        reduce using rule 113 (statement -> expression_statement .)
    PLUS            reduce using rule 113 (statement -> expression_statement .)
    MINUS           reduce using rule 113 (statement -> expression_statement .)
    TILDE           reduce using rule 113 (statement -> expression_statement .)
    BANG            reduce using rule 113 (statement -> expression_statement .)
    OPENPAREN       reduce using rule 113 (statement -> expression_statement .)
    INTEGER_CONSTANT reduce using rule 113 (statement -> expression_statement .)
    CHARACTER_CONSTANT reduce using rule 113 (statement -> expression_statement .)
    FLOATING_CONSTANT reduce using rule 113 (statement -> expression_statement .)
    ENUMERATION_CONSTANT reduce using rule 113 (statement -> expression_statement .)
    STRING_LITERAL  reduce using rule 113 (statement -> expression_statement .)
    ELSE            reduce using rule 113 (statement -> expression_statement .)


state 211

    (114) statement -> selection_statement .

    CLOSEBRACE      reduce using rule 114 (statement -> selection_statement .)
    PD_O            reduce using rule 114 (statement -> selection_statement .)
    PD_F            reduce using rule 114 (statement -> selection_statement .)
    CASE            reduce using rule 114 (statement -> selection_statement .)
    DEFAULT         reduce using rule 114 (statement -> selection_statement .)
    OPENBRACE       reduce using rule 114 (statement -> selection_statement .)
    SEMI            reduce using rule 114 (statement -> selection_statement .)
    IF              reduce using rule 114 (statement -> selection_statement .)
    SWITCH          reduce using rule 114 (statement -> selection_statement .)
    WHILE           reduce using rule 114 (statement -> selection_statement .)
    DO              reduce using rule 114 (statement -> selection_statement .)
    FOR             reduce using rule 114 (statement -> selection_statement .)
    GOTO            reduce using rule 114 (statement -> selection_statement .)
    CONTINUE        reduce using rule 114 (statement -> selection_statement .)
    BREAK           reduce using rule 114 (statement -> selection_statement .)
    RETURN          reduce using rule 114 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 114 (statement -> selection_statement .)
    INC_OP          reduce using rule 114 (statement -> selection_statement .)
    DEC_OP          reduce using rule 114 (statement -> selection_statement .)
    SIZEOF          reduce using rule 114 (statement -> selection_statement .)
    AMPERSAND       reduce using rule 114 (statement -> selection_statement .)
    ASTERISK        reduce using rule 114 (statement -> selection_statement .)
    PLUS            reduce using rule 114 (statement -> selection_statement .)
    MINUS           reduce using rule 114 (statement -> selection_statement .)
    TILDE           reduce using rule 114 (statement -> selection_statement .)
    BANG            reduce using rule 114 (statement -> selection_statement .)
    OPENPAREN       reduce using rule 114 (statement -> selection_statement .)
    INTEGER_CONSTANT reduce using rule 114 (statement -> selection_statement .)
    CHARACTER_CONSTANT reduce using rule 114 (statement -> selection_statement .)
    FLOATING_CONSTANT reduce using rule 114 (statement -> selection_statement .)
    ENUMERATION_CONSTANT reduce using rule 114 (statement -> selection_statement .)
    STRING_LITERAL  reduce using rule 114 (statement -> selection_statement .)
    ELSE            reduce using rule 114 (statement -> selection_statement .)


state 212

    (115) statement -> iteration_statement .

    CLOSEBRACE      reduce using rule 115 (statement -> iteration_statement .)
    PD_O            reduce using rule 115 (statement -> iteration_statement .)
    PD_F            reduce using rule 115 (statement -> iteration_statement .)
    CASE            reduce using rule 115 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 115 (statement -> iteration_statement .)
    OPENBRACE       reduce using rule 115 (statement -> iteration_statement .)
    SEMI            reduce using rule 115 (statement -> iteration_statement .)
    IF              reduce using rule 115 (statement -> iteration_statement .)
    SWITCH          reduce using rule 115 (statement -> iteration_statement .)
    WHILE           reduce using rule 115 (statement -> iteration_statement .)
    DO              reduce using rule 115 (statement -> iteration_statement .)
    FOR             reduce using rule 115 (statement -> iteration_statement .)
    GOTO            reduce using rule 115 (statement -> iteration_statement .)
    CONTINUE        reduce using rule 115 (statement -> iteration_statement .)
    BREAK           reduce using rule 115 (statement -> iteration_statement .)
    RETURN          reduce using rule 115 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 115 (statement -> iteration_statement .)
    INC_OP          reduce using rule 115 (statement -> iteration_statement .)
    DEC_OP          reduce using rule 115 (statement -> iteration_statement .)
    SIZEOF          reduce using rule 115 (statement -> iteration_statement .)
    AMPERSAND       reduce using rule 115 (statement -> iteration_statement .)
    ASTERISK        reduce using rule 115 (statement -> iteration_statement .)
    PLUS            reduce using rule 115 (statement -> iteration_statement .)
    MINUS           reduce using rule 115 (statement -> iteration_statement .)
    TILDE           reduce using rule 115 (statement -> iteration_statement .)
    BANG            reduce using rule 115 (statement -> iteration_statement .)
    OPENPAREN       reduce using rule 115 (statement -> iteration_statement .)
    INTEGER_CONSTANT reduce using rule 115 (statement -> iteration_statement .)
    CHARACTER_CONSTANT reduce using rule 115 (statement -> iteration_statement .)
    FLOATING_CONSTANT reduce using rule 115 (statement -> iteration_statement .)
    ENUMERATION_CONSTANT reduce using rule 115 (statement -> iteration_statement .)
    STRING_LITERAL  reduce using rule 115 (statement -> iteration_statement .)
    ELSE            reduce using rule 115 (statement -> iteration_statement .)


state 213

    (116) statement -> jump_statement .

    CLOSEBRACE      reduce using rule 116 (statement -> jump_statement .)
    PD_O            reduce using rule 116 (statement -> jump_statement .)
    PD_F            reduce using rule 116 (statement -> jump_statement .)
    CASE            reduce using rule 116 (statement -> jump_statement .)
    DEFAULT         reduce using rule 116 (statement -> jump_statement .)
    OPENBRACE       reduce using rule 116 (statement -> jump_statement .)
    SEMI            reduce using rule 116 (statement -> jump_statement .)
    IF              reduce using rule 116 (statement -> jump_statement .)
    SWITCH          reduce using rule 116 (statement -> jump_statement .)
    WHILE           reduce using rule 116 (statement -> jump_statement .)
    DO              reduce using rule 116 (statement -> jump_statement .)
    FOR             reduce using rule 116 (statement -> jump_statement .)
    GOTO            reduce using rule 116 (statement -> jump_statement .)
    CONTINUE        reduce using rule 116 (statement -> jump_statement .)
    BREAK           reduce using rule 116 (statement -> jump_statement .)
    RETURN          reduce using rule 116 (statement -> jump_statement .)
    IDENTIFIER      reduce using rule 116 (statement -> jump_statement .)
    INC_OP          reduce using rule 116 (statement -> jump_statement .)
    DEC_OP          reduce using rule 116 (statement -> jump_statement .)
    SIZEOF          reduce using rule 116 (statement -> jump_statement .)
    AMPERSAND       reduce using rule 116 (statement -> jump_statement .)
    ASTERISK        reduce using rule 116 (statement -> jump_statement .)
    PLUS            reduce using rule 116 (statement -> jump_statement .)
    MINUS           reduce using rule 116 (statement -> jump_statement .)
    TILDE           reduce using rule 116 (statement -> jump_statement .)
    BANG            reduce using rule 116 (statement -> jump_statement .)
    OPENPAREN       reduce using rule 116 (statement -> jump_statement .)
    INTEGER_CONSTANT reduce using rule 116 (statement -> jump_statement .)
    CHARACTER_CONSTANT reduce using rule 116 (statement -> jump_statement .)
    FLOATING_CONSTANT reduce using rule 116 (statement -> jump_statement .)
    ENUMERATION_CONSTANT reduce using rule 116 (statement -> jump_statement .)
    STRING_LITERAL  reduce using rule 116 (statement -> jump_statement .)
    ELSE            reduce using rule 116 (statement -> jump_statement .)


state 214

    (117) statement -> PD_O .

    CLOSEBRACE      reduce using rule 117 (statement -> PD_O .)
    PD_O            reduce using rule 117 (statement -> PD_O .)
    PD_F            reduce using rule 117 (statement -> PD_O .)
    CASE            reduce using rule 117 (statement -> PD_O .)
    DEFAULT         reduce using rule 117 (statement -> PD_O .)
    OPENBRACE       reduce using rule 117 (statement -> PD_O .)
    SEMI            reduce using rule 117 (statement -> PD_O .)
    IF              reduce using rule 117 (statement -> PD_O .)
    SWITCH          reduce using rule 117 (statement -> PD_O .)
    WHILE           reduce using rule 117 (statement -> PD_O .)
    DO              reduce using rule 117 (statement -> PD_O .)
    FOR             reduce using rule 117 (statement -> PD_O .)
    GOTO            reduce using rule 117 (statement -> PD_O .)
    CONTINUE        reduce using rule 117 (statement -> PD_O .)
    BREAK           reduce using rule 117 (statement -> PD_O .)
    RETURN          reduce using rule 117 (statement -> PD_O .)
    IDENTIFIER      reduce using rule 117 (statement -> PD_O .)
    INC_OP          reduce using rule 117 (statement -> PD_O .)
    DEC_OP          reduce using rule 117 (statement -> PD_O .)
    SIZEOF          reduce using rule 117 (statement -> PD_O .)
    AMPERSAND       reduce using rule 117 (statement -> PD_O .)
    ASTERISK        reduce using rule 117 (statement -> PD_O .)
    PLUS            reduce using rule 117 (statement -> PD_O .)
    MINUS           reduce using rule 117 (statement -> PD_O .)
    TILDE           reduce using rule 117 (statement -> PD_O .)
    BANG            reduce using rule 117 (statement -> PD_O .)
    OPENPAREN       reduce using rule 117 (statement -> PD_O .)
    INTEGER_CONSTANT reduce using rule 117 (statement -> PD_O .)
    CHARACTER_CONSTANT reduce using rule 117 (statement -> PD_O .)
    FLOATING_CONSTANT reduce using rule 117 (statement -> PD_O .)
    ENUMERATION_CONSTANT reduce using rule 117 (statement -> PD_O .)
    STRING_LITERAL  reduce using rule 117 (statement -> PD_O .)
    ELSE            reduce using rule 117 (statement -> PD_O .)


state 215

    (118) statement -> PD_F .

    CLOSEBRACE      reduce using rule 118 (statement -> PD_F .)
    PD_O            reduce using rule 118 (statement -> PD_F .)
    PD_F            reduce using rule 118 (statement -> PD_F .)
    CASE            reduce using rule 118 (statement -> PD_F .)
    DEFAULT         reduce using rule 118 (statement -> PD_F .)
    OPENBRACE       reduce using rule 118 (statement -> PD_F .)
    SEMI            reduce using rule 118 (statement -> PD_F .)
    IF              reduce using rule 118 (statement -> PD_F .)
    SWITCH          reduce using rule 118 (statement -> PD_F .)
    WHILE           reduce using rule 118 (statement -> PD_F .)
    DO              reduce using rule 118 (statement -> PD_F .)
    FOR             reduce using rule 118 (statement -> PD_F .)
    GOTO            reduce using rule 118 (statement -> PD_F .)
    CONTINUE        reduce using rule 118 (statement -> PD_F .)
    BREAK           reduce using rule 118 (statement -> PD_F .)
    RETURN          reduce using rule 118 (statement -> PD_F .)
    IDENTIFIER      reduce using rule 118 (statement -> PD_F .)
    INC_OP          reduce using rule 118 (statement -> PD_F .)
    DEC_OP          reduce using rule 118 (statement -> PD_F .)
    SIZEOF          reduce using rule 118 (statement -> PD_F .)
    AMPERSAND       reduce using rule 118 (statement -> PD_F .)
    ASTERISK        reduce using rule 118 (statement -> PD_F .)
    PLUS            reduce using rule 118 (statement -> PD_F .)
    MINUS           reduce using rule 118 (statement -> PD_F .)
    TILDE           reduce using rule 118 (statement -> PD_F .)
    BANG            reduce using rule 118 (statement -> PD_F .)
    OPENPAREN       reduce using rule 118 (statement -> PD_F .)
    INTEGER_CONSTANT reduce using rule 118 (statement -> PD_F .)
    CHARACTER_CONSTANT reduce using rule 118 (statement -> PD_F .)
    FLOATING_CONSTANT reduce using rule 118 (statement -> PD_F .)
    ENUMERATION_CONSTANT reduce using rule 118 (statement -> PD_F .)
    STRING_LITERAL  reduce using rule 118 (statement -> PD_F .)
    ELSE            reduce using rule 118 (statement -> PD_F .)


state 216

    (119) labeled_statement -> identifier . COLON statement
    (216) primary_expression -> identifier .

    COLON           shift and go to state 299
    OPENBRACKET     reduce using rule 216 (primary_expression -> identifier .)
    OPENPAREN       reduce using rule 216 (primary_expression -> identifier .)
    PERIOD          reduce using rule 216 (primary_expression -> identifier .)
    PTR_OP          reduce using rule 216 (primary_expression -> identifier .)
    INC_OP          reduce using rule 216 (primary_expression -> identifier .)
    DEC_OP          reduce using rule 216 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 216 (primary_expression -> identifier .)
    MUL_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    DIV_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    MOD_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    ADD_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    SUB_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    LEFT_ASSIGN     reduce using rule 216 (primary_expression -> identifier .)
    RIGHT_ASSIGN    reduce using rule 216 (primary_expression -> identifier .)
    AND_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    XOR_ASSIGN      reduce using rule 216 (primary_expression -> identifier .)
    OR_ASSIGN       reduce using rule 216 (primary_expression -> identifier .)
    ASTERISK        reduce using rule 216 (primary_expression -> identifier .)
    DIV             reduce using rule 216 (primary_expression -> identifier .)
    PERCENT         reduce using rule 216 (primary_expression -> identifier .)
    PLUS            reduce using rule 216 (primary_expression -> identifier .)
    MINUS           reduce using rule 216 (primary_expression -> identifier .)
    LEFT_OP         reduce using rule 216 (primary_expression -> identifier .)
    RIGHT_OP        reduce using rule 216 (primary_expression -> identifier .)
    LE              reduce using rule 216 (primary_expression -> identifier .)
    GT              reduce using rule 216 (primary_expression -> identifier .)
    LE_OP           reduce using rule 216 (primary_expression -> identifier .)
    GE_OP           reduce using rule 216 (primary_expression -> identifier .)
    EQ_OP           reduce using rule 216 (primary_expression -> identifier .)
    NE_OP           reduce using rule 216 (primary_expression -> identifier .)
    AMPERSAND       reduce using rule 216 (primary_expression -> identifier .)
    CARAT           reduce using rule 216 (primary_expression -> identifier .)
    PIPE            reduce using rule 216 (primary_expression -> identifier .)
    AND_OP          reduce using rule 216 (primary_expression -> identifier .)
    QMARK           reduce using rule 216 (primary_expression -> identifier .)
    OR_OP           reduce using rule 216 (primary_expression -> identifier .)
    SEMI            reduce using rule 216 (primary_expression -> identifier .)
    COMMA           reduce using rule 216 (primary_expression -> identifier .)


state 217

    (120) labeled_statement -> CASE . constant_expression COLON statement
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 300
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 218

    (121) labeled_statement -> DEFAULT . COLON statement

    COLON           shift and go to state 301


state 219

    (122) expression_statement -> SEMI .

    CLOSEBRACE      reduce using rule 122 (expression_statement -> SEMI .)
    PD_O            reduce using rule 122 (expression_statement -> SEMI .)
    PD_F            reduce using rule 122 (expression_statement -> SEMI .)
    CASE            reduce using rule 122 (expression_statement -> SEMI .)
    DEFAULT         reduce using rule 122 (expression_statement -> SEMI .)
    OPENBRACE       reduce using rule 122 (expression_statement -> SEMI .)
    SEMI            reduce using rule 122 (expression_statement -> SEMI .)
    IF              reduce using rule 122 (expression_statement -> SEMI .)
    SWITCH          reduce using rule 122 (expression_statement -> SEMI .)
    WHILE           reduce using rule 122 (expression_statement -> SEMI .)
    DO              reduce using rule 122 (expression_statement -> SEMI .)
    FOR             reduce using rule 122 (expression_statement -> SEMI .)
    GOTO            reduce using rule 122 (expression_statement -> SEMI .)
    CONTINUE        reduce using rule 122 (expression_statement -> SEMI .)
    BREAK           reduce using rule 122 (expression_statement -> SEMI .)
    RETURN          reduce using rule 122 (expression_statement -> SEMI .)
    IDENTIFIER      reduce using rule 122 (expression_statement -> SEMI .)
    INC_OP          reduce using rule 122 (expression_statement -> SEMI .)
    DEC_OP          reduce using rule 122 (expression_statement -> SEMI .)
    SIZEOF          reduce using rule 122 (expression_statement -> SEMI .)
    AMPERSAND       reduce using rule 122 (expression_statement -> SEMI .)
    ASTERISK        reduce using rule 122 (expression_statement -> SEMI .)
    PLUS            reduce using rule 122 (expression_statement -> SEMI .)
    MINUS           reduce using rule 122 (expression_statement -> SEMI .)
    TILDE           reduce using rule 122 (expression_statement -> SEMI .)
    BANG            reduce using rule 122 (expression_statement -> SEMI .)
    OPENPAREN       reduce using rule 122 (expression_statement -> SEMI .)
    INTEGER_CONSTANT reduce using rule 122 (expression_statement -> SEMI .)
    CHARACTER_CONSTANT reduce using rule 122 (expression_statement -> SEMI .)
    FLOATING_CONSTANT reduce using rule 122 (expression_statement -> SEMI .)
    ENUMERATION_CONSTANT reduce using rule 122 (expression_statement -> SEMI .)
    STRING_LITERAL  reduce using rule 122 (expression_statement -> SEMI .)
    ELSE            reduce using rule 122 (expression_statement -> SEMI .)


state 220

    (123) expression_statement -> expression . SEMI
    (149) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 302
    COMMA           shift and go to state 265


state 221

    (130) selection_statement -> IF . OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> IF . OPENPAREN expression CLOSEPAREN statement ELSE statement

    OPENPAREN       shift and go to state 303


state 222

    (132) selection_statement -> SWITCH . OPENPAREN expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 304


state 223

    (133) iteration_statement -> WHILE . OPENPAREN expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 305


state 224

    (134) iteration_statement -> DO . statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 306
    expression                     shift and go to state 220
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 225

    (135) iteration_statement -> FOR . OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR . OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR . OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR . OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> FOR . OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> FOR . OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> FOR . OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> FOR . OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 307


state 226

    (143) jump_statement -> GOTO . identifier SEMI
    (227) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 36

    identifier                     shift and go to state 308

state 227

    (144) jump_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 309


state 228

    (145) jump_statement -> BREAK . SEMI

    SEMI            shift and go to state 310


state 229

    (146) jump_statement -> RETURN . SEMI
    (147) jump_statement -> RETURN . expression SEMI
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 311
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 312
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 230

    (93) initializer -> OPENBRACE initializer_list . CLOSEBRACE
    (94) initializer -> OPENBRACE initializer_list . COMMA CLOSEBRACE
    (96) initializer_list -> initializer_list . COMMA initializer

    CLOSEBRACE      shift and go to state 313
    COMMA           shift and go to state 314


state 231

    (95) initializer_list -> initializer .

    CLOSEBRACE      reduce using rule 95 (initializer_list -> initializer .)
    COMMA           reduce using rule 95 (initializer_list -> initializer .)


state 232

    (151) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    unary_expression               shift and go to state 141
    assignment_expression          shift and go to state 315
    conditional_expression         shift and go to state 140
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 233

    (152) assignment_operator -> ASSIGN .

    INC_OP          reduce using rule 152 (assignment_operator -> ASSIGN .)
    DEC_OP          reduce using rule 152 (assignment_operator -> ASSIGN .)
    SIZEOF          reduce using rule 152 (assignment_operator -> ASSIGN .)
    AMPERSAND       reduce using rule 152 (assignment_operator -> ASSIGN .)
    ASTERISK        reduce using rule 152 (assignment_operator -> ASSIGN .)
    PLUS            reduce using rule 152 (assignment_operator -> ASSIGN .)
    MINUS           reduce using rule 152 (assignment_operator -> ASSIGN .)
    TILDE           reduce using rule 152 (assignment_operator -> ASSIGN .)
    BANG            reduce using rule 152 (assignment_operator -> ASSIGN .)
    OPENPAREN       reduce using rule 152 (assignment_operator -> ASSIGN .)
    IDENTIFIER      reduce using rule 152 (assignment_operator -> ASSIGN .)
    INTEGER_CONSTANT reduce using rule 152 (assignment_operator -> ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 152 (assignment_operator -> ASSIGN .)
    FLOATING_CONSTANT reduce using rule 152 (assignment_operator -> ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 152 (assignment_operator -> ASSIGN .)
    STRING_LITERAL  reduce using rule 152 (assignment_operator -> ASSIGN .)


state 234

    (153) assignment_operator -> MUL_ASSIGN .

    INC_OP          reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    DEC_OP          reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    SIZEOF          reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    AMPERSAND       reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    ASTERISK        reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    PLUS            reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    MINUS           reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    TILDE           reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    BANG            reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    OPENPAREN       reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    IDENTIFIER      reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 153 (assignment_operator -> MUL_ASSIGN .)


state 235

    (154) assignment_operator -> DIV_ASSIGN .

    INC_OP          reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    DEC_OP          reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    SIZEOF          reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    AMPERSAND       reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    ASTERISK        reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    PLUS            reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    MINUS           reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    TILDE           reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    BANG            reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    OPENPAREN       reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    IDENTIFIER      reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)
    STRING_LITERAL  reduce using rule 154 (assignment_operator -> DIV_ASSIGN .)


state 236

    (155) assignment_operator -> MOD_ASSIGN .

    INC_OP          reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    DEC_OP          reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    SIZEOF          reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    AMPERSAND       reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    ASTERISK        reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    PLUS            reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    MINUS           reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    TILDE           reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    BANG            reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    OPENPAREN       reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)
    STRING_LITERAL  reduce using rule 155 (assignment_operator -> MOD_ASSIGN .)


state 237

    (156) assignment_operator -> ADD_ASSIGN .

    INC_OP          reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    DEC_OP          reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    SIZEOF          reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    AMPERSAND       reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    ASTERISK        reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    PLUS            reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    MINUS           reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    TILDE           reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    BANG            reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    OPENPAREN       reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    IDENTIFIER      reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 156 (assignment_operator -> ADD_ASSIGN .)


state 238

    (157) assignment_operator -> SUB_ASSIGN .

    INC_OP          reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    DEC_OP          reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    SIZEOF          reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    AMPERSAND       reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    ASTERISK        reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    PLUS            reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    MINUS           reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    TILDE           reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    BANG            reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    OPENPAREN       reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    IDENTIFIER      reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 157 (assignment_operator -> SUB_ASSIGN .)


state 239

    (158) assignment_operator -> LEFT_ASSIGN .

    INC_OP          reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    DEC_OP          reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    SIZEOF          reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    AMPERSAND       reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    ASTERISK        reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    PLUS            reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    MINUS           reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    TILDE           reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    BANG            reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    OPENPAREN       reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    IDENTIFIER      reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 158 (assignment_operator -> LEFT_ASSIGN .)


state 240

    (159) assignment_operator -> RIGHT_ASSIGN .

    INC_OP          reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    DEC_OP          reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    SIZEOF          reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    AMPERSAND       reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    ASTERISK        reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    PLUS            reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    MINUS           reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    TILDE           reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    BANG            reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    OPENPAREN       reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    IDENTIFIER      reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)
    STRING_LITERAL  reduce using rule 159 (assignment_operator -> RIGHT_ASSIGN .)


state 241

    (160) assignment_operator -> AND_ASSIGN .

    INC_OP          reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    DEC_OP          reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    SIZEOF          reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    AMPERSAND       reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    ASTERISK        reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    PLUS            reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    MINUS           reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    TILDE           reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    BANG            reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    OPENPAREN       reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 160 (assignment_operator -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 160 (assignment_operator -> AND_ASSIGN .)


state 242

    (161) assignment_operator -> XOR_ASSIGN .

    INC_OP          reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    DEC_OP          reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    SIZEOF          reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    AMPERSAND       reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    ASTERISK        reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    PLUS            reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    MINUS           reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    TILDE           reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    BANG            reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    OPENPAREN       reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 161 (assignment_operator -> XOR_ASSIGN .)


state 243

    (162) assignment_operator -> OR_ASSIGN .

    INC_OP          reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    DEC_OP          reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    SIZEOF          reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    AMPERSAND       reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    ASTERISK        reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    PLUS            reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    MINUS           reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    TILDE           reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    BANG            reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    OPENPAREN       reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 162 (assignment_operator -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 162 (assignment_operator -> OR_ASSIGN .)


state 244

    (164) conditional_expression -> logical_or_expression QMARK expression . COLON conditional_expression
    (149) expression -> expression . COMMA assignment_expression

    COLON           shift and go to state 316
    COMMA           shift and go to state 265


state 245

    (167) logical_or_expression -> logical_or_expression OR_OP logical_and_expression .
    (169) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QMARK           reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    OR_OP           reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEBRACKET    reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    SEMI            reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COMMA           reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEPAREN      reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEBRACE      reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COLON           reduce using rule 167 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    AND_OP          shift and go to state 147


state 246

    (169) logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .
    (171) inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression

    AND_OP          reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    QMARK           reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    OR_OP           reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    SEMI            reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COMMA           reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEPAREN      reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEBRACE      reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COLON           reduce using rule 169 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    PIPE            shift and go to state 148


state 247

    (171) inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .
    (173) exclusive_or_expression -> exclusive_or_expression . CARAT and_expression

    PIPE            reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    AND_OP          reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    QMARK           reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    OR_OP           reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    SEMI            reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    COMMA           reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEPAREN      reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEBRACE      reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    COLON           reduce using rule 171 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CARAT           shift and go to state 149


state 248

    (173) exclusive_or_expression -> exclusive_or_expression CARAT and_expression .
    (175) and_expression -> and_expression . AMPERSAND equality_expression

    CARAT           reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    PIPE            reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    AND_OP          reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    QMARK           reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    OR_OP           reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEBRACKET    reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    SEMI            reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    COMMA           reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEPAREN      reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEBRACE      reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    COLON           reduce using rule 173 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    AMPERSAND       shift and go to state 150


state 249

    (175) and_expression -> and_expression AMPERSAND equality_expression .
    (177) equality_expression -> equality_expression . EQ_OP relational_expression
    (178) equality_expression -> equality_expression . NE_OP relational_expression

    AMPERSAND       reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    CARAT           reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    PIPE            reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    AND_OP          reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    QMARK           reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    OR_OP           reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEBRACKET    reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    SEMI            reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    COMMA           reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEPAREN      reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEBRACE      reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    COLON           reduce using rule 175 (and_expression -> and_expression AMPERSAND equality_expression .)
    EQ_OP           shift and go to state 151
    NE_OP           shift and go to state 152


state 250

    (177) equality_expression -> equality_expression EQ_OP relational_expression .
    (180) relational_expression -> relational_expression . LE shift_expression
    (181) relational_expression -> relational_expression . GT shift_expression
    (182) relational_expression -> relational_expression . LE_OP shift_expression
    (183) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    NE_OP           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    AMPERSAND       reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CARAT           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    PIPE            reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    AND_OP          reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    QMARK           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    OR_OP           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEBRACKET    reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    SEMI            reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COMMA           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEPAREN      reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEBRACE      reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COLON           reduce using rule 177 (equality_expression -> equality_expression EQ_OP relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 154
    LE_OP           shift and go to state 155
    GE_OP           shift and go to state 156


state 251

    (178) equality_expression -> equality_expression NE_OP relational_expression .
    (180) relational_expression -> relational_expression . LE shift_expression
    (181) relational_expression -> relational_expression . GT shift_expression
    (182) relational_expression -> relational_expression . LE_OP shift_expression
    (183) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    NE_OP           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    AMPERSAND       reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    CARAT           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    PIPE            reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    AND_OP          reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    QMARK           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    OR_OP           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEBRACKET    reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    SEMI            reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    COMMA           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEPAREN      reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEBRACE      reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    COLON           reduce using rule 178 (equality_expression -> equality_expression NE_OP relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 154
    LE_OP           shift and go to state 155
    GE_OP           shift and go to state 156


state 252

    (180) relational_expression -> relational_expression LE shift_expression .
    (185) shift_expression -> shift_expression . LEFT_OP additive_expression
    (186) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    GT              reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    LE_OP           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    GE_OP           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    EQ_OP           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    NE_OP           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    AMPERSAND       reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    CARAT           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    PIPE            reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    AND_OP          reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    QMARK           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    OR_OP           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEBRACKET    reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    SEMI            reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    COMMA           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEPAREN      reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEBRACE      reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    COLON           reduce using rule 180 (relational_expression -> relational_expression LE shift_expression .)
    LEFT_OP         shift and go to state 157
    RIGHT_OP        shift and go to state 158


state 253

    (181) relational_expression -> relational_expression GT shift_expression .
    (185) shift_expression -> shift_expression . LEFT_OP additive_expression
    (186) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    GT              reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    LE_OP           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    GE_OP           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    EQ_OP           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    NE_OP           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    AMPERSAND       reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    CARAT           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    PIPE            reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    AND_OP          reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    QMARK           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    OR_OP           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEBRACKET    reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    SEMI            reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    COMMA           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEPAREN      reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEBRACE      reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    COLON           reduce using rule 181 (relational_expression -> relational_expression GT shift_expression .)
    LEFT_OP         shift and go to state 157
    RIGHT_OP        shift and go to state 158


state 254

    (182) relational_expression -> relational_expression LE_OP shift_expression .
    (185) shift_expression -> shift_expression . LEFT_OP additive_expression
    (186) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    GT              reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    LE_OP           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    GE_OP           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    EQ_OP           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    NE_OP           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    AMPERSAND       reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    CARAT           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    PIPE            reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    AND_OP          reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    QMARK           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    OR_OP           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEBRACKET    reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    SEMI            reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    COMMA           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEPAREN      reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEBRACE      reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    COLON           reduce using rule 182 (relational_expression -> relational_expression LE_OP shift_expression .)
    LEFT_OP         shift and go to state 157
    RIGHT_OP        shift and go to state 158


state 255

    (183) relational_expression -> relational_expression GE_OP shift_expression .
    (185) shift_expression -> shift_expression . LEFT_OP additive_expression
    (186) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    GT              reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    LE_OP           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    GE_OP           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    EQ_OP           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    NE_OP           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    AMPERSAND       reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    CARAT           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    PIPE            reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    AND_OP          reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    QMARK           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    OR_OP           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEBRACKET    reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    SEMI            reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    COMMA           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEPAREN      reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEBRACE      reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    COLON           reduce using rule 183 (relational_expression -> relational_expression GE_OP shift_expression .)
    LEFT_OP         shift and go to state 157
    RIGHT_OP        shift and go to state 158


state 256

    (185) shift_expression -> shift_expression LEFT_OP additive_expression .
    (188) additive_expression -> additive_expression . PLUS multiplicative_expression
    (189) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RIGHT_OP        reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LE              reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GT              reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LE_OP           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GE_OP           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    EQ_OP           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    NE_OP           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    AMPERSAND       reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CARAT           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    PIPE            reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    AND_OP          reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    QMARK           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    OR_OP           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEBRACKET    reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    SEMI            reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COMMA           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEPAREN      reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEBRACE      reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COLON           reduce using rule 185 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    PLUS            shift and go to state 159
    MINUS           shift and go to state 160


state 257

    (186) shift_expression -> shift_expression RIGHT_OP additive_expression .
    (188) additive_expression -> additive_expression . PLUS multiplicative_expression
    (189) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RIGHT_OP        reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LE              reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GT              reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LE_OP           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GE_OP           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    EQ_OP           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    NE_OP           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    AMPERSAND       reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CARAT           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    PIPE            reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    AND_OP          reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    QMARK           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    OR_OP           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEBRACKET    reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    SEMI            reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COMMA           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEPAREN      reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEBRACE      reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COLON           reduce using rule 186 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    PLUS            shift and go to state 159
    MINUS           shift and go to state 160


state 258

    (188) additive_expression -> additive_expression PLUS multiplicative_expression .
    (191) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (192) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (193) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEFT_OP         reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RIGHT_OP        reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE              reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE_OP           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GE_OP           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ_OP           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NE_OP           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AMPERSAND       reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CARAT           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    PIPE            reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND_OP          reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    QMARK           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR_OP           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMI            reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEPAREN      reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEBRACE      reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 188 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    ASTERISK        shift and go to state 161
    DIV             shift and go to state 162
    PERCENT         shift and go to state 163


state 259

    (189) additive_expression -> additive_expression MINUS multiplicative_expression .
    (191) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (192) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (193) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEFT_OP         reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RIGHT_OP        reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LE              reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LE_OP           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GE_OP           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ_OP           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NE_OP           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AMPERSAND       reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CARAT           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    PIPE            reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND_OP          reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    QMARK           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR_OP           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMI            reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEPAREN      reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEBRACE      reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 189 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    ASTERISK        shift and go to state 161
    DIV             shift and go to state 162
    PERCENT         shift and go to state 163


state 260

    (191) multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .

    ASTERISK        reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    DIV             reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PERCENT         reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PLUS            reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    MINUS           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LEFT_OP         reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    RIGHT_OP        reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LE              reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    GT              reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LE_OP           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    GE_OP           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    EQ_OP           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    NE_OP           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    AMPERSAND       reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CARAT           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PIPE            reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    AND_OP          reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    QMARK           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    OR_OP           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEBRACKET    reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    SEMI            reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    COMMA           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEPAREN      reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEBRACE      reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    COLON           reduce using rule 191 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)


state 261

    (192) multiplicative_expression -> multiplicative_expression DIV cast_expression .

    ASTERISK        reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    DIV             reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PERCENT         reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PLUS            reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    MINUS           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LEFT_OP         reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    RIGHT_OP        reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LE              reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    GT              reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LE_OP           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    GE_OP           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    EQ_OP           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    NE_OP           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    AMPERSAND       reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CARAT           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PIPE            reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    AND_OP          reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    QMARK           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    OR_OP           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEBRACKET    reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    SEMI            reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    COMMA           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEPAREN      reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEBRACE      reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    COLON           reduce using rule 192 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)


state 262

    (193) multiplicative_expression -> multiplicative_expression PERCENT cast_expression .

    ASTERISK        reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    DIV             reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PERCENT         reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PLUS            reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    MINUS           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LEFT_OP         reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    RIGHT_OP        reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LE              reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    GT              reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LE_OP           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    GE_OP           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    EQ_OP           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    NE_OP           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    AMPERSAND       reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CARAT           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PIPE            reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    AND_OP          reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    QMARK           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    OR_OP           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEBRACKET    reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    SEMI            reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    COMMA           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEPAREN      reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEBRACE      reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    COLON           reduce using rule 193 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)


state 263

    (195) cast_expression -> OPENPAREN type_name CLOSEPAREN . cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    cast_expression                shift and go to state 317
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 264

    (219) primary_expression -> OPENPAREN expression CLOSEPAREN .

    OPENBRACKET     reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OPENPAREN       reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PERIOD          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PTR_OP          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    INC_OP          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DEC_OP          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ASTERISK        reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DIV             reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PERCENT         reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PLUS            reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MINUS           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LEFT_OP         reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    RIGHT_OP        reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LE              reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    GT              reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LE_OP           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    GE_OP           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    EQ_OP           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    NE_OP           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AMPERSAND       reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CARAT           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PIPE            reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AND_OP          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    QMARK           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OR_OP           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ASSIGN          reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    SEMI            reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    COMMA           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    COLON           reduce using rule 219 (primary_expression -> OPENPAREN expression CLOSEPAREN .)


state 265

    (149) expression -> expression COMMA . assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    assignment_expression          shift and go to state 318
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 266

    (98) type_name -> specifier_qualifier_list abstract_declarator .

    CLOSEPAREN      reduce using rule 98 (type_name -> specifier_qualifier_list abstract_declarator .)


state 267

    (99) abstract_declarator -> pointer .
    (101) abstract_declarator -> pointer . direct_abstract_declarator
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN

    CLOSEPAREN      reduce using rule 99 (abstract_declarator -> pointer .)
    OPENPAREN       shift and go to state 268
    OPENBRACKET     shift and go to state 189

    direct_abstract_declarator     shift and go to state 279

state 268

    (102) direct_abstract_declarator -> OPENPAREN . abstract_declarator CLOSEPAREN
    (107) direct_abstract_declarator -> OPENPAREN . CLOSEPAREN
    (108) direct_abstract_declarator -> OPENPAREN . parameter_type_list CLOSEPAREN
    (99) abstract_declarator -> . pointer
    (100) abstract_declarator -> . direct_abstract_declarator
    (101) abstract_declarator -> . pointer direct_abstract_declarator
    (83) parameter_type_list -> . parameter_list
    (84) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (102) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (103) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (109) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (85) parameter_list -> . parameter_declaration
    (86) parameter_list -> . parameter_list COMMA parameter_declaration
    (87) parameter_declaration -> . declaration_specifiers declarator
    (88) parameter_declaration -> . declaration_specifiers
    (89) parameter_declaration -> . declaration_specifiers abstract_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 282
    ASTERISK        shift and go to state 16
    OPENPAREN       shift and go to state 268
    OPENBRACKET     shift and go to state 189
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    abstract_declarator            shift and go to state 283
    parameter_type_list            shift and go to state 284
    pointer                        shift and go to state 267
    direct_abstract_declarator     shift and go to state 187
    parameter_list                 shift and go to state 114
    parameter_declaration          shift and go to state 116
    declaration_specifiers         shift and go to state 117
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 269

    (209) postfix_expression -> postfix_expression OPENBRACKET expression . CLOSEBRACKET
    (149) expression -> expression . COMMA assignment_expression

    CLOSEBRACKET    shift and go to state 319
    COMMA           shift and go to state 265


state 270

    (210) postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PERIOD          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PTR_OP          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    INC_OP          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DEC_OP          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ASTERISK        reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DIV             reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PERCENT         reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PLUS            reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MINUS           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LEFT_OP         reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    RIGHT_OP        reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LE              reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    GT              reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LE_OP           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    GE_OP           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    EQ_OP           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    NE_OP           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AMPERSAND       reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CARAT           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PIPE            reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AND_OP          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    QMARK           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OR_OP           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ASSIGN          reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    SEMI            reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    COLON           reduce using rule 210 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)


state 271

    (211) postfix_expression -> postfix_expression OPENPAREN argument_expression_list . CLOSEPAREN
    (221) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 320
    COMMA           shift and go to state 321


state 272

    (220) argument_expression_list -> assignment_expression .

    CLOSEPAREN      reduce using rule 220 (argument_expression_list -> assignment_expression .)
    COMMA           reduce using rule 220 (argument_expression_list -> assignment_expression .)


state 273

    (212) postfix_expression -> postfix_expression PERIOD identifier .

    OPENBRACKET     reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    OPENPAREN       reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    PERIOD          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    PTR_OP          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    INC_OP          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    DEC_OP          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    ASTERISK        reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIV             reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    PERCENT         reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    PLUS            reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    MINUS           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    LEFT_OP         reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    RIGHT_OP        reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    LE              reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    GT              reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    LE_OP           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    GE_OP           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    EQ_OP           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    NE_OP           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    AMPERSAND       reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    CARAT           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    PIPE            reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    AND_OP          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    QMARK           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    OR_OP           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEBRACKET    reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    ASSIGN          reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    MUL_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIV_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    MOD_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    ADD_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    SUB_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    LEFT_ASSIGN     reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    RIGHT_ASSIGN    reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    AND_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    XOR_ASSIGN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    OR_ASSIGN       reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    SEMI            reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    COMMA           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEPAREN      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEBRACE      reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)
    COLON           reduce using rule 212 (postfix_expression -> postfix_expression PERIOD identifier .)


state 274

    (213) postfix_expression -> postfix_expression PTR_OP identifier .

    OPENBRACKET     reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OPENPAREN       reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PERIOD          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PTR_OP          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    INC_OP          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DEC_OP          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ASTERISK        reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DIV             reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PERCENT         reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PLUS            reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MINUS           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LEFT_OP         reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    RIGHT_OP        reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LE              reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    GT              reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LE_OP           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    GE_OP           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    EQ_OP           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    NE_OP           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AMPERSAND       reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CARAT           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PIPE            reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AND_OP          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    QMARK           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OR_OP           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEBRACKET    reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ASSIGN          reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MUL_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DIV_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MOD_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ADD_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    SUB_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LEFT_ASSIGN     reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    RIGHT_ASSIGN    reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AND_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    XOR_ASSIGN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OR_ASSIGN       reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    SEMI            reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    COMMA           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEPAREN      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEBRACE      reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)
    COLON           reduce using rule 213 (postfix_expression -> postfix_expression PTR_OP identifier .)


state 275

    (201) unary_expression -> SIZEOF OPENPAREN type_name . CLOSEPAREN

    CLOSEPAREN      shift and go to state 322


state 276

    (91) identifier_list -> identifier_list COMMA identifier .

    CLOSEPAREN      reduce using rule 91 (identifier_list -> identifier_list COMMA identifier .)
    COMMA           reduce using rule 91 (identifier_list -> identifier_list COMMA identifier .)


state 277

    (84) parameter_type_list -> parameter_list COMMA ELIPSIS .

    CLOSEPAREN      reduce using rule 84 (parameter_type_list -> parameter_list COMMA ELIPSIS .)


state 278

    (86) parameter_list -> parameter_list COMMA parameter_declaration .

    COMMA           reduce using rule 86 (parameter_list -> parameter_list COMMA parameter_declaration .)
    CLOSEPAREN      reduce using rule 86 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 279

    (101) abstract_declarator -> pointer direct_abstract_declarator .
    (105) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET CLOSEBRACKET
    (106) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (109) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN CLOSEPAREN
    (110) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN parameter_type_list CLOSEPAREN

    COMMA           reduce using rule 101 (abstract_declarator -> pointer direct_abstract_declarator .)
    CLOSEPAREN      reduce using rule 101 (abstract_declarator -> pointer direct_abstract_declarator .)
    OPENBRACKET     shift and go to state 280
    OPENPAREN       shift and go to state 281


state 280

    (105) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET . CLOSEBRACKET
    (106) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET . constant_expression CLOSEBRACKET
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 323
    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 324
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 281

    (109) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN . CLOSEPAREN
    (110) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN . parameter_type_list CLOSEPAREN
    (83) parameter_type_list -> . parameter_list
    (84) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (85) parameter_list -> . parameter_declaration
    (86) parameter_list -> . parameter_list COMMA parameter_declaration
    (87) parameter_declaration -> . declaration_specifiers declarator
    (88) parameter_declaration -> . declaration_specifiers
    (89) parameter_declaration -> . declaration_specifiers abstract_declarator
    (15) declaration_specifiers -> . storage_class_specifier
    (16) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_specifier
    (18) declaration_specifiers -> . type_specifier declaration_specifiers
    (19) declaration_specifiers -> . type_qualifier
    (20) declaration_specifiers -> . type_qualifier declaration_specifiers
    (21) storage_class_specifier -> . AUTO
    (22) storage_class_specifier -> . REGISTER
    (23) storage_class_specifier -> . STATIC
    (24) storage_class_specifier -> . EXTERN
    (25) storage_class_specifier -> . TYPEDEF
    (26) type_specifier -> . VOID
    (27) type_specifier -> . CHAR
    (28) type_specifier -> . SHORT
    (29) type_specifier -> . INT
    (30) type_specifier -> . LONG
    (31) type_specifier -> . FLOAT
    (32) type_specifier -> . DOUBLE
    (33) type_specifier -> . SIGNED
    (34) type_specifier -> . UNSIGNED
    (35) type_specifier -> . struct_or_union_specifier
    (36) type_specifier -> . enum_specifier
    (37) type_specifier -> . TYPEDEF_NAME
    (38) type_qualifier -> . CONST
    (39) type_qualifier -> . VOLATILE
    (40) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (41) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (42) struct_or_union_specifier -> . struct_or_union identifier
    (61) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (62) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (63) enum_specifier -> . ENUM identifier
    (43) struct_or_union -> . STRUCT
    (44) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 325
    AUTO            shift and go to state 17
    REGISTER        shift and go to state 18
    STATIC          shift and go to state 19
    EXTERN          shift and go to state 20
    TYPEDEF         shift and go to state 21
    VOID            shift and go to state 22
    CHAR            shift and go to state 23
    SHORT           shift and go to state 24
    INT             shift and go to state 25
    LONG            shift and go to state 26
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 28
    SIGNED          shift and go to state 29
    UNSIGNED        shift and go to state 30
    TYPEDEF_NAME    shift and go to state 33
    CONST           shift and go to state 34
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 38
    STRUCT          shift and go to state 39
    UNION           shift and go to state 40

    parameter_type_list            shift and go to state 326
    parameter_list                 shift and go to state 114
    parameter_declaration          shift and go to state 116
    declaration_specifiers         shift and go to state 117
    storage_class_specifier        shift and go to state 11
    type_specifier                 shift and go to state 12
    type_qualifier                 shift and go to state 13
    struct_or_union_specifier      shift and go to state 31
    enum_specifier                 shift and go to state 32
    struct_or_union                shift and go to state 37

state 282

    (107) direct_abstract_declarator -> OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 107 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 107 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 107 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 107 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)


state 283

    (102) direct_abstract_declarator -> OPENPAREN abstract_declarator . CLOSEPAREN

    CLOSEPAREN      shift and go to state 327


state 284

    (108) direct_abstract_declarator -> OPENPAREN parameter_type_list . CLOSEPAREN

    CLOSEPAREN      shift and go to state 328


state 285

    (103) direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 103 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 103 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 103 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 103 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)


state 286

    (104) direct_abstract_declarator -> OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 329


state 287

    (40) struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .

    AUTO            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    REGISTER        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    STATIC          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    EXTERN          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOID            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CHAR            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SHORT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    INT             reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    LONG            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    FLOAT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    DOUBLE          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SIGNED          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CONST           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOLATILE        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    ENUM            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    STRUCT          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNION           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SEMI            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    ASTERISK        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    COMMA           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    COLON           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)


state 288

    (51) struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .

    CLOSEBRACE      reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOID            reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CHAR            reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SHORT           reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    INT             reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    LONG            reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    FLOAT           reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    DOUBLE          reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SIGNED          reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNSIGNED        reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    TYPEDEF_NAME    reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CONST           reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOLATILE        reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    ENUM            reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    STRUCT          reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNION           reduce using rule 51 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)


state 289

    (57) struct_declarator_list -> struct_declarator_list COMMA . struct_declarator
    (58) struct_declarator -> . declarator
    (59) struct_declarator -> . COLON constant_expression
    (60) struct_declarator -> . declarator COLON constant_expression
    (68) declarator -> . direct_declarator
    (69) declarator -> . pointer direct_declarator
    (70) direct_declarator -> . identifier
    (71) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (72) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (73) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (74) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (75) direct_declarator -> . direct_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (76) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (77) pointer -> . ASTERISK
    (78) pointer -> . ASTERISK type_qualifier_list
    (79) pointer -> . ASTERISK pointer
    (80) pointer -> . ASTERISK type_qualifier_list pointer
    (227) identifier -> . IDENTIFIER

    COLON           shift and go to state 196
    OPENPAREN       shift and go to state 15
    ASTERISK        shift and go to state 16
    IDENTIFIER      shift and go to state 36

    struct_declarator              shift and go to state 330
    declarator                     shift and go to state 195
    direct_declarator              shift and go to state 9
    pointer                        shift and go to state 10
    identifier                     shift and go to state 14

state 290

    (60) struct_declarator -> declarator COLON . constant_expression
    (165) constant_expression -> . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    constant_expression            shift and go to state 331
    conditional_expression         shift and go to state 77
    logical_or_expression          shift and go to state 78
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 291

    (59) struct_declarator -> COLON constant_expression .

    SEMI            reduce using rule 59 (struct_declarator -> COLON constant_expression .)
    COMMA           reduce using rule 59 (struct_declarator -> COLON constant_expression .)


state 292

    (65) enumerator_list -> enumerator_list COMMA enumerator .

    CLOSEBRACE      reduce using rule 65 (enumerator_list -> enumerator_list COMMA enumerator .)
    COMMA           reduce using rule 65 (enumerator_list -> enumerator_list COMMA enumerator .)


state 293

    (67) enumerator -> identifier ASSIGN constant_expression .

    CLOSEBRACE      reduce using rule 67 (enumerator -> identifier ASSIGN constant_expression .)
    COMMA           reduce using rule 67 (enumerator -> identifier ASSIGN constant_expression .)


state 294

    (62) enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .

    AUTO            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    REGISTER        reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    STATIC          reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    EXTERN          reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    VOID            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CHAR            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SHORT           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    INT             reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    LONG            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    FLOAT           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    DOUBLE          reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SIGNED          reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CONST           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    VOLATILE        reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    ENUM            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    STRUCT          reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    UNION           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SEMI            reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    ASTERISK        reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    COMMA           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    COLON           reduce using rule 62 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)


state 295

    (125) compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .

    PD_O            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    PD_F            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 125 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)


state 296

    (129) statement_list -> statement_list read_mode_e statement .

    CLOSEBRACE      reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    PD_O            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    PD_F            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    CASE            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    DEFAULT         reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    OPENBRACE       reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    SEMI            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    IF              reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    SWITCH          reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    WHILE           reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    DO              reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    FOR             reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    GOTO            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    CONTINUE        reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    BREAK           reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    RETURN          reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    IDENTIFIER      reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    INC_OP          reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    DEC_OP          reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    SIZEOF          reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    AMPERSAND       reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    ASTERISK        reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    PLUS            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    MINUS           reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    TILDE           reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    BANG            reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    OPENPAREN       reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    INTEGER_CONSTANT reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    CHARACTER_CONSTANT reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    FLOATING_CONSTANT reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    ENUMERATION_CONSTANT reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)
    STRING_LITERAL  reduce using rule 129 (statement_list -> statement_list read_mode_e statement .)


state 297

    (126) compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .

    PD_O            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    PD_F            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 126 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)


state 298

    (127) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e . pop_scope_e CLOSEBRACE
    (231) pop_scope_e -> .

    CLOSEBRACE      reduce using rule 231 (pop_scope_e -> .)

    pop_scope_e                    shift and go to state 332

state 299

    (119) labeled_statement -> identifier COLON . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    identifier                     shift and go to state 216
    statement                      shift and go to state 333
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 300

    (120) labeled_statement -> CASE constant_expression . COLON statement

    COLON           shift and go to state 334


state 301

    (121) labeled_statement -> DEFAULT COLON . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 335
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 302

    (123) expression_statement -> expression SEMI .

    CLOSEBRACE      reduce using rule 123 (expression_statement -> expression SEMI .)
    PD_O            reduce using rule 123 (expression_statement -> expression SEMI .)
    PD_F            reduce using rule 123 (expression_statement -> expression SEMI .)
    CASE            reduce using rule 123 (expression_statement -> expression SEMI .)
    DEFAULT         reduce using rule 123 (expression_statement -> expression SEMI .)
    OPENBRACE       reduce using rule 123 (expression_statement -> expression SEMI .)
    SEMI            reduce using rule 123 (expression_statement -> expression SEMI .)
    IF              reduce using rule 123 (expression_statement -> expression SEMI .)
    SWITCH          reduce using rule 123 (expression_statement -> expression SEMI .)
    WHILE           reduce using rule 123 (expression_statement -> expression SEMI .)
    DO              reduce using rule 123 (expression_statement -> expression SEMI .)
    FOR             reduce using rule 123 (expression_statement -> expression SEMI .)
    GOTO            reduce using rule 123 (expression_statement -> expression SEMI .)
    CONTINUE        reduce using rule 123 (expression_statement -> expression SEMI .)
    BREAK           reduce using rule 123 (expression_statement -> expression SEMI .)
    RETURN          reduce using rule 123 (expression_statement -> expression SEMI .)
    IDENTIFIER      reduce using rule 123 (expression_statement -> expression SEMI .)
    INC_OP          reduce using rule 123 (expression_statement -> expression SEMI .)
    DEC_OP          reduce using rule 123 (expression_statement -> expression SEMI .)
    SIZEOF          reduce using rule 123 (expression_statement -> expression SEMI .)
    AMPERSAND       reduce using rule 123 (expression_statement -> expression SEMI .)
    ASTERISK        reduce using rule 123 (expression_statement -> expression SEMI .)
    PLUS            reduce using rule 123 (expression_statement -> expression SEMI .)
    MINUS           reduce using rule 123 (expression_statement -> expression SEMI .)
    TILDE           reduce using rule 123 (expression_statement -> expression SEMI .)
    BANG            reduce using rule 123 (expression_statement -> expression SEMI .)
    OPENPAREN       reduce using rule 123 (expression_statement -> expression SEMI .)
    INTEGER_CONSTANT reduce using rule 123 (expression_statement -> expression SEMI .)
    CHARACTER_CONSTANT reduce using rule 123 (expression_statement -> expression SEMI .)
    FLOATING_CONSTANT reduce using rule 123 (expression_statement -> expression SEMI .)
    ENUMERATION_CONSTANT reduce using rule 123 (expression_statement -> expression SEMI .)
    STRING_LITERAL  reduce using rule 123 (expression_statement -> expression SEMI .)
    ELSE            reduce using rule 123 (expression_statement -> expression SEMI .)


state 303

    (130) selection_statement -> IF OPENPAREN . expression CLOSEPAREN statement
    (131) selection_statement -> IF OPENPAREN . expression CLOSEPAREN statement ELSE statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 336
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 304

    (132) selection_statement -> SWITCH OPENPAREN . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 337
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 305

    (133) iteration_statement -> WHILE OPENPAREN . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 338
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 306

    (134) iteration_statement -> DO statement . WHILE OPENPAREN expression CLOSEPAREN SEMI

    WHILE           shift and go to state 339


state 307

    (135) iteration_statement -> FOR OPENPAREN . SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN . SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR OPENPAREN . SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN . SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> FOR OPENPAREN . expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> FOR OPENPAREN . expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> FOR OPENPAREN . expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> FOR OPENPAREN . expression SEMI expression SEMI expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 340
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 341
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 308

    (143) jump_statement -> GOTO identifier . SEMI

    SEMI            shift and go to state 342


state 309

    (144) jump_statement -> CONTINUE SEMI .

    CLOSEBRACE      reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    PD_O            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    PD_F            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    OPENBRACE       reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    IF              reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    DO              reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    GOTO            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    IDENTIFIER      reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    INC_OP          reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    DEC_OP          reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    AMPERSAND       reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    ASTERISK        reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    PLUS            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    TILDE           reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    BANG            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    OPENPAREN       reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    INTEGER_CONSTANT reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    CHARACTER_CONSTANT reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    FLOATING_CONSTANT reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    ENUMERATION_CONSTANT reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    STRING_LITERAL  reduce using rule 144 (jump_statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 144 (jump_statement -> CONTINUE SEMI .)


state 310

    (145) jump_statement -> BREAK SEMI .

    CLOSEBRACE      reduce using rule 145 (jump_statement -> BREAK SEMI .)
    PD_O            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    PD_F            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    CASE            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 145 (jump_statement -> BREAK SEMI .)
    OPENBRACE       reduce using rule 145 (jump_statement -> BREAK SEMI .)
    SEMI            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    IF              reduce using rule 145 (jump_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 145 (jump_statement -> BREAK SEMI .)
    WHILE           reduce using rule 145 (jump_statement -> BREAK SEMI .)
    DO              reduce using rule 145 (jump_statement -> BREAK SEMI .)
    FOR             reduce using rule 145 (jump_statement -> BREAK SEMI .)
    GOTO            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 145 (jump_statement -> BREAK SEMI .)
    BREAK           reduce using rule 145 (jump_statement -> BREAK SEMI .)
    RETURN          reduce using rule 145 (jump_statement -> BREAK SEMI .)
    IDENTIFIER      reduce using rule 145 (jump_statement -> BREAK SEMI .)
    INC_OP          reduce using rule 145 (jump_statement -> BREAK SEMI .)
    DEC_OP          reduce using rule 145 (jump_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 145 (jump_statement -> BREAK SEMI .)
    AMPERSAND       reduce using rule 145 (jump_statement -> BREAK SEMI .)
    ASTERISK        reduce using rule 145 (jump_statement -> BREAK SEMI .)
    PLUS            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    MINUS           reduce using rule 145 (jump_statement -> BREAK SEMI .)
    TILDE           reduce using rule 145 (jump_statement -> BREAK SEMI .)
    BANG            reduce using rule 145 (jump_statement -> BREAK SEMI .)
    OPENPAREN       reduce using rule 145 (jump_statement -> BREAK SEMI .)
    INTEGER_CONSTANT reduce using rule 145 (jump_statement -> BREAK SEMI .)
    CHARACTER_CONSTANT reduce using rule 145 (jump_statement -> BREAK SEMI .)
    FLOATING_CONSTANT reduce using rule 145 (jump_statement -> BREAK SEMI .)
    ENUMERATION_CONSTANT reduce using rule 145 (jump_statement -> BREAK SEMI .)
    STRING_LITERAL  reduce using rule 145 (jump_statement -> BREAK SEMI .)
    ELSE            reduce using rule 145 (jump_statement -> BREAK SEMI .)


state 311

    (146) jump_statement -> RETURN SEMI .

    CLOSEBRACE      reduce using rule 146 (jump_statement -> RETURN SEMI .)
    PD_O            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    PD_F            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    CASE            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 146 (jump_statement -> RETURN SEMI .)
    OPENBRACE       reduce using rule 146 (jump_statement -> RETURN SEMI .)
    SEMI            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    IF              reduce using rule 146 (jump_statement -> RETURN SEMI .)
    SWITCH          reduce using rule 146 (jump_statement -> RETURN SEMI .)
    WHILE           reduce using rule 146 (jump_statement -> RETURN SEMI .)
    DO              reduce using rule 146 (jump_statement -> RETURN SEMI .)
    FOR             reduce using rule 146 (jump_statement -> RETURN SEMI .)
    GOTO            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 146 (jump_statement -> RETURN SEMI .)
    BREAK           reduce using rule 146 (jump_statement -> RETURN SEMI .)
    RETURN          reduce using rule 146 (jump_statement -> RETURN SEMI .)
    IDENTIFIER      reduce using rule 146 (jump_statement -> RETURN SEMI .)
    INC_OP          reduce using rule 146 (jump_statement -> RETURN SEMI .)
    DEC_OP          reduce using rule 146 (jump_statement -> RETURN SEMI .)
    SIZEOF          reduce using rule 146 (jump_statement -> RETURN SEMI .)
    AMPERSAND       reduce using rule 146 (jump_statement -> RETURN SEMI .)
    ASTERISK        reduce using rule 146 (jump_statement -> RETURN SEMI .)
    PLUS            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    MINUS           reduce using rule 146 (jump_statement -> RETURN SEMI .)
    TILDE           reduce using rule 146 (jump_statement -> RETURN SEMI .)
    BANG            reduce using rule 146 (jump_statement -> RETURN SEMI .)
    OPENPAREN       reduce using rule 146 (jump_statement -> RETURN SEMI .)
    INTEGER_CONSTANT reduce using rule 146 (jump_statement -> RETURN SEMI .)
    CHARACTER_CONSTANT reduce using rule 146 (jump_statement -> RETURN SEMI .)
    FLOATING_CONSTANT reduce using rule 146 (jump_statement -> RETURN SEMI .)
    ENUMERATION_CONSTANT reduce using rule 146 (jump_statement -> RETURN SEMI .)
    STRING_LITERAL  reduce using rule 146 (jump_statement -> RETURN SEMI .)
    ELSE            reduce using rule 146 (jump_statement -> RETURN SEMI .)


state 312

    (147) jump_statement -> RETURN expression . SEMI
    (149) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 343
    COMMA           shift and go to state 265


state 313

    (93) initializer -> OPENBRACE initializer_list CLOSEBRACE .

    SEMI            reduce using rule 93 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)
    COMMA           reduce using rule 93 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 93 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)


state 314

    (94) initializer -> OPENBRACE initializer_list COMMA . CLOSEBRACE
    (96) initializer_list -> initializer_list COMMA . initializer
    (92) initializer -> . assignment_expression
    (93) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (94) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEBRACE      shift and go to state 344
    OPENBRACE       shift and go to state 139
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    initializer                    shift and go to state 345
    assignment_expression          shift and go to state 138
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 315

    (151) assignment_expression -> unary_expression assignment_operator assignment_expression .

    SEMI            reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COMMA           reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEPAREN      reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEBRACE      reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COLON           reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEBRACKET    reduce using rule 151 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 316

    (164) conditional_expression -> logical_or_expression QMARK expression COLON . conditional_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 94
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    logical_or_expression          shift and go to state 78
    conditional_expression         shift and go to state 346
    logical_and_expression         shift and go to state 79
    inclusive_or_expression        shift and go to state 80
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88
    cast_expression                shift and go to state 91
    unary_expression               shift and go to state 93
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    constant                       shift and go to state 104
    string                         shift and go to state 105

state 317

    (195) cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .

    ASTERISK        reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    DIV             reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PERCENT         reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PLUS            reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MINUS           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LEFT_OP         reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    RIGHT_OP        reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LE              reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    GT              reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LE_OP           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    GE_OP           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    EQ_OP           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    NE_OP           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AMPERSAND       reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CARAT           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PIPE            reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AND_OP          reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    QMARK           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    OR_OP           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEBRACKET    reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    SEMI            reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    COMMA           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEPAREN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    ASSIGN          reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MUL_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    DIV_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MOD_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    ADD_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    SUB_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LEFT_ASSIGN     reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    RIGHT_ASSIGN    reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AND_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    XOR_ASSIGN      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    OR_ASSIGN       reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEBRACE      reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    COLON           reduce using rule 195 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)


state 318

    (149) expression -> expression COMMA assignment_expression .

    CLOSEPAREN      reduce using rule 149 (expression -> expression COMMA assignment_expression .)
    COMMA           reduce using rule 149 (expression -> expression COMMA assignment_expression .)
    SEMI            reduce using rule 149 (expression -> expression COMMA assignment_expression .)
    COLON           reduce using rule 149 (expression -> expression COMMA assignment_expression .)
    CLOSEBRACKET    reduce using rule 149 (expression -> expression COMMA assignment_expression .)


state 319

    (209) postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PERIOD          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PTR_OP          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    INC_OP          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DEC_OP          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ASTERISK        reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DIV             reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PERCENT         reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PLUS            reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MINUS           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LEFT_OP         reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    RIGHT_OP        reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LE              reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    GT              reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LE_OP           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    GE_OP           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    EQ_OP           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    NE_OP           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AMPERSAND       reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CARAT           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PIPE            reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AND_OP          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    QMARK           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OR_OP           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ASSIGN          reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MUL_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DIV_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MOD_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ADD_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    SUB_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LEFT_ASSIGN     reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    RIGHT_ASSIGN    reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AND_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    XOR_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OR_ASSIGN       reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    SEMI            reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    COMMA           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEBRACE      reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    COLON           reduce using rule 209 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)


state 320

    (211) postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PERIOD          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PTR_OP          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    INC_OP          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DEC_OP          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ASTERISK        reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DIV             reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PERCENT         reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PLUS            reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MINUS           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LEFT_OP         reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    RIGHT_OP        reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LE              reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    GT              reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LE_OP           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    GE_OP           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    EQ_OP           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    NE_OP           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AMPERSAND       reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CARAT           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PIPE            reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AND_OP          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    QMARK           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OR_OP           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ASSIGN          reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    SEMI            reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    COMMA           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    COLON           reduce using rule 211 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)


state 321

    (221) argument_expression_list -> argument_expression_list COMMA . assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    assignment_expression          shift and go to state 347
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 322

    (201) unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .

    ASTERISK        reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    DIV             reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PERCENT         reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PLUS            reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MINUS           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LEFT_OP         reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    RIGHT_OP        reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LE              reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    GT              reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LE_OP           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    GE_OP           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    EQ_OP           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    NE_OP           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AMPERSAND       reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CARAT           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PIPE            reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AND_OP          reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    QMARK           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    OR_OP           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    ASSIGN          reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    SEMI            reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    COMMA           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    COLON           reduce using rule 201 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)


state 323

    (105) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 105 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 105 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 105 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 105 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)


state 324

    (106) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 348


state 325

    (109) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 109 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 109 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 109 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 109 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)


state 326

    (110) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list . CLOSEPAREN

    CLOSEPAREN      shift and go to state 349


state 327

    (102) direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .

    OPENBRACKET     reduce using rule 102 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    OPENPAREN       reduce using rule 102 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    COMMA           reduce using rule 102 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 102 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)


state 328

    (108) direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 108 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 108 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    COMMA           reduce using rule 108 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 108 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)


state 329

    (104) direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 104 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 104 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 104 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 104 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)


state 330

    (57) struct_declarator_list -> struct_declarator_list COMMA struct_declarator .

    SEMI            reduce using rule 57 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)
    COMMA           reduce using rule 57 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)


state 331

    (60) struct_declarator -> declarator COLON constant_expression .

    SEMI            reduce using rule 60 (struct_declarator -> declarator COLON constant_expression .)
    COMMA           reduce using rule 60 (struct_declarator -> declarator COLON constant_expression .)


state 332

    (127) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 350


state 333

    (119) labeled_statement -> identifier COLON statement .

    CLOSEBRACE      reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    PD_O            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    PD_F            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    CASE            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    DEFAULT         reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    OPENBRACE       reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    SEMI            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    IF              reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    SWITCH          reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    WHILE           reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    DO              reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    FOR             reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    GOTO            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    CONTINUE        reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    BREAK           reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    RETURN          reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    IDENTIFIER      reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    INC_OP          reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    DEC_OP          reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    SIZEOF          reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    AMPERSAND       reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    ASTERISK        reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    PLUS            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    MINUS           reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    TILDE           reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    BANG            reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    OPENPAREN       reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    INTEGER_CONSTANT reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    CHARACTER_CONSTANT reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    FLOATING_CONSTANT reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    STRING_LITERAL  reduce using rule 119 (labeled_statement -> identifier COLON statement .)
    ELSE            reduce using rule 119 (labeled_statement -> identifier COLON statement .)


state 334

    (120) labeled_statement -> CASE constant_expression COLON . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 351
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 335

    (121) labeled_statement -> DEFAULT COLON statement .

    CLOSEBRACE      reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    PD_O            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    PD_F            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    CASE            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    DEFAULT         reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    OPENBRACE       reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    SEMI            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    IF              reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    SWITCH          reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    WHILE           reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    DO              reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    FOR             reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    GOTO            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    CONTINUE        reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    BREAK           reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    RETURN          reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    IDENTIFIER      reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    INC_OP          reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    DEC_OP          reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    SIZEOF          reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    AMPERSAND       reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    ASTERISK        reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    PLUS            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    MINUS           reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    TILDE           reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    BANG            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    OPENPAREN       reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    INTEGER_CONSTANT reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    CHARACTER_CONSTANT reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    FLOATING_CONSTANT reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    STRING_LITERAL  reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)
    ELSE            reduce using rule 121 (labeled_statement -> DEFAULT COLON statement .)


state 336

    (130) selection_statement -> IF OPENPAREN expression . CLOSEPAREN statement
    (131) selection_statement -> IF OPENPAREN expression . CLOSEPAREN statement ELSE statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 352
    COMMA           shift and go to state 265


state 337

    (132) selection_statement -> SWITCH OPENPAREN expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 353
    COMMA           shift and go to state 265


state 338

    (133) iteration_statement -> WHILE OPENPAREN expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 354
    COMMA           shift and go to state 265


state 339

    (134) iteration_statement -> DO statement WHILE . OPENPAREN expression CLOSEPAREN SEMI

    OPENPAREN       shift and go to state 355


state 340

    (135) iteration_statement -> FOR OPENPAREN SEMI . SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN SEMI . SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR OPENPAREN SEMI . expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN SEMI . expression SEMI expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 356
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 357
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 341

    (139) iteration_statement -> FOR OPENPAREN expression . SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> FOR OPENPAREN expression . SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> FOR OPENPAREN expression . SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> FOR OPENPAREN expression . SEMI expression SEMI expression CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 358
    COMMA           shift and go to state 265


state 342

    (143) jump_statement -> GOTO identifier SEMI .

    CLOSEBRACE      reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    PD_O            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    PD_F            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    CASE            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    DEFAULT         reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    OPENBRACE       reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    SEMI            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    IF              reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    SWITCH          reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    WHILE           reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    DO              reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    FOR             reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    GOTO            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    CONTINUE        reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    BREAK           reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    RETURN          reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    IDENTIFIER      reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    INC_OP          reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    DEC_OP          reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    SIZEOF          reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    AMPERSAND       reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    ASTERISK        reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    PLUS            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    MINUS           reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    TILDE           reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    BANG            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    OPENPAREN       reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    INTEGER_CONSTANT reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    CHARACTER_CONSTANT reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    FLOATING_CONSTANT reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    ENUMERATION_CONSTANT reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    STRING_LITERAL  reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)
    ELSE            reduce using rule 143 (jump_statement -> GOTO identifier SEMI .)


state 343

    (147) jump_statement -> RETURN expression SEMI .

    CLOSEBRACE      reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    PD_O            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    PD_F            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    CASE            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    OPENBRACE       reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    SEMI            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    IF              reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    SWITCH          reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    DO              reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    FOR             reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    GOTO            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    BREAK           reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    IDENTIFIER      reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    INC_OP          reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    DEC_OP          reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    SIZEOF          reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    AMPERSAND       reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    ASTERISK        reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    PLUS            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    TILDE           reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    BANG            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    OPENPAREN       reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    INTEGER_CONSTANT reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    CHARACTER_CONSTANT reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    FLOATING_CONSTANT reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    ENUMERATION_CONSTANT reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    STRING_LITERAL  reduce using rule 147 (jump_statement -> RETURN expression SEMI .)
    ELSE            reduce using rule 147 (jump_statement -> RETURN expression SEMI .)


state 344

    (94) initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .

    SEMI            reduce using rule 94 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)
    COMMA           reduce using rule 94 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 94 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)


state 345

    (96) initializer_list -> initializer_list COMMA initializer .

    CLOSEBRACE      reduce using rule 96 (initializer_list -> initializer_list COMMA initializer .)
    COMMA           reduce using rule 96 (initializer_list -> initializer_list COMMA initializer .)


state 346

    (164) conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .

    CLOSEBRACKET    reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    SEMI            reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    COMMA           reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    CLOSEPAREN      reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    CLOSEBRACE      reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    COLON           reduce using rule 164 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)


state 347

    (221) argument_expression_list -> argument_expression_list COMMA assignment_expression .

    CLOSEPAREN      reduce using rule 221 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)
    COMMA           reduce using rule 221 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)


state 348

    (106) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 106 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 106 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 106 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 106 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)


state 349

    (110) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 110 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 110 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    COMMA           reduce using rule 110 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 110 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)


state 350

    (127) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .

    PD_O            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    PD_F            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 127 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)


state 351

    (120) labeled_statement -> CASE constant_expression COLON statement .

    CLOSEBRACE      reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    PD_O            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    PD_F            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    CASE            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    DEFAULT         reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    OPENBRACE       reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    SEMI            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    IF              reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    SWITCH          reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    WHILE           reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    DO              reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    FOR             reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    GOTO            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    CONTINUE        reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    BREAK           reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    RETURN          reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    IDENTIFIER      reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    INC_OP          reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    DEC_OP          reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    SIZEOF          reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    AMPERSAND       reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    ASTERISK        reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUS            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUS           reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    TILDE           reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    BANG            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    OPENPAREN       reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    INTEGER_CONSTANT reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    CHARACTER_CONSTANT reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    FLOATING_CONSTANT reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    STRING_LITERAL  reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)
    ELSE            reduce using rule 120 (labeled_statement -> CASE constant_expression COLON statement .)


state 352

    (130) selection_statement -> IF OPENPAREN expression CLOSEPAREN . statement
    (131) selection_statement -> IF OPENPAREN expression CLOSEPAREN . statement ELSE statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 359
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 353

    (132) selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 360
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 354

    (133) iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 361
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 355

    (134) iteration_statement -> DO statement WHILE OPENPAREN . expression CLOSEPAREN SEMI
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 362
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 356

    (135) iteration_statement -> FOR OPENPAREN SEMI SEMI . CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN SEMI SEMI . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 363
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 364
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 357

    (137) iteration_statement -> FOR OPENPAREN SEMI expression . SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN SEMI expression . SEMI expression CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 365
    COMMA           shift and go to state 265


state 358

    (139) iteration_statement -> FOR OPENPAREN expression SEMI . SEMI CLOSEPAREN statement
    (140) iteration_statement -> FOR OPENPAREN expression SEMI . SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> FOR OPENPAREN expression SEMI . expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> FOR OPENPAREN expression SEMI . expression SEMI expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 367
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 366
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 359

    (130) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .
    (131) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    CLOSEBRACE      reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    PD_O            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    PD_F            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ELSE            shift and go to state 368

  ! ELSE            [ reduce using rule 130 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .) ]


state 360

    (132) selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    PD_O            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    PD_F            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ELSE            reduce using rule 132 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)


state 361

    (133) iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    PD_O            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    PD_F            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ELSE            reduce using rule 133 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)


state 362

    (134) iteration_statement -> DO statement WHILE OPENPAREN expression . CLOSEPAREN SEMI
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 369
    COMMA           shift and go to state 265


state 363

    (135) iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    statement                      shift and go to state 370
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    expression                     shift and go to state 220
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 364

    (136) iteration_statement -> FOR OPENPAREN SEMI SEMI expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 371
    COMMA           shift and go to state 265


state 365

    (137) iteration_statement -> FOR OPENPAREN SEMI expression SEMI . CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN SEMI expression SEMI . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 373
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 372
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 366

    (141) iteration_statement -> FOR OPENPAREN expression SEMI expression . SEMI CLOSEPAREN statement
    (142) iteration_statement -> FOR OPENPAREN expression SEMI expression . SEMI expression CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 374
    COMMA           shift and go to state 265


state 367

    (139) iteration_statement -> FOR OPENPAREN expression SEMI SEMI . CLOSEPAREN statement
    (140) iteration_statement -> FOR OPENPAREN expression SEMI SEMI . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 376
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 375
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 368

    (131) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 377
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 369

    (134) iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN . SEMI

    SEMI            shift and go to state 378


state 370

    (135) iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    PD_O            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    PD_F            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    IF              reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DO              reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 135 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)


state 371

    (136) iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 379
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 372

    (138) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 380
    COMMA           shift and go to state 265


state 373

    (137) iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 381
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 374

    (141) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI . CLOSEPAREN statement
    (142) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI . expression CLOSEPAREN statement
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (227) identifier -> . IDENTIFIER
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 383
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    IDENTIFIER      shift and go to state 36
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 382
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    identifier                     shift and go to state 101
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 375

    (140) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 384
    COMMA           shift and go to state 265


state 376

    (139) iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 385
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 377

    (131) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .

    CLOSEBRACE      reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    PD_O            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    PD_F            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CASE            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    OPENBRACE       reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SEMI            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    IF              reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SWITCH          reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    WHILE           reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DO              reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    FOR             reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    GOTO            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    BREAK           reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    RETURN          reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    INC_OP          reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DEC_OP          reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SIZEOF          reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    AMPERSAND       reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ASTERISK        reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    PLUS            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    MINUS           reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    TILDE           reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    BANG            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    OPENPAREN       reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    INTEGER_CONSTANT reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CHARACTER_CONSTANT reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    FLOATING_CONSTANT reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ENUMERATION_CONSTANT reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ELSE            reduce using rule 131 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)


state 378

    (134) iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .

    CLOSEBRACE      reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    PD_O            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    PD_F            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CASE            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DEFAULT         reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    OPENBRACE       reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SEMI            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    IF              reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SWITCH          reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    WHILE           reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DO              reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    FOR             reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    GOTO            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CONTINUE        reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    BREAK           reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    RETURN          reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    IDENTIFIER      reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    INC_OP          reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DEC_OP          reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SIZEOF          reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    AMPERSAND       reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ASTERISK        reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    PLUS            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    MINUS           reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    TILDE           reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    BANG            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    OPENPAREN       reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    INTEGER_CONSTANT reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CHARACTER_CONSTANT reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    FLOATING_CONSTANT reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ENUMERATION_CONSTANT reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    STRING_LITERAL  reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ELSE            reduce using rule 134 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)


state 379

    (136) iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    PD_O            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    PD_F            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 136 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)


state 380

    (138) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 386
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 381

    (137) iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    PD_O            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    PD_F            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    IF              reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DO              reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 137 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)


state 382

    (142) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression . CLOSEPAREN statement
    (149) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 387
    COMMA           shift and go to state 265


state 383

    (141) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 388
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 384

    (140) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 389
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 385

    (139) iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    PD_O            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    PD_F            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    IF              reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DO              reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 139 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)


state 386

    (138) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    PD_O            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    PD_F            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 138 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)


state 387

    (142) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN . statement
    (111) statement -> . labeled_statement
    (112) statement -> . compound_statement
    (113) statement -> . expression_statement
    (114) statement -> . selection_statement
    (115) statement -> . iteration_statement
    (116) statement -> . jump_statement
    (117) statement -> . PD_O
    (118) statement -> . PD_F
    (119) labeled_statement -> . identifier COLON statement
    (120) labeled_statement -> . CASE constant_expression COLON statement
    (121) labeled_statement -> . DEFAULT COLON statement
    (124) compound_statement -> . OPENBRACE CLOSEBRACE
    (125) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (126) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (127) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (122) expression_statement -> . SEMI
    (123) expression_statement -> . expression SEMI
    (130) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (131) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (132) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (133) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (134) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (135) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (139) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (140) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (141) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (142) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (143) jump_statement -> . GOTO identifier SEMI
    (144) jump_statement -> . CONTINUE SEMI
    (145) jump_statement -> . BREAK SEMI
    (146) jump_statement -> . RETURN SEMI
    (147) jump_statement -> . RETURN expression SEMI
    (227) identifier -> . IDENTIFIER
    (148) expression -> . assignment_expression
    (149) expression -> . expression COMMA assignment_expression
    (150) assignment_expression -> . conditional_expression
    (151) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (163) conditional_expression -> . logical_or_expression
    (164) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (196) unary_expression -> . postfix_expression
    (197) unary_expression -> . INC_OP unary_expression
    (198) unary_expression -> . DEC_OP unary_expression
    (199) unary_expression -> . unary_operator cast_expression
    (200) unary_expression -> . SIZEOF unary_expression
    (201) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (166) logical_or_expression -> . logical_and_expression
    (167) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (208) postfix_expression -> . primary_expression
    (209) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (210) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (211) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (212) postfix_expression -> . postfix_expression PERIOD identifier
    (213) postfix_expression -> . postfix_expression PTR_OP identifier
    (214) postfix_expression -> . postfix_expression INC_OP
    (215) postfix_expression -> . postfix_expression DEC_OP
    (202) unary_operator -> . AMPERSAND
    (203) unary_operator -> . ASTERISK
    (204) unary_operator -> . PLUS
    (205) unary_operator -> . MINUS
    (206) unary_operator -> . TILDE
    (207) unary_operator -> . BANG
    (168) logical_and_expression -> . inclusive_or_expression
    (169) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (216) primary_expression -> . identifier
    (217) primary_expression -> . constant
    (218) primary_expression -> . string
    (219) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (170) inclusive_or_expression -> . exclusive_or_expression
    (171) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (222) constant -> . INTEGER_CONSTANT
    (223) constant -> . CHARACTER_CONSTANT
    (224) constant -> . FLOATING_CONSTANT
    (225) constant -> . ENUMERATION_CONSTANT
    (226) string -> . STRING_LITERAL
    (172) exclusive_or_expression -> . and_expression
    (173) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (174) and_expression -> . equality_expression
    (175) and_expression -> . and_expression AMPERSAND equality_expression
    (176) equality_expression -> . relational_expression
    (177) equality_expression -> . equality_expression EQ_OP relational_expression
    (178) equality_expression -> . equality_expression NE_OP relational_expression
    (179) relational_expression -> . shift_expression
    (180) relational_expression -> . relational_expression LE shift_expression
    (181) relational_expression -> . relational_expression GT shift_expression
    (182) relational_expression -> . relational_expression LE_OP shift_expression
    (183) relational_expression -> . relational_expression GE_OP shift_expression
    (184) shift_expression -> . additive_expression
    (185) shift_expression -> . shift_expression LEFT_OP additive_expression
    (186) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (187) additive_expression -> . multiplicative_expression
    (188) additive_expression -> . additive_expression PLUS multiplicative_expression
    (189) additive_expression -> . additive_expression MINUS multiplicative_expression
    (190) multiplicative_expression -> . cast_expression
    (191) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (192) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (193) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (194) cast_expression -> . unary_expression
    (195) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    PD_O            shift and go to state 214
    PD_F            shift and go to state 215
    CASE            shift and go to state 217
    DEFAULT         shift and go to state 218
    OPENBRACE       shift and go to state 44
    SEMI            shift and go to state 219
    IF              shift and go to state 221
    SWITCH          shift and go to state 222
    WHILE           shift and go to state 223
    DO              shift and go to state 224
    FOR             shift and go to state 225
    GOTO            shift and go to state 226
    CONTINUE        shift and go to state 227
    BREAK           shift and go to state 228
    RETURN          shift and go to state 229
    IDENTIFIER      shift and go to state 36
    INC_OP          shift and go to state 96
    DEC_OP          shift and go to state 97
    SIZEOF          shift and go to state 99
    AMPERSAND       shift and go to state 84
    ASTERISK        shift and go to state 92
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    TILDE           shift and go to state 102
    BANG            shift and go to state 103
    OPENPAREN       shift and go to state 142
    INTEGER_CONSTANT shift and go to state 106
    CHARACTER_CONSTANT shift and go to state 107
    FLOATING_CONSTANT shift and go to state 108
    ENUMERATION_CONSTANT shift and go to state 109
    STRING_LITERAL  shift and go to state 110

    expression                     shift and go to state 220
    statement                      shift and go to state 390
    labeled_statement              shift and go to state 208
    compound_statement             shift and go to state 209
    expression_statement           shift and go to state 210
    selection_statement            shift and go to state 211
    iteration_statement            shift and go to state 212
    jump_statement                 shift and go to state 213
    identifier                     shift and go to state 216
    assignment_expression          shift and go to state 167
    conditional_expression         shift and go to state 140
    unary_expression               shift and go to state 141
    logical_or_expression          shift and go to state 78
    postfix_expression             shift and go to state 95
    unary_operator                 shift and go to state 98
    cast_expression                shift and go to state 91
    logical_and_expression         shift and go to state 79
    primary_expression             shift and go to state 100
    inclusive_or_expression        shift and go to state 80
    constant                       shift and go to state 104
    string                         shift and go to state 105
    exclusive_or_expression        shift and go to state 81
    and_expression                 shift and go to state 82
    equality_expression            shift and go to state 83
    relational_expression          shift and go to state 85
    shift_expression               shift and go to state 86
    additive_expression            shift and go to state 87
    multiplicative_expression      shift and go to state 88

state 388

    (141) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    PD_O            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    PD_F            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    IF              reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DO              reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 141 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)


state 389

    (140) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    PD_O            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    PD_F            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 140 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)


state 390

    (142) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    PD_O            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    PD_F            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 142 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 359 resolved as shift
WARNING: reduce/reduce conflict in state 67 resolved using rule (insert_mode_e -> <empty>)
WARNING: rejected rule (read_mode_e -> <empty>) in state 67
WARNING: reduce/reduce conflict in state 133 resolved using rule (insert_mode_e -> <empty>)
WARNING: rejected rule (read_mode_e -> <empty>) in state 133
