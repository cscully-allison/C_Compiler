Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PD_O
    DST
    PD_F
    RANGE
    LD_O
    LD_F

Grammar

Rule 0     S' -> translation_unit
Rule 1     translation_unit -> external_declaration
Rule 2     translation_unit -> translation_unit external_declaration
Rule 3     external_declaration -> function_definition
Rule 4     external_declaration -> declaration
Rule 5     function_definition -> declarator compound_statement
Rule 6     function_definition -> declarator declaration_list compound_statement
Rule 7     function_definition -> declaration_specifiers declarator compound_statement
Rule 8     function_definition -> declaration_specifiers declarator declaration_list compound_statement
Rule 9     declaration -> declaration_specifiers SEMI
Rule 10    declaration -> declaration_specifiers init_declarator_list SEMI
Rule 11    declaration_list -> insert_mode_e declaration
Rule 12    declaration_list -> declaration_list insert_mode_e declaration
Rule 13    declaration_specifiers -> storage_class_specifier
Rule 14    declaration_specifiers -> storage_class_specifier declaration_specifiers
Rule 15    declaration_specifiers -> type_specifier
Rule 16    declaration_specifiers -> type_specifier declaration_specifiers
Rule 17    declaration_specifiers -> type_qualifier
Rule 18    declaration_specifiers -> type_qualifier declaration_specifiers
Rule 19    storage_class_specifier -> AUTO
Rule 20    storage_class_specifier -> REGISTER
Rule 21    storage_class_specifier -> STATIC
Rule 22    storage_class_specifier -> EXTERN
Rule 23    storage_class_specifier -> TYPEDEF
Rule 24    type_specifier -> VOID
Rule 25    type_specifier -> CHAR
Rule 26    type_specifier -> SHORT
Rule 27    type_specifier -> INT
Rule 28    type_specifier -> LONG
Rule 29    type_specifier -> FLOAT
Rule 30    type_specifier -> DOUBLE
Rule 31    type_specifier -> SIGNED
Rule 32    type_specifier -> UNSIGNED
Rule 33    type_specifier -> struct_or_union_specifier
Rule 34    type_specifier -> enum_specifier
Rule 35    type_specifier -> TYPEDEF_NAME
Rule 36    type_qualifier -> CONST
Rule 37    type_qualifier -> VOLATILE
Rule 38    struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
Rule 39    struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
Rule 40    struct_or_union_specifier -> struct_or_union identifier
Rule 41    struct_or_union -> STRUCT
Rule 42    struct_or_union -> UNION
Rule 43    struct_declaration_list -> struct_declaration
Rule 44    struct_declaration_list -> struct_declaration_list struct_declaration
Rule 45    init_declarator_list -> init_declarator
Rule 46    init_declarator_list -> init_declarator_list COMMA init_declarator
Rule 47    init_declarator -> declarator
Rule 48    init_declarator -> declarator ASSIGN initializer
Rule 49    struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI
Rule 50    specifier_qualifier_list -> type_specifier
Rule 51    specifier_qualifier_list -> type_specifier specifier_qualifier_list
Rule 52    specifier_qualifier_list -> type_qualifier
Rule 53    specifier_qualifier_list -> type_qualifier specifier_qualifier_list
Rule 54    struct_declarator_list -> struct_declarator
Rule 55    struct_declarator_list -> struct_declarator_list COMMA struct_declarator
Rule 56    struct_declarator -> declarator
Rule 57    struct_declarator -> COLON constant_expression
Rule 58    struct_declarator -> declarator COLON constant_expression
Rule 59    enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE
Rule 60    enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
Rule 61    enum_specifier -> ENUM identifier
Rule 62    enumerator_list -> enumerator
Rule 63    enumerator_list -> enumerator_list COMMA enumerator
Rule 64    enumerator -> identifier
Rule 65    enumerator -> identifier ASSIGN constant_expression
Rule 66    declarator -> direct_declarator
Rule 67    declarator -> pointer direct_declarator
Rule 68    direct_declarator -> identifier
Rule 69    direct_declarator -> OPENPAREN declarator CLOSEPAREN
Rule 70    direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET
Rule 71    direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
Rule 72    direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN
Rule 73    direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
Rule 74    direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN
Rule 75    pointer -> ASTERISK
Rule 76    pointer -> ASTERISK type_qualifier_list
Rule 77    pointer -> ASTERISK pointer
Rule 78    pointer -> ASTERISK type_qualifier_list pointer
Rule 79    type_qualifier_list -> type_qualifier
Rule 80    type_qualifier_list -> type_qualifier_list type_qualifier
Rule 81    parameter_type_list -> parameter_list
Rule 82    parameter_type_list -> parameter_list COMMA ELIPSIS
Rule 83    parameter_list -> parameter_declaration
Rule 84    parameter_list -> parameter_list COMMA parameter_declaration
Rule 85    parameter_declaration -> declaration_specifiers declarator
Rule 86    parameter_declaration -> declaration_specifiers
Rule 87    parameter_declaration -> declaration_specifiers abstract_declarator
Rule 88    identifier_list -> identifier
Rule 89    identifier_list -> identifier_list COMMA identifier
Rule 90    initializer -> assignment_expression
Rule 91    initializer -> OPENBRACE initializer_list CLOSEBRACE
Rule 92    initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE
Rule 93    initializer_list -> initializer
Rule 94    initializer_list -> initializer_list COMMA initializer
Rule 95    type_name -> specifier_qualifier_list
Rule 96    type_name -> specifier_qualifier_list abstract_declarator
Rule 97    abstract_declarator -> pointer
Rule 98    abstract_declarator -> direct_abstract_declarator
Rule 99    abstract_declarator -> pointer direct_abstract_declarator
Rule 100   direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN
Rule 101   direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET
Rule 102   direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET
Rule 103   direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET
Rule 104   direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
Rule 105   direct_abstract_declarator -> OPENPAREN CLOSEPAREN
Rule 106   direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN
Rule 107   direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN
Rule 108   direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
Rule 109   statement -> labeled_statement
Rule 110   statement -> compound_statement
Rule 111   statement -> expression_statement
Rule 112   statement -> selection_statement
Rule 113   statement -> iteration_statement
Rule 114   statement -> jump_statement
Rule 115   labeled_statement -> identifier COLON statement
Rule 116   labeled_statement -> CASE constant_expression COLON statement
Rule 117   labeled_statement -> DEFAULT COLON statement
Rule 118   expression_statement -> SEMI
Rule 119   expression_statement -> expression SEMI
Rule 120   compound_statement -> OPENBRACE CLOSEBRACE
Rule 121   compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
Rule 122   compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
Rule 123   compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
Rule 124   statement_list -> read_mode_e statement
Rule 125   statement_list -> statement_list read_mode_e statement
Rule 126   selection_statement -> IF OPENPAREN expression CLOSEPAREN statement
Rule 127   selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement
Rule 128   selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement
Rule 129   iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement
Rule 130   iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
Rule 131   iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
Rule 132   iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
Rule 133   iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
Rule 134   iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
Rule 135   iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
Rule 136   iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
Rule 137   iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
Rule 138   iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
Rule 139   jump_statement -> GOTO identifier SEMI
Rule 140   jump_statement -> CONTINUE SEMI
Rule 141   jump_statement -> BREAK SEMI
Rule 142   jump_statement -> RETURN SEMI
Rule 143   jump_statement -> RETURN expression SEMI
Rule 144   expression -> assignment_expression
Rule 145   expression -> expression COMMA assignment_expression
Rule 146   assignment_expression -> conditional_expression
Rule 147   assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 148   assignment_operator -> ASSIGN
Rule 149   assignment_operator -> MUL_ASSIGN
Rule 150   assignment_operator -> DIV_ASSIGN
Rule 151   assignment_operator -> MOD_ASSIGN
Rule 152   assignment_operator -> ADD_ASSIGN
Rule 153   assignment_operator -> SUB_ASSIGN
Rule 154   assignment_operator -> LEFT_ASSIGN
Rule 155   assignment_operator -> RIGHT_ASSIGN
Rule 156   assignment_operator -> AND_ASSIGN
Rule 157   assignment_operator -> XOR_ASSIGN
Rule 158   assignment_operator -> OR_ASSIGN
Rule 159   conditional_expression -> logical_or_expression
Rule 160   conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression
Rule 161   constant_expression -> conditional_expression
Rule 162   logical_or_expression -> logical_and_expression
Rule 163   logical_or_expression -> logical_or_expression OR_OP logical_and_expression
Rule 164   logical_and_expression -> inclusive_or_expression
Rule 165   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
Rule 166   inclusive_or_expression -> exclusive_or_expression
Rule 167   inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression
Rule 168   exclusive_or_expression -> and_expression
Rule 169   exclusive_or_expression -> exclusive_or_expression CARAT and_expression
Rule 170   and_expression -> equality_expression
Rule 171   and_expression -> and_expression AMPERSAND equality_expression
Rule 172   equality_expression -> relational_expression
Rule 173   equality_expression -> equality_expression EQ_OP relational_expression
Rule 174   equality_expression -> equality_expression NE_OP relational_expression
Rule 175   relational_expression -> shift_expression
Rule 176   relational_expression -> relational_expression LE shift_expression
Rule 177   relational_expression -> relational_expression GT shift_expression
Rule 178   relational_expression -> relational_expression LE_OP shift_expression
Rule 179   relational_expression -> relational_expression GE_OP shift_expression
Rule 180   shift_expression -> additive_expression
Rule 181   shift_expression -> shift_expression LEFT_OP additive_expression
Rule 182   shift_expression -> shift_expression RIGHT_OP additive_expression
Rule 183   additive_expression -> multiplicative_expression
Rule 184   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 185   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 186   multiplicative_expression -> cast_expression
Rule 187   multiplicative_expression -> multiplicative_expression ASTERISK cast_expression
Rule 188   multiplicative_expression -> multiplicative_expression DIV cast_expression
Rule 189   multiplicative_expression -> multiplicative_expression PERCENT cast_expression
Rule 190   cast_expression -> unary_expression
Rule 191   cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression
Rule 192   unary_expression -> postfix_expression
Rule 193   unary_expression -> INC_OP unary_expression
Rule 194   unary_expression -> DEC_OP unary_expression
Rule 195   unary_expression -> unary_operator cast_expression
Rule 196   unary_expression -> SIZEOF unary_expression
Rule 197   unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN
Rule 198   unary_operator -> AMPERSAND
Rule 199   unary_operator -> ASTERISK
Rule 200   unary_operator -> PLUS
Rule 201   unary_operator -> MINUS
Rule 202   unary_operator -> TILDE
Rule 203   unary_operator -> BANG
Rule 204   postfix_expression -> primary_expression
Rule 205   postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET
Rule 206   postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN
Rule 207   postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
Rule 208   postfix_expression -> postfix_expression PERIOD identifier
Rule 209   postfix_expression -> postfix_expression PTR_OP identifier
Rule 210   postfix_expression -> postfix_expression INC_OP
Rule 211   postfix_expression -> postfix_expression DEC_OP
Rule 212   primary_expression -> identifier
Rule 213   primary_expression -> constant
Rule 214   primary_expression -> string
Rule 215   primary_expression -> OPENPAREN expression CLOSEPAREN
Rule 216   argument_expression_list -> assignment_expression
Rule 217   argument_expression_list -> argument_expression_list COMMA assignment_expression
Rule 218   constant -> INTEGER_CONSTANT
Rule 219   constant -> CHARACTER_CONSTANT
Rule 220   constant -> FLOATING_CONSTANT
Rule 221   constant -> ENUMERATION_CONSTANT
Rule 222   string -> STRING_LITERAL
Rule 223   identifier -> IDENTIFIER
Rule 224   insert_mode_e -> <empty>
Rule 225   read_mode_e -> <empty>
Rule 226   push_scope_e -> <empty>
Rule 227   pop_scope_e -> <empty>

Terminals, with rules where they appear

ADD_ASSIGN           : 152
AMPERSAND            : 171 198
AND_ASSIGN           : 156
AND_OP               : 165
ASSIGN               : 48 65 148
ASTERISK             : 75 76 77 78 187 199
AUTO                 : 19
BANG                 : 203
BREAK                : 141
CARAT                : 169
CASE                 : 116
CHAR                 : 25
CHARACTER_CONSTANT   : 219
CLOSEBRACE           : 38 39 59 60 91 92 120 121 122 123
CLOSEBRACKET         : 70 71 101 102 103 104 205
CLOSEPAREN           : 69 72 73 74 100 105 106 107 108 126 127 128 129 130 131 132 133 134 135 136 137 138 191 197 206 207 215
COLON                : 57 58 115 116 117 160
COMMA                : 46 55 63 82 84 89 92 94 145 217
CONST                : 36
CONTINUE             : 140
DEC_OP               : 194 211
DEFAULT              : 117
DIV                  : 188
DIV_ASSIGN           : 150
DO                   : 130
DOUBLE               : 30
DST                  : 
ELIPSIS              : 82
ELSE                 : 127
ENUM                 : 59 60 61
ENUMERATION_CONSTANT : 221
EQ_OP                : 173
EXTERN               : 22
FLOAT                : 29
FLOATING_CONSTANT    : 220
FOR                  : 131 132 133 134 135 136 137 138
GE_OP                : 179
GOTO                 : 139
GT                   : 177
IDENTIFIER           : 223
IF                   : 126 127
INC_OP               : 193 210
INT                  : 27
INTEGER_CONSTANT     : 218
LD_F                 : 
LD_O                 : 
LE                   : 176
LEFT_ASSIGN          : 154
LEFT_OP              : 181
LE_OP                : 178
LONG                 : 28
MINUS                : 185 201
MOD_ASSIGN           : 151
MUL_ASSIGN           : 149
NE_OP                : 174
OPENBRACE            : 38 39 59 60 91 92 120 121 122 123
OPENBRACKET          : 70 71 101 102 103 104 205
OPENPAREN            : 69 72 73 74 100 105 106 107 108 126 127 128 129 130 131 132 133 134 135 136 137 138 191 197 206 207 215
OR_ASSIGN            : 158
OR_OP                : 163
PD_F                 : 
PD_O                 : 
PERCENT              : 189
PERIOD               : 208
PIPE                 : 167
PLUS                 : 184 200
PTR_OP               : 209
QMARK                : 160
RANGE                : 
REGISTER             : 20
RETURN               : 142 143
RIGHT_ASSIGN         : 155
RIGHT_OP             : 182
SEMI                 : 9 10 49 118 119 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 140 141 142 143
SHORT                : 26
SIGNED               : 31
SIZEOF               : 196 197
STATIC               : 21
STRING_LITERAL       : 222
STRUCT               : 41
SUB_ASSIGN           : 153
SWITCH               : 128
TILDE                : 202
TYPEDEF              : 23
TYPEDEF_NAME         : 35
UNION                : 42
UNSIGNED             : 32
VOID                 : 24
VOLATILE             : 37
WHILE                : 129 130
XOR_ASSIGN           : 157
error                : 

Nonterminals, with rules where they appear

abstract_declarator  : 87 96 100
additive_expression  : 180 181 182 184 185
and_expression       : 168 169 171
argument_expression_list : 207 217
assignment_expression : 90 144 145 147 216 217
assignment_operator  : 147
cast_expression      : 186 187 188 189 191 195
compound_statement   : 5 6 7 8 110
conditional_expression : 146 160 161
constant             : 213
constant_expression  : 57 58 65 71 102 104 116
declaration          : 4 11 12
declaration_list     : 6 8 12 122 123
declaration_specifiers : 7 8 9 10 14 16 18 85 86 87
declarator           : 5 6 7 8 47 48 56 58 69 85
direct_abstract_declarator : 98 99 103 104 107 108
direct_declarator    : 66 67 70 71 72 73 74
enum_specifier       : 34
enumerator           : 62 63
enumerator_list      : 59 60 63
equality_expression  : 170 171 173 174
exclusive_or_expression : 166 167 169
expression           : 119 126 127 128 129 130 132 133 134 134 135 136 136 137 137 138 138 138 143 145 160 205 215
expression_statement : 111
external_declaration : 1 2
function_definition  : 3
identifier           : 38 40 60 61 64 65 68 88 89 115 139 208 209 212
identifier_list      : 74 89
inclusive_or_expression : 164 165 167
init_declarator      : 45 46
init_declarator_list : 10 46
initializer          : 48 93 94
initializer_list     : 91 92 94
insert_mode_e        : 11 12 123
iteration_statement  : 113
jump_statement       : 114
labeled_statement    : 109
logical_and_expression : 162 163 165
logical_or_expression : 159 160 163
multiplicative_expression : 183 184 185 187 188 189
parameter_declaration : 83 84
parameter_list       : 81 82 84
parameter_type_list  : 73 106 108
pointer              : 67 77 78 97 99
pop_scope_e          : 121 122 123
postfix_expression   : 192 205 206 207 208 209 210 211
primary_expression   : 204
push_scope_e         : 73 73 121 122 123
read_mode_e          : 124 125
relational_expression : 172 173 174 176 177 178 179
selection_statement  : 112
shift_expression     : 175 176 177 178 179 181 182
specifier_qualifier_list : 49 51 53 95 96
statement            : 115 116 117 124 125 126 127 127 128 129 130 131 132 133 134 135 136 137 138
statement_list       : 121 123 125
storage_class_specifier : 13 14
string               : 214
struct_declaration   : 43 44
struct_declaration_list : 38 39 44
struct_declarator    : 54 55
struct_declarator_list : 49 55
struct_or_union      : 38 39 40
struct_or_union_specifier : 33
translation_unit     : 2 0
type_name            : 191 197
type_qualifier       : 17 18 52 53 79 80
type_qualifier_list  : 76 78 80
type_specifier       : 15 16 50 51
unary_expression     : 147 190 193 194 196
unary_operator       : 195

Parsing method: LALR

state 0

    (0) S' -> . translation_unit
    (1) translation_unit -> . external_declaration
    (2) translation_unit -> . translation_unit external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declarator compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declaration_specifiers declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (223) identifier -> . IDENTIFIER
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    IDENTIFIER      shift and go to state 17
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 4
    pointer                        shift and go to state 10
    external_declaration           shift and go to state 12
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 6
    direct_declarator              shift and go to state 23
    declaration_specifiers         shift and go to state 25
    declaration                    shift and go to state 26
    function_definition            shift and go to state 28
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 32
    translation_unit               shift and go to state 36
    declarator                     shift and go to state 37
    identifier                     shift and go to state 38

state 1

    (13) declaration_specifiers -> storage_class_specifier .
    (14) declaration_specifiers -> storage_class_specifier . declaration_specifiers
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    SEMI            reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    OPENPAREN       reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    ASTERISK        reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    IDENTIFIER      reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    OPENBRACKET     reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    COMMA           reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    CLOSEPAREN      reduce using rule 13 (declaration_specifiers -> storage_class_specifier .)
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 32
    declaration_specifiers         shift and go to state 39

state 2

    (26) type_specifier -> SHORT .

    VOID            reduce using rule 26 (type_specifier -> SHORT .)
    CHAR            reduce using rule 26 (type_specifier -> SHORT .)
    SHORT           reduce using rule 26 (type_specifier -> SHORT .)
    INT             reduce using rule 26 (type_specifier -> SHORT .)
    LONG            reduce using rule 26 (type_specifier -> SHORT .)
    FLOAT           reduce using rule 26 (type_specifier -> SHORT .)
    DOUBLE          reduce using rule 26 (type_specifier -> SHORT .)
    SIGNED          reduce using rule 26 (type_specifier -> SHORT .)
    UNSIGNED        reduce using rule 26 (type_specifier -> SHORT .)
    TYPEDEF_NAME    reduce using rule 26 (type_specifier -> SHORT .)
    CONST           reduce using rule 26 (type_specifier -> SHORT .)
    VOLATILE        reduce using rule 26 (type_specifier -> SHORT .)
    ENUM            reduce using rule 26 (type_specifier -> SHORT .)
    STRUCT          reduce using rule 26 (type_specifier -> SHORT .)
    UNION           reduce using rule 26 (type_specifier -> SHORT .)
    COLON           reduce using rule 26 (type_specifier -> SHORT .)
    OPENPAREN       reduce using rule 26 (type_specifier -> SHORT .)
    ASTERISK        reduce using rule 26 (type_specifier -> SHORT .)
    IDENTIFIER      reduce using rule 26 (type_specifier -> SHORT .)
    OPENBRACKET     reduce using rule 26 (type_specifier -> SHORT .)
    CLOSEPAREN      reduce using rule 26 (type_specifier -> SHORT .)
    AUTO            reduce using rule 26 (type_specifier -> SHORT .)
    REGISTER        reduce using rule 26 (type_specifier -> SHORT .)
    STATIC          reduce using rule 26 (type_specifier -> SHORT .)
    EXTERN          reduce using rule 26 (type_specifier -> SHORT .)
    TYPEDEF         reduce using rule 26 (type_specifier -> SHORT .)
    SEMI            reduce using rule 26 (type_specifier -> SHORT .)
    COMMA           reduce using rule 26 (type_specifier -> SHORT .)


state 3

    (36) type_qualifier -> CONST .

    AUTO            reduce using rule 36 (type_qualifier -> CONST .)
    REGISTER        reduce using rule 36 (type_qualifier -> CONST .)
    STATIC          reduce using rule 36 (type_qualifier -> CONST .)
    EXTERN          reduce using rule 36 (type_qualifier -> CONST .)
    TYPEDEF         reduce using rule 36 (type_qualifier -> CONST .)
    VOID            reduce using rule 36 (type_qualifier -> CONST .)
    CHAR            reduce using rule 36 (type_qualifier -> CONST .)
    SHORT           reduce using rule 36 (type_qualifier -> CONST .)
    INT             reduce using rule 36 (type_qualifier -> CONST .)
    LONG            reduce using rule 36 (type_qualifier -> CONST .)
    FLOAT           reduce using rule 36 (type_qualifier -> CONST .)
    DOUBLE          reduce using rule 36 (type_qualifier -> CONST .)
    SIGNED          reduce using rule 36 (type_qualifier -> CONST .)
    UNSIGNED        reduce using rule 36 (type_qualifier -> CONST .)
    TYPEDEF_NAME    reduce using rule 36 (type_qualifier -> CONST .)
    CONST           reduce using rule 36 (type_qualifier -> CONST .)
    VOLATILE        reduce using rule 36 (type_qualifier -> CONST .)
    ENUM            reduce using rule 36 (type_qualifier -> CONST .)
    STRUCT          reduce using rule 36 (type_qualifier -> CONST .)
    UNION           reduce using rule 36 (type_qualifier -> CONST .)
    SEMI            reduce using rule 36 (type_qualifier -> CONST .)
    OPENPAREN       reduce using rule 36 (type_qualifier -> CONST .)
    ASTERISK        reduce using rule 36 (type_qualifier -> CONST .)
    IDENTIFIER      reduce using rule 36 (type_qualifier -> CONST .)
    OPENBRACKET     reduce using rule 36 (type_qualifier -> CONST .)
    COMMA           reduce using rule 36 (type_qualifier -> CONST .)
    CLOSEPAREN      reduce using rule 36 (type_qualifier -> CONST .)
    COLON           reduce using rule 36 (type_qualifier -> CONST .)


state 4

    (33) type_specifier -> struct_or_union_specifier .

    VOID            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    CHAR            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    SHORT           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    INT             reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    LONG            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    FLOAT           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    DOUBLE          reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    SIGNED          reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    UNSIGNED        reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF_NAME    reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    CONST           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    VOLATILE        reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    ENUM            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    STRUCT          reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    UNION           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    COLON           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    OPENPAREN       reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    ASTERISK        reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    IDENTIFIER      reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    OPENBRACKET     reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    CLOSEPAREN      reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    AUTO            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    REGISTER        reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    STATIC          reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    EXTERN          reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    TYPEDEF         reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    SEMI            reduce using rule 33 (type_specifier -> struct_or_union_specifier .)
    COMMA           reduce using rule 33 (type_specifier -> struct_or_union_specifier .)


state 5

    (24) type_specifier -> VOID .

    VOID            reduce using rule 24 (type_specifier -> VOID .)
    CHAR            reduce using rule 24 (type_specifier -> VOID .)
    SHORT           reduce using rule 24 (type_specifier -> VOID .)
    INT             reduce using rule 24 (type_specifier -> VOID .)
    LONG            reduce using rule 24 (type_specifier -> VOID .)
    FLOAT           reduce using rule 24 (type_specifier -> VOID .)
    DOUBLE          reduce using rule 24 (type_specifier -> VOID .)
    SIGNED          reduce using rule 24 (type_specifier -> VOID .)
    UNSIGNED        reduce using rule 24 (type_specifier -> VOID .)
    TYPEDEF_NAME    reduce using rule 24 (type_specifier -> VOID .)
    CONST           reduce using rule 24 (type_specifier -> VOID .)
    VOLATILE        reduce using rule 24 (type_specifier -> VOID .)
    ENUM            reduce using rule 24 (type_specifier -> VOID .)
    STRUCT          reduce using rule 24 (type_specifier -> VOID .)
    UNION           reduce using rule 24 (type_specifier -> VOID .)
    COLON           reduce using rule 24 (type_specifier -> VOID .)
    OPENPAREN       reduce using rule 24 (type_specifier -> VOID .)
    ASTERISK        reduce using rule 24 (type_specifier -> VOID .)
    IDENTIFIER      reduce using rule 24 (type_specifier -> VOID .)
    OPENBRACKET     reduce using rule 24 (type_specifier -> VOID .)
    CLOSEPAREN      reduce using rule 24 (type_specifier -> VOID .)
    AUTO            reduce using rule 24 (type_specifier -> VOID .)
    REGISTER        reduce using rule 24 (type_specifier -> VOID .)
    STATIC          reduce using rule 24 (type_specifier -> VOID .)
    EXTERN          reduce using rule 24 (type_specifier -> VOID .)
    TYPEDEF         reduce using rule 24 (type_specifier -> VOID .)
    SEMI            reduce using rule 24 (type_specifier -> VOID .)
    COMMA           reduce using rule 24 (type_specifier -> VOID .)


state 6

    (38) struct_or_union_specifier -> struct_or_union . identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> struct_or_union . OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> struct_or_union . identifier
    (223) identifier -> . IDENTIFIER

    OPENBRACE       shift and go to state 41
    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 40

state 7

    (25) type_specifier -> CHAR .

    VOID            reduce using rule 25 (type_specifier -> CHAR .)
    CHAR            reduce using rule 25 (type_specifier -> CHAR .)
    SHORT           reduce using rule 25 (type_specifier -> CHAR .)
    INT             reduce using rule 25 (type_specifier -> CHAR .)
    LONG            reduce using rule 25 (type_specifier -> CHAR .)
    FLOAT           reduce using rule 25 (type_specifier -> CHAR .)
    DOUBLE          reduce using rule 25 (type_specifier -> CHAR .)
    SIGNED          reduce using rule 25 (type_specifier -> CHAR .)
    UNSIGNED        reduce using rule 25 (type_specifier -> CHAR .)
    TYPEDEF_NAME    reduce using rule 25 (type_specifier -> CHAR .)
    CONST           reduce using rule 25 (type_specifier -> CHAR .)
    VOLATILE        reduce using rule 25 (type_specifier -> CHAR .)
    ENUM            reduce using rule 25 (type_specifier -> CHAR .)
    STRUCT          reduce using rule 25 (type_specifier -> CHAR .)
    UNION           reduce using rule 25 (type_specifier -> CHAR .)
    COLON           reduce using rule 25 (type_specifier -> CHAR .)
    OPENPAREN       reduce using rule 25 (type_specifier -> CHAR .)
    ASTERISK        reduce using rule 25 (type_specifier -> CHAR .)
    IDENTIFIER      reduce using rule 25 (type_specifier -> CHAR .)
    OPENBRACKET     reduce using rule 25 (type_specifier -> CHAR .)
    CLOSEPAREN      reduce using rule 25 (type_specifier -> CHAR .)
    AUTO            reduce using rule 25 (type_specifier -> CHAR .)
    REGISTER        reduce using rule 25 (type_specifier -> CHAR .)
    STATIC          reduce using rule 25 (type_specifier -> CHAR .)
    EXTERN          reduce using rule 25 (type_specifier -> CHAR .)
    TYPEDEF         reduce using rule 25 (type_specifier -> CHAR .)
    SEMI            reduce using rule 25 (type_specifier -> CHAR .)
    COMMA           reduce using rule 25 (type_specifier -> CHAR .)


state 8

    (21) storage_class_specifier -> STATIC .

    AUTO            reduce using rule 21 (storage_class_specifier -> STATIC .)
    REGISTER        reduce using rule 21 (storage_class_specifier -> STATIC .)
    STATIC          reduce using rule 21 (storage_class_specifier -> STATIC .)
    EXTERN          reduce using rule 21 (storage_class_specifier -> STATIC .)
    TYPEDEF         reduce using rule 21 (storage_class_specifier -> STATIC .)
    VOID            reduce using rule 21 (storage_class_specifier -> STATIC .)
    CHAR            reduce using rule 21 (storage_class_specifier -> STATIC .)
    SHORT           reduce using rule 21 (storage_class_specifier -> STATIC .)
    INT             reduce using rule 21 (storage_class_specifier -> STATIC .)
    LONG            reduce using rule 21 (storage_class_specifier -> STATIC .)
    FLOAT           reduce using rule 21 (storage_class_specifier -> STATIC .)
    DOUBLE          reduce using rule 21 (storage_class_specifier -> STATIC .)
    SIGNED          reduce using rule 21 (storage_class_specifier -> STATIC .)
    UNSIGNED        reduce using rule 21 (storage_class_specifier -> STATIC .)
    TYPEDEF_NAME    reduce using rule 21 (storage_class_specifier -> STATIC .)
    CONST           reduce using rule 21 (storage_class_specifier -> STATIC .)
    VOLATILE        reduce using rule 21 (storage_class_specifier -> STATIC .)
    ENUM            reduce using rule 21 (storage_class_specifier -> STATIC .)
    STRUCT          reduce using rule 21 (storage_class_specifier -> STATIC .)
    UNION           reduce using rule 21 (storage_class_specifier -> STATIC .)
    SEMI            reduce using rule 21 (storage_class_specifier -> STATIC .)
    OPENPAREN       reduce using rule 21 (storage_class_specifier -> STATIC .)
    ASTERISK        reduce using rule 21 (storage_class_specifier -> STATIC .)
    IDENTIFIER      reduce using rule 21 (storage_class_specifier -> STATIC .)
    OPENBRACKET     reduce using rule 21 (storage_class_specifier -> STATIC .)
    COMMA           reduce using rule 21 (storage_class_specifier -> STATIC .)
    CLOSEPAREN      reduce using rule 21 (storage_class_specifier -> STATIC .)


state 9

    (22) storage_class_specifier -> EXTERN .

    AUTO            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    REGISTER        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    STATIC          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    EXTERN          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    TYPEDEF         reduce using rule 22 (storage_class_specifier -> EXTERN .)
    VOID            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    CHAR            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SHORT           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    INT             reduce using rule 22 (storage_class_specifier -> EXTERN .)
    LONG            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    FLOAT           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    DOUBLE          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SIGNED          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    UNSIGNED        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    TYPEDEF_NAME    reduce using rule 22 (storage_class_specifier -> EXTERN .)
    CONST           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    VOLATILE        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    ENUM            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    STRUCT          reduce using rule 22 (storage_class_specifier -> EXTERN .)
    UNION           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    SEMI            reduce using rule 22 (storage_class_specifier -> EXTERN .)
    OPENPAREN       reduce using rule 22 (storage_class_specifier -> EXTERN .)
    ASTERISK        reduce using rule 22 (storage_class_specifier -> EXTERN .)
    IDENTIFIER      reduce using rule 22 (storage_class_specifier -> EXTERN .)
    OPENBRACKET     reduce using rule 22 (storage_class_specifier -> EXTERN .)
    COMMA           reduce using rule 22 (storage_class_specifier -> EXTERN .)
    CLOSEPAREN      reduce using rule 22 (storage_class_specifier -> EXTERN .)


state 10

    (67) declarator -> pointer . direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (223) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 11
    IDENTIFIER      shift and go to state 17

    direct_declarator              shift and go to state 42
    identifier                     shift and go to state 38

state 11

    (69) direct_declarator -> OPENPAREN . declarator CLOSEPAREN
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (223) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    direct_declarator              shift and go to state 23
    declarator                     shift and go to state 43
    identifier                     shift and go to state 38
    pointer                        shift and go to state 10

state 12

    (1) translation_unit -> external_declaration .

    OPENPAREN       reduce using rule 1 (translation_unit -> external_declaration .)
    ASTERISK        reduce using rule 1 (translation_unit -> external_declaration .)
    AUTO            reduce using rule 1 (translation_unit -> external_declaration .)
    REGISTER        reduce using rule 1 (translation_unit -> external_declaration .)
    STATIC          reduce using rule 1 (translation_unit -> external_declaration .)
    EXTERN          reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEDEF         reduce using rule 1 (translation_unit -> external_declaration .)
    VOID            reduce using rule 1 (translation_unit -> external_declaration .)
    CHAR            reduce using rule 1 (translation_unit -> external_declaration .)
    SHORT           reduce using rule 1 (translation_unit -> external_declaration .)
    INT             reduce using rule 1 (translation_unit -> external_declaration .)
    LONG            reduce using rule 1 (translation_unit -> external_declaration .)
    FLOAT           reduce using rule 1 (translation_unit -> external_declaration .)
    DOUBLE          reduce using rule 1 (translation_unit -> external_declaration .)
    SIGNED          reduce using rule 1 (translation_unit -> external_declaration .)
    UNSIGNED        reduce using rule 1 (translation_unit -> external_declaration .)
    TYPEDEF_NAME    reduce using rule 1 (translation_unit -> external_declaration .)
    CONST           reduce using rule 1 (translation_unit -> external_declaration .)
    VOLATILE        reduce using rule 1 (translation_unit -> external_declaration .)
    IDENTIFIER      reduce using rule 1 (translation_unit -> external_declaration .)
    ENUM            reduce using rule 1 (translation_unit -> external_declaration .)
    STRUCT          reduce using rule 1 (translation_unit -> external_declaration .)
    UNION           reduce using rule 1 (translation_unit -> external_declaration .)
    $end            reduce using rule 1 (translation_unit -> external_declaration .)


state 13

    (15) declaration_specifiers -> type_specifier .
    (16) declaration_specifiers -> type_specifier . declaration_specifiers
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    SEMI            reduce using rule 15 (declaration_specifiers -> type_specifier .)
    OPENPAREN       reduce using rule 15 (declaration_specifiers -> type_specifier .)
    ASTERISK        reduce using rule 15 (declaration_specifiers -> type_specifier .)
    IDENTIFIER      reduce using rule 15 (declaration_specifiers -> type_specifier .)
    OPENBRACKET     reduce using rule 15 (declaration_specifiers -> type_specifier .)
    COMMA           reduce using rule 15 (declaration_specifiers -> type_specifier .)
    CLOSEPAREN      reduce using rule 15 (declaration_specifiers -> type_specifier .)
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 32
    declaration_specifiers         shift and go to state 44

state 14

    (20) storage_class_specifier -> REGISTER .

    AUTO            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    REGISTER        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    STATIC          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    EXTERN          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    TYPEDEF         reduce using rule 20 (storage_class_specifier -> REGISTER .)
    VOID            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    CHAR            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SHORT           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    INT             reduce using rule 20 (storage_class_specifier -> REGISTER .)
    LONG            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    FLOAT           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    DOUBLE          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SIGNED          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    UNSIGNED        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    TYPEDEF_NAME    reduce using rule 20 (storage_class_specifier -> REGISTER .)
    CONST           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    VOLATILE        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    ENUM            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    STRUCT          reduce using rule 20 (storage_class_specifier -> REGISTER .)
    UNION           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    SEMI            reduce using rule 20 (storage_class_specifier -> REGISTER .)
    OPENPAREN       reduce using rule 20 (storage_class_specifier -> REGISTER .)
    ASTERISK        reduce using rule 20 (storage_class_specifier -> REGISTER .)
    IDENTIFIER      reduce using rule 20 (storage_class_specifier -> REGISTER .)
    OPENBRACKET     reduce using rule 20 (storage_class_specifier -> REGISTER .)
    COMMA           reduce using rule 20 (storage_class_specifier -> REGISTER .)
    CLOSEPAREN      reduce using rule 20 (storage_class_specifier -> REGISTER .)


state 15

    (32) type_specifier -> UNSIGNED .

    VOID            reduce using rule 32 (type_specifier -> UNSIGNED .)
    CHAR            reduce using rule 32 (type_specifier -> UNSIGNED .)
    SHORT           reduce using rule 32 (type_specifier -> UNSIGNED .)
    INT             reduce using rule 32 (type_specifier -> UNSIGNED .)
    LONG            reduce using rule 32 (type_specifier -> UNSIGNED .)
    FLOAT           reduce using rule 32 (type_specifier -> UNSIGNED .)
    DOUBLE          reduce using rule 32 (type_specifier -> UNSIGNED .)
    SIGNED          reduce using rule 32 (type_specifier -> UNSIGNED .)
    UNSIGNED        reduce using rule 32 (type_specifier -> UNSIGNED .)
    TYPEDEF_NAME    reduce using rule 32 (type_specifier -> UNSIGNED .)
    CONST           reduce using rule 32 (type_specifier -> UNSIGNED .)
    VOLATILE        reduce using rule 32 (type_specifier -> UNSIGNED .)
    ENUM            reduce using rule 32 (type_specifier -> UNSIGNED .)
    STRUCT          reduce using rule 32 (type_specifier -> UNSIGNED .)
    UNION           reduce using rule 32 (type_specifier -> UNSIGNED .)
    COLON           reduce using rule 32 (type_specifier -> UNSIGNED .)
    OPENPAREN       reduce using rule 32 (type_specifier -> UNSIGNED .)
    ASTERISK        reduce using rule 32 (type_specifier -> UNSIGNED .)
    IDENTIFIER      reduce using rule 32 (type_specifier -> UNSIGNED .)
    OPENBRACKET     reduce using rule 32 (type_specifier -> UNSIGNED .)
    CLOSEPAREN      reduce using rule 32 (type_specifier -> UNSIGNED .)
    AUTO            reduce using rule 32 (type_specifier -> UNSIGNED .)
    REGISTER        reduce using rule 32 (type_specifier -> UNSIGNED .)
    STATIC          reduce using rule 32 (type_specifier -> UNSIGNED .)
    EXTERN          reduce using rule 32 (type_specifier -> UNSIGNED .)
    TYPEDEF         reduce using rule 32 (type_specifier -> UNSIGNED .)
    SEMI            reduce using rule 32 (type_specifier -> UNSIGNED .)
    COMMA           reduce using rule 32 (type_specifier -> UNSIGNED .)


state 16

    (28) type_specifier -> LONG .

    VOID            reduce using rule 28 (type_specifier -> LONG .)
    CHAR            reduce using rule 28 (type_specifier -> LONG .)
    SHORT           reduce using rule 28 (type_specifier -> LONG .)
    INT             reduce using rule 28 (type_specifier -> LONG .)
    LONG            reduce using rule 28 (type_specifier -> LONG .)
    FLOAT           reduce using rule 28 (type_specifier -> LONG .)
    DOUBLE          reduce using rule 28 (type_specifier -> LONG .)
    SIGNED          reduce using rule 28 (type_specifier -> LONG .)
    UNSIGNED        reduce using rule 28 (type_specifier -> LONG .)
    TYPEDEF_NAME    reduce using rule 28 (type_specifier -> LONG .)
    CONST           reduce using rule 28 (type_specifier -> LONG .)
    VOLATILE        reduce using rule 28 (type_specifier -> LONG .)
    ENUM            reduce using rule 28 (type_specifier -> LONG .)
    STRUCT          reduce using rule 28 (type_specifier -> LONG .)
    UNION           reduce using rule 28 (type_specifier -> LONG .)
    COLON           reduce using rule 28 (type_specifier -> LONG .)
    OPENPAREN       reduce using rule 28 (type_specifier -> LONG .)
    ASTERISK        reduce using rule 28 (type_specifier -> LONG .)
    IDENTIFIER      reduce using rule 28 (type_specifier -> LONG .)
    OPENBRACKET     reduce using rule 28 (type_specifier -> LONG .)
    CLOSEPAREN      reduce using rule 28 (type_specifier -> LONG .)
    AUTO            reduce using rule 28 (type_specifier -> LONG .)
    REGISTER        reduce using rule 28 (type_specifier -> LONG .)
    STATIC          reduce using rule 28 (type_specifier -> LONG .)
    EXTERN          reduce using rule 28 (type_specifier -> LONG .)
    TYPEDEF         reduce using rule 28 (type_specifier -> LONG .)
    SEMI            reduce using rule 28 (type_specifier -> LONG .)
    COMMA           reduce using rule 28 (type_specifier -> LONG .)


state 17

    (223) identifier -> IDENTIFIER .

    OPENBRACKET     reduce using rule 223 (identifier -> IDENTIFIER .)
    OPENPAREN       reduce using rule 223 (identifier -> IDENTIFIER .)
    PERIOD          reduce using rule 223 (identifier -> IDENTIFIER .)
    PTR_OP          reduce using rule 223 (identifier -> IDENTIFIER .)
    INC_OP          reduce using rule 223 (identifier -> IDENTIFIER .)
    DEC_OP          reduce using rule 223 (identifier -> IDENTIFIER .)
    ASSIGN          reduce using rule 223 (identifier -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    LEFT_ASSIGN     reduce using rule 223 (identifier -> IDENTIFIER .)
    RIGHT_ASSIGN    reduce using rule 223 (identifier -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 223 (identifier -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 223 (identifier -> IDENTIFIER .)
    ASTERISK        reduce using rule 223 (identifier -> IDENTIFIER .)
    DIV             reduce using rule 223 (identifier -> IDENTIFIER .)
    PERCENT         reduce using rule 223 (identifier -> IDENTIFIER .)
    PLUS            reduce using rule 223 (identifier -> IDENTIFIER .)
    MINUS           reduce using rule 223 (identifier -> IDENTIFIER .)
    LEFT_OP         reduce using rule 223 (identifier -> IDENTIFIER .)
    RIGHT_OP        reduce using rule 223 (identifier -> IDENTIFIER .)
    LE              reduce using rule 223 (identifier -> IDENTIFIER .)
    GT              reduce using rule 223 (identifier -> IDENTIFIER .)
    LE_OP           reduce using rule 223 (identifier -> IDENTIFIER .)
    GE_OP           reduce using rule 223 (identifier -> IDENTIFIER .)
    EQ_OP           reduce using rule 223 (identifier -> IDENTIFIER .)
    NE_OP           reduce using rule 223 (identifier -> IDENTIFIER .)
    AMPERSAND       reduce using rule 223 (identifier -> IDENTIFIER .)
    CARAT           reduce using rule 223 (identifier -> IDENTIFIER .)
    PIPE            reduce using rule 223 (identifier -> IDENTIFIER .)
    AND_OP          reduce using rule 223 (identifier -> IDENTIFIER .)
    QMARK           reduce using rule 223 (identifier -> IDENTIFIER .)
    OR_OP           reduce using rule 223 (identifier -> IDENTIFIER .)
    CLOSEPAREN      reduce using rule 223 (identifier -> IDENTIFIER .)
    COMMA           reduce using rule 223 (identifier -> IDENTIFIER .)
    SEMI            reduce using rule 223 (identifier -> IDENTIFIER .)
    COLON           reduce using rule 223 (identifier -> IDENTIFIER .)
    OPENBRACE       reduce using rule 223 (identifier -> IDENTIFIER .)
    AUTO            reduce using rule 223 (identifier -> IDENTIFIER .)
    REGISTER        reduce using rule 223 (identifier -> IDENTIFIER .)
    STATIC          reduce using rule 223 (identifier -> IDENTIFIER .)
    EXTERN          reduce using rule 223 (identifier -> IDENTIFIER .)
    TYPEDEF         reduce using rule 223 (identifier -> IDENTIFIER .)
    VOID            reduce using rule 223 (identifier -> IDENTIFIER .)
    CHAR            reduce using rule 223 (identifier -> IDENTIFIER .)
    SHORT           reduce using rule 223 (identifier -> IDENTIFIER .)
    INT             reduce using rule 223 (identifier -> IDENTIFIER .)
    LONG            reduce using rule 223 (identifier -> IDENTIFIER .)
    FLOAT           reduce using rule 223 (identifier -> IDENTIFIER .)
    DOUBLE          reduce using rule 223 (identifier -> IDENTIFIER .)
    SIGNED          reduce using rule 223 (identifier -> IDENTIFIER .)
    UNSIGNED        reduce using rule 223 (identifier -> IDENTIFIER .)
    TYPEDEF_NAME    reduce using rule 223 (identifier -> IDENTIFIER .)
    CONST           reduce using rule 223 (identifier -> IDENTIFIER .)
    VOLATILE        reduce using rule 223 (identifier -> IDENTIFIER .)
    ENUM            reduce using rule 223 (identifier -> IDENTIFIER .)
    STRUCT          reduce using rule 223 (identifier -> IDENTIFIER .)
    UNION           reduce using rule 223 (identifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 223 (identifier -> IDENTIFIER .)
    CLOSEBRACKET    reduce using rule 223 (identifier -> IDENTIFIER .)
    CLOSEBRACE      reduce using rule 223 (identifier -> IDENTIFIER .)


state 18

    (42) struct_or_union -> UNION .

    OPENBRACE       reduce using rule 42 (struct_or_union -> UNION .)
    IDENTIFIER      reduce using rule 42 (struct_or_union -> UNION .)


state 19

    (35) type_specifier -> TYPEDEF_NAME .

    VOID            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    CHAR            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    SHORT           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    INT             reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    LONG            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    FLOAT           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    DOUBLE          reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    SIGNED          reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    UNSIGNED        reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    TYPEDEF_NAME    reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    CONST           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    VOLATILE        reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    ENUM            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    STRUCT          reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    UNION           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    COLON           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    OPENPAREN       reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    ASTERISK        reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    IDENTIFIER      reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    OPENBRACKET     reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    CLOSEPAREN      reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    AUTO            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    REGISTER        reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    STATIC          reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    EXTERN          reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    TYPEDEF         reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    SEMI            reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)
    COMMA           reduce using rule 35 (type_specifier -> TYPEDEF_NAME .)


state 20

    (23) storage_class_specifier -> TYPEDEF .

    AUTO            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    REGISTER        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    STATIC          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    EXTERN          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF         reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    VOID            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    CHAR            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SHORT           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    INT             reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    LONG            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    FLOAT           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    DOUBLE          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SIGNED          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    UNSIGNED        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    TYPEDEF_NAME    reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    CONST           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    VOLATILE        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    ENUM            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    STRUCT          reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    UNION           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    SEMI            reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    OPENPAREN       reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    ASTERISK        reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    IDENTIFIER      reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    OPENBRACKET     reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    COMMA           reduce using rule 23 (storage_class_specifier -> TYPEDEF .)
    CLOSEPAREN      reduce using rule 23 (storage_class_specifier -> TYPEDEF .)


state 21

    (59) enum_specifier -> ENUM . OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> ENUM . identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> ENUM . identifier
    (223) identifier -> . IDENTIFIER

    OPENBRACE       shift and go to state 46
    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 45

state 22

    (19) storage_class_specifier -> AUTO .

    AUTO            reduce using rule 19 (storage_class_specifier -> AUTO .)
    REGISTER        reduce using rule 19 (storage_class_specifier -> AUTO .)
    STATIC          reduce using rule 19 (storage_class_specifier -> AUTO .)
    EXTERN          reduce using rule 19 (storage_class_specifier -> AUTO .)
    TYPEDEF         reduce using rule 19 (storage_class_specifier -> AUTO .)
    VOID            reduce using rule 19 (storage_class_specifier -> AUTO .)
    CHAR            reduce using rule 19 (storage_class_specifier -> AUTO .)
    SHORT           reduce using rule 19 (storage_class_specifier -> AUTO .)
    INT             reduce using rule 19 (storage_class_specifier -> AUTO .)
    LONG            reduce using rule 19 (storage_class_specifier -> AUTO .)
    FLOAT           reduce using rule 19 (storage_class_specifier -> AUTO .)
    DOUBLE          reduce using rule 19 (storage_class_specifier -> AUTO .)
    SIGNED          reduce using rule 19 (storage_class_specifier -> AUTO .)
    UNSIGNED        reduce using rule 19 (storage_class_specifier -> AUTO .)
    TYPEDEF_NAME    reduce using rule 19 (storage_class_specifier -> AUTO .)
    CONST           reduce using rule 19 (storage_class_specifier -> AUTO .)
    VOLATILE        reduce using rule 19 (storage_class_specifier -> AUTO .)
    ENUM            reduce using rule 19 (storage_class_specifier -> AUTO .)
    STRUCT          reduce using rule 19 (storage_class_specifier -> AUTO .)
    UNION           reduce using rule 19 (storage_class_specifier -> AUTO .)
    SEMI            reduce using rule 19 (storage_class_specifier -> AUTO .)
    OPENPAREN       reduce using rule 19 (storage_class_specifier -> AUTO .)
    ASTERISK        reduce using rule 19 (storage_class_specifier -> AUTO .)
    IDENTIFIER      reduce using rule 19 (storage_class_specifier -> AUTO .)
    OPENBRACKET     reduce using rule 19 (storage_class_specifier -> AUTO .)
    COMMA           reduce using rule 19 (storage_class_specifier -> AUTO .)
    CLOSEPAREN      reduce using rule 19 (storage_class_specifier -> AUTO .)


state 23

    (66) declarator -> direct_declarator .
    (70) direct_declarator -> direct_declarator . OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> direct_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> direct_declarator . OPENPAREN CLOSEPAREN
    (73) direct_declarator -> direct_declarator . OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> direct_declarator . OPENPAREN identifier_list CLOSEPAREN

    OPENBRACE       reduce using rule 66 (declarator -> direct_declarator .)
    AUTO            reduce using rule 66 (declarator -> direct_declarator .)
    REGISTER        reduce using rule 66 (declarator -> direct_declarator .)
    STATIC          reduce using rule 66 (declarator -> direct_declarator .)
    EXTERN          reduce using rule 66 (declarator -> direct_declarator .)
    TYPEDEF         reduce using rule 66 (declarator -> direct_declarator .)
    VOID            reduce using rule 66 (declarator -> direct_declarator .)
    CHAR            reduce using rule 66 (declarator -> direct_declarator .)
    SHORT           reduce using rule 66 (declarator -> direct_declarator .)
    INT             reduce using rule 66 (declarator -> direct_declarator .)
    LONG            reduce using rule 66 (declarator -> direct_declarator .)
    FLOAT           reduce using rule 66 (declarator -> direct_declarator .)
    DOUBLE          reduce using rule 66 (declarator -> direct_declarator .)
    SIGNED          reduce using rule 66 (declarator -> direct_declarator .)
    UNSIGNED        reduce using rule 66 (declarator -> direct_declarator .)
    TYPEDEF_NAME    reduce using rule 66 (declarator -> direct_declarator .)
    CONST           reduce using rule 66 (declarator -> direct_declarator .)
    VOLATILE        reduce using rule 66 (declarator -> direct_declarator .)
    ENUM            reduce using rule 66 (declarator -> direct_declarator .)
    STRUCT          reduce using rule 66 (declarator -> direct_declarator .)
    UNION           reduce using rule 66 (declarator -> direct_declarator .)
    COLON           reduce using rule 66 (declarator -> direct_declarator .)
    SEMI            reduce using rule 66 (declarator -> direct_declarator .)
    COMMA           reduce using rule 66 (declarator -> direct_declarator .)
    CLOSEPAREN      reduce using rule 66 (declarator -> direct_declarator .)
    ASSIGN          reduce using rule 66 (declarator -> direct_declarator .)
    OPENBRACKET     shift and go to state 47
    OPENPAREN       shift and go to state 48


state 24

    (75) pointer -> ASTERISK .
    (76) pointer -> ASTERISK . type_qualifier_list
    (77) pointer -> ASTERISK . pointer
    (78) pointer -> ASTERISK . type_qualifier_list pointer
    (79) type_qualifier_list -> . type_qualifier
    (80) type_qualifier_list -> . type_qualifier_list type_qualifier
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE

    OPENPAREN       reduce using rule 75 (pointer -> ASTERISK .)
    IDENTIFIER      reduce using rule 75 (pointer -> ASTERISK .)
    OPENBRACKET     reduce using rule 75 (pointer -> ASTERISK .)
    CLOSEPAREN      reduce using rule 75 (pointer -> ASTERISK .)
    COMMA           reduce using rule 75 (pointer -> ASTERISK .)
    ASTERISK        shift and go to state 24
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35

    type_qualifier_list            shift and go to state 50
    pointer                        shift and go to state 51
    type_qualifier                 shift and go to state 49

state 25

    (7) function_definition -> declaration_specifiers . declarator compound_statement
    (8) function_definition -> declaration_specifiers . declarator declaration_list compound_statement
    (9) declaration -> declaration_specifiers . SEMI
    (10) declaration -> declaration_specifiers . init_declarator_list SEMI
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (45) init_declarator_list -> . init_declarator
    (46) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (47) init_declarator -> . declarator
    (48) init_declarator -> . declarator ASSIGN initializer
    (223) identifier -> . IDENTIFIER

    SEMI            shift and go to state 53
    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 38
    direct_declarator              shift and go to state 23
    init_declarator                shift and go to state 55
    init_declarator_list           shift and go to state 52
    declarator                     shift and go to state 54
    pointer                        shift and go to state 10

state 26

    (4) external_declaration -> declaration .

    OPENPAREN       reduce using rule 4 (external_declaration -> declaration .)
    ASTERISK        reduce using rule 4 (external_declaration -> declaration .)
    AUTO            reduce using rule 4 (external_declaration -> declaration .)
    REGISTER        reduce using rule 4 (external_declaration -> declaration .)
    STATIC          reduce using rule 4 (external_declaration -> declaration .)
    EXTERN          reduce using rule 4 (external_declaration -> declaration .)
    TYPEDEF         reduce using rule 4 (external_declaration -> declaration .)
    VOID            reduce using rule 4 (external_declaration -> declaration .)
    CHAR            reduce using rule 4 (external_declaration -> declaration .)
    SHORT           reduce using rule 4 (external_declaration -> declaration .)
    INT             reduce using rule 4 (external_declaration -> declaration .)
    LONG            reduce using rule 4 (external_declaration -> declaration .)
    FLOAT           reduce using rule 4 (external_declaration -> declaration .)
    DOUBLE          reduce using rule 4 (external_declaration -> declaration .)
    SIGNED          reduce using rule 4 (external_declaration -> declaration .)
    UNSIGNED        reduce using rule 4 (external_declaration -> declaration .)
    TYPEDEF_NAME    reduce using rule 4 (external_declaration -> declaration .)
    CONST           reduce using rule 4 (external_declaration -> declaration .)
    VOLATILE        reduce using rule 4 (external_declaration -> declaration .)
    IDENTIFIER      reduce using rule 4 (external_declaration -> declaration .)
    ENUM            reduce using rule 4 (external_declaration -> declaration .)
    STRUCT          reduce using rule 4 (external_declaration -> declaration .)
    UNION           reduce using rule 4 (external_declaration -> declaration .)
    $end            reduce using rule 4 (external_declaration -> declaration .)


state 27

    (29) type_specifier -> FLOAT .

    VOID            reduce using rule 29 (type_specifier -> FLOAT .)
    CHAR            reduce using rule 29 (type_specifier -> FLOAT .)
    SHORT           reduce using rule 29 (type_specifier -> FLOAT .)
    INT             reduce using rule 29 (type_specifier -> FLOAT .)
    LONG            reduce using rule 29 (type_specifier -> FLOAT .)
    FLOAT           reduce using rule 29 (type_specifier -> FLOAT .)
    DOUBLE          reduce using rule 29 (type_specifier -> FLOAT .)
    SIGNED          reduce using rule 29 (type_specifier -> FLOAT .)
    UNSIGNED        reduce using rule 29 (type_specifier -> FLOAT .)
    TYPEDEF_NAME    reduce using rule 29 (type_specifier -> FLOAT .)
    CONST           reduce using rule 29 (type_specifier -> FLOAT .)
    VOLATILE        reduce using rule 29 (type_specifier -> FLOAT .)
    ENUM            reduce using rule 29 (type_specifier -> FLOAT .)
    STRUCT          reduce using rule 29 (type_specifier -> FLOAT .)
    UNION           reduce using rule 29 (type_specifier -> FLOAT .)
    COLON           reduce using rule 29 (type_specifier -> FLOAT .)
    OPENPAREN       reduce using rule 29 (type_specifier -> FLOAT .)
    ASTERISK        reduce using rule 29 (type_specifier -> FLOAT .)
    IDENTIFIER      reduce using rule 29 (type_specifier -> FLOAT .)
    OPENBRACKET     reduce using rule 29 (type_specifier -> FLOAT .)
    CLOSEPAREN      reduce using rule 29 (type_specifier -> FLOAT .)
    AUTO            reduce using rule 29 (type_specifier -> FLOAT .)
    REGISTER        reduce using rule 29 (type_specifier -> FLOAT .)
    STATIC          reduce using rule 29 (type_specifier -> FLOAT .)
    EXTERN          reduce using rule 29 (type_specifier -> FLOAT .)
    TYPEDEF         reduce using rule 29 (type_specifier -> FLOAT .)
    SEMI            reduce using rule 29 (type_specifier -> FLOAT .)
    COMMA           reduce using rule 29 (type_specifier -> FLOAT .)


state 28

    (3) external_declaration -> function_definition .

    OPENPAREN       reduce using rule 3 (external_declaration -> function_definition .)
    ASTERISK        reduce using rule 3 (external_declaration -> function_definition .)
    AUTO            reduce using rule 3 (external_declaration -> function_definition .)
    REGISTER        reduce using rule 3 (external_declaration -> function_definition .)
    STATIC          reduce using rule 3 (external_declaration -> function_definition .)
    EXTERN          reduce using rule 3 (external_declaration -> function_definition .)
    TYPEDEF         reduce using rule 3 (external_declaration -> function_definition .)
    VOID            reduce using rule 3 (external_declaration -> function_definition .)
    CHAR            reduce using rule 3 (external_declaration -> function_definition .)
    SHORT           reduce using rule 3 (external_declaration -> function_definition .)
    INT             reduce using rule 3 (external_declaration -> function_definition .)
    LONG            reduce using rule 3 (external_declaration -> function_definition .)
    FLOAT           reduce using rule 3 (external_declaration -> function_definition .)
    DOUBLE          reduce using rule 3 (external_declaration -> function_definition .)
    SIGNED          reduce using rule 3 (external_declaration -> function_definition .)
    UNSIGNED        reduce using rule 3 (external_declaration -> function_definition .)
    TYPEDEF_NAME    reduce using rule 3 (external_declaration -> function_definition .)
    CONST           reduce using rule 3 (external_declaration -> function_definition .)
    VOLATILE        reduce using rule 3 (external_declaration -> function_definition .)
    IDENTIFIER      reduce using rule 3 (external_declaration -> function_definition .)
    ENUM            reduce using rule 3 (external_declaration -> function_definition .)
    STRUCT          reduce using rule 3 (external_declaration -> function_definition .)
    UNION           reduce using rule 3 (external_declaration -> function_definition .)
    $end            reduce using rule 3 (external_declaration -> function_definition .)


state 29

    (41) struct_or_union -> STRUCT .

    OPENBRACE       reduce using rule 41 (struct_or_union -> STRUCT .)
    IDENTIFIER      reduce using rule 41 (struct_or_union -> STRUCT .)


state 30

    (27) type_specifier -> INT .

    VOID            reduce using rule 27 (type_specifier -> INT .)
    CHAR            reduce using rule 27 (type_specifier -> INT .)
    SHORT           reduce using rule 27 (type_specifier -> INT .)
    INT             reduce using rule 27 (type_specifier -> INT .)
    LONG            reduce using rule 27 (type_specifier -> INT .)
    FLOAT           reduce using rule 27 (type_specifier -> INT .)
    DOUBLE          reduce using rule 27 (type_specifier -> INT .)
    SIGNED          reduce using rule 27 (type_specifier -> INT .)
    UNSIGNED        reduce using rule 27 (type_specifier -> INT .)
    TYPEDEF_NAME    reduce using rule 27 (type_specifier -> INT .)
    CONST           reduce using rule 27 (type_specifier -> INT .)
    VOLATILE        reduce using rule 27 (type_specifier -> INT .)
    ENUM            reduce using rule 27 (type_specifier -> INT .)
    STRUCT          reduce using rule 27 (type_specifier -> INT .)
    UNION           reduce using rule 27 (type_specifier -> INT .)
    COLON           reduce using rule 27 (type_specifier -> INT .)
    OPENPAREN       reduce using rule 27 (type_specifier -> INT .)
    ASTERISK        reduce using rule 27 (type_specifier -> INT .)
    IDENTIFIER      reduce using rule 27 (type_specifier -> INT .)
    OPENBRACKET     reduce using rule 27 (type_specifier -> INT .)
    CLOSEPAREN      reduce using rule 27 (type_specifier -> INT .)
    AUTO            reduce using rule 27 (type_specifier -> INT .)
    REGISTER        reduce using rule 27 (type_specifier -> INT .)
    STATIC          reduce using rule 27 (type_specifier -> INT .)
    EXTERN          reduce using rule 27 (type_specifier -> INT .)
    TYPEDEF         reduce using rule 27 (type_specifier -> INT .)
    SEMI            reduce using rule 27 (type_specifier -> INT .)
    COMMA           reduce using rule 27 (type_specifier -> INT .)


state 31

    (30) type_specifier -> DOUBLE .

    VOID            reduce using rule 30 (type_specifier -> DOUBLE .)
    CHAR            reduce using rule 30 (type_specifier -> DOUBLE .)
    SHORT           reduce using rule 30 (type_specifier -> DOUBLE .)
    INT             reduce using rule 30 (type_specifier -> DOUBLE .)
    LONG            reduce using rule 30 (type_specifier -> DOUBLE .)
    FLOAT           reduce using rule 30 (type_specifier -> DOUBLE .)
    DOUBLE          reduce using rule 30 (type_specifier -> DOUBLE .)
    SIGNED          reduce using rule 30 (type_specifier -> DOUBLE .)
    UNSIGNED        reduce using rule 30 (type_specifier -> DOUBLE .)
    TYPEDEF_NAME    reduce using rule 30 (type_specifier -> DOUBLE .)
    CONST           reduce using rule 30 (type_specifier -> DOUBLE .)
    VOLATILE        reduce using rule 30 (type_specifier -> DOUBLE .)
    ENUM            reduce using rule 30 (type_specifier -> DOUBLE .)
    STRUCT          reduce using rule 30 (type_specifier -> DOUBLE .)
    UNION           reduce using rule 30 (type_specifier -> DOUBLE .)
    COLON           reduce using rule 30 (type_specifier -> DOUBLE .)
    OPENPAREN       reduce using rule 30 (type_specifier -> DOUBLE .)
    ASTERISK        reduce using rule 30 (type_specifier -> DOUBLE .)
    IDENTIFIER      reduce using rule 30 (type_specifier -> DOUBLE .)
    OPENBRACKET     reduce using rule 30 (type_specifier -> DOUBLE .)
    CLOSEPAREN      reduce using rule 30 (type_specifier -> DOUBLE .)
    AUTO            reduce using rule 30 (type_specifier -> DOUBLE .)
    REGISTER        reduce using rule 30 (type_specifier -> DOUBLE .)
    STATIC          reduce using rule 30 (type_specifier -> DOUBLE .)
    EXTERN          reduce using rule 30 (type_specifier -> DOUBLE .)
    TYPEDEF         reduce using rule 30 (type_specifier -> DOUBLE .)
    SEMI            reduce using rule 30 (type_specifier -> DOUBLE .)
    COMMA           reduce using rule 30 (type_specifier -> DOUBLE .)


state 32

    (17) declaration_specifiers -> type_qualifier .
    (18) declaration_specifiers -> type_qualifier . declaration_specifiers
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    SEMI            reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    OPENPAREN       reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    ASTERISK        reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    IDENTIFIER      reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    OPENBRACKET     reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    COMMA           reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    CLOSEPAREN      reduce using rule 17 (declaration_specifiers -> type_qualifier .)
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 32
    declaration_specifiers         shift and go to state 56

state 33

    (31) type_specifier -> SIGNED .

    VOID            reduce using rule 31 (type_specifier -> SIGNED .)
    CHAR            reduce using rule 31 (type_specifier -> SIGNED .)
    SHORT           reduce using rule 31 (type_specifier -> SIGNED .)
    INT             reduce using rule 31 (type_specifier -> SIGNED .)
    LONG            reduce using rule 31 (type_specifier -> SIGNED .)
    FLOAT           reduce using rule 31 (type_specifier -> SIGNED .)
    DOUBLE          reduce using rule 31 (type_specifier -> SIGNED .)
    SIGNED          reduce using rule 31 (type_specifier -> SIGNED .)
    UNSIGNED        reduce using rule 31 (type_specifier -> SIGNED .)
    TYPEDEF_NAME    reduce using rule 31 (type_specifier -> SIGNED .)
    CONST           reduce using rule 31 (type_specifier -> SIGNED .)
    VOLATILE        reduce using rule 31 (type_specifier -> SIGNED .)
    ENUM            reduce using rule 31 (type_specifier -> SIGNED .)
    STRUCT          reduce using rule 31 (type_specifier -> SIGNED .)
    UNION           reduce using rule 31 (type_specifier -> SIGNED .)
    COLON           reduce using rule 31 (type_specifier -> SIGNED .)
    OPENPAREN       reduce using rule 31 (type_specifier -> SIGNED .)
    ASTERISK        reduce using rule 31 (type_specifier -> SIGNED .)
    IDENTIFIER      reduce using rule 31 (type_specifier -> SIGNED .)
    OPENBRACKET     reduce using rule 31 (type_specifier -> SIGNED .)
    CLOSEPAREN      reduce using rule 31 (type_specifier -> SIGNED .)
    AUTO            reduce using rule 31 (type_specifier -> SIGNED .)
    REGISTER        reduce using rule 31 (type_specifier -> SIGNED .)
    STATIC          reduce using rule 31 (type_specifier -> SIGNED .)
    EXTERN          reduce using rule 31 (type_specifier -> SIGNED .)
    TYPEDEF         reduce using rule 31 (type_specifier -> SIGNED .)
    SEMI            reduce using rule 31 (type_specifier -> SIGNED .)
    COMMA           reduce using rule 31 (type_specifier -> SIGNED .)


state 34

    (34) type_specifier -> enum_specifier .

    VOID            reduce using rule 34 (type_specifier -> enum_specifier .)
    CHAR            reduce using rule 34 (type_specifier -> enum_specifier .)
    SHORT           reduce using rule 34 (type_specifier -> enum_specifier .)
    INT             reduce using rule 34 (type_specifier -> enum_specifier .)
    LONG            reduce using rule 34 (type_specifier -> enum_specifier .)
    FLOAT           reduce using rule 34 (type_specifier -> enum_specifier .)
    DOUBLE          reduce using rule 34 (type_specifier -> enum_specifier .)
    SIGNED          reduce using rule 34 (type_specifier -> enum_specifier .)
    UNSIGNED        reduce using rule 34 (type_specifier -> enum_specifier .)
    TYPEDEF_NAME    reduce using rule 34 (type_specifier -> enum_specifier .)
    CONST           reduce using rule 34 (type_specifier -> enum_specifier .)
    VOLATILE        reduce using rule 34 (type_specifier -> enum_specifier .)
    ENUM            reduce using rule 34 (type_specifier -> enum_specifier .)
    STRUCT          reduce using rule 34 (type_specifier -> enum_specifier .)
    UNION           reduce using rule 34 (type_specifier -> enum_specifier .)
    COLON           reduce using rule 34 (type_specifier -> enum_specifier .)
    OPENPAREN       reduce using rule 34 (type_specifier -> enum_specifier .)
    ASTERISK        reduce using rule 34 (type_specifier -> enum_specifier .)
    IDENTIFIER      reduce using rule 34 (type_specifier -> enum_specifier .)
    OPENBRACKET     reduce using rule 34 (type_specifier -> enum_specifier .)
    CLOSEPAREN      reduce using rule 34 (type_specifier -> enum_specifier .)
    AUTO            reduce using rule 34 (type_specifier -> enum_specifier .)
    REGISTER        reduce using rule 34 (type_specifier -> enum_specifier .)
    STATIC          reduce using rule 34 (type_specifier -> enum_specifier .)
    EXTERN          reduce using rule 34 (type_specifier -> enum_specifier .)
    TYPEDEF         reduce using rule 34 (type_specifier -> enum_specifier .)
    SEMI            reduce using rule 34 (type_specifier -> enum_specifier .)
    COMMA           reduce using rule 34 (type_specifier -> enum_specifier .)


state 35

    (37) type_qualifier -> VOLATILE .

    AUTO            reduce using rule 37 (type_qualifier -> VOLATILE .)
    REGISTER        reduce using rule 37 (type_qualifier -> VOLATILE .)
    STATIC          reduce using rule 37 (type_qualifier -> VOLATILE .)
    EXTERN          reduce using rule 37 (type_qualifier -> VOLATILE .)
    TYPEDEF         reduce using rule 37 (type_qualifier -> VOLATILE .)
    VOID            reduce using rule 37 (type_qualifier -> VOLATILE .)
    CHAR            reduce using rule 37 (type_qualifier -> VOLATILE .)
    SHORT           reduce using rule 37 (type_qualifier -> VOLATILE .)
    INT             reduce using rule 37 (type_qualifier -> VOLATILE .)
    LONG            reduce using rule 37 (type_qualifier -> VOLATILE .)
    FLOAT           reduce using rule 37 (type_qualifier -> VOLATILE .)
    DOUBLE          reduce using rule 37 (type_qualifier -> VOLATILE .)
    SIGNED          reduce using rule 37 (type_qualifier -> VOLATILE .)
    UNSIGNED        reduce using rule 37 (type_qualifier -> VOLATILE .)
    TYPEDEF_NAME    reduce using rule 37 (type_qualifier -> VOLATILE .)
    CONST           reduce using rule 37 (type_qualifier -> VOLATILE .)
    VOLATILE        reduce using rule 37 (type_qualifier -> VOLATILE .)
    ENUM            reduce using rule 37 (type_qualifier -> VOLATILE .)
    STRUCT          reduce using rule 37 (type_qualifier -> VOLATILE .)
    UNION           reduce using rule 37 (type_qualifier -> VOLATILE .)
    SEMI            reduce using rule 37 (type_qualifier -> VOLATILE .)
    OPENPAREN       reduce using rule 37 (type_qualifier -> VOLATILE .)
    ASTERISK        reduce using rule 37 (type_qualifier -> VOLATILE .)
    IDENTIFIER      reduce using rule 37 (type_qualifier -> VOLATILE .)
    OPENBRACKET     reduce using rule 37 (type_qualifier -> VOLATILE .)
    COMMA           reduce using rule 37 (type_qualifier -> VOLATILE .)
    CLOSEPAREN      reduce using rule 37 (type_qualifier -> VOLATILE .)
    COLON           reduce using rule 37 (type_qualifier -> VOLATILE .)


state 36

    (0) S' -> translation_unit .
    (2) translation_unit -> translation_unit . external_declaration
    (3) external_declaration -> . function_definition
    (4) external_declaration -> . declaration
    (5) function_definition -> . declarator compound_statement
    (6) function_definition -> . declarator declaration_list compound_statement
    (7) function_definition -> . declaration_specifiers declarator compound_statement
    (8) function_definition -> . declaration_specifiers declarator declaration_list compound_statement
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (223) identifier -> . IDENTIFIER
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    IDENTIFIER      shift and go to state 17
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 4
    pointer                        shift and go to state 10
    external_declaration           shift and go to state 57
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 6
    direct_declarator              shift and go to state 23
    declaration_specifiers         shift and go to state 25
    declaration                    shift and go to state 26
    function_definition            shift and go to state 28
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 32
    declarator                     shift and go to state 37
    identifier                     shift and go to state 38

state 37

    (5) function_definition -> declarator . compound_statement
    (6) function_definition -> declarator . declaration_list compound_statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (11) declaration_list -> . insert_mode_e declaration
    (12) declaration_list -> . declaration_list insert_mode_e declaration
    (224) insert_mode_e -> .

    OPENBRACE       shift and go to state 60
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)

    insert_mode_e                  shift and go to state 58
    compound_statement             shift and go to state 59
    declaration_list               shift and go to state 61

state 38

    (68) direct_declarator -> identifier .

    OPENBRACKET     reduce using rule 68 (direct_declarator -> identifier .)
    OPENPAREN       reduce using rule 68 (direct_declarator -> identifier .)
    COLON           reduce using rule 68 (direct_declarator -> identifier .)
    SEMI            reduce using rule 68 (direct_declarator -> identifier .)
    COMMA           reduce using rule 68 (direct_declarator -> identifier .)
    OPENBRACE       reduce using rule 68 (direct_declarator -> identifier .)
    AUTO            reduce using rule 68 (direct_declarator -> identifier .)
    REGISTER        reduce using rule 68 (direct_declarator -> identifier .)
    STATIC          reduce using rule 68 (direct_declarator -> identifier .)
    EXTERN          reduce using rule 68 (direct_declarator -> identifier .)
    TYPEDEF         reduce using rule 68 (direct_declarator -> identifier .)
    VOID            reduce using rule 68 (direct_declarator -> identifier .)
    CHAR            reduce using rule 68 (direct_declarator -> identifier .)
    SHORT           reduce using rule 68 (direct_declarator -> identifier .)
    INT             reduce using rule 68 (direct_declarator -> identifier .)
    LONG            reduce using rule 68 (direct_declarator -> identifier .)
    FLOAT           reduce using rule 68 (direct_declarator -> identifier .)
    DOUBLE          reduce using rule 68 (direct_declarator -> identifier .)
    SIGNED          reduce using rule 68 (direct_declarator -> identifier .)
    UNSIGNED        reduce using rule 68 (direct_declarator -> identifier .)
    TYPEDEF_NAME    reduce using rule 68 (direct_declarator -> identifier .)
    CONST           reduce using rule 68 (direct_declarator -> identifier .)
    VOLATILE        reduce using rule 68 (direct_declarator -> identifier .)
    ENUM            reduce using rule 68 (direct_declarator -> identifier .)
    STRUCT          reduce using rule 68 (direct_declarator -> identifier .)
    UNION           reduce using rule 68 (direct_declarator -> identifier .)
    ASSIGN          reduce using rule 68 (direct_declarator -> identifier .)
    CLOSEPAREN      reduce using rule 68 (direct_declarator -> identifier .)


state 39

    (14) declaration_specifiers -> storage_class_specifier declaration_specifiers .

    SEMI            reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    OPENPAREN       reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    ASTERISK        reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    COMMA           reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 14 (declaration_specifiers -> storage_class_specifier declaration_specifiers .)


state 40

    (38) struct_or_union_specifier -> struct_or_union identifier . OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> struct_or_union identifier .

    OPENBRACE       shift and go to state 62
    AUTO            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    REGISTER        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    STATIC          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    EXTERN          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    TYPEDEF         reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    VOID            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    CHAR            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    SHORT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    INT             reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    LONG            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    FLOAT           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    DOUBLE          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    SIGNED          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    UNSIGNED        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    TYPEDEF_NAME    reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    CONST           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    VOLATILE        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    ENUM            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    STRUCT          reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    UNION           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    OPENPAREN       reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    ASTERISK        reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    OPENBRACKET     reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    IDENTIFIER      reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    COMMA           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    CLOSEPAREN      reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    SEMI            reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)
    COLON           reduce using rule 40 (struct_or_union_specifier -> struct_or_union identifier .)


state 41

    (39) struct_or_union_specifier -> struct_or_union OPENBRACE . struct_declaration_list CLOSEBRACE
    (43) struct_declaration_list -> . struct_declaration
    (44) struct_declaration_list -> . struct_declaration_list struct_declaration
    (49) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    struct_declaration             shift and go to state 65
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 67
    struct_declaration_list        shift and go to state 63

state 42

    (67) declarator -> pointer direct_declarator .
    (70) direct_declarator -> direct_declarator . OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> direct_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> direct_declarator . OPENPAREN CLOSEPAREN
    (73) direct_declarator -> direct_declarator . OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> direct_declarator . OPENPAREN identifier_list CLOSEPAREN

    OPENBRACE       reduce using rule 67 (declarator -> pointer direct_declarator .)
    AUTO            reduce using rule 67 (declarator -> pointer direct_declarator .)
    REGISTER        reduce using rule 67 (declarator -> pointer direct_declarator .)
    STATIC          reduce using rule 67 (declarator -> pointer direct_declarator .)
    EXTERN          reduce using rule 67 (declarator -> pointer direct_declarator .)
    TYPEDEF         reduce using rule 67 (declarator -> pointer direct_declarator .)
    VOID            reduce using rule 67 (declarator -> pointer direct_declarator .)
    CHAR            reduce using rule 67 (declarator -> pointer direct_declarator .)
    SHORT           reduce using rule 67 (declarator -> pointer direct_declarator .)
    INT             reduce using rule 67 (declarator -> pointer direct_declarator .)
    LONG            reduce using rule 67 (declarator -> pointer direct_declarator .)
    FLOAT           reduce using rule 67 (declarator -> pointer direct_declarator .)
    DOUBLE          reduce using rule 67 (declarator -> pointer direct_declarator .)
    SIGNED          reduce using rule 67 (declarator -> pointer direct_declarator .)
    UNSIGNED        reduce using rule 67 (declarator -> pointer direct_declarator .)
    TYPEDEF_NAME    reduce using rule 67 (declarator -> pointer direct_declarator .)
    CONST           reduce using rule 67 (declarator -> pointer direct_declarator .)
    VOLATILE        reduce using rule 67 (declarator -> pointer direct_declarator .)
    ENUM            reduce using rule 67 (declarator -> pointer direct_declarator .)
    STRUCT          reduce using rule 67 (declarator -> pointer direct_declarator .)
    UNION           reduce using rule 67 (declarator -> pointer direct_declarator .)
    COLON           reduce using rule 67 (declarator -> pointer direct_declarator .)
    SEMI            reduce using rule 67 (declarator -> pointer direct_declarator .)
    COMMA           reduce using rule 67 (declarator -> pointer direct_declarator .)
    CLOSEPAREN      reduce using rule 67 (declarator -> pointer direct_declarator .)
    ASSIGN          reduce using rule 67 (declarator -> pointer direct_declarator .)
    OPENBRACKET     shift and go to state 47
    OPENPAREN       shift and go to state 48


state 43

    (69) direct_declarator -> OPENPAREN declarator . CLOSEPAREN

    CLOSEPAREN      shift and go to state 68


state 44

    (16) declaration_specifiers -> type_specifier declaration_specifiers .

    SEMI            reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    OPENPAREN       reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    ASTERISK        reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    COMMA           reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 16 (declaration_specifiers -> type_specifier declaration_specifiers .)


state 45

    (60) enum_specifier -> ENUM identifier . OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> ENUM identifier .

    OPENBRACE       shift and go to state 69
    AUTO            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    REGISTER        reduce using rule 61 (enum_specifier -> ENUM identifier .)
    STATIC          reduce using rule 61 (enum_specifier -> ENUM identifier .)
    EXTERN          reduce using rule 61 (enum_specifier -> ENUM identifier .)
    TYPEDEF         reduce using rule 61 (enum_specifier -> ENUM identifier .)
    VOID            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    CHAR            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    SHORT           reduce using rule 61 (enum_specifier -> ENUM identifier .)
    INT             reduce using rule 61 (enum_specifier -> ENUM identifier .)
    LONG            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    FLOAT           reduce using rule 61 (enum_specifier -> ENUM identifier .)
    DOUBLE          reduce using rule 61 (enum_specifier -> ENUM identifier .)
    SIGNED          reduce using rule 61 (enum_specifier -> ENUM identifier .)
    UNSIGNED        reduce using rule 61 (enum_specifier -> ENUM identifier .)
    TYPEDEF_NAME    reduce using rule 61 (enum_specifier -> ENUM identifier .)
    CONST           reduce using rule 61 (enum_specifier -> ENUM identifier .)
    VOLATILE        reduce using rule 61 (enum_specifier -> ENUM identifier .)
    ENUM            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    STRUCT          reduce using rule 61 (enum_specifier -> ENUM identifier .)
    UNION           reduce using rule 61 (enum_specifier -> ENUM identifier .)
    SEMI            reduce using rule 61 (enum_specifier -> ENUM identifier .)
    OPENPAREN       reduce using rule 61 (enum_specifier -> ENUM identifier .)
    ASTERISK        reduce using rule 61 (enum_specifier -> ENUM identifier .)
    IDENTIFIER      reduce using rule 61 (enum_specifier -> ENUM identifier .)
    OPENBRACKET     reduce using rule 61 (enum_specifier -> ENUM identifier .)
    COMMA           reduce using rule 61 (enum_specifier -> ENUM identifier .)
    CLOSEPAREN      reduce using rule 61 (enum_specifier -> ENUM identifier .)
    COLON           reduce using rule 61 (enum_specifier -> ENUM identifier .)


state 46

    (59) enum_specifier -> ENUM OPENBRACE . enumerator_list CLOSEBRACE
    (62) enumerator_list -> . enumerator
    (63) enumerator_list -> . enumerator_list COMMA enumerator
    (64) enumerator -> . identifier
    (65) enumerator -> . identifier ASSIGN constant_expression
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    enumerator_list                shift and go to state 71
    identifier                     shift and go to state 72
    enumerator                     shift and go to state 70

state 47

    (70) direct_declarator -> direct_declarator OPENBRACKET . CLOSEBRACKET
    (71) direct_declarator -> direct_declarator OPENBRACKET . constant_expression CLOSEBRACKET
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 81
    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    logical_or_expression          shift and go to state 88
    constant_expression            shift and go to state 89
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 48

    (72) direct_declarator -> direct_declarator OPENPAREN . CLOSEPAREN
    (73) direct_declarator -> direct_declarator OPENPAREN . push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> direct_declarator OPENPAREN . identifier_list CLOSEPAREN
    (226) push_scope_e -> .
    (88) identifier_list -> . identifier
    (89) identifier_list -> . identifier_list COMMA identifier
    (223) identifier -> . IDENTIFIER

    CLOSEPAREN      shift and go to state 110
    AUTO            reduce using rule 226 (push_scope_e -> .)
    REGISTER        reduce using rule 226 (push_scope_e -> .)
    STATIC          reduce using rule 226 (push_scope_e -> .)
    EXTERN          reduce using rule 226 (push_scope_e -> .)
    TYPEDEF         reduce using rule 226 (push_scope_e -> .)
    VOID            reduce using rule 226 (push_scope_e -> .)
    CHAR            reduce using rule 226 (push_scope_e -> .)
    SHORT           reduce using rule 226 (push_scope_e -> .)
    INT             reduce using rule 226 (push_scope_e -> .)
    LONG            reduce using rule 226 (push_scope_e -> .)
    FLOAT           reduce using rule 226 (push_scope_e -> .)
    DOUBLE          reduce using rule 226 (push_scope_e -> .)
    SIGNED          reduce using rule 226 (push_scope_e -> .)
    UNSIGNED        reduce using rule 226 (push_scope_e -> .)
    TYPEDEF_NAME    reduce using rule 226 (push_scope_e -> .)
    CONST           reduce using rule 226 (push_scope_e -> .)
    VOLATILE        reduce using rule 226 (push_scope_e -> .)
    ENUM            reduce using rule 226 (push_scope_e -> .)
    STRUCT          reduce using rule 226 (push_scope_e -> .)
    UNION           reduce using rule 226 (push_scope_e -> .)
    IDENTIFIER      shift and go to state 17

    push_scope_e                   shift and go to state 111
    identifier_list                shift and go to state 112
    identifier                     shift and go to state 109

state 49

    (79) type_qualifier_list -> type_qualifier .

    ASTERISK        reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    CONST           reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    VOLATILE        reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    OPENPAREN       reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    OPENBRACKET     reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    CLOSEPAREN      reduce using rule 79 (type_qualifier_list -> type_qualifier .)
    COMMA           reduce using rule 79 (type_qualifier_list -> type_qualifier .)


state 50

    (76) pointer -> ASTERISK type_qualifier_list .
    (78) pointer -> ASTERISK type_qualifier_list . pointer
    (80) type_qualifier_list -> type_qualifier_list . type_qualifier
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE

    OPENPAREN       reduce using rule 76 (pointer -> ASTERISK type_qualifier_list .)
    IDENTIFIER      reduce using rule 76 (pointer -> ASTERISK type_qualifier_list .)
    OPENBRACKET     reduce using rule 76 (pointer -> ASTERISK type_qualifier_list .)
    CLOSEPAREN      reduce using rule 76 (pointer -> ASTERISK type_qualifier_list .)
    COMMA           reduce using rule 76 (pointer -> ASTERISK type_qualifier_list .)
    ASTERISK        shift and go to state 24
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35

    pointer                        shift and go to state 114
    type_qualifier                 shift and go to state 113

state 51

    (77) pointer -> ASTERISK pointer .

    OPENPAREN       reduce using rule 77 (pointer -> ASTERISK pointer .)
    IDENTIFIER      reduce using rule 77 (pointer -> ASTERISK pointer .)
    OPENBRACKET     reduce using rule 77 (pointer -> ASTERISK pointer .)
    CLOSEPAREN      reduce using rule 77 (pointer -> ASTERISK pointer .)
    COMMA           reduce using rule 77 (pointer -> ASTERISK pointer .)


state 52

    (10) declaration -> declaration_specifiers init_declarator_list . SEMI
    (46) init_declarator_list -> init_declarator_list . COMMA init_declarator

    SEMI            shift and go to state 116
    COMMA           shift and go to state 115


state 53

    (9) declaration -> declaration_specifiers SEMI .

    OPENPAREN       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ASTERISK        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    AUTO            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    REGISTER        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STATIC          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    EXTERN          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TYPEDEF         reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    VOID            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CHAR            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SHORT           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INT             reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    LONG            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FLOAT           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DOUBLE          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SIGNED          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    UNSIGNED        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TYPEDEF_NAME    reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CONST           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    VOLATILE        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    IDENTIFIER      reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ENUM            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STRUCT          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    UNION           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    $end            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    OPENBRACE       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CLOSEBRACE      reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CASE            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DEFAULT         reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SEMI            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    IF              reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SWITCH          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    WHILE           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DO              reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FOR             reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    GOTO            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CONTINUE        reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    BREAK           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    RETURN          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INC_OP          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    DEC_OP          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    SIZEOF          reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    AMPERSAND       reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    PLUS            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    MINUS           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    TILDE           reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    BANG            reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    INTEGER_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    CHARACTER_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    FLOATING_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    ENUMERATION_CONSTANT reduce using rule 9 (declaration -> declaration_specifiers SEMI .)
    STRING_LITERAL  reduce using rule 9 (declaration -> declaration_specifiers SEMI .)


state 54

    (7) function_definition -> declaration_specifiers declarator . compound_statement
    (8) function_definition -> declaration_specifiers declarator . declaration_list compound_statement
    (47) init_declarator -> declarator .
    (48) init_declarator -> declarator . ASSIGN initializer
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (11) declaration_list -> . insert_mode_e declaration
    (12) declaration_list -> . declaration_list insert_mode_e declaration
    (224) insert_mode_e -> .

    SEMI            reduce using rule 47 (init_declarator -> declarator .)
    COMMA           reduce using rule 47 (init_declarator -> declarator .)
    ASSIGN          shift and go to state 119
    OPENBRACE       shift and go to state 60
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)

    insert_mode_e                  shift and go to state 58
    compound_statement             shift and go to state 117
    declaration_list               shift and go to state 118

state 55

    (45) init_declarator_list -> init_declarator .

    SEMI            reduce using rule 45 (init_declarator_list -> init_declarator .)
    COMMA           reduce using rule 45 (init_declarator_list -> init_declarator .)


state 56

    (18) declaration_specifiers -> type_qualifier declaration_specifiers .

    SEMI            reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    OPENPAREN       reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    ASTERISK        reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    IDENTIFIER      reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    OPENBRACKET     reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    COMMA           reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)
    CLOSEPAREN      reduce using rule 18 (declaration_specifiers -> type_qualifier declaration_specifiers .)


state 57

    (2) translation_unit -> translation_unit external_declaration .

    OPENPAREN       reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ASTERISK        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    AUTO            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    REGISTER        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STATIC          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    EXTERN          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF         reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOID            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CHAR            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SHORT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    INT             reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    LONG            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    FLOAT           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    DOUBLE          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    SIGNED          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNSIGNED        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    TYPEDEF_NAME    reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    CONST           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    VOLATILE        reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    IDENTIFIER      reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    ENUM            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    STRUCT          reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    UNION           reduce using rule 2 (translation_unit -> translation_unit external_declaration .)
    $end            reduce using rule 2 (translation_unit -> translation_unit external_declaration .)


state 58

    (11) declaration_list -> insert_mode_e . declaration
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 32
    declaration_specifiers         shift and go to state 120
    declaration                    shift and go to state 121

state 59

    (5) function_definition -> declarator compound_statement .

    OPENPAREN       reduce using rule 5 (function_definition -> declarator compound_statement .)
    ASTERISK        reduce using rule 5 (function_definition -> declarator compound_statement .)
    AUTO            reduce using rule 5 (function_definition -> declarator compound_statement .)
    REGISTER        reduce using rule 5 (function_definition -> declarator compound_statement .)
    STATIC          reduce using rule 5 (function_definition -> declarator compound_statement .)
    EXTERN          reduce using rule 5 (function_definition -> declarator compound_statement .)
    TYPEDEF         reduce using rule 5 (function_definition -> declarator compound_statement .)
    VOID            reduce using rule 5 (function_definition -> declarator compound_statement .)
    CHAR            reduce using rule 5 (function_definition -> declarator compound_statement .)
    SHORT           reduce using rule 5 (function_definition -> declarator compound_statement .)
    INT             reduce using rule 5 (function_definition -> declarator compound_statement .)
    LONG            reduce using rule 5 (function_definition -> declarator compound_statement .)
    FLOAT           reduce using rule 5 (function_definition -> declarator compound_statement .)
    DOUBLE          reduce using rule 5 (function_definition -> declarator compound_statement .)
    SIGNED          reduce using rule 5 (function_definition -> declarator compound_statement .)
    UNSIGNED        reduce using rule 5 (function_definition -> declarator compound_statement .)
    TYPEDEF_NAME    reduce using rule 5 (function_definition -> declarator compound_statement .)
    CONST           reduce using rule 5 (function_definition -> declarator compound_statement .)
    VOLATILE        reduce using rule 5 (function_definition -> declarator compound_statement .)
    IDENTIFIER      reduce using rule 5 (function_definition -> declarator compound_statement .)
    ENUM            reduce using rule 5 (function_definition -> declarator compound_statement .)
    STRUCT          reduce using rule 5 (function_definition -> declarator compound_statement .)
    UNION           reduce using rule 5 (function_definition -> declarator compound_statement .)
    $end            reduce using rule 5 (function_definition -> declarator compound_statement .)


state 60

    (120) compound_statement -> OPENBRACE . CLOSEBRACE
    (121) compound_statement -> OPENBRACE . push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> OPENBRACE . push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> OPENBRACE . push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (226) push_scope_e -> .

    CLOSEBRACE      shift and go to state 123
    CASE            reduce using rule 226 (push_scope_e -> .)
    DEFAULT         reduce using rule 226 (push_scope_e -> .)
    OPENBRACE       reduce using rule 226 (push_scope_e -> .)
    SEMI            reduce using rule 226 (push_scope_e -> .)
    IF              reduce using rule 226 (push_scope_e -> .)
    SWITCH          reduce using rule 226 (push_scope_e -> .)
    WHILE           reduce using rule 226 (push_scope_e -> .)
    DO              reduce using rule 226 (push_scope_e -> .)
    FOR             reduce using rule 226 (push_scope_e -> .)
    GOTO            reduce using rule 226 (push_scope_e -> .)
    CONTINUE        reduce using rule 226 (push_scope_e -> .)
    BREAK           reduce using rule 226 (push_scope_e -> .)
    RETURN          reduce using rule 226 (push_scope_e -> .)
    IDENTIFIER      reduce using rule 226 (push_scope_e -> .)
    INC_OP          reduce using rule 226 (push_scope_e -> .)
    DEC_OP          reduce using rule 226 (push_scope_e -> .)
    SIZEOF          reduce using rule 226 (push_scope_e -> .)
    AMPERSAND       reduce using rule 226 (push_scope_e -> .)
    ASTERISK        reduce using rule 226 (push_scope_e -> .)
    PLUS            reduce using rule 226 (push_scope_e -> .)
    MINUS           reduce using rule 226 (push_scope_e -> .)
    TILDE           reduce using rule 226 (push_scope_e -> .)
    BANG            reduce using rule 226 (push_scope_e -> .)
    OPENPAREN       reduce using rule 226 (push_scope_e -> .)
    INTEGER_CONSTANT reduce using rule 226 (push_scope_e -> .)
    CHARACTER_CONSTANT reduce using rule 226 (push_scope_e -> .)
    FLOATING_CONSTANT reduce using rule 226 (push_scope_e -> .)
    ENUMERATION_CONSTANT reduce using rule 226 (push_scope_e -> .)
    STRING_LITERAL  reduce using rule 226 (push_scope_e -> .)
    AUTO            reduce using rule 226 (push_scope_e -> .)
    REGISTER        reduce using rule 226 (push_scope_e -> .)
    STATIC          reduce using rule 226 (push_scope_e -> .)
    EXTERN          reduce using rule 226 (push_scope_e -> .)
    TYPEDEF         reduce using rule 226 (push_scope_e -> .)
    VOID            reduce using rule 226 (push_scope_e -> .)
    CHAR            reduce using rule 226 (push_scope_e -> .)
    SHORT           reduce using rule 226 (push_scope_e -> .)
    INT             reduce using rule 226 (push_scope_e -> .)
    LONG            reduce using rule 226 (push_scope_e -> .)
    FLOAT           reduce using rule 226 (push_scope_e -> .)
    DOUBLE          reduce using rule 226 (push_scope_e -> .)
    SIGNED          reduce using rule 226 (push_scope_e -> .)
    UNSIGNED        reduce using rule 226 (push_scope_e -> .)
    TYPEDEF_NAME    reduce using rule 226 (push_scope_e -> .)
    CONST           reduce using rule 226 (push_scope_e -> .)
    VOLATILE        reduce using rule 226 (push_scope_e -> .)
    ENUM            reduce using rule 226 (push_scope_e -> .)
    STRUCT          reduce using rule 226 (push_scope_e -> .)
    UNION           reduce using rule 226 (push_scope_e -> .)

    push_scope_e                   shift and go to state 122

state 61

    (6) function_definition -> declarator declaration_list . compound_statement
    (12) declaration_list -> declaration_list . insert_mode_e declaration
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (224) insert_mode_e -> .

    OPENBRACE       shift and go to state 60
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)

    insert_mode_e                  shift and go to state 124
    compound_statement             shift and go to state 125

state 62

    (38) struct_or_union_specifier -> struct_or_union identifier OPENBRACE . struct_declaration_list CLOSEBRACE
    (43) struct_declaration_list -> . struct_declaration
    (44) struct_declaration_list -> . struct_declaration_list struct_declaration
    (49) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    struct_declaration             shift and go to state 65
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 67
    struct_declaration_list        shift and go to state 126

state 63

    (39) struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list . CLOSEBRACE
    (44) struct_declaration_list -> struct_declaration_list . struct_declaration
    (49) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    CLOSEBRACE      shift and go to state 127
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    struct_declaration             shift and go to state 128
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 67

state 64

    (50) specifier_qualifier_list -> type_specifier .
    (51) specifier_qualifier_list -> type_specifier . specifier_qualifier_list
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    COLON           reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    OPENPAREN       reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    ASTERISK        reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    IDENTIFIER      reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    OPENBRACKET     reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    CLOSEPAREN      reduce using rule 50 (specifier_qualifier_list -> type_specifier .)
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 129

state 65

    (43) struct_declaration_list -> struct_declaration .

    CLOSEBRACE      reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    VOID            reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    CHAR            reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    SHORT           reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    INT             reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    LONG            reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    FLOAT           reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    DOUBLE          reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    SIGNED          reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    UNSIGNED        reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    TYPEDEF_NAME    reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    CONST           reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    VOLATILE        reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    ENUM            reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    STRUCT          reduce using rule 43 (struct_declaration_list -> struct_declaration .)
    UNION           reduce using rule 43 (struct_declaration_list -> struct_declaration .)


state 66

    (52) specifier_qualifier_list -> type_qualifier .
    (53) specifier_qualifier_list -> type_qualifier . specifier_qualifier_list
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    COLON           reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    OPENPAREN       reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    ASTERISK        reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    IDENTIFIER      reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    OPENBRACKET     reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    CLOSEPAREN      reduce using rule 52 (specifier_qualifier_list -> type_qualifier .)
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 130

state 67

    (49) struct_declaration -> specifier_qualifier_list . struct_declarator_list SEMI
    (54) struct_declarator_list -> . struct_declarator
    (55) struct_declarator_list -> . struct_declarator_list COMMA struct_declarator
    (56) struct_declarator -> . declarator
    (57) struct_declarator -> . COLON constant_expression
    (58) struct_declarator -> . declarator COLON constant_expression
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (223) identifier -> . IDENTIFIER

    COLON           shift and go to state 133
    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    struct_declarator              shift and go to state 131
    pointer                        shift and go to state 10
    direct_declarator              shift and go to state 23
    declarator                     shift and go to state 132
    identifier                     shift and go to state 38
    struct_declarator_list         shift and go to state 134

state 68

    (69) direct_declarator -> OPENPAREN declarator CLOSEPAREN .

    OPENBRACKET     reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    OPENPAREN       reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    COLON           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SEMI            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    COMMA           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    OPENBRACE       reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    AUTO            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    REGISTER        reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    STATIC          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    EXTERN          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    TYPEDEF         reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    VOID            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CHAR            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SHORT           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    INT             reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    LONG            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    FLOAT           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    DOUBLE          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    SIGNED          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    UNSIGNED        reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CONST           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    VOLATILE        reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    ENUM            reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    STRUCT          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    UNION           reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    ASSIGN          reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 69 (direct_declarator -> OPENPAREN declarator CLOSEPAREN .)


state 69

    (60) enum_specifier -> ENUM identifier OPENBRACE . enumerator_list CLOSEBRACE
    (62) enumerator_list -> . enumerator
    (63) enumerator_list -> . enumerator_list COMMA enumerator
    (64) enumerator -> . identifier
    (65) enumerator -> . identifier ASSIGN constant_expression
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    enumerator_list                shift and go to state 135
    identifier                     shift and go to state 72
    enumerator                     shift and go to state 70

state 70

    (62) enumerator_list -> enumerator .

    CLOSEBRACE      reduce using rule 62 (enumerator_list -> enumerator .)
    COMMA           reduce using rule 62 (enumerator_list -> enumerator .)


state 71

    (59) enum_specifier -> ENUM OPENBRACE enumerator_list . CLOSEBRACE
    (63) enumerator_list -> enumerator_list . COMMA enumerator

    CLOSEBRACE      shift and go to state 137
    COMMA           shift and go to state 136


state 72

    (64) enumerator -> identifier .
    (65) enumerator -> identifier . ASSIGN constant_expression

    CLOSEBRACE      reduce using rule 64 (enumerator -> identifier .)
    COMMA           reduce using rule 64 (enumerator -> identifier .)
    ASSIGN          shift and go to state 138


state 73

    (213) primary_expression -> constant .

    OPENBRACKET     reduce using rule 213 (primary_expression -> constant .)
    OPENPAREN       reduce using rule 213 (primary_expression -> constant .)
    PERIOD          reduce using rule 213 (primary_expression -> constant .)
    PTR_OP          reduce using rule 213 (primary_expression -> constant .)
    INC_OP          reduce using rule 213 (primary_expression -> constant .)
    DEC_OP          reduce using rule 213 (primary_expression -> constant .)
    ASSIGN          reduce using rule 213 (primary_expression -> constant .)
    MUL_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    DIV_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    MOD_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    ADD_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    SUB_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    LEFT_ASSIGN     reduce using rule 213 (primary_expression -> constant .)
    RIGHT_ASSIGN    reduce using rule 213 (primary_expression -> constant .)
    AND_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    XOR_ASSIGN      reduce using rule 213 (primary_expression -> constant .)
    OR_ASSIGN       reduce using rule 213 (primary_expression -> constant .)
    ASTERISK        reduce using rule 213 (primary_expression -> constant .)
    DIV             reduce using rule 213 (primary_expression -> constant .)
    PERCENT         reduce using rule 213 (primary_expression -> constant .)
    PLUS            reduce using rule 213 (primary_expression -> constant .)
    MINUS           reduce using rule 213 (primary_expression -> constant .)
    LEFT_OP         reduce using rule 213 (primary_expression -> constant .)
    RIGHT_OP        reduce using rule 213 (primary_expression -> constant .)
    LE              reduce using rule 213 (primary_expression -> constant .)
    GT              reduce using rule 213 (primary_expression -> constant .)
    LE_OP           reduce using rule 213 (primary_expression -> constant .)
    GE_OP           reduce using rule 213 (primary_expression -> constant .)
    EQ_OP           reduce using rule 213 (primary_expression -> constant .)
    NE_OP           reduce using rule 213 (primary_expression -> constant .)
    AMPERSAND       reduce using rule 213 (primary_expression -> constant .)
    CARAT           reduce using rule 213 (primary_expression -> constant .)
    PIPE            reduce using rule 213 (primary_expression -> constant .)
    AND_OP          reduce using rule 213 (primary_expression -> constant .)
    QMARK           reduce using rule 213 (primary_expression -> constant .)
    OR_OP           reduce using rule 213 (primary_expression -> constant .)
    SEMI            reduce using rule 213 (primary_expression -> constant .)
    COMMA           reduce using rule 213 (primary_expression -> constant .)
    CLOSEBRACKET    reduce using rule 213 (primary_expression -> constant .)
    CLOSEPAREN      reduce using rule 213 (primary_expression -> constant .)
    CLOSEBRACE      reduce using rule 213 (primary_expression -> constant .)
    COLON           reduce using rule 213 (primary_expression -> constant .)


state 74

    (190) cast_expression -> unary_expression .

    ASTERISK        reduce using rule 190 (cast_expression -> unary_expression .)
    DIV             reduce using rule 190 (cast_expression -> unary_expression .)
    PERCENT         reduce using rule 190 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 190 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 190 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 190 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 190 (cast_expression -> unary_expression .)
    LE              reduce using rule 190 (cast_expression -> unary_expression .)
    GT              reduce using rule 190 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    AMPERSAND       reduce using rule 190 (cast_expression -> unary_expression .)
    CARAT           reduce using rule 190 (cast_expression -> unary_expression .)
    PIPE            reduce using rule 190 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 190 (cast_expression -> unary_expression .)
    QMARK           reduce using rule 190 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEBRACKET    reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEPAREN      reduce using rule 190 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 190 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEBRACE      reduce using rule 190 (cast_expression -> unary_expression .)
    COLON           reduce using rule 190 (cast_expression -> unary_expression .)
    ASSIGN          reduce using rule 190 (cast_expression -> unary_expression .)
    MUL_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    DIV_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    MOD_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    ADD_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    SUB_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    LEFT_ASSIGN     reduce using rule 190 (cast_expression -> unary_expression .)
    RIGHT_ASSIGN    reduce using rule 190 (cast_expression -> unary_expression .)
    AND_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    XOR_ASSIGN      reduce using rule 190 (cast_expression -> unary_expression .)
    OR_ASSIGN       reduce using rule 190 (cast_expression -> unary_expression .)


state 75

    (219) constant -> CHARACTER_CONSTANT .

    OPENBRACKET     reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    OPENPAREN       reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    PERIOD          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    PTR_OP          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    INC_OP          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    DEC_OP          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    ASTERISK        reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    DIV             reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    PERCENT         reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    PLUS            reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    MINUS           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    LEFT_OP         reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    RIGHT_OP        reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    LE              reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    GT              reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    LE_OP           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    GE_OP           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    EQ_OP           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    NE_OP           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    AMPERSAND       reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    CARAT           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    PIPE            reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    AND_OP          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    QMARK           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    OR_OP           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    CLOSEBRACKET    reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    CLOSEPAREN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    COMMA           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    SEMI            reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    CLOSEBRACE      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    COLON           reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    ASSIGN          reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    MUL_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    DIV_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    MOD_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    ADD_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    SUB_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    AND_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    XOR_ASSIGN      reduce using rule 219 (constant -> CHARACTER_CONSTANT .)
    OR_ASSIGN       reduce using rule 219 (constant -> CHARACTER_CONSTANT .)


state 76

    (194) unary_expression -> DEC_OP . unary_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 140
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 139
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 77

    (166) inclusive_or_expression -> exclusive_or_expression .
    (169) exclusive_or_expression -> exclusive_or_expression . CARAT and_expression

    PIPE            reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    AND_OP          reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    QMARK           reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    OR_OP           reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    SEMI            reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    COMMA           reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEPAREN      reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    CLOSEBRACE      reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    COLON           reduce using rule 166 (inclusive_or_expression -> exclusive_or_expression .)
    CARAT           shift and go to state 141


state 78

    (220) constant -> FLOATING_CONSTANT .

    OPENBRACKET     reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    OPENPAREN       reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    PERIOD          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    PTR_OP          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    INC_OP          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    DEC_OP          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    ASTERISK        reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    DIV             reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    PERCENT         reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    PLUS            reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    MINUS           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    LEFT_OP         reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    RIGHT_OP        reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    LE              reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    GT              reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    LE_OP           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    GE_OP           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    EQ_OP           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    NE_OP           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    AMPERSAND       reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    CARAT           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    PIPE            reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    AND_OP          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    QMARK           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    OR_OP           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    CLOSEBRACKET    reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    CLOSEPAREN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    COMMA           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    SEMI            reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    CLOSEBRACE      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    COLON           reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    ASSIGN          reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    MUL_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    DIV_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    MOD_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    ADD_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    SUB_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    AND_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    XOR_ASSIGN      reduce using rule 220 (constant -> FLOATING_CONSTANT .)
    OR_ASSIGN       reduce using rule 220 (constant -> FLOATING_CONSTANT .)


state 79

    (201) unary_operator -> MINUS .

    OPENPAREN       reduce using rule 201 (unary_operator -> MINUS .)
    INC_OP          reduce using rule 201 (unary_operator -> MINUS .)
    DEC_OP          reduce using rule 201 (unary_operator -> MINUS .)
    SIZEOF          reduce using rule 201 (unary_operator -> MINUS .)
    AMPERSAND       reduce using rule 201 (unary_operator -> MINUS .)
    ASTERISK        reduce using rule 201 (unary_operator -> MINUS .)
    PLUS            reduce using rule 201 (unary_operator -> MINUS .)
    MINUS           reduce using rule 201 (unary_operator -> MINUS .)
    TILDE           reduce using rule 201 (unary_operator -> MINUS .)
    BANG            reduce using rule 201 (unary_operator -> MINUS .)
    IDENTIFIER      reduce using rule 201 (unary_operator -> MINUS .)
    INTEGER_CONSTANT reduce using rule 201 (unary_operator -> MINUS .)
    CHARACTER_CONSTANT reduce using rule 201 (unary_operator -> MINUS .)
    FLOATING_CONSTANT reduce using rule 201 (unary_operator -> MINUS .)
    ENUMERATION_CONSTANT reduce using rule 201 (unary_operator -> MINUS .)
    STRING_LITERAL  reduce using rule 201 (unary_operator -> MINUS .)


state 80

    (168) exclusive_or_expression -> and_expression .
    (171) and_expression -> and_expression . AMPERSAND equality_expression

    CARAT           reduce using rule 168 (exclusive_or_expression -> and_expression .)
    PIPE            reduce using rule 168 (exclusive_or_expression -> and_expression .)
    AND_OP          reduce using rule 168 (exclusive_or_expression -> and_expression .)
    QMARK           reduce using rule 168 (exclusive_or_expression -> and_expression .)
    OR_OP           reduce using rule 168 (exclusive_or_expression -> and_expression .)
    SEMI            reduce using rule 168 (exclusive_or_expression -> and_expression .)
    COMMA           reduce using rule 168 (exclusive_or_expression -> and_expression .)
    CLOSEPAREN      reduce using rule 168 (exclusive_or_expression -> and_expression .)
    CLOSEBRACKET    reduce using rule 168 (exclusive_or_expression -> and_expression .)
    CLOSEBRACE      reduce using rule 168 (exclusive_or_expression -> and_expression .)
    COLON           reduce using rule 168 (exclusive_or_expression -> and_expression .)
    AMPERSAND       shift and go to state 142


state 81

    (70) direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    COLON           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SEMI            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    OPENBRACE       reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    AUTO            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    REGISTER        reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    STATIC          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    EXTERN          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    TYPEDEF         reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    VOID            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CHAR            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SHORT           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    INT             reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    LONG            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    FLOAT           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    DOUBLE          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    SIGNED          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    UNSIGNED        reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    TYPEDEF_NAME    reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CONST           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    VOLATILE        reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    ENUM            reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    STRUCT          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    UNION           reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    ASSIGN          reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 70 (direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET .)


state 82

    (164) logical_and_expression -> inclusive_or_expression .
    (167) inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression

    AND_OP          reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    QMARK           reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    OR_OP           reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    CLOSEBRACE      reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    COMMA           reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    CLOSEPAREN      reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    SEMI            reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    COLON           reduce using rule 164 (logical_and_expression -> inclusive_or_expression .)
    PIPE            shift and go to state 143


state 83

    (218) constant -> INTEGER_CONSTANT .

    OPENBRACKET     reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    OPENPAREN       reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    PERIOD          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    PTR_OP          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    INC_OP          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    DEC_OP          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    ASTERISK        reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    DIV             reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    PERCENT         reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    PLUS            reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    MINUS           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    LEFT_OP         reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    RIGHT_OP        reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    LE              reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    GT              reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    LE_OP           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    GE_OP           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    EQ_OP           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    NE_OP           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    AMPERSAND       reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    CARAT           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    PIPE            reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    AND_OP          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    QMARK           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    OR_OP           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    CLOSEBRACKET    reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    CLOSEPAREN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    COMMA           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    SEMI            reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    CLOSEBRACE      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    COLON           reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    ASSIGN          reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    MUL_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    DIV_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    MOD_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    ADD_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    SUB_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    AND_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    XOR_ASSIGN      reduce using rule 218 (constant -> INTEGER_CONSTANT .)
    OR_ASSIGN       reduce using rule 218 (constant -> INTEGER_CONSTANT .)


state 84

    (191) cast_expression -> OPENPAREN . type_name CLOSEPAREN cast_expression
    (215) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (95) type_name -> . specifier_qualifier_list
    (96) type_name -> . specifier_qualifier_list abstract_declarator
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    ENUM            shift and go to state 21
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    struct_or_union_specifier      shift and go to state 4
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    type_specifier                 shift and go to state 64
    inclusive_or_expression        shift and go to state 82
    type_name                      shift and go to state 147
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    struct_or_union                shift and go to state 6
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 149
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 146

state 85

    (172) equality_expression -> relational_expression .
    (176) relational_expression -> relational_expression . LE shift_expression
    (177) relational_expression -> relational_expression . GT shift_expression
    (178) relational_expression -> relational_expression . LE_OP shift_expression
    (179) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 172 (equality_expression -> relational_expression .)
    NE_OP           reduce using rule 172 (equality_expression -> relational_expression .)
    AMPERSAND       reduce using rule 172 (equality_expression -> relational_expression .)
    CARAT           reduce using rule 172 (equality_expression -> relational_expression .)
    PIPE            reduce using rule 172 (equality_expression -> relational_expression .)
    AND_OP          reduce using rule 172 (equality_expression -> relational_expression .)
    QMARK           reduce using rule 172 (equality_expression -> relational_expression .)
    OR_OP           reduce using rule 172 (equality_expression -> relational_expression .)
    CLOSEBRACKET    reduce using rule 172 (equality_expression -> relational_expression .)
    CLOSEPAREN      reduce using rule 172 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 172 (equality_expression -> relational_expression .)
    SEMI            reduce using rule 172 (equality_expression -> relational_expression .)
    CLOSEBRACE      reduce using rule 172 (equality_expression -> relational_expression .)
    COLON           reduce using rule 172 (equality_expression -> relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 151
    LE_OP           shift and go to state 152
    GE_OP           shift and go to state 154


state 86

    (202) unary_operator -> TILDE .

    OPENPAREN       reduce using rule 202 (unary_operator -> TILDE .)
    INC_OP          reduce using rule 202 (unary_operator -> TILDE .)
    DEC_OP          reduce using rule 202 (unary_operator -> TILDE .)
    SIZEOF          reduce using rule 202 (unary_operator -> TILDE .)
    AMPERSAND       reduce using rule 202 (unary_operator -> TILDE .)
    ASTERISK        reduce using rule 202 (unary_operator -> TILDE .)
    PLUS            reduce using rule 202 (unary_operator -> TILDE .)
    MINUS           reduce using rule 202 (unary_operator -> TILDE .)
    TILDE           reduce using rule 202 (unary_operator -> TILDE .)
    BANG            reduce using rule 202 (unary_operator -> TILDE .)
    IDENTIFIER      reduce using rule 202 (unary_operator -> TILDE .)
    INTEGER_CONSTANT reduce using rule 202 (unary_operator -> TILDE .)
    CHARACTER_CONSTANT reduce using rule 202 (unary_operator -> TILDE .)
    FLOATING_CONSTANT reduce using rule 202 (unary_operator -> TILDE .)
    ENUMERATION_CONSTANT reduce using rule 202 (unary_operator -> TILDE .)
    STRING_LITERAL  reduce using rule 202 (unary_operator -> TILDE .)


state 87

    (200) unary_operator -> PLUS .

    OPENPAREN       reduce using rule 200 (unary_operator -> PLUS .)
    INC_OP          reduce using rule 200 (unary_operator -> PLUS .)
    DEC_OP          reduce using rule 200 (unary_operator -> PLUS .)
    SIZEOF          reduce using rule 200 (unary_operator -> PLUS .)
    AMPERSAND       reduce using rule 200 (unary_operator -> PLUS .)
    ASTERISK        reduce using rule 200 (unary_operator -> PLUS .)
    PLUS            reduce using rule 200 (unary_operator -> PLUS .)
    MINUS           reduce using rule 200 (unary_operator -> PLUS .)
    TILDE           reduce using rule 200 (unary_operator -> PLUS .)
    BANG            reduce using rule 200 (unary_operator -> PLUS .)
    IDENTIFIER      reduce using rule 200 (unary_operator -> PLUS .)
    INTEGER_CONSTANT reduce using rule 200 (unary_operator -> PLUS .)
    CHARACTER_CONSTANT reduce using rule 200 (unary_operator -> PLUS .)
    FLOATING_CONSTANT reduce using rule 200 (unary_operator -> PLUS .)
    ENUMERATION_CONSTANT reduce using rule 200 (unary_operator -> PLUS .)
    STRING_LITERAL  reduce using rule 200 (unary_operator -> PLUS .)


state 88

    (159) conditional_expression -> logical_or_expression .
    (160) conditional_expression -> logical_or_expression . QMARK expression COLON conditional_expression
    (163) logical_or_expression -> logical_or_expression . OR_OP logical_and_expression

    SEMI            reduce using rule 159 (conditional_expression -> logical_or_expression .)
    COMMA           reduce using rule 159 (conditional_expression -> logical_or_expression .)
    CLOSEPAREN      reduce using rule 159 (conditional_expression -> logical_or_expression .)
    COLON           reduce using rule 159 (conditional_expression -> logical_or_expression .)
    CLOSEBRACKET    reduce using rule 159 (conditional_expression -> logical_or_expression .)
    CLOSEBRACE      reduce using rule 159 (conditional_expression -> logical_or_expression .)
    QMARK           shift and go to state 155
    OR_OP           shift and go to state 156


state 89

    (71) direct_declarator -> direct_declarator OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 157


state 90

    (214) primary_expression -> string .

    OPENBRACKET     reduce using rule 214 (primary_expression -> string .)
    OPENPAREN       reduce using rule 214 (primary_expression -> string .)
    PERIOD          reduce using rule 214 (primary_expression -> string .)
    PTR_OP          reduce using rule 214 (primary_expression -> string .)
    INC_OP          reduce using rule 214 (primary_expression -> string .)
    DEC_OP          reduce using rule 214 (primary_expression -> string .)
    ASSIGN          reduce using rule 214 (primary_expression -> string .)
    MUL_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    DIV_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    MOD_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    ADD_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    SUB_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    LEFT_ASSIGN     reduce using rule 214 (primary_expression -> string .)
    RIGHT_ASSIGN    reduce using rule 214 (primary_expression -> string .)
    AND_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    XOR_ASSIGN      reduce using rule 214 (primary_expression -> string .)
    OR_ASSIGN       reduce using rule 214 (primary_expression -> string .)
    ASTERISK        reduce using rule 214 (primary_expression -> string .)
    DIV             reduce using rule 214 (primary_expression -> string .)
    PERCENT         reduce using rule 214 (primary_expression -> string .)
    PLUS            reduce using rule 214 (primary_expression -> string .)
    MINUS           reduce using rule 214 (primary_expression -> string .)
    LEFT_OP         reduce using rule 214 (primary_expression -> string .)
    RIGHT_OP        reduce using rule 214 (primary_expression -> string .)
    LE              reduce using rule 214 (primary_expression -> string .)
    GT              reduce using rule 214 (primary_expression -> string .)
    LE_OP           reduce using rule 214 (primary_expression -> string .)
    GE_OP           reduce using rule 214 (primary_expression -> string .)
    EQ_OP           reduce using rule 214 (primary_expression -> string .)
    NE_OP           reduce using rule 214 (primary_expression -> string .)
    AMPERSAND       reduce using rule 214 (primary_expression -> string .)
    CARAT           reduce using rule 214 (primary_expression -> string .)
    PIPE            reduce using rule 214 (primary_expression -> string .)
    AND_OP          reduce using rule 214 (primary_expression -> string .)
    QMARK           reduce using rule 214 (primary_expression -> string .)
    OR_OP           reduce using rule 214 (primary_expression -> string .)
    SEMI            reduce using rule 214 (primary_expression -> string .)
    COMMA           reduce using rule 214 (primary_expression -> string .)
    CLOSEBRACKET    reduce using rule 214 (primary_expression -> string .)
    CLOSEPAREN      reduce using rule 214 (primary_expression -> string .)
    CLOSEBRACE      reduce using rule 214 (primary_expression -> string .)
    COLON           reduce using rule 214 (primary_expression -> string .)


state 91

    (196) unary_expression -> SIZEOF . unary_expression
    (197) unary_expression -> SIZEOF . OPENPAREN type_name CLOSEPAREN
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 159
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 158
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 92

    (192) unary_expression -> postfix_expression .
    (205) postfix_expression -> postfix_expression . OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> postfix_expression . OPENPAREN CLOSEPAREN
    (207) postfix_expression -> postfix_expression . OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> postfix_expression . PERIOD identifier
    (209) postfix_expression -> postfix_expression . PTR_OP identifier
    (210) postfix_expression -> postfix_expression . INC_OP
    (211) postfix_expression -> postfix_expression . DEC_OP

    ASTERISK        reduce using rule 192 (unary_expression -> postfix_expression .)
    DIV             reduce using rule 192 (unary_expression -> postfix_expression .)
    PERCENT         reduce using rule 192 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 192 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 192 (unary_expression -> postfix_expression .)
    LEFT_OP         reduce using rule 192 (unary_expression -> postfix_expression .)
    RIGHT_OP        reduce using rule 192 (unary_expression -> postfix_expression .)
    LE              reduce using rule 192 (unary_expression -> postfix_expression .)
    GT              reduce using rule 192 (unary_expression -> postfix_expression .)
    LE_OP           reduce using rule 192 (unary_expression -> postfix_expression .)
    GE_OP           reduce using rule 192 (unary_expression -> postfix_expression .)
    EQ_OP           reduce using rule 192 (unary_expression -> postfix_expression .)
    NE_OP           reduce using rule 192 (unary_expression -> postfix_expression .)
    AMPERSAND       reduce using rule 192 (unary_expression -> postfix_expression .)
    CARAT           reduce using rule 192 (unary_expression -> postfix_expression .)
    PIPE            reduce using rule 192 (unary_expression -> postfix_expression .)
    AND_OP          reduce using rule 192 (unary_expression -> postfix_expression .)
    QMARK           reduce using rule 192 (unary_expression -> postfix_expression .)
    OR_OP           reduce using rule 192 (unary_expression -> postfix_expression .)
    COLON           reduce using rule 192 (unary_expression -> postfix_expression .)
    CLOSEBRACKET    reduce using rule 192 (unary_expression -> postfix_expression .)
    CLOSEPAREN      reduce using rule 192 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 192 (unary_expression -> postfix_expression .)
    SEMI            reduce using rule 192 (unary_expression -> postfix_expression .)
    CLOSEBRACE      reduce using rule 192 (unary_expression -> postfix_expression .)
    ASSIGN          reduce using rule 192 (unary_expression -> postfix_expression .)
    MUL_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    DIV_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    MOD_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    ADD_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    SUB_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    LEFT_ASSIGN     reduce using rule 192 (unary_expression -> postfix_expression .)
    RIGHT_ASSIGN    reduce using rule 192 (unary_expression -> postfix_expression .)
    AND_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    XOR_ASSIGN      reduce using rule 192 (unary_expression -> postfix_expression .)
    OR_ASSIGN       reduce using rule 192 (unary_expression -> postfix_expression .)
    OPENBRACKET     shift and go to state 160
    OPENPAREN       shift and go to state 165
    PERIOD          shift and go to state 163
    PTR_OP          shift and go to state 164
    INC_OP          shift and go to state 162
    DEC_OP          shift and go to state 161


state 93

    (199) unary_operator -> ASTERISK .

    OPENPAREN       reduce using rule 199 (unary_operator -> ASTERISK .)
    INC_OP          reduce using rule 199 (unary_operator -> ASTERISK .)
    DEC_OP          reduce using rule 199 (unary_operator -> ASTERISK .)
    SIZEOF          reduce using rule 199 (unary_operator -> ASTERISK .)
    AMPERSAND       reduce using rule 199 (unary_operator -> ASTERISK .)
    ASTERISK        reduce using rule 199 (unary_operator -> ASTERISK .)
    PLUS            reduce using rule 199 (unary_operator -> ASTERISK .)
    MINUS           reduce using rule 199 (unary_operator -> ASTERISK .)
    TILDE           reduce using rule 199 (unary_operator -> ASTERISK .)
    BANG            reduce using rule 199 (unary_operator -> ASTERISK .)
    IDENTIFIER      reduce using rule 199 (unary_operator -> ASTERISK .)
    INTEGER_CONSTANT reduce using rule 199 (unary_operator -> ASTERISK .)
    CHARACTER_CONSTANT reduce using rule 199 (unary_operator -> ASTERISK .)
    FLOATING_CONSTANT reduce using rule 199 (unary_operator -> ASTERISK .)
    ENUMERATION_CONSTANT reduce using rule 199 (unary_operator -> ASTERISK .)
    STRING_LITERAL  reduce using rule 199 (unary_operator -> ASTERISK .)


state 94

    (180) shift_expression -> additive_expression .
    (184) additive_expression -> additive_expression . PLUS multiplicative_expression
    (185) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 180 (shift_expression -> additive_expression .)
    RIGHT_OP        reduce using rule 180 (shift_expression -> additive_expression .)
    LE              reduce using rule 180 (shift_expression -> additive_expression .)
    GT              reduce using rule 180 (shift_expression -> additive_expression .)
    LE_OP           reduce using rule 180 (shift_expression -> additive_expression .)
    GE_OP           reduce using rule 180 (shift_expression -> additive_expression .)
    EQ_OP           reduce using rule 180 (shift_expression -> additive_expression .)
    NE_OP           reduce using rule 180 (shift_expression -> additive_expression .)
    AMPERSAND       reduce using rule 180 (shift_expression -> additive_expression .)
    CARAT           reduce using rule 180 (shift_expression -> additive_expression .)
    PIPE            reduce using rule 180 (shift_expression -> additive_expression .)
    AND_OP          reduce using rule 180 (shift_expression -> additive_expression .)
    QMARK           reduce using rule 180 (shift_expression -> additive_expression .)
    OR_OP           reduce using rule 180 (shift_expression -> additive_expression .)
    SEMI            reduce using rule 180 (shift_expression -> additive_expression .)
    COMMA           reduce using rule 180 (shift_expression -> additive_expression .)
    COLON           reduce using rule 180 (shift_expression -> additive_expression .)
    CLOSEBRACKET    reduce using rule 180 (shift_expression -> additive_expression .)
    CLOSEPAREN      reduce using rule 180 (shift_expression -> additive_expression .)
    CLOSEBRACE      reduce using rule 180 (shift_expression -> additive_expression .)
    PLUS            shift and go to state 166
    MINUS           shift and go to state 167


state 95

    (198) unary_operator -> AMPERSAND .

    OPENPAREN       reduce using rule 198 (unary_operator -> AMPERSAND .)
    INC_OP          reduce using rule 198 (unary_operator -> AMPERSAND .)
    DEC_OP          reduce using rule 198 (unary_operator -> AMPERSAND .)
    SIZEOF          reduce using rule 198 (unary_operator -> AMPERSAND .)
    AMPERSAND       reduce using rule 198 (unary_operator -> AMPERSAND .)
    ASTERISK        reduce using rule 198 (unary_operator -> AMPERSAND .)
    PLUS            reduce using rule 198 (unary_operator -> AMPERSAND .)
    MINUS           reduce using rule 198 (unary_operator -> AMPERSAND .)
    TILDE           reduce using rule 198 (unary_operator -> AMPERSAND .)
    BANG            reduce using rule 198 (unary_operator -> AMPERSAND .)
    IDENTIFIER      reduce using rule 198 (unary_operator -> AMPERSAND .)
    INTEGER_CONSTANT reduce using rule 198 (unary_operator -> AMPERSAND .)
    CHARACTER_CONSTANT reduce using rule 198 (unary_operator -> AMPERSAND .)
    FLOATING_CONSTANT reduce using rule 198 (unary_operator -> AMPERSAND .)
    ENUMERATION_CONSTANT reduce using rule 198 (unary_operator -> AMPERSAND .)
    STRING_LITERAL  reduce using rule 198 (unary_operator -> AMPERSAND .)


state 96

    (204) postfix_expression -> primary_expression .

    OPENBRACKET     reduce using rule 204 (postfix_expression -> primary_expression .)
    OPENPAREN       reduce using rule 204 (postfix_expression -> primary_expression .)
    PERIOD          reduce using rule 204 (postfix_expression -> primary_expression .)
    PTR_OP          reduce using rule 204 (postfix_expression -> primary_expression .)
    INC_OP          reduce using rule 204 (postfix_expression -> primary_expression .)
    DEC_OP          reduce using rule 204 (postfix_expression -> primary_expression .)
    ASSIGN          reduce using rule 204 (postfix_expression -> primary_expression .)
    MUL_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    DIV_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    MOD_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    ADD_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    SUB_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    LEFT_ASSIGN     reduce using rule 204 (postfix_expression -> primary_expression .)
    RIGHT_ASSIGN    reduce using rule 204 (postfix_expression -> primary_expression .)
    AND_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    XOR_ASSIGN      reduce using rule 204 (postfix_expression -> primary_expression .)
    OR_ASSIGN       reduce using rule 204 (postfix_expression -> primary_expression .)
    ASTERISK        reduce using rule 204 (postfix_expression -> primary_expression .)
    DIV             reduce using rule 204 (postfix_expression -> primary_expression .)
    PERCENT         reduce using rule 204 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 204 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 204 (postfix_expression -> primary_expression .)
    LEFT_OP         reduce using rule 204 (postfix_expression -> primary_expression .)
    RIGHT_OP        reduce using rule 204 (postfix_expression -> primary_expression .)
    LE              reduce using rule 204 (postfix_expression -> primary_expression .)
    GT              reduce using rule 204 (postfix_expression -> primary_expression .)
    LE_OP           reduce using rule 204 (postfix_expression -> primary_expression .)
    GE_OP           reduce using rule 204 (postfix_expression -> primary_expression .)
    EQ_OP           reduce using rule 204 (postfix_expression -> primary_expression .)
    NE_OP           reduce using rule 204 (postfix_expression -> primary_expression .)
    AMPERSAND       reduce using rule 204 (postfix_expression -> primary_expression .)
    CARAT           reduce using rule 204 (postfix_expression -> primary_expression .)
    PIPE            reduce using rule 204 (postfix_expression -> primary_expression .)
    AND_OP          reduce using rule 204 (postfix_expression -> primary_expression .)
    QMARK           reduce using rule 204 (postfix_expression -> primary_expression .)
    OR_OP           reduce using rule 204 (postfix_expression -> primary_expression .)
    SEMI            reduce using rule 204 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 204 (postfix_expression -> primary_expression .)
    CLOSEPAREN      reduce using rule 204 (postfix_expression -> primary_expression .)
    CLOSEBRACKET    reduce using rule 204 (postfix_expression -> primary_expression .)
    CLOSEBRACE      reduce using rule 204 (postfix_expression -> primary_expression .)
    COLON           reduce using rule 204 (postfix_expression -> primary_expression .)


state 97

    (186) multiplicative_expression -> cast_expression .

    ASTERISK        reduce using rule 186 (multiplicative_expression -> cast_expression .)
    DIV             reduce using rule 186 (multiplicative_expression -> cast_expression .)
    PERCENT         reduce using rule 186 (multiplicative_expression -> cast_expression .)
    PLUS            reduce using rule 186 (multiplicative_expression -> cast_expression .)
    MINUS           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    LEFT_OP         reduce using rule 186 (multiplicative_expression -> cast_expression .)
    RIGHT_OP        reduce using rule 186 (multiplicative_expression -> cast_expression .)
    LE              reduce using rule 186 (multiplicative_expression -> cast_expression .)
    GT              reduce using rule 186 (multiplicative_expression -> cast_expression .)
    LE_OP           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    GE_OP           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    EQ_OP           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    NE_OP           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    AMPERSAND       reduce using rule 186 (multiplicative_expression -> cast_expression .)
    CARAT           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    PIPE            reduce using rule 186 (multiplicative_expression -> cast_expression .)
    AND_OP          reduce using rule 186 (multiplicative_expression -> cast_expression .)
    QMARK           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    OR_OP           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    CLOSEBRACKET    reduce using rule 186 (multiplicative_expression -> cast_expression .)
    CLOSEPAREN      reduce using rule 186 (multiplicative_expression -> cast_expression .)
    COMMA           reduce using rule 186 (multiplicative_expression -> cast_expression .)
    SEMI            reduce using rule 186 (multiplicative_expression -> cast_expression .)
    CLOSEBRACE      reduce using rule 186 (multiplicative_expression -> cast_expression .)
    COLON           reduce using rule 186 (multiplicative_expression -> cast_expression .)


state 98

    (162) logical_or_expression -> logical_and_expression .
    (165) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QMARK           reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    OR_OP           reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    CLOSEPAREN      reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    COMMA           reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    COLON           reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    CLOSEBRACKET    reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    SEMI            reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    CLOSEBRACE      reduce using rule 162 (logical_or_expression -> logical_and_expression .)
    AND_OP          shift and go to state 168


state 99

    (175) relational_expression -> shift_expression .
    (181) shift_expression -> shift_expression . LEFT_OP additive_expression
    (182) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 175 (relational_expression -> shift_expression .)
    GT              reduce using rule 175 (relational_expression -> shift_expression .)
    LE_OP           reduce using rule 175 (relational_expression -> shift_expression .)
    GE_OP           reduce using rule 175 (relational_expression -> shift_expression .)
    EQ_OP           reduce using rule 175 (relational_expression -> shift_expression .)
    NE_OP           reduce using rule 175 (relational_expression -> shift_expression .)
    AMPERSAND       reduce using rule 175 (relational_expression -> shift_expression .)
    CARAT           reduce using rule 175 (relational_expression -> shift_expression .)
    PIPE            reduce using rule 175 (relational_expression -> shift_expression .)
    AND_OP          reduce using rule 175 (relational_expression -> shift_expression .)
    QMARK           reduce using rule 175 (relational_expression -> shift_expression .)
    OR_OP           reduce using rule 175 (relational_expression -> shift_expression .)
    CLOSEPAREN      reduce using rule 175 (relational_expression -> shift_expression .)
    COMMA           reduce using rule 175 (relational_expression -> shift_expression .)
    CLOSEBRACKET    reduce using rule 175 (relational_expression -> shift_expression .)
    SEMI            reduce using rule 175 (relational_expression -> shift_expression .)
    COLON           reduce using rule 175 (relational_expression -> shift_expression .)
    CLOSEBRACE      reduce using rule 175 (relational_expression -> shift_expression .)
    LEFT_OP         shift and go to state 169
    RIGHT_OP        shift and go to state 170


state 100

    (170) and_expression -> equality_expression .
    (173) equality_expression -> equality_expression . EQ_OP relational_expression
    (174) equality_expression -> equality_expression . NE_OP relational_expression

    AMPERSAND       reduce using rule 170 (and_expression -> equality_expression .)
    CARAT           reduce using rule 170 (and_expression -> equality_expression .)
    PIPE            reduce using rule 170 (and_expression -> equality_expression .)
    AND_OP          reduce using rule 170 (and_expression -> equality_expression .)
    QMARK           reduce using rule 170 (and_expression -> equality_expression .)
    OR_OP           reduce using rule 170 (and_expression -> equality_expression .)
    SEMI            reduce using rule 170 (and_expression -> equality_expression .)
    COMMA           reduce using rule 170 (and_expression -> equality_expression .)
    CLOSEPAREN      reduce using rule 170 (and_expression -> equality_expression .)
    COLON           reduce using rule 170 (and_expression -> equality_expression .)
    CLOSEBRACKET    reduce using rule 170 (and_expression -> equality_expression .)
    CLOSEBRACE      reduce using rule 170 (and_expression -> equality_expression .)
    EQ_OP           shift and go to state 172
    NE_OP           shift and go to state 171


state 101

    (222) string -> STRING_LITERAL .

    OPENBRACKET     reduce using rule 222 (string -> STRING_LITERAL .)
    OPENPAREN       reduce using rule 222 (string -> STRING_LITERAL .)
    PERIOD          reduce using rule 222 (string -> STRING_LITERAL .)
    PTR_OP          reduce using rule 222 (string -> STRING_LITERAL .)
    INC_OP          reduce using rule 222 (string -> STRING_LITERAL .)
    DEC_OP          reduce using rule 222 (string -> STRING_LITERAL .)
    ASSIGN          reduce using rule 222 (string -> STRING_LITERAL .)
    MUL_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    DIV_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    MOD_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    ADD_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    SUB_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    LEFT_ASSIGN     reduce using rule 222 (string -> STRING_LITERAL .)
    RIGHT_ASSIGN    reduce using rule 222 (string -> STRING_LITERAL .)
    AND_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    XOR_ASSIGN      reduce using rule 222 (string -> STRING_LITERAL .)
    OR_ASSIGN       reduce using rule 222 (string -> STRING_LITERAL .)
    ASTERISK        reduce using rule 222 (string -> STRING_LITERAL .)
    DIV             reduce using rule 222 (string -> STRING_LITERAL .)
    PERCENT         reduce using rule 222 (string -> STRING_LITERAL .)
    PLUS            reduce using rule 222 (string -> STRING_LITERAL .)
    MINUS           reduce using rule 222 (string -> STRING_LITERAL .)
    LEFT_OP         reduce using rule 222 (string -> STRING_LITERAL .)
    RIGHT_OP        reduce using rule 222 (string -> STRING_LITERAL .)
    LE              reduce using rule 222 (string -> STRING_LITERAL .)
    GT              reduce using rule 222 (string -> STRING_LITERAL .)
    LE_OP           reduce using rule 222 (string -> STRING_LITERAL .)
    GE_OP           reduce using rule 222 (string -> STRING_LITERAL .)
    EQ_OP           reduce using rule 222 (string -> STRING_LITERAL .)
    NE_OP           reduce using rule 222 (string -> STRING_LITERAL .)
    AMPERSAND       reduce using rule 222 (string -> STRING_LITERAL .)
    CARAT           reduce using rule 222 (string -> STRING_LITERAL .)
    PIPE            reduce using rule 222 (string -> STRING_LITERAL .)
    AND_OP          reduce using rule 222 (string -> STRING_LITERAL .)
    QMARK           reduce using rule 222 (string -> STRING_LITERAL .)
    OR_OP           reduce using rule 222 (string -> STRING_LITERAL .)
    SEMI            reduce using rule 222 (string -> STRING_LITERAL .)
    COMMA           reduce using rule 222 (string -> STRING_LITERAL .)
    CLOSEBRACKET    reduce using rule 222 (string -> STRING_LITERAL .)
    CLOSEPAREN      reduce using rule 222 (string -> STRING_LITERAL .)
    CLOSEBRACE      reduce using rule 222 (string -> STRING_LITERAL .)
    COLON           reduce using rule 222 (string -> STRING_LITERAL .)


state 102

    (183) additive_expression -> multiplicative_expression .
    (187) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (188) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (189) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 183 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    LEFT_OP         reduce using rule 183 (additive_expression -> multiplicative_expression .)
    RIGHT_OP        reduce using rule 183 (additive_expression -> multiplicative_expression .)
    LE              reduce using rule 183 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 183 (additive_expression -> multiplicative_expression .)
    LE_OP           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    GE_OP           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    EQ_OP           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    NE_OP           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    AMPERSAND       reduce using rule 183 (additive_expression -> multiplicative_expression .)
    CARAT           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    PIPE            reduce using rule 183 (additive_expression -> multiplicative_expression .)
    AND_OP          reduce using rule 183 (additive_expression -> multiplicative_expression .)
    QMARK           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    OR_OP           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    SEMI            reduce using rule 183 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    CLOSEPAREN      reduce using rule 183 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 183 (additive_expression -> multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 183 (additive_expression -> multiplicative_expression .)
    CLOSEBRACE      reduce using rule 183 (additive_expression -> multiplicative_expression .)
    ASTERISK        shift and go to state 174
    DIV             shift and go to state 175
    PERCENT         shift and go to state 173


state 103

    (193) unary_expression -> INC_OP . unary_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 140
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 176
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 104

    (203) unary_operator -> BANG .

    OPENPAREN       reduce using rule 203 (unary_operator -> BANG .)
    INC_OP          reduce using rule 203 (unary_operator -> BANG .)
    DEC_OP          reduce using rule 203 (unary_operator -> BANG .)
    SIZEOF          reduce using rule 203 (unary_operator -> BANG .)
    AMPERSAND       reduce using rule 203 (unary_operator -> BANG .)
    ASTERISK        reduce using rule 203 (unary_operator -> BANG .)
    PLUS            reduce using rule 203 (unary_operator -> BANG .)
    MINUS           reduce using rule 203 (unary_operator -> BANG .)
    TILDE           reduce using rule 203 (unary_operator -> BANG .)
    BANG            reduce using rule 203 (unary_operator -> BANG .)
    IDENTIFIER      reduce using rule 203 (unary_operator -> BANG .)
    INTEGER_CONSTANT reduce using rule 203 (unary_operator -> BANG .)
    CHARACTER_CONSTANT reduce using rule 203 (unary_operator -> BANG .)
    FLOATING_CONSTANT reduce using rule 203 (unary_operator -> BANG .)
    ENUMERATION_CONSTANT reduce using rule 203 (unary_operator -> BANG .)
    STRING_LITERAL  reduce using rule 203 (unary_operator -> BANG .)


state 105

    (221) constant -> ENUMERATION_CONSTANT .

    OPENBRACKET     reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    OPENPAREN       reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    PERIOD          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    PTR_OP          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    INC_OP          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    DEC_OP          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    ASTERISK        reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    DIV             reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    PERCENT         reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    PLUS            reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    MINUS           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    LEFT_OP         reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    RIGHT_OP        reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    LE              reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    GT              reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    LE_OP           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    GE_OP           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    EQ_OP           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    NE_OP           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    AMPERSAND       reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    CARAT           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    PIPE            reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    AND_OP          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    QMARK           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    OR_OP           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    CLOSEBRACKET    reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    CLOSEPAREN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    COMMA           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    SEMI            reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    CLOSEBRACE      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    COLON           reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    ASSIGN          reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    MUL_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    DIV_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    MOD_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    ADD_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    SUB_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    LEFT_ASSIGN     reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    RIGHT_ASSIGN    reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    AND_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    XOR_ASSIGN      reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)
    OR_ASSIGN       reduce using rule 221 (constant -> ENUMERATION_CONSTANT .)


state 106

    (195) unary_expression -> unary_operator . cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    cast_expression                shift and go to state 177
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 107

    (161) constant_expression -> conditional_expression .

    CLOSEBRACE      reduce using rule 161 (constant_expression -> conditional_expression .)
    COMMA           reduce using rule 161 (constant_expression -> conditional_expression .)
    CLOSEBRACKET    reduce using rule 161 (constant_expression -> conditional_expression .)
    SEMI            reduce using rule 161 (constant_expression -> conditional_expression .)
    COLON           reduce using rule 161 (constant_expression -> conditional_expression .)


state 108

    (212) primary_expression -> identifier .

    OPENBRACKET     reduce using rule 212 (primary_expression -> identifier .)
    OPENPAREN       reduce using rule 212 (primary_expression -> identifier .)
    PERIOD          reduce using rule 212 (primary_expression -> identifier .)
    PTR_OP          reduce using rule 212 (primary_expression -> identifier .)
    INC_OP          reduce using rule 212 (primary_expression -> identifier .)
    DEC_OP          reduce using rule 212 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 212 (primary_expression -> identifier .)
    MUL_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    DIV_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    MOD_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    ADD_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    SUB_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    LEFT_ASSIGN     reduce using rule 212 (primary_expression -> identifier .)
    RIGHT_ASSIGN    reduce using rule 212 (primary_expression -> identifier .)
    AND_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    XOR_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    OR_ASSIGN       reduce using rule 212 (primary_expression -> identifier .)
    ASTERISK        reduce using rule 212 (primary_expression -> identifier .)
    DIV             reduce using rule 212 (primary_expression -> identifier .)
    PERCENT         reduce using rule 212 (primary_expression -> identifier .)
    PLUS            reduce using rule 212 (primary_expression -> identifier .)
    MINUS           reduce using rule 212 (primary_expression -> identifier .)
    LEFT_OP         reduce using rule 212 (primary_expression -> identifier .)
    RIGHT_OP        reduce using rule 212 (primary_expression -> identifier .)
    LE              reduce using rule 212 (primary_expression -> identifier .)
    GT              reduce using rule 212 (primary_expression -> identifier .)
    LE_OP           reduce using rule 212 (primary_expression -> identifier .)
    GE_OP           reduce using rule 212 (primary_expression -> identifier .)
    EQ_OP           reduce using rule 212 (primary_expression -> identifier .)
    NE_OP           reduce using rule 212 (primary_expression -> identifier .)
    AMPERSAND       reduce using rule 212 (primary_expression -> identifier .)
    CARAT           reduce using rule 212 (primary_expression -> identifier .)
    PIPE            reduce using rule 212 (primary_expression -> identifier .)
    AND_OP          reduce using rule 212 (primary_expression -> identifier .)
    QMARK           reduce using rule 212 (primary_expression -> identifier .)
    OR_OP           reduce using rule 212 (primary_expression -> identifier .)
    SEMI            reduce using rule 212 (primary_expression -> identifier .)
    COMMA           reduce using rule 212 (primary_expression -> identifier .)
    CLOSEBRACKET    reduce using rule 212 (primary_expression -> identifier .)
    CLOSEPAREN      reduce using rule 212 (primary_expression -> identifier .)
    CLOSEBRACE      reduce using rule 212 (primary_expression -> identifier .)
    COLON           reduce using rule 212 (primary_expression -> identifier .)


state 109

    (88) identifier_list -> identifier .

    CLOSEPAREN      reduce using rule 88 (identifier_list -> identifier .)
    COMMA           reduce using rule 88 (identifier_list -> identifier .)


state 110

    (72) direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    COLON           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SEMI            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    OPENBRACE       reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    AUTO            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    REGISTER        reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    STATIC          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    EXTERN          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    TYPEDEF         reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    VOID            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CHAR            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SHORT           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    INT             reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    LONG            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    FLOAT           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    DOUBLE          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    SIGNED          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    UNSIGNED        reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CONST           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    VOLATILE        reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    ENUM            reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    STRUCT          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    UNION           reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    ASSIGN          reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 72 (direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN .)


state 111

    (73) direct_declarator -> direct_declarator OPENPAREN push_scope_e . parameter_type_list push_scope_e CLOSEPAREN
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers
    (87) parameter_declaration -> . declaration_specifiers abstract_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    parameter_list                 shift and go to state 181
    parameter_type_list            shift and go to state 179
    parameter_declaration          shift and go to state 178
    type_qualifier                 shift and go to state 32
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    declaration_specifiers         shift and go to state 180

state 112

    (74) direct_declarator -> direct_declarator OPENPAREN identifier_list . CLOSEPAREN
    (89) identifier_list -> identifier_list . COMMA identifier

    CLOSEPAREN      shift and go to state 183
    COMMA           shift and go to state 182


state 113

    (80) type_qualifier_list -> type_qualifier_list type_qualifier .

    ASTERISK        reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CONST           reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    VOLATILE        reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    OPENPAREN       reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    IDENTIFIER      reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    OPENBRACKET     reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    CLOSEPAREN      reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)
    COMMA           reduce using rule 80 (type_qualifier_list -> type_qualifier_list type_qualifier .)


state 114

    (78) pointer -> ASTERISK type_qualifier_list pointer .

    OPENPAREN       reduce using rule 78 (pointer -> ASTERISK type_qualifier_list pointer .)
    IDENTIFIER      reduce using rule 78 (pointer -> ASTERISK type_qualifier_list pointer .)
    OPENBRACKET     reduce using rule 78 (pointer -> ASTERISK type_qualifier_list pointer .)
    CLOSEPAREN      reduce using rule 78 (pointer -> ASTERISK type_qualifier_list pointer .)
    COMMA           reduce using rule 78 (pointer -> ASTERISK type_qualifier_list pointer .)


state 115

    (46) init_declarator_list -> init_declarator_list COMMA . init_declarator
    (47) init_declarator -> . declarator
    (48) init_declarator -> . declarator ASSIGN initializer
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (223) identifier -> . IDENTIFIER

    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 38
    direct_declarator              shift and go to state 23
    init_declarator                shift and go to state 184
    declarator                     shift and go to state 185
    pointer                        shift and go to state 10

state 116

    (10) declaration -> declaration_specifiers init_declarator_list SEMI .

    OPENPAREN       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ASTERISK        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    AUTO            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    REGISTER        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STATIC          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    EXTERN          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEDEF         reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOID            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CHAR            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SHORT           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INT             reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    LONG            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FLOAT           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DOUBLE          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIGNED          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNSIGNED        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TYPEDEF_NAME    reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONST           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    VOLATILE        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    IDENTIFIER      reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ENUM            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STRUCT          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    UNION           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    $end            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    OPENBRACE       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CLOSEBRACE      reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CASE            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DEFAULT         reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SEMI            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    IF              reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SWITCH          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    WHILE           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DO              reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FOR             reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    GOTO            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CONTINUE        reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BREAK           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    RETURN          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INC_OP          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    DEC_OP          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    SIZEOF          reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    AMPERSAND       reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    PLUS            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    MINUS           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    TILDE           reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    BANG            reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    INTEGER_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    CHARACTER_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    FLOATING_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    ENUMERATION_CONSTANT reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)
    STRING_LITERAL  reduce using rule 10 (declaration -> declaration_specifiers init_declarator_list SEMI .)


state 117

    (7) function_definition -> declaration_specifiers declarator compound_statement .

    OPENPAREN       reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    ASTERISK        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    AUTO            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    REGISTER        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    STATIC          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    EXTERN          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEDEF         reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOID            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    CHAR            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    SHORT           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    INT             reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    LONG            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    FLOAT           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    DOUBLE          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    SIGNED          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNSIGNED        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    TYPEDEF_NAME    reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    CONST           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    VOLATILE        reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    IDENTIFIER      reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    ENUM            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    STRUCT          reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    UNION           reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)
    $end            reduce using rule 7 (function_definition -> declaration_specifiers declarator compound_statement .)


state 118

    (8) function_definition -> declaration_specifiers declarator declaration_list . compound_statement
    (12) declaration_list -> declaration_list . insert_mode_e declaration
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (224) insert_mode_e -> .

    OPENBRACE       shift and go to state 60
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)

    insert_mode_e                  shift and go to state 124
    compound_statement             shift and go to state 186

state 119

    (48) init_declarator -> declarator ASSIGN . initializer
    (90) initializer -> . assignment_expression
    (91) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (92) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    OPENBRACE       shift and go to state 187
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    initializer                    shift and go to state 188
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 189
    multiplicative_expression      shift and go to state 102
    conditional_expression         shift and go to state 150
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    identifier                     shift and go to state 108

state 120

    (9) declaration -> declaration_specifiers . SEMI
    (10) declaration -> declaration_specifiers . init_declarator_list SEMI
    (45) init_declarator_list -> . init_declarator
    (46) init_declarator_list -> . init_declarator_list COMMA init_declarator
    (47) init_declarator -> . declarator
    (48) init_declarator -> . declarator ASSIGN initializer
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (223) identifier -> . IDENTIFIER

    SEMI            shift and go to state 53
    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 38
    direct_declarator              shift and go to state 23
    init_declarator                shift and go to state 55
    declarator                     shift and go to state 185
    init_declarator_list           shift and go to state 52
    pointer                        shift and go to state 10

state 121

    (11) declaration_list -> insert_mode_e declaration .

    OPENBRACE       reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    AUTO            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    REGISTER        reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    STATIC          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    EXTERN          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    TYPEDEF         reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    VOID            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CHAR            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    SHORT           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    INT             reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    LONG            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    FLOAT           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    DOUBLE          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    SIGNED          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    UNSIGNED        reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    TYPEDEF_NAME    reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CONST           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    VOLATILE        reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    ENUM            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    STRUCT          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    UNION           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CLOSEBRACE      reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CASE            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    DEFAULT         reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    SEMI            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    IF              reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    SWITCH          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    WHILE           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    DO              reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    FOR             reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    GOTO            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CONTINUE        reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    BREAK           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    RETURN          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    IDENTIFIER      reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    INC_OP          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    DEC_OP          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    SIZEOF          reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    AMPERSAND       reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    ASTERISK        reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    PLUS            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    MINUS           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    TILDE           reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    BANG            reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    OPENPAREN       reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    INTEGER_CONSTANT reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    CHARACTER_CONSTANT reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    FLOATING_CONSTANT reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    ENUMERATION_CONSTANT reduce using rule 11 (declaration_list -> insert_mode_e declaration .)
    STRING_LITERAL  reduce using rule 11 (declaration_list -> insert_mode_e declaration .)


state 122

    (121) compound_statement -> OPENBRACE push_scope_e . statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> OPENBRACE push_scope_e . declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> OPENBRACE push_scope_e . declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (124) statement_list -> . read_mode_e statement
    (125) statement_list -> . statement_list read_mode_e statement
    (11) declaration_list -> . insert_mode_e declaration
    (12) declaration_list -> . declaration_list insert_mode_e declaration
    (225) read_mode_e -> .
    (224) insert_mode_e -> .

    CASE            reduce using rule 225 (read_mode_e -> .)
    DEFAULT         reduce using rule 225 (read_mode_e -> .)
    OPENBRACE       reduce using rule 225 (read_mode_e -> .)
    SEMI            reduce using rule 225 (read_mode_e -> .)
    IF              reduce using rule 225 (read_mode_e -> .)
    SWITCH          reduce using rule 225 (read_mode_e -> .)
    WHILE           reduce using rule 225 (read_mode_e -> .)
    DO              reduce using rule 225 (read_mode_e -> .)
    FOR             reduce using rule 225 (read_mode_e -> .)
    GOTO            reduce using rule 225 (read_mode_e -> .)
    CONTINUE        reduce using rule 225 (read_mode_e -> .)
    BREAK           reduce using rule 225 (read_mode_e -> .)
    RETURN          reduce using rule 225 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 225 (read_mode_e -> .)
    INC_OP          reduce using rule 225 (read_mode_e -> .)
    DEC_OP          reduce using rule 225 (read_mode_e -> .)
    SIZEOF          reduce using rule 225 (read_mode_e -> .)
    AMPERSAND       reduce using rule 225 (read_mode_e -> .)
    ASTERISK        reduce using rule 225 (read_mode_e -> .)
    PLUS            reduce using rule 225 (read_mode_e -> .)
    MINUS           reduce using rule 225 (read_mode_e -> .)
    TILDE           reduce using rule 225 (read_mode_e -> .)
    BANG            reduce using rule 225 (read_mode_e -> .)
    OPENPAREN       reduce using rule 225 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 225 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 225 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 225 (read_mode_e -> .)
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)

    insert_mode_e                  shift and go to state 58
    declaration_list               shift and go to state 190
    statement_list                 shift and go to state 191
    read_mode_e                    shift and go to state 192

state 123

    (120) compound_statement -> OPENBRACE CLOSEBRACE .

    CLOSEBRACE      reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CASE            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DEFAULT         reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    OPENBRACE       reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SEMI            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    IF              reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SWITCH          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    WHILE           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DO              reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FOR             reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    GOTO            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CONTINUE        reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    BREAK           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    RETURN          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    IDENTIFIER      reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INC_OP          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DEC_OP          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SIZEOF          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    AMPERSAND       reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ASTERISK        reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    PLUS            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    MINUS           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TILDE           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    BANG            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    OPENPAREN       reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ELSE            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    AUTO            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    REGISTER        reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STATIC          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    EXTERN          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TYPEDEF         reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    VOID            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CHAR            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SHORT           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    INT             reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    LONG            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    FLOAT           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    DOUBLE          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    SIGNED          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    UNSIGNED        reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    CONST           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    VOLATILE        reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    ENUM            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    STRUCT          reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    UNION           reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)
    $end            reduce using rule 120 (compound_statement -> OPENBRACE CLOSEBRACE .)


state 124

    (12) declaration_list -> declaration_list insert_mode_e . declaration
    (9) declaration -> . declaration_specifiers SEMI
    (10) declaration -> . declaration_specifiers init_declarator_list SEMI
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 32
    declaration_specifiers         shift and go to state 120
    declaration                    shift and go to state 193

state 125

    (6) function_definition -> declarator declaration_list compound_statement .

    OPENPAREN       reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ASTERISK        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    AUTO            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STATIC          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOID            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CHAR            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SHORT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    INT             reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    LONG            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    TYPEDEF_NAME    reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    CONST           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    ENUM            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    UNION           reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)
    $end            reduce using rule 6 (function_definition -> declarator declaration_list compound_statement .)


state 126

    (38) struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list . CLOSEBRACE
    (44) struct_declaration_list -> struct_declaration_list . struct_declaration
    (49) struct_declaration -> . specifier_qualifier_list struct_declarator_list SEMI
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    CLOSEBRACE      shift and go to state 194
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 64
    struct_declaration             shift and go to state 128
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 67

state 127

    (39) struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .

    AUTO            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    REGISTER        reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    STATIC          reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    EXTERN          reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOID            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CHAR            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SHORT           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    INT             reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    LONG            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    FLOAT           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    DOUBLE          reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SIGNED          reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CONST           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOLATILE        reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    ENUM            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    STRUCT          reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNION           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    ASTERISK        reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    COMMA           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    SEMI            reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)
    COLON           reduce using rule 39 (struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE .)


state 128

    (44) struct_declaration_list -> struct_declaration_list struct_declaration .

    CLOSEBRACE      reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOID            reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CHAR            reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SHORT           reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    INT             reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    LONG            reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    FLOAT           reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    DOUBLE          reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    SIGNED          reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNSIGNED        reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    TYPEDEF_NAME    reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    CONST           reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    VOLATILE        reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    ENUM            reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    STRUCT          reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)
    UNION           reduce using rule 44 (struct_declaration_list -> struct_declaration_list struct_declaration .)


state 129

    (51) specifier_qualifier_list -> type_specifier specifier_qualifier_list .

    COLON           reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    OPENPAREN       reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    ASTERISK        reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    OPENBRACKET     reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)
    CLOSEPAREN      reduce using rule 51 (specifier_qualifier_list -> type_specifier specifier_qualifier_list .)


state 130

    (53) specifier_qualifier_list -> type_qualifier specifier_qualifier_list .

    COLON           reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    OPENPAREN       reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    ASTERISK        reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    IDENTIFIER      reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    OPENBRACKET     reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)
    CLOSEPAREN      reduce using rule 53 (specifier_qualifier_list -> type_qualifier specifier_qualifier_list .)


state 131

    (54) struct_declarator_list -> struct_declarator .

    SEMI            reduce using rule 54 (struct_declarator_list -> struct_declarator .)
    COMMA           reduce using rule 54 (struct_declarator_list -> struct_declarator .)


state 132

    (56) struct_declarator -> declarator .
    (58) struct_declarator -> declarator . COLON constant_expression

    SEMI            reduce using rule 56 (struct_declarator -> declarator .)
    COMMA           reduce using rule 56 (struct_declarator -> declarator .)
    COLON           shift and go to state 195


state 133

    (57) struct_declarator -> COLON . constant_expression
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 196
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 134

    (49) struct_declaration -> specifier_qualifier_list struct_declarator_list . SEMI
    (55) struct_declarator_list -> struct_declarator_list . COMMA struct_declarator

    SEMI            shift and go to state 198
    COMMA           shift and go to state 197


state 135

    (60) enum_specifier -> ENUM identifier OPENBRACE enumerator_list . CLOSEBRACE
    (63) enumerator_list -> enumerator_list . COMMA enumerator

    CLOSEBRACE      shift and go to state 199
    COMMA           shift and go to state 136


state 136

    (63) enumerator_list -> enumerator_list COMMA . enumerator
    (64) enumerator -> . identifier
    (65) enumerator -> . identifier ASSIGN constant_expression
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 72
    enumerator                     shift and go to state 200

state 137

    (59) enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .

    AUTO            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    REGISTER        reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    STATIC          reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    EXTERN          reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    VOID            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CHAR            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SHORT           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    INT             reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    LONG            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    FLOAT           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    DOUBLE          reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SIGNED          reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CONST           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    VOLATILE        reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    ENUM            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    STRUCT          reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    UNION           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    SEMI            reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    ASTERISK        reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    COMMA           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)
    COLON           reduce using rule 59 (enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE .)


state 138

    (65) enumerator -> identifier ASSIGN . constant_expression
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 201
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 139

    (194) unary_expression -> DEC_OP unary_expression .

    ASTERISK        reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    DIV             reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    PERCENT         reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    PLUS            reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    MINUS           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    LEFT_OP         reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_OP        reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    LE              reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    GT              reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    LE_OP           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    GE_OP           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    EQ_OP           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    NE_OP           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    AMPERSAND       reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    CARAT           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    PIPE            reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    AND_OP          reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    QMARK           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    OR_OP           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    COLON           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    CLOSEBRACKET    reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    CLOSEPAREN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    COMMA           reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    SEMI            reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    CLOSEBRACE      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    ASSIGN          reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 194 (unary_expression -> DEC_OP unary_expression .)


state 140

    (215) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 146

state 141

    (169) exclusive_or_expression -> exclusive_or_expression CARAT . and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    and_expression                 shift and go to state 202
    multiplicative_expression      shift and go to state 102
    string                         shift and go to state 90
    postfix_expression             shift and go to state 92
    equality_expression            shift and go to state 100
    primary_expression             shift and go to state 96
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    additive_expression            shift and go to state 94
    relational_expression          shift and go to state 85

state 142

    (171) and_expression -> and_expression AMPERSAND . equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    equality_expression            shift and go to state 203
    primary_expression             shift and go to state 96
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    additive_expression            shift and go to state 94
    relational_expression          shift and go to state 85

state 143

    (167) inclusive_or_expression -> inclusive_or_expression PIPE . exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    exclusive_or_expression        shift and go to state 204
    postfix_expression             shift and go to state 92
    additive_expression            shift and go to state 94
    and_expression                 shift and go to state 80
    primary_expression             shift and go to state 96
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    relational_expression          shift and go to state 85

state 144

    (147) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (190) cast_expression -> unary_expression .
    (148) assignment_operator -> . ASSIGN
    (149) assignment_operator -> . MUL_ASSIGN
    (150) assignment_operator -> . DIV_ASSIGN
    (151) assignment_operator -> . MOD_ASSIGN
    (152) assignment_operator -> . ADD_ASSIGN
    (153) assignment_operator -> . SUB_ASSIGN
    (154) assignment_operator -> . LEFT_ASSIGN
    (155) assignment_operator -> . RIGHT_ASSIGN
    (156) assignment_operator -> . AND_ASSIGN
    (157) assignment_operator -> . XOR_ASSIGN
    (158) assignment_operator -> . OR_ASSIGN

    ASTERISK        reduce using rule 190 (cast_expression -> unary_expression .)
    DIV             reduce using rule 190 (cast_expression -> unary_expression .)
    PERCENT         reduce using rule 190 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 190 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 190 (cast_expression -> unary_expression .)
    LEFT_OP         reduce using rule 190 (cast_expression -> unary_expression .)
    RIGHT_OP        reduce using rule 190 (cast_expression -> unary_expression .)
    LE              reduce using rule 190 (cast_expression -> unary_expression .)
    GT              reduce using rule 190 (cast_expression -> unary_expression .)
    LE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    GE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    EQ_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    NE_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    AMPERSAND       reduce using rule 190 (cast_expression -> unary_expression .)
    CARAT           reduce using rule 190 (cast_expression -> unary_expression .)
    PIPE            reduce using rule 190 (cast_expression -> unary_expression .)
    AND_OP          reduce using rule 190 (cast_expression -> unary_expression .)
    QMARK           reduce using rule 190 (cast_expression -> unary_expression .)
    OR_OP           reduce using rule 190 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 190 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEPAREN      reduce using rule 190 (cast_expression -> unary_expression .)
    COLON           reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEBRACKET    reduce using rule 190 (cast_expression -> unary_expression .)
    CLOSEBRACE      reduce using rule 190 (cast_expression -> unary_expression .)
    ASSIGN          shift and go to state 214
    MUL_ASSIGN      shift and go to state 211
    DIV_ASSIGN      shift and go to state 212
    MOD_ASSIGN      shift and go to state 206
    ADD_ASSIGN      shift and go to state 209
    SUB_ASSIGN      shift and go to state 205
    LEFT_ASSIGN     shift and go to state 213
    RIGHT_ASSIGN    shift and go to state 215
    AND_ASSIGN      shift and go to state 210
    XOR_ASSIGN      shift and go to state 207
    OR_ASSIGN       shift and go to state 208

    assignment_operator            shift and go to state 216

state 145

    (215) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (191) cast_expression -> OPENPAREN . type_name CLOSEPAREN cast_expression
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (95) type_name -> . specifier_qualifier_list
    (96) type_name -> . specifier_qualifier_list abstract_declarator
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    ENUM            shift and go to state 21
    OPENPAREN       shift and go to state 145
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    struct_or_union_specifier      shift and go to state 4
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    type_specifier                 shift and go to state 64
    inclusive_or_expression        shift and go to state 82
    type_name                      shift and go to state 147
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    struct_or_union                shift and go to state 6
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 149
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 146

state 146

    (215) primary_expression -> OPENPAREN expression . CLOSEPAREN
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 218
    COMMA           shift and go to state 217


state 147

    (191) cast_expression -> OPENPAREN type_name . CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 219


state 148

    (144) expression -> assignment_expression .

    CLOSEPAREN      reduce using rule 144 (expression -> assignment_expression .)
    COMMA           reduce using rule 144 (expression -> assignment_expression .)
    CLOSEBRACKET    reduce using rule 144 (expression -> assignment_expression .)
    SEMI            reduce using rule 144 (expression -> assignment_expression .)
    COLON           reduce using rule 144 (expression -> assignment_expression .)


state 149

    (95) type_name -> specifier_qualifier_list .
    (96) type_name -> specifier_qualifier_list . abstract_declarator
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . direct_abstract_declarator
    (99) abstract_declarator -> . pointer direct_abstract_declarator
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN

    CLOSEPAREN      reduce using rule 95 (type_name -> specifier_qualifier_list .)
    ASTERISK        shift and go to state 24
    OPENPAREN       shift and go to state 224
    OPENBRACKET     shift and go to state 220

    abstract_declarator            shift and go to state 221
    direct_abstract_declarator     shift and go to state 222
    pointer                        shift and go to state 223

state 150

    (146) assignment_expression -> conditional_expression .

    SEMI            reduce using rule 146 (assignment_expression -> conditional_expression .)
    COMMA           reduce using rule 146 (assignment_expression -> conditional_expression .)
    CLOSEPAREN      reduce using rule 146 (assignment_expression -> conditional_expression .)
    COLON           reduce using rule 146 (assignment_expression -> conditional_expression .)
    CLOSEBRACKET    reduce using rule 146 (assignment_expression -> conditional_expression .)
    CLOSEBRACE      reduce using rule 146 (assignment_expression -> conditional_expression .)


state 151

    (177) relational_expression -> relational_expression GT . shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 225
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 152

    (178) relational_expression -> relational_expression LE_OP . shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 226
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 153

    (176) relational_expression -> relational_expression LE . shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 227
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 154

    (179) relational_expression -> relational_expression GE_OP . shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 228
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 155

    (160) conditional_expression -> logical_or_expression QMARK . expression COLON conditional_expression
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 229

state 156

    (163) logical_or_expression -> logical_or_expression OR_OP . logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    inclusive_or_expression        shift and go to state 82
    exclusive_or_expression        shift and go to state 77
    postfix_expression             shift and go to state 92
    shift_expression               shift and go to state 99
    additive_expression            shift and go to state 94
    and_expression                 shift and go to state 80
    primary_expression             shift and go to state 96
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    logical_and_expression         shift and go to state 230
    identifier                     shift and go to state 108
    equality_expression            shift and go to state 100
    relational_expression          shift and go to state 85

state 157

    (71) direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COLON           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SEMI            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENBRACE       reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    AUTO            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    REGISTER        reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    STATIC          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    EXTERN          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    TYPEDEF         reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    VOID            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CHAR            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SHORT           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    INT             reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    LONG            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    FLOAT           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    DOUBLE          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    SIGNED          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    UNSIGNED        reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    TYPEDEF_NAME    reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CONST           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    VOLATILE        reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    ENUM            reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    STRUCT          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    UNION           reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    ASSIGN          reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 71 (direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET .)


state 158

    (196) unary_expression -> SIZEOF unary_expression .

    ASTERISK        reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    DIV             reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    PERCENT         reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    PLUS            reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    MINUS           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    LEFT_OP         reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_OP        reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    LE              reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    GT              reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    LE_OP           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    GE_OP           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    EQ_OP           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    NE_OP           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    AMPERSAND       reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    CARAT           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    PIPE            reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    AND_OP          reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    QMARK           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    OR_OP           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    COLON           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    CLOSEBRACKET    reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    CLOSEPAREN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    COMMA           reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    SEMI            reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    CLOSEBRACE      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    ASSIGN          reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    MUL_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    DIV_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    MOD_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    ADD_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    SUB_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    LEFT_ASSIGN     reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    RIGHT_ASSIGN    reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    AND_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    XOR_ASSIGN      reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)
    OR_ASSIGN       reduce using rule 196 (unary_expression -> SIZEOF unary_expression .)


state 159

    (197) unary_expression -> SIZEOF OPENPAREN . type_name CLOSEPAREN
    (215) primary_expression -> OPENPAREN . expression CLOSEPAREN
    (95) type_name -> . specifier_qualifier_list
    (96) type_name -> . specifier_qualifier_list abstract_declarator
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (50) specifier_qualifier_list -> . type_specifier
    (51) specifier_qualifier_list -> . type_specifier specifier_qualifier_list
    (52) specifier_qualifier_list -> . type_qualifier
    (53) specifier_qualifier_list -> . type_qualifier specifier_qualifier_list
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    ENUM            shift and go to state 21
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    struct_or_union_specifier      shift and go to state 4
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    type_specifier                 shift and go to state 64
    inclusive_or_expression        shift and go to state 82
    type_name                      shift and go to state 231
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    struct_or_union                shift and go to state 6
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 66
    specifier_qualifier_list       shift and go to state 149
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 146

state 160

    (205) postfix_expression -> postfix_expression OPENBRACKET . expression CLOSEBRACKET
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 232

state 161

    (211) postfix_expression -> postfix_expression DEC_OP .

    OPENBRACKET     reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    OPENPAREN       reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    PERIOD          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    PTR_OP          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    INC_OP          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    DEC_OP          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    ASSIGN          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    MUL_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    DIV_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    MOD_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    ADD_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    SUB_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_ASSIGN     reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_ASSIGN    reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    AND_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    XOR_ASSIGN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    OR_ASSIGN       reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    ASTERISK        reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    DIV             reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    PERCENT         reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    PLUS            reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    MINUS           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    LEFT_OP         reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    RIGHT_OP        reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    LE              reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    GT              reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    LE_OP           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    GE_OP           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    EQ_OP           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    NE_OP           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    AMPERSAND       reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    CARAT           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    PIPE            reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    AND_OP          reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    QMARK           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    OR_OP           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    SEMI            reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    COMMA           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEPAREN      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEBRACKET    reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    CLOSEBRACE      reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)
    COLON           reduce using rule 211 (postfix_expression -> postfix_expression DEC_OP .)


state 162

    (210) postfix_expression -> postfix_expression INC_OP .

    OPENBRACKET     reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    OPENPAREN       reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    PERIOD          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    PTR_OP          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    INC_OP          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    DEC_OP          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    ASSIGN          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    MUL_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    DIV_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    MOD_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    ADD_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    SUB_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_ASSIGN     reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_ASSIGN    reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    AND_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    XOR_ASSIGN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    OR_ASSIGN       reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    ASTERISK        reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    DIV             reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    PERCENT         reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    PLUS            reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    MINUS           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    LEFT_OP         reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    RIGHT_OP        reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    LE              reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    GT              reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    LE_OP           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    GE_OP           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    EQ_OP           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    NE_OP           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    AMPERSAND       reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    CARAT           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    PIPE            reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    AND_OP          reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    QMARK           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    OR_OP           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    SEMI            reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    COMMA           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEPAREN      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEBRACKET    reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    CLOSEBRACE      reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)
    COLON           reduce using rule 210 (postfix_expression -> postfix_expression INC_OP .)


state 163

    (208) postfix_expression -> postfix_expression PERIOD . identifier
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 233

state 164

    (209) postfix_expression -> postfix_expression PTR_OP . identifier
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 234

state 165

    (206) postfix_expression -> postfix_expression OPENPAREN . CLOSEPAREN
    (207) postfix_expression -> postfix_expression OPENPAREN . argument_expression_list CLOSEPAREN
    (216) argument_expression_list -> . assignment_expression
    (217) argument_expression_list -> . argument_expression_list COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 235
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 236
    multiplicative_expression      shift and go to state 102
    argument_expression_list       shift and go to state 237
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108

state 166

    (184) additive_expression -> additive_expression PLUS . multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 238
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    primary_expression             shift and go to state 96

state 167

    (185) additive_expression -> additive_expression MINUS . multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 239
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    primary_expression             shift and go to state 96

state 168

    (165) logical_and_expression -> logical_and_expression AND_OP . inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    inclusive_or_expression        shift and go to state 240
    exclusive_or_expression        shift and go to state 77
    postfix_expression             shift and go to state 92
    additive_expression            shift and go to state 94
    and_expression                 shift and go to state 80
    primary_expression             shift and go to state 96
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    relational_expression          shift and go to state 85

state 169

    (181) shift_expression -> shift_expression LEFT_OP . additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    additive_expression            shift and go to state 241
    primary_expression             shift and go to state 96

state 170

    (182) shift_expression -> shift_expression RIGHT_OP . additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    additive_expression            shift and go to state 242
    primary_expression             shift and go to state 96

state 171

    (174) equality_expression -> equality_expression NE_OP . relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 243
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 172

    (173) equality_expression -> equality_expression EQ_OP . relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    multiplicative_expression      shift and go to state 102
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 244
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    identifier                     shift and go to state 108
    shift_expression               shift and go to state 99
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96

state 173

    (189) multiplicative_expression -> multiplicative_expression PERCENT . cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    cast_expression                shift and go to state 245
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 174

    (187) multiplicative_expression -> multiplicative_expression ASTERISK . cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    cast_expression                shift and go to state 246
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 175

    (188) multiplicative_expression -> multiplicative_expression DIV . cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    cast_expression                shift and go to state 247
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 176

    (193) unary_expression -> INC_OP unary_expression .

    ASTERISK        reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    DIV             reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    PERCENT         reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    PLUS            reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    MINUS           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    LEFT_OP         reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    RIGHT_OP        reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    LE              reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    GT              reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    LE_OP           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    GE_OP           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    EQ_OP           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    NE_OP           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    AMPERSAND       reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    CARAT           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    PIPE            reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    AND_OP          reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    QMARK           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    OR_OP           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    COLON           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    CLOSEBRACKET    reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    CLOSEPAREN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    COMMA           reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    SEMI            reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    CLOSEBRACE      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    ASSIGN          reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    MUL_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    DIV_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    MOD_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    ADD_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    SUB_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    LEFT_ASSIGN     reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    RIGHT_ASSIGN    reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    AND_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    XOR_ASSIGN      reduce using rule 193 (unary_expression -> INC_OP unary_expression .)
    OR_ASSIGN       reduce using rule 193 (unary_expression -> INC_OP unary_expression .)


state 177

    (195) unary_expression -> unary_operator cast_expression .

    ASTERISK        reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    DIV             reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    PERCENT         reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    PLUS            reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    MINUS           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    LEFT_OP         reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    RIGHT_OP        reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    LE              reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    GT              reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    LE_OP           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    GE_OP           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    EQ_OP           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    NE_OP           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    AMPERSAND       reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    CARAT           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    PIPE            reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    AND_OP          reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    QMARK           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    OR_OP           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    COLON           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    CLOSEBRACKET    reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    CLOSEPAREN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    SEMI            reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    CLOSEBRACE      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    ASSIGN          reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    MUL_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    DIV_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    MOD_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    ADD_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    SUB_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    LEFT_ASSIGN     reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    RIGHT_ASSIGN    reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    AND_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    XOR_ASSIGN      reduce using rule 195 (unary_expression -> unary_operator cast_expression .)
    OR_ASSIGN       reduce using rule 195 (unary_expression -> unary_operator cast_expression .)


state 178

    (83) parameter_list -> parameter_declaration .

    COMMA           reduce using rule 83 (parameter_list -> parameter_declaration .)
    CLOSEPAREN      reduce using rule 83 (parameter_list -> parameter_declaration .)


state 179

    (73) direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list . push_scope_e CLOSEPAREN
    (226) push_scope_e -> .

    CLOSEPAREN      reduce using rule 226 (push_scope_e -> .)

    push_scope_e                   shift and go to state 248

state 180

    (85) parameter_declaration -> declaration_specifiers . declarator
    (86) parameter_declaration -> declaration_specifiers .
    (87) parameter_declaration -> declaration_specifiers . abstract_declarator
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . direct_abstract_declarator
    (99) abstract_declarator -> . pointer direct_abstract_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (223) identifier -> . IDENTIFIER

    COMMA           reduce using rule 86 (parameter_declaration -> declaration_specifiers .)
    CLOSEPAREN      reduce using rule 86 (parameter_declaration -> declaration_specifiers .)
    OPENPAREN       shift and go to state 252
    ASTERISK        shift and go to state 24
    OPENBRACKET     shift and go to state 220
    IDENTIFIER      shift and go to state 17

    direct_declarator              shift and go to state 23
    abstract_declarator            shift and go to state 249
    declarator                     shift and go to state 250
    direct_abstract_declarator     shift and go to state 222
    identifier                     shift and go to state 38
    pointer                        shift and go to state 251

state 181

    (81) parameter_type_list -> parameter_list .
    (82) parameter_type_list -> parameter_list . COMMA ELIPSIS
    (84) parameter_list -> parameter_list . COMMA parameter_declaration

    CLOSEPAREN      reduce using rule 81 (parameter_type_list -> parameter_list .)
    COMMA           shift and go to state 253


state 182

    (89) identifier_list -> identifier_list COMMA . identifier
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 254

state 183

    (74) direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    COLON           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SEMI            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    COMMA           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    OPENBRACE       reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    AUTO            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    REGISTER        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    STATIC          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    EXTERN          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    TYPEDEF         reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    VOID            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CHAR            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SHORT           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    INT             reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    LONG            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    FLOAT           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    DOUBLE          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    SIGNED          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    UNSIGNED        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CONST           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    VOLATILE        reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    ENUM            reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    STRUCT          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    UNION           reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    ASSIGN          reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 74 (direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN .)


state 184

    (46) init_declarator_list -> init_declarator_list COMMA init_declarator .

    SEMI            reduce using rule 46 (init_declarator_list -> init_declarator_list COMMA init_declarator .)
    COMMA           reduce using rule 46 (init_declarator_list -> init_declarator_list COMMA init_declarator .)


state 185

    (47) init_declarator -> declarator .
    (48) init_declarator -> declarator . ASSIGN initializer

    SEMI            reduce using rule 47 (init_declarator -> declarator .)
    COMMA           reduce using rule 47 (init_declarator -> declarator .)
    ASSIGN          shift and go to state 119


state 186

    (8) function_definition -> declaration_specifiers declarator declaration_list compound_statement .

    OPENPAREN       reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ASTERISK        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    AUTO            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    REGISTER        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STATIC          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    EXTERN          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEDEF         reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOID            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CHAR            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SHORT           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    INT             reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    LONG            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    DOUBLE          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    SIGNED          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNSIGNED        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    TYPEDEF_NAME    reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    CONST           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    VOLATILE        reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    IDENTIFIER      reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    ENUM            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    STRUCT          reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    UNION           reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)
    $end            reduce using rule 8 (function_definition -> declaration_specifiers declarator declaration_list compound_statement .)


state 187

    (91) initializer -> OPENBRACE . initializer_list CLOSEBRACE
    (92) initializer -> OPENBRACE . initializer_list COMMA CLOSEBRACE
    (93) initializer_list -> . initializer
    (94) initializer_list -> . initializer_list COMMA initializer
    (90) initializer -> . assignment_expression
    (91) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (92) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    OPENBRACE       shift and go to state 187
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    initializer                    shift and go to state 255
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 189
    multiplicative_expression      shift and go to state 102
    conditional_expression         shift and go to state 150
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    initializer_list               shift and go to state 256
    identifier                     shift and go to state 108

state 188

    (48) init_declarator -> declarator ASSIGN initializer .

    SEMI            reduce using rule 48 (init_declarator -> declarator ASSIGN initializer .)
    COMMA           reduce using rule 48 (init_declarator -> declarator ASSIGN initializer .)


state 189

    (90) initializer -> assignment_expression .

    SEMI            reduce using rule 90 (initializer -> assignment_expression .)
    COMMA           reduce using rule 90 (initializer -> assignment_expression .)
    CLOSEBRACE      reduce using rule 90 (initializer -> assignment_expression .)


state 190

    (122) compound_statement -> OPENBRACE push_scope_e declaration_list . pop_scope_e CLOSEBRACE
    (123) compound_statement -> OPENBRACE push_scope_e declaration_list . statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (12) declaration_list -> declaration_list . insert_mode_e declaration
    (227) pop_scope_e -> .
    (124) statement_list -> . read_mode_e statement
    (125) statement_list -> . statement_list read_mode_e statement
    (224) insert_mode_e -> .
    (225) read_mode_e -> .

    CLOSEBRACE      reduce using rule 227 (pop_scope_e -> .)
    AUTO            reduce using rule 224 (insert_mode_e -> .)
    REGISTER        reduce using rule 224 (insert_mode_e -> .)
    STATIC          reduce using rule 224 (insert_mode_e -> .)
    EXTERN          reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF         reduce using rule 224 (insert_mode_e -> .)
    VOID            reduce using rule 224 (insert_mode_e -> .)
    CHAR            reduce using rule 224 (insert_mode_e -> .)
    SHORT           reduce using rule 224 (insert_mode_e -> .)
    INT             reduce using rule 224 (insert_mode_e -> .)
    LONG            reduce using rule 224 (insert_mode_e -> .)
    FLOAT           reduce using rule 224 (insert_mode_e -> .)
    DOUBLE          reduce using rule 224 (insert_mode_e -> .)
    SIGNED          reduce using rule 224 (insert_mode_e -> .)
    UNSIGNED        reduce using rule 224 (insert_mode_e -> .)
    TYPEDEF_NAME    reduce using rule 224 (insert_mode_e -> .)
    CONST           reduce using rule 224 (insert_mode_e -> .)
    VOLATILE        reduce using rule 224 (insert_mode_e -> .)
    ENUM            reduce using rule 224 (insert_mode_e -> .)
    STRUCT          reduce using rule 224 (insert_mode_e -> .)
    UNION           reduce using rule 224 (insert_mode_e -> .)
    CASE            reduce using rule 225 (read_mode_e -> .)
    DEFAULT         reduce using rule 225 (read_mode_e -> .)
    OPENBRACE       reduce using rule 225 (read_mode_e -> .)
    SEMI            reduce using rule 225 (read_mode_e -> .)
    IF              reduce using rule 225 (read_mode_e -> .)
    SWITCH          reduce using rule 225 (read_mode_e -> .)
    WHILE           reduce using rule 225 (read_mode_e -> .)
    DO              reduce using rule 225 (read_mode_e -> .)
    FOR             reduce using rule 225 (read_mode_e -> .)
    GOTO            reduce using rule 225 (read_mode_e -> .)
    CONTINUE        reduce using rule 225 (read_mode_e -> .)
    BREAK           reduce using rule 225 (read_mode_e -> .)
    RETURN          reduce using rule 225 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 225 (read_mode_e -> .)
    INC_OP          reduce using rule 225 (read_mode_e -> .)
    DEC_OP          reduce using rule 225 (read_mode_e -> .)
    SIZEOF          reduce using rule 225 (read_mode_e -> .)
    AMPERSAND       reduce using rule 225 (read_mode_e -> .)
    ASTERISK        reduce using rule 225 (read_mode_e -> .)
    PLUS            reduce using rule 225 (read_mode_e -> .)
    MINUS           reduce using rule 225 (read_mode_e -> .)
    TILDE           reduce using rule 225 (read_mode_e -> .)
    BANG            reduce using rule 225 (read_mode_e -> .)
    OPENPAREN       reduce using rule 225 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 225 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 225 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 225 (read_mode_e -> .)

    insert_mode_e                  shift and go to state 124
    pop_scope_e                    shift and go to state 257
    statement_list                 shift and go to state 258
    read_mode_e                    shift and go to state 192

state 191

    (121) compound_statement -> OPENBRACE push_scope_e statement_list . pop_scope_e CLOSEBRACE
    (125) statement_list -> statement_list . read_mode_e statement
    (227) pop_scope_e -> .
    (225) read_mode_e -> .

    CLOSEBRACE      reduce using rule 227 (pop_scope_e -> .)
    CASE            reduce using rule 225 (read_mode_e -> .)
    DEFAULT         reduce using rule 225 (read_mode_e -> .)
    OPENBRACE       reduce using rule 225 (read_mode_e -> .)
    SEMI            reduce using rule 225 (read_mode_e -> .)
    IF              reduce using rule 225 (read_mode_e -> .)
    SWITCH          reduce using rule 225 (read_mode_e -> .)
    WHILE           reduce using rule 225 (read_mode_e -> .)
    DO              reduce using rule 225 (read_mode_e -> .)
    FOR             reduce using rule 225 (read_mode_e -> .)
    GOTO            reduce using rule 225 (read_mode_e -> .)
    CONTINUE        reduce using rule 225 (read_mode_e -> .)
    BREAK           reduce using rule 225 (read_mode_e -> .)
    RETURN          reduce using rule 225 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 225 (read_mode_e -> .)
    INC_OP          reduce using rule 225 (read_mode_e -> .)
    DEC_OP          reduce using rule 225 (read_mode_e -> .)
    SIZEOF          reduce using rule 225 (read_mode_e -> .)
    AMPERSAND       reduce using rule 225 (read_mode_e -> .)
    ASTERISK        reduce using rule 225 (read_mode_e -> .)
    PLUS            reduce using rule 225 (read_mode_e -> .)
    MINUS           reduce using rule 225 (read_mode_e -> .)
    TILDE           reduce using rule 225 (read_mode_e -> .)
    BANG            reduce using rule 225 (read_mode_e -> .)
    OPENPAREN       reduce using rule 225 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 225 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 225 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 225 (read_mode_e -> .)

    read_mode_e                    shift and go to state 260
    pop_scope_e                    shift and go to state 259

state 192

    (124) statement_list -> read_mode_e . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 275
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 193

    (12) declaration_list -> declaration_list insert_mode_e declaration .

    OPENBRACE       reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    AUTO            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    REGISTER        reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    STATIC          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    EXTERN          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    TYPEDEF         reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    VOID            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CHAR            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    SHORT           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    INT             reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    LONG            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    FLOAT           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    DOUBLE          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    SIGNED          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    UNSIGNED        reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    TYPEDEF_NAME    reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CONST           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    VOLATILE        reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    ENUM            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    STRUCT          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    UNION           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CLOSEBRACE      reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CASE            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    DEFAULT         reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    SEMI            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    IF              reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    SWITCH          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    WHILE           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    DO              reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    FOR             reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    GOTO            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CONTINUE        reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    BREAK           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    RETURN          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    IDENTIFIER      reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    INC_OP          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    DEC_OP          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    SIZEOF          reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    AMPERSAND       reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    ASTERISK        reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    PLUS            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    MINUS           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    TILDE           reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    BANG            reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    OPENPAREN       reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    INTEGER_CONSTANT reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    CHARACTER_CONSTANT reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    FLOATING_CONSTANT reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    ENUMERATION_CONSTANT reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)
    STRING_LITERAL  reduce using rule 12 (declaration_list -> declaration_list insert_mode_e declaration .)


state 194

    (38) struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .

    AUTO            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    REGISTER        reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    STATIC          reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    EXTERN          reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOID            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CHAR            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SHORT           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    INT             reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    LONG            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    FLOAT           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    DOUBLE          reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SIGNED          reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CONST           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    VOLATILE        reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    ENUM            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    STRUCT          reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    UNION           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    ASTERISK        reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    COMMA           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    SEMI            reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)
    COLON           reduce using rule 38 (struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE .)


state 195

    (58) struct_declarator -> declarator COLON . constant_expression
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    conditional_expression         shift and go to state 107
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 282
    identifier                     shift and go to state 108

state 196

    (57) struct_declarator -> COLON constant_expression .

    SEMI            reduce using rule 57 (struct_declarator -> COLON constant_expression .)
    COMMA           reduce using rule 57 (struct_declarator -> COLON constant_expression .)


state 197

    (55) struct_declarator_list -> struct_declarator_list COMMA . struct_declarator
    (56) struct_declarator -> . declarator
    (57) struct_declarator -> . COLON constant_expression
    (58) struct_declarator -> . declarator COLON constant_expression
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (223) identifier -> . IDENTIFIER

    COLON           shift and go to state 133
    OPENPAREN       shift and go to state 11
    ASTERISK        shift and go to state 24
    IDENTIFIER      shift and go to state 17

    struct_declarator              shift and go to state 283
    direct_declarator              shift and go to state 23
    declarator                     shift and go to state 132
    identifier                     shift and go to state 38
    pointer                        shift and go to state 10

state 198

    (49) struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .

    CLOSEBRACE      reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOID            reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CHAR            reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SHORT           reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    INT             reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    LONG            reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    FLOAT           reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    DOUBLE          reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    SIGNED          reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNSIGNED        reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    TYPEDEF_NAME    reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    CONST           reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    VOLATILE        reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    ENUM            reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    STRUCT          reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)
    UNION           reduce using rule 49 (struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI .)


state 199

    (60) enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .

    AUTO            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    REGISTER        reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    STATIC          reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    EXTERN          reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF         reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    VOID            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CHAR            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SHORT           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    INT             reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    LONG            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    FLOAT           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    DOUBLE          reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SIGNED          reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    UNSIGNED        reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CONST           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    VOLATILE        reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    ENUM            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    STRUCT          reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    UNION           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    SEMI            reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    OPENPAREN       reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    ASTERISK        reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    IDENTIFIER      reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    OPENBRACKET     reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    COMMA           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    CLOSEPAREN      reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)
    COLON           reduce using rule 60 (enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE .)


state 200

    (63) enumerator_list -> enumerator_list COMMA enumerator .

    CLOSEBRACE      reduce using rule 63 (enumerator_list -> enumerator_list COMMA enumerator .)
    COMMA           reduce using rule 63 (enumerator_list -> enumerator_list COMMA enumerator .)


state 201

    (65) enumerator -> identifier ASSIGN constant_expression .

    CLOSEBRACE      reduce using rule 65 (enumerator -> identifier ASSIGN constant_expression .)
    COMMA           reduce using rule 65 (enumerator -> identifier ASSIGN constant_expression .)


state 202

    (169) exclusive_or_expression -> exclusive_or_expression CARAT and_expression .
    (171) and_expression -> and_expression . AMPERSAND equality_expression

    CARAT           reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    PIPE            reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    AND_OP          reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    QMARK           reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    OR_OP           reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    SEMI            reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    COMMA           reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEPAREN      reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEBRACKET    reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    CLOSEBRACE      reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    COLON           reduce using rule 169 (exclusive_or_expression -> exclusive_or_expression CARAT and_expression .)
    AMPERSAND       shift and go to state 142


state 203

    (171) and_expression -> and_expression AMPERSAND equality_expression .
    (173) equality_expression -> equality_expression . EQ_OP relational_expression
    (174) equality_expression -> equality_expression . NE_OP relational_expression

    AMPERSAND       reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    CARAT           reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    PIPE            reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    AND_OP          reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    QMARK           reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    OR_OP           reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    SEMI            reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    COMMA           reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEPAREN      reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    COLON           reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEBRACKET    reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    CLOSEBRACE      reduce using rule 171 (and_expression -> and_expression AMPERSAND equality_expression .)
    EQ_OP           shift and go to state 172
    NE_OP           shift and go to state 171


state 204

    (167) inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .
    (169) exclusive_or_expression -> exclusive_or_expression . CARAT and_expression

    PIPE            reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    AND_OP          reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    QMARK           reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    OR_OP           reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    SEMI            reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    COMMA           reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEPAREN      reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CLOSEBRACE      reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    COLON           reduce using rule 167 (inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression .)
    CARAT           shift and go to state 141


state 205

    (153) assignment_operator -> SUB_ASSIGN .

    INC_OP          reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    DEC_OP          reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    SIZEOF          reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    AMPERSAND       reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    ASTERISK        reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    PLUS            reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    MINUS           reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    TILDE           reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    BANG            reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    OPENPAREN       reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    IDENTIFIER      reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 153 (assignment_operator -> SUB_ASSIGN .)


state 206

    (151) assignment_operator -> MOD_ASSIGN .

    INC_OP          reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    DEC_OP          reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    SIZEOF          reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    AMPERSAND       reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    ASTERISK        reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    PLUS            reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    MINUS           reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    TILDE           reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    BANG            reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    OPENPAREN       reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)
    STRING_LITERAL  reduce using rule 151 (assignment_operator -> MOD_ASSIGN .)


state 207

    (157) assignment_operator -> XOR_ASSIGN .

    INC_OP          reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    DEC_OP          reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    SIZEOF          reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    AMPERSAND       reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    ASTERISK        reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    PLUS            reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    MINUS           reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    TILDE           reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    BANG            reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    OPENPAREN       reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 157 (assignment_operator -> XOR_ASSIGN .)


state 208

    (158) assignment_operator -> OR_ASSIGN .

    INC_OP          reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    DEC_OP          reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    SIZEOF          reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    AMPERSAND       reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    ASTERISK        reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    PLUS            reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    MINUS           reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    TILDE           reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    BANG            reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    OPENPAREN       reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 158 (assignment_operator -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 158 (assignment_operator -> OR_ASSIGN .)


state 209

    (152) assignment_operator -> ADD_ASSIGN .

    INC_OP          reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    DEC_OP          reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    SIZEOF          reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    AMPERSAND       reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    ASTERISK        reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    PLUS            reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    MINUS           reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    TILDE           reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    BANG            reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    OPENPAREN       reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    IDENTIFIER      reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 152 (assignment_operator -> ADD_ASSIGN .)


state 210

    (156) assignment_operator -> AND_ASSIGN .

    INC_OP          reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    DEC_OP          reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    SIZEOF          reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    AMPERSAND       reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    ASTERISK        reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    PLUS            reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    MINUS           reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    TILDE           reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    BANG            reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    OPENPAREN       reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 156 (assignment_operator -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 156 (assignment_operator -> AND_ASSIGN .)


state 211

    (149) assignment_operator -> MUL_ASSIGN .

    INC_OP          reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    DEC_OP          reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    SIZEOF          reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    AMPERSAND       reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    ASTERISK        reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    PLUS            reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    MINUS           reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    TILDE           reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    BANG            reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    OPENPAREN       reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    IDENTIFIER      reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 149 (assignment_operator -> MUL_ASSIGN .)


state 212

    (150) assignment_operator -> DIV_ASSIGN .

    INC_OP          reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    DEC_OP          reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    SIZEOF          reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    AMPERSAND       reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    ASTERISK        reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    PLUS            reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    MINUS           reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    TILDE           reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    BANG            reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    OPENPAREN       reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    IDENTIFIER      reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)
    STRING_LITERAL  reduce using rule 150 (assignment_operator -> DIV_ASSIGN .)


state 213

    (154) assignment_operator -> LEFT_ASSIGN .

    INC_OP          reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    DEC_OP          reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    SIZEOF          reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    AMPERSAND       reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    ASTERISK        reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    PLUS            reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    MINUS           reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    TILDE           reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    BANG            reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    OPENPAREN       reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    IDENTIFIER      reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 154 (assignment_operator -> LEFT_ASSIGN .)


state 214

    (148) assignment_operator -> ASSIGN .

    INC_OP          reduce using rule 148 (assignment_operator -> ASSIGN .)
    DEC_OP          reduce using rule 148 (assignment_operator -> ASSIGN .)
    SIZEOF          reduce using rule 148 (assignment_operator -> ASSIGN .)
    AMPERSAND       reduce using rule 148 (assignment_operator -> ASSIGN .)
    ASTERISK        reduce using rule 148 (assignment_operator -> ASSIGN .)
    PLUS            reduce using rule 148 (assignment_operator -> ASSIGN .)
    MINUS           reduce using rule 148 (assignment_operator -> ASSIGN .)
    TILDE           reduce using rule 148 (assignment_operator -> ASSIGN .)
    BANG            reduce using rule 148 (assignment_operator -> ASSIGN .)
    OPENPAREN       reduce using rule 148 (assignment_operator -> ASSIGN .)
    IDENTIFIER      reduce using rule 148 (assignment_operator -> ASSIGN .)
    INTEGER_CONSTANT reduce using rule 148 (assignment_operator -> ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 148 (assignment_operator -> ASSIGN .)
    FLOATING_CONSTANT reduce using rule 148 (assignment_operator -> ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 148 (assignment_operator -> ASSIGN .)
    STRING_LITERAL  reduce using rule 148 (assignment_operator -> ASSIGN .)


state 215

    (155) assignment_operator -> RIGHT_ASSIGN .

    INC_OP          reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    DEC_OP          reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    SIZEOF          reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    AMPERSAND       reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    ASTERISK        reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    PLUS            reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    MINUS           reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    TILDE           reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    BANG            reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    OPENPAREN       reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    IDENTIFIER      reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    INTEGER_CONSTANT reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    CHARACTER_CONSTANT reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    FLOATING_CONSTANT reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    ENUMERATION_CONSTANT reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)
    STRING_LITERAL  reduce using rule 155 (assignment_operator -> RIGHT_ASSIGN .)


state 216

    (147) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 284
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108

state 217

    (145) expression -> expression COMMA . assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 285
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108

state 218

    (215) primary_expression -> OPENPAREN expression CLOSEPAREN .

    OPENBRACKET     reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OPENPAREN       reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PERIOD          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PTR_OP          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    INC_OP          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DEC_OP          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ASSIGN          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    ASTERISK        reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    DIV             reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PERCENT         reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PLUS            reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    MINUS           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LEFT_OP         reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    RIGHT_OP        reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LE              reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    GT              reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    LE_OP           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    GE_OP           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    EQ_OP           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    NE_OP           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AMPERSAND       reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CARAT           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    PIPE            reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    AND_OP          reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    QMARK           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    OR_OP           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    SEMI            reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    COMMA           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)
    COLON           reduce using rule 215 (primary_expression -> OPENPAREN expression CLOSEPAREN .)


state 219

    (191) cast_expression -> OPENPAREN type_name CLOSEPAREN . cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    string                         shift and go to state 90
    unary_expression               shift and go to state 74
    postfix_expression             shift and go to state 92
    primary_expression             shift and go to state 96
    cast_expression                shift and go to state 286
    identifier                     shift and go to state 108
    unary_operator                 shift and go to state 106

state 220

    (101) direct_abstract_declarator -> OPENBRACKET . CLOSEBRACKET
    (102) direct_abstract_declarator -> OPENBRACKET . constant_expression CLOSEBRACKET
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 287
    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 288
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 221

    (96) type_name -> specifier_qualifier_list abstract_declarator .

    CLOSEPAREN      reduce using rule 96 (type_name -> specifier_qualifier_list abstract_declarator .)


state 222

    (98) abstract_declarator -> direct_abstract_declarator .
    (103) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN parameter_type_list CLOSEPAREN

    COMMA           reduce using rule 98 (abstract_declarator -> direct_abstract_declarator .)
    CLOSEPAREN      reduce using rule 98 (abstract_declarator -> direct_abstract_declarator .)
    OPENBRACKET     shift and go to state 289
    OPENPAREN       shift and go to state 290


state 223

    (97) abstract_declarator -> pointer .
    (99) abstract_declarator -> pointer . direct_abstract_declarator
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN

    CLOSEPAREN      reduce using rule 97 (abstract_declarator -> pointer .)
    OPENPAREN       shift and go to state 224
    OPENBRACKET     shift and go to state 220

    direct_abstract_declarator     shift and go to state 291

state 224

    (100) direct_abstract_declarator -> OPENPAREN . abstract_declarator CLOSEPAREN
    (105) direct_abstract_declarator -> OPENPAREN . CLOSEPAREN
    (106) direct_abstract_declarator -> OPENPAREN . parameter_type_list CLOSEPAREN
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . direct_abstract_declarator
    (99) abstract_declarator -> . pointer direct_abstract_declarator
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers
    (87) parameter_declaration -> . declaration_specifiers abstract_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 292
    ASTERISK        shift and go to state 24
    OPENPAREN       shift and go to state 224
    OPENBRACKET     shift and go to state 220
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    parameter_list                 shift and go to state 181
    type_qualifier                 shift and go to state 32
    parameter_type_list            shift and go to state 293
    parameter_declaration          shift and go to state 178
    abstract_declarator            shift and go to state 294
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    declaration_specifiers         shift and go to state 180
    direct_abstract_declarator     shift and go to state 222
    pointer                        shift and go to state 223

state 225

    (177) relational_expression -> relational_expression GT shift_expression .
    (181) shift_expression -> shift_expression . LEFT_OP additive_expression
    (182) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    GT              reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    LE_OP           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    GE_OP           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    EQ_OP           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    NE_OP           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    AMPERSAND       reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    CARAT           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    PIPE            reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    AND_OP          reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    QMARK           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    OR_OP           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEPAREN      reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    COMMA           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEBRACKET    reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    SEMI            reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    COLON           reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    CLOSEBRACE      reduce using rule 177 (relational_expression -> relational_expression GT shift_expression .)
    LEFT_OP         shift and go to state 169
    RIGHT_OP        shift and go to state 170


state 226

    (178) relational_expression -> relational_expression LE_OP shift_expression .
    (181) shift_expression -> shift_expression . LEFT_OP additive_expression
    (182) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    GT              reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    LE_OP           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    GE_OP           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    EQ_OP           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    NE_OP           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    AMPERSAND       reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    CARAT           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    PIPE            reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    AND_OP          reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    QMARK           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    OR_OP           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEPAREN      reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    COMMA           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEBRACKET    reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    SEMI            reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    COLON           reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    CLOSEBRACE      reduce using rule 178 (relational_expression -> relational_expression LE_OP shift_expression .)
    LEFT_OP         shift and go to state 169
    RIGHT_OP        shift and go to state 170


state 227

    (176) relational_expression -> relational_expression LE shift_expression .
    (181) shift_expression -> shift_expression . LEFT_OP additive_expression
    (182) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    GT              reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    LE_OP           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    GE_OP           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    EQ_OP           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    NE_OP           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    AMPERSAND       reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    CARAT           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    PIPE            reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    AND_OP          reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    QMARK           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    OR_OP           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEPAREN      reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    COMMA           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEBRACKET    reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    SEMI            reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    COLON           reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    CLOSEBRACE      reduce using rule 176 (relational_expression -> relational_expression LE shift_expression .)
    LEFT_OP         shift and go to state 169
    RIGHT_OP        shift and go to state 170


state 228

    (179) relational_expression -> relational_expression GE_OP shift_expression .
    (181) shift_expression -> shift_expression . LEFT_OP additive_expression
    (182) shift_expression -> shift_expression . RIGHT_OP additive_expression

    LE              reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    GT              reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    LE_OP           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    GE_OP           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    EQ_OP           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    NE_OP           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    AMPERSAND       reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    CARAT           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    PIPE            reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    AND_OP          reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    QMARK           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    OR_OP           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEPAREN      reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    COMMA           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEBRACKET    reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    SEMI            reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    COLON           reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    CLOSEBRACE      reduce using rule 179 (relational_expression -> relational_expression GE_OP shift_expression .)
    LEFT_OP         shift and go to state 169
    RIGHT_OP        shift and go to state 170


state 229

    (160) conditional_expression -> logical_or_expression QMARK expression . COLON conditional_expression
    (145) expression -> expression . COMMA assignment_expression

    COLON           shift and go to state 295
    COMMA           shift and go to state 217


state 230

    (163) logical_or_expression -> logical_or_expression OR_OP logical_and_expression .
    (165) logical_and_expression -> logical_and_expression . AND_OP inclusive_or_expression

    QMARK           reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    OR_OP           reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEPAREN      reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COMMA           reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    COLON           reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEBRACKET    reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    SEMI            reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    CLOSEBRACE      reduce using rule 163 (logical_or_expression -> logical_or_expression OR_OP logical_and_expression .)
    AND_OP          shift and go to state 168


state 231

    (197) unary_expression -> SIZEOF OPENPAREN type_name . CLOSEPAREN

    CLOSEPAREN      shift and go to state 296


state 232

    (205) postfix_expression -> postfix_expression OPENBRACKET expression . CLOSEBRACKET
    (145) expression -> expression . COMMA assignment_expression

    CLOSEBRACKET    shift and go to state 297
    COMMA           shift and go to state 217


state 233

    (208) postfix_expression -> postfix_expression PERIOD identifier .

    OPENBRACKET     reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    OPENPAREN       reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    PERIOD          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    PTR_OP          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    INC_OP          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    DEC_OP          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    ASSIGN          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    MUL_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIV_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    MOD_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    ADD_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    SUB_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    LEFT_ASSIGN     reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    RIGHT_ASSIGN    reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    AND_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    XOR_ASSIGN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    OR_ASSIGN       reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    ASTERISK        reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    DIV             reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    PERCENT         reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    PLUS            reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    MINUS           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    LEFT_OP         reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    RIGHT_OP        reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    LE              reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    GT              reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    LE_OP           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    GE_OP           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    EQ_OP           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    NE_OP           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    AMPERSAND       reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    CARAT           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    PIPE            reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    AND_OP          reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    QMARK           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    OR_OP           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    SEMI            reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    COMMA           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEPAREN      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEBRACKET    reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    CLOSEBRACE      reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)
    COLON           reduce using rule 208 (postfix_expression -> postfix_expression PERIOD identifier .)


state 234

    (209) postfix_expression -> postfix_expression PTR_OP identifier .

    OPENBRACKET     reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OPENPAREN       reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PERIOD          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PTR_OP          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    INC_OP          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DEC_OP          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ASSIGN          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MUL_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DIV_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MOD_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ADD_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    SUB_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LEFT_ASSIGN     reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    RIGHT_ASSIGN    reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AND_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    XOR_ASSIGN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OR_ASSIGN       reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    ASTERISK        reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    DIV             reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PERCENT         reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PLUS            reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    MINUS           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LEFT_OP         reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    RIGHT_OP        reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LE              reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    GT              reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    LE_OP           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    GE_OP           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    EQ_OP           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    NE_OP           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AMPERSAND       reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CARAT           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    PIPE            reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    AND_OP          reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    QMARK           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    OR_OP           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    SEMI            reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    COMMA           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEPAREN      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEBRACKET    reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    CLOSEBRACE      reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)
    COLON           reduce using rule 209 (postfix_expression -> postfix_expression PTR_OP identifier .)


state 235

    (206) postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PERIOD          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PTR_OP          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    INC_OP          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DEC_OP          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ASSIGN          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    ASTERISK        reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    DIV             reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PERCENT         reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PLUS            reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    MINUS           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LEFT_OP         reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    RIGHT_OP        reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LE              reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    GT              reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    LE_OP           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    GE_OP           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    EQ_OP           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    NE_OP           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AMPERSAND       reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CARAT           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    PIPE            reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    AND_OP          reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    QMARK           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    OR_OP           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    SEMI            reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)
    COLON           reduce using rule 206 (postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN .)


state 236

    (216) argument_expression_list -> assignment_expression .

    CLOSEPAREN      reduce using rule 216 (argument_expression_list -> assignment_expression .)
    COMMA           reduce using rule 216 (argument_expression_list -> assignment_expression .)


state 237

    (207) postfix_expression -> postfix_expression OPENPAREN argument_expression_list . CLOSEPAREN
    (217) argument_expression_list -> argument_expression_list . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 298
    COMMA           shift and go to state 299


state 238

    (184) additive_expression -> additive_expression PLUS multiplicative_expression .
    (187) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (188) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (189) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEFT_OP         reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RIGHT_OP        reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE              reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LE_OP           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GE_OP           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ_OP           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NE_OP           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AMPERSAND       reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CARAT           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    PIPE            reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND_OP          reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    QMARK           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR_OP           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMI            reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEPAREN      reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    CLOSEBRACE      reduce using rule 184 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    ASTERISK        shift and go to state 174
    DIV             shift and go to state 175
    PERCENT         shift and go to state 173


state 239

    (185) additive_expression -> additive_expression MINUS multiplicative_expression .
    (187) multiplicative_expression -> multiplicative_expression . ASTERISK cast_expression
    (188) multiplicative_expression -> multiplicative_expression . DIV cast_expression
    (189) multiplicative_expression -> multiplicative_expression . PERCENT cast_expression

    PLUS            reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEFT_OP         reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RIGHT_OP        reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LE              reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LE_OP           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GE_OP           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ_OP           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NE_OP           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AMPERSAND       reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CARAT           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    PIPE            reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND_OP          reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    QMARK           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR_OP           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMI            reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEPAREN      reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEBRACKET    reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    CLOSEBRACE      reduce using rule 185 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    ASTERISK        shift and go to state 174
    DIV             shift and go to state 175
    PERCENT         shift and go to state 173


state 240

    (165) logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .
    (167) inclusive_or_expression -> inclusive_or_expression . PIPE exclusive_or_expression

    AND_OP          reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    QMARK           reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    OR_OP           reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEBRACE      reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COMMA           reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEPAREN      reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    SEMI            reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    CLOSEBRACKET    reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    COLON           reduce using rule 165 (logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression .)
    PIPE            shift and go to state 143


state 241

    (181) shift_expression -> shift_expression LEFT_OP additive_expression .
    (184) additive_expression -> additive_expression . PLUS multiplicative_expression
    (185) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    RIGHT_OP        reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LE              reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GT              reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    LE_OP           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    GE_OP           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    EQ_OP           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    NE_OP           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    AMPERSAND       reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CARAT           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    PIPE            reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    AND_OP          reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    QMARK           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    OR_OP           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    SEMI            reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COMMA           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    COLON           reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEBRACKET    reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEPAREN      reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    CLOSEBRACE      reduce using rule 181 (shift_expression -> shift_expression LEFT_OP additive_expression .)
    PLUS            shift and go to state 166
    MINUS           shift and go to state 167


state 242

    (182) shift_expression -> shift_expression RIGHT_OP additive_expression .
    (184) additive_expression -> additive_expression . PLUS multiplicative_expression
    (185) additive_expression -> additive_expression . MINUS multiplicative_expression

    LEFT_OP         reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    RIGHT_OP        reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LE              reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GT              reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    LE_OP           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    GE_OP           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    EQ_OP           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    NE_OP           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    AMPERSAND       reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CARAT           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    PIPE            reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    AND_OP          reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    QMARK           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    OR_OP           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    SEMI            reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COMMA           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    COLON           reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEBRACKET    reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEPAREN      reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    CLOSEBRACE      reduce using rule 182 (shift_expression -> shift_expression RIGHT_OP additive_expression .)
    PLUS            shift and go to state 166
    MINUS           shift and go to state 167


state 243

    (174) equality_expression -> equality_expression NE_OP relational_expression .
    (176) relational_expression -> relational_expression . LE shift_expression
    (177) relational_expression -> relational_expression . GT shift_expression
    (178) relational_expression -> relational_expression . LE_OP shift_expression
    (179) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    NE_OP           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    AMPERSAND       reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    CARAT           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    PIPE            reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    AND_OP          reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    QMARK           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    OR_OP           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEBRACKET    reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEPAREN      reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    COMMA           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    SEMI            reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    CLOSEBRACE      reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    COLON           reduce using rule 174 (equality_expression -> equality_expression NE_OP relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 151
    LE_OP           shift and go to state 152
    GE_OP           shift and go to state 154


state 244

    (173) equality_expression -> equality_expression EQ_OP relational_expression .
    (176) relational_expression -> relational_expression . LE shift_expression
    (177) relational_expression -> relational_expression . GT shift_expression
    (178) relational_expression -> relational_expression . LE_OP shift_expression
    (179) relational_expression -> relational_expression . GE_OP shift_expression

    EQ_OP           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    NE_OP           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    AMPERSAND       reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CARAT           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    PIPE            reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    AND_OP          reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    QMARK           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    OR_OP           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEBRACKET    reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEPAREN      reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COMMA           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    SEMI            reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    CLOSEBRACE      reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    COLON           reduce using rule 173 (equality_expression -> equality_expression EQ_OP relational_expression .)
    LE              shift and go to state 153
    GT              shift and go to state 151
    LE_OP           shift and go to state 152
    GE_OP           shift and go to state 154


state 245

    (189) multiplicative_expression -> multiplicative_expression PERCENT cast_expression .

    ASTERISK        reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    DIV             reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PERCENT         reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PLUS            reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    MINUS           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LEFT_OP         reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    RIGHT_OP        reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LE              reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    GT              reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    LE_OP           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    GE_OP           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    EQ_OP           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    NE_OP           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    AMPERSAND       reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CARAT           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    PIPE            reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    AND_OP          reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    QMARK           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    OR_OP           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEBRACKET    reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEPAREN      reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    COMMA           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    SEMI            reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    CLOSEBRACE      reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)
    COLON           reduce using rule 189 (multiplicative_expression -> multiplicative_expression PERCENT cast_expression .)


state 246

    (187) multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .

    ASTERISK        reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    DIV             reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PERCENT         reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PLUS            reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    MINUS           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LEFT_OP         reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    RIGHT_OP        reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LE              reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    GT              reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    LE_OP           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    GE_OP           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    EQ_OP           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    NE_OP           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    AMPERSAND       reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CARAT           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    PIPE            reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    AND_OP          reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    QMARK           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    OR_OP           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEBRACKET    reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEPAREN      reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    COMMA           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    SEMI            reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    CLOSEBRACE      reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)
    COLON           reduce using rule 187 (multiplicative_expression -> multiplicative_expression ASTERISK cast_expression .)


state 247

    (188) multiplicative_expression -> multiplicative_expression DIV cast_expression .

    ASTERISK        reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    DIV             reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PERCENT         reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PLUS            reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    MINUS           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LEFT_OP         reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    RIGHT_OP        reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LE              reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    GT              reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    LE_OP           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    GE_OP           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    EQ_OP           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    NE_OP           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    AMPERSAND       reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CARAT           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    PIPE            reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    AND_OP          reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    QMARK           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    OR_OP           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEBRACKET    reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEPAREN      reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    COMMA           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    SEMI            reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    CLOSEBRACE      reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)
    COLON           reduce using rule 188 (multiplicative_expression -> multiplicative_expression DIV cast_expression .)


state 248

    (73) direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e . CLOSEPAREN

    CLOSEPAREN      shift and go to state 300


state 249

    (87) parameter_declaration -> declaration_specifiers abstract_declarator .

    COMMA           reduce using rule 87 (parameter_declaration -> declaration_specifiers abstract_declarator .)
    CLOSEPAREN      reduce using rule 87 (parameter_declaration -> declaration_specifiers abstract_declarator .)


state 250

    (85) parameter_declaration -> declaration_specifiers declarator .

    COMMA           reduce using rule 85 (parameter_declaration -> declaration_specifiers declarator .)
    CLOSEPAREN      reduce using rule 85 (parameter_declaration -> declaration_specifiers declarator .)


state 251

    (67) declarator -> pointer . direct_declarator
    (97) abstract_declarator -> pointer .
    (99) abstract_declarator -> pointer . direct_abstract_declarator
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (223) identifier -> . IDENTIFIER

    COMMA           reduce using rule 97 (abstract_declarator -> pointer .)
    CLOSEPAREN      reduce using rule 97 (abstract_declarator -> pointer .)
    OPENPAREN       shift and go to state 252
    OPENBRACKET     shift and go to state 220
    IDENTIFIER      shift and go to state 17

    direct_declarator              shift and go to state 42
    direct_abstract_declarator     shift and go to state 291
    identifier                     shift and go to state 38

state 252

    (69) direct_declarator -> OPENPAREN . declarator CLOSEPAREN
    (100) direct_abstract_declarator -> OPENPAREN . abstract_declarator CLOSEPAREN
    (105) direct_abstract_declarator -> OPENPAREN . CLOSEPAREN
    (106) direct_abstract_declarator -> OPENPAREN . parameter_type_list CLOSEPAREN
    (66) declarator -> . direct_declarator
    (67) declarator -> . pointer direct_declarator
    (97) abstract_declarator -> . pointer
    (98) abstract_declarator -> . direct_abstract_declarator
    (99) abstract_declarator -> . pointer direct_abstract_declarator
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (68) direct_declarator -> . identifier
    (69) direct_declarator -> . OPENPAREN declarator CLOSEPAREN
    (70) direct_declarator -> . direct_declarator OPENBRACKET CLOSEBRACKET
    (71) direct_declarator -> . direct_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (72) direct_declarator -> . direct_declarator OPENPAREN CLOSEPAREN
    (73) direct_declarator -> . direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN
    (74) direct_declarator -> . direct_declarator OPENPAREN identifier_list CLOSEPAREN
    (75) pointer -> . ASTERISK
    (76) pointer -> . ASTERISK type_qualifier_list
    (77) pointer -> . ASTERISK pointer
    (78) pointer -> . ASTERISK type_qualifier_list pointer
    (100) direct_abstract_declarator -> . OPENPAREN abstract_declarator CLOSEPAREN
    (101) direct_abstract_declarator -> . OPENBRACKET CLOSEBRACKET
    (102) direct_abstract_declarator -> . OPENBRACKET constant_expression CLOSEBRACKET
    (103) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> . direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET
    (105) direct_abstract_declarator -> . OPENPAREN CLOSEPAREN
    (106) direct_abstract_declarator -> . OPENPAREN parameter_type_list CLOSEPAREN
    (107) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> . direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (223) identifier -> . IDENTIFIER
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers
    (87) parameter_declaration -> . declaration_specifiers abstract_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 292
    OPENPAREN       shift and go to state 252
    ASTERISK        shift and go to state 24
    OPENBRACKET     shift and go to state 220
    IDENTIFIER      shift and go to state 17
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union_specifier      shift and go to state 4
    pointer                        shift and go to state 251
    type_specifier                 shift and go to state 13
    struct_or_union                shift and go to state 6
    parameter_type_list            shift and go to state 293
    parameter_declaration          shift and go to state 178
    direct_declarator              shift and go to state 23
    declaration_specifiers         shift and go to state 180
    parameter_list                 shift and go to state 181
    enum_specifier                 shift and go to state 34
    type_qualifier                 shift and go to state 32
    abstract_declarator            shift and go to state 294
    declarator                     shift and go to state 43
    direct_abstract_declarator     shift and go to state 222
    identifier                     shift and go to state 38

state 253

    (82) parameter_type_list -> parameter_list COMMA . ELIPSIS
    (84) parameter_list -> parameter_list COMMA . parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers
    (87) parameter_declaration -> . declaration_specifiers abstract_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    ELIPSIS         shift and go to state 301
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    enum_specifier                 shift and go to state 34
    parameter_declaration          shift and go to state 302
    type_qualifier                 shift and go to state 32
    struct_or_union_specifier      shift and go to state 4
    declaration_specifiers         shift and go to state 180

state 254

    (89) identifier_list -> identifier_list COMMA identifier .

    CLOSEPAREN      reduce using rule 89 (identifier_list -> identifier_list COMMA identifier .)
    COMMA           reduce using rule 89 (identifier_list -> identifier_list COMMA identifier .)


state 255

    (93) initializer_list -> initializer .

    CLOSEBRACE      reduce using rule 93 (initializer_list -> initializer .)
    COMMA           reduce using rule 93 (initializer_list -> initializer .)


state 256

    (91) initializer -> OPENBRACE initializer_list . CLOSEBRACE
    (92) initializer -> OPENBRACE initializer_list . COMMA CLOSEBRACE
    (94) initializer_list -> initializer_list . COMMA initializer

    CLOSEBRACE      shift and go to state 303
    COMMA           shift and go to state 304


state 257

    (122) compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 305


state 258

    (123) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list . insert_mode_e pop_scope_e CLOSEBRACE
    (125) statement_list -> statement_list . read_mode_e statement
    (224) insert_mode_e -> .
    (225) read_mode_e -> .

    CLOSEBRACE      reduce using rule 224 (insert_mode_e -> .)
    CASE            reduce using rule 225 (read_mode_e -> .)
    DEFAULT         reduce using rule 225 (read_mode_e -> .)
    OPENBRACE       reduce using rule 225 (read_mode_e -> .)
    SEMI            reduce using rule 225 (read_mode_e -> .)
    IF              reduce using rule 225 (read_mode_e -> .)
    SWITCH          reduce using rule 225 (read_mode_e -> .)
    WHILE           reduce using rule 225 (read_mode_e -> .)
    DO              reduce using rule 225 (read_mode_e -> .)
    FOR             reduce using rule 225 (read_mode_e -> .)
    GOTO            reduce using rule 225 (read_mode_e -> .)
    CONTINUE        reduce using rule 225 (read_mode_e -> .)
    BREAK           reduce using rule 225 (read_mode_e -> .)
    RETURN          reduce using rule 225 (read_mode_e -> .)
    IDENTIFIER      reduce using rule 225 (read_mode_e -> .)
    INC_OP          reduce using rule 225 (read_mode_e -> .)
    DEC_OP          reduce using rule 225 (read_mode_e -> .)
    SIZEOF          reduce using rule 225 (read_mode_e -> .)
    AMPERSAND       reduce using rule 225 (read_mode_e -> .)
    ASTERISK        reduce using rule 225 (read_mode_e -> .)
    PLUS            reduce using rule 225 (read_mode_e -> .)
    MINUS           reduce using rule 225 (read_mode_e -> .)
    TILDE           reduce using rule 225 (read_mode_e -> .)
    BANG            reduce using rule 225 (read_mode_e -> .)
    OPENPAREN       reduce using rule 225 (read_mode_e -> .)
    INTEGER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    CHARACTER_CONSTANT reduce using rule 225 (read_mode_e -> .)
    FLOATING_CONSTANT reduce using rule 225 (read_mode_e -> .)
    ENUMERATION_CONSTANT reduce using rule 225 (read_mode_e -> .)
    STRING_LITERAL  reduce using rule 225 (read_mode_e -> .)

    insert_mode_e                  shift and go to state 306
    read_mode_e                    shift and go to state 260

state 259

    (121) compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 307


state 260

    (125) statement_list -> statement_list read_mode_e . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 308
    unary_operator                 shift and go to state 106
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 261

    (111) statement -> expression_statement .

    CLOSEBRACE      reduce using rule 111 (statement -> expression_statement .)
    CASE            reduce using rule 111 (statement -> expression_statement .)
    DEFAULT         reduce using rule 111 (statement -> expression_statement .)
    OPENBRACE       reduce using rule 111 (statement -> expression_statement .)
    SEMI            reduce using rule 111 (statement -> expression_statement .)
    IF              reduce using rule 111 (statement -> expression_statement .)
    SWITCH          reduce using rule 111 (statement -> expression_statement .)
    WHILE           reduce using rule 111 (statement -> expression_statement .)
    DO              reduce using rule 111 (statement -> expression_statement .)
    FOR             reduce using rule 111 (statement -> expression_statement .)
    GOTO            reduce using rule 111 (statement -> expression_statement .)
    CONTINUE        reduce using rule 111 (statement -> expression_statement .)
    BREAK           reduce using rule 111 (statement -> expression_statement .)
    RETURN          reduce using rule 111 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 111 (statement -> expression_statement .)
    INC_OP          reduce using rule 111 (statement -> expression_statement .)
    DEC_OP          reduce using rule 111 (statement -> expression_statement .)
    SIZEOF          reduce using rule 111 (statement -> expression_statement .)
    AMPERSAND       reduce using rule 111 (statement -> expression_statement .)
    ASTERISK        reduce using rule 111 (statement -> expression_statement .)
    PLUS            reduce using rule 111 (statement -> expression_statement .)
    MINUS           reduce using rule 111 (statement -> expression_statement .)
    TILDE           reduce using rule 111 (statement -> expression_statement .)
    BANG            reduce using rule 111 (statement -> expression_statement .)
    OPENPAREN       reduce using rule 111 (statement -> expression_statement .)
    INTEGER_CONSTANT reduce using rule 111 (statement -> expression_statement .)
    CHARACTER_CONSTANT reduce using rule 111 (statement -> expression_statement .)
    FLOATING_CONSTANT reduce using rule 111 (statement -> expression_statement .)
    ENUMERATION_CONSTANT reduce using rule 111 (statement -> expression_statement .)
    STRING_LITERAL  reduce using rule 111 (statement -> expression_statement .)
    ELSE            reduce using rule 111 (statement -> expression_statement .)


state 262

    (113) statement -> iteration_statement .

    CLOSEBRACE      reduce using rule 113 (statement -> iteration_statement .)
    CASE            reduce using rule 113 (statement -> iteration_statement .)
    DEFAULT         reduce using rule 113 (statement -> iteration_statement .)
    OPENBRACE       reduce using rule 113 (statement -> iteration_statement .)
    SEMI            reduce using rule 113 (statement -> iteration_statement .)
    IF              reduce using rule 113 (statement -> iteration_statement .)
    SWITCH          reduce using rule 113 (statement -> iteration_statement .)
    WHILE           reduce using rule 113 (statement -> iteration_statement .)
    DO              reduce using rule 113 (statement -> iteration_statement .)
    FOR             reduce using rule 113 (statement -> iteration_statement .)
    GOTO            reduce using rule 113 (statement -> iteration_statement .)
    CONTINUE        reduce using rule 113 (statement -> iteration_statement .)
    BREAK           reduce using rule 113 (statement -> iteration_statement .)
    RETURN          reduce using rule 113 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 113 (statement -> iteration_statement .)
    INC_OP          reduce using rule 113 (statement -> iteration_statement .)
    DEC_OP          reduce using rule 113 (statement -> iteration_statement .)
    SIZEOF          reduce using rule 113 (statement -> iteration_statement .)
    AMPERSAND       reduce using rule 113 (statement -> iteration_statement .)
    ASTERISK        reduce using rule 113 (statement -> iteration_statement .)
    PLUS            reduce using rule 113 (statement -> iteration_statement .)
    MINUS           reduce using rule 113 (statement -> iteration_statement .)
    TILDE           reduce using rule 113 (statement -> iteration_statement .)
    BANG            reduce using rule 113 (statement -> iteration_statement .)
    OPENPAREN       reduce using rule 113 (statement -> iteration_statement .)
    INTEGER_CONSTANT reduce using rule 113 (statement -> iteration_statement .)
    CHARACTER_CONSTANT reduce using rule 113 (statement -> iteration_statement .)
    FLOATING_CONSTANT reduce using rule 113 (statement -> iteration_statement .)
    ENUMERATION_CONSTANT reduce using rule 113 (statement -> iteration_statement .)
    STRING_LITERAL  reduce using rule 113 (statement -> iteration_statement .)
    ELSE            reduce using rule 113 (statement -> iteration_statement .)


state 263

    (139) jump_statement -> GOTO . identifier SEMI
    (223) identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 17

    identifier                     shift and go to state 309

state 264

    (109) statement -> labeled_statement .

    CLOSEBRACE      reduce using rule 109 (statement -> labeled_statement .)
    CASE            reduce using rule 109 (statement -> labeled_statement .)
    DEFAULT         reduce using rule 109 (statement -> labeled_statement .)
    OPENBRACE       reduce using rule 109 (statement -> labeled_statement .)
    SEMI            reduce using rule 109 (statement -> labeled_statement .)
    IF              reduce using rule 109 (statement -> labeled_statement .)
    SWITCH          reduce using rule 109 (statement -> labeled_statement .)
    WHILE           reduce using rule 109 (statement -> labeled_statement .)
    DO              reduce using rule 109 (statement -> labeled_statement .)
    FOR             reduce using rule 109 (statement -> labeled_statement .)
    GOTO            reduce using rule 109 (statement -> labeled_statement .)
    CONTINUE        reduce using rule 109 (statement -> labeled_statement .)
    BREAK           reduce using rule 109 (statement -> labeled_statement .)
    RETURN          reduce using rule 109 (statement -> labeled_statement .)
    IDENTIFIER      reduce using rule 109 (statement -> labeled_statement .)
    INC_OP          reduce using rule 109 (statement -> labeled_statement .)
    DEC_OP          reduce using rule 109 (statement -> labeled_statement .)
    SIZEOF          reduce using rule 109 (statement -> labeled_statement .)
    AMPERSAND       reduce using rule 109 (statement -> labeled_statement .)
    ASTERISK        reduce using rule 109 (statement -> labeled_statement .)
    PLUS            reduce using rule 109 (statement -> labeled_statement .)
    MINUS           reduce using rule 109 (statement -> labeled_statement .)
    TILDE           reduce using rule 109 (statement -> labeled_statement .)
    BANG            reduce using rule 109 (statement -> labeled_statement .)
    OPENPAREN       reduce using rule 109 (statement -> labeled_statement .)
    INTEGER_CONSTANT reduce using rule 109 (statement -> labeled_statement .)
    CHARACTER_CONSTANT reduce using rule 109 (statement -> labeled_statement .)
    FLOATING_CONSTANT reduce using rule 109 (statement -> labeled_statement .)
    ENUMERATION_CONSTANT reduce using rule 109 (statement -> labeled_statement .)
    STRING_LITERAL  reduce using rule 109 (statement -> labeled_statement .)
    ELSE            reduce using rule 109 (statement -> labeled_statement .)


state 265

    (115) labeled_statement -> identifier . COLON statement
    (212) primary_expression -> identifier .

    COLON           shift and go to state 310
    OPENBRACKET     reduce using rule 212 (primary_expression -> identifier .)
    OPENPAREN       reduce using rule 212 (primary_expression -> identifier .)
    PERIOD          reduce using rule 212 (primary_expression -> identifier .)
    PTR_OP          reduce using rule 212 (primary_expression -> identifier .)
    INC_OP          reduce using rule 212 (primary_expression -> identifier .)
    DEC_OP          reduce using rule 212 (primary_expression -> identifier .)
    ASSIGN          reduce using rule 212 (primary_expression -> identifier .)
    MUL_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    DIV_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    MOD_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    ADD_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    SUB_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    LEFT_ASSIGN     reduce using rule 212 (primary_expression -> identifier .)
    RIGHT_ASSIGN    reduce using rule 212 (primary_expression -> identifier .)
    AND_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    XOR_ASSIGN      reduce using rule 212 (primary_expression -> identifier .)
    OR_ASSIGN       reduce using rule 212 (primary_expression -> identifier .)
    ASTERISK        reduce using rule 212 (primary_expression -> identifier .)
    DIV             reduce using rule 212 (primary_expression -> identifier .)
    PERCENT         reduce using rule 212 (primary_expression -> identifier .)
    PLUS            reduce using rule 212 (primary_expression -> identifier .)
    MINUS           reduce using rule 212 (primary_expression -> identifier .)
    LEFT_OP         reduce using rule 212 (primary_expression -> identifier .)
    RIGHT_OP        reduce using rule 212 (primary_expression -> identifier .)
    LE              reduce using rule 212 (primary_expression -> identifier .)
    GT              reduce using rule 212 (primary_expression -> identifier .)
    LE_OP           reduce using rule 212 (primary_expression -> identifier .)
    GE_OP           reduce using rule 212 (primary_expression -> identifier .)
    EQ_OP           reduce using rule 212 (primary_expression -> identifier .)
    NE_OP           reduce using rule 212 (primary_expression -> identifier .)
    AMPERSAND       reduce using rule 212 (primary_expression -> identifier .)
    CARAT           reduce using rule 212 (primary_expression -> identifier .)
    PIPE            reduce using rule 212 (primary_expression -> identifier .)
    AND_OP          reduce using rule 212 (primary_expression -> identifier .)
    QMARK           reduce using rule 212 (primary_expression -> identifier .)
    OR_OP           reduce using rule 212 (primary_expression -> identifier .)
    SEMI            reduce using rule 212 (primary_expression -> identifier .)
    COMMA           reduce using rule 212 (primary_expression -> identifier .)


state 266

    (142) jump_statement -> RETURN . SEMI
    (143) jump_statement -> RETURN . expression SEMI
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 311
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 312

state 267

    (110) statement -> compound_statement .

    CLOSEBRACE      reduce using rule 110 (statement -> compound_statement .)
    CASE            reduce using rule 110 (statement -> compound_statement .)
    DEFAULT         reduce using rule 110 (statement -> compound_statement .)
    OPENBRACE       reduce using rule 110 (statement -> compound_statement .)
    SEMI            reduce using rule 110 (statement -> compound_statement .)
    IF              reduce using rule 110 (statement -> compound_statement .)
    SWITCH          reduce using rule 110 (statement -> compound_statement .)
    WHILE           reduce using rule 110 (statement -> compound_statement .)
    DO              reduce using rule 110 (statement -> compound_statement .)
    FOR             reduce using rule 110 (statement -> compound_statement .)
    GOTO            reduce using rule 110 (statement -> compound_statement .)
    CONTINUE        reduce using rule 110 (statement -> compound_statement .)
    BREAK           reduce using rule 110 (statement -> compound_statement .)
    RETURN          reduce using rule 110 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 110 (statement -> compound_statement .)
    INC_OP          reduce using rule 110 (statement -> compound_statement .)
    DEC_OP          reduce using rule 110 (statement -> compound_statement .)
    SIZEOF          reduce using rule 110 (statement -> compound_statement .)
    AMPERSAND       reduce using rule 110 (statement -> compound_statement .)
    ASTERISK        reduce using rule 110 (statement -> compound_statement .)
    PLUS            reduce using rule 110 (statement -> compound_statement .)
    MINUS           reduce using rule 110 (statement -> compound_statement .)
    TILDE           reduce using rule 110 (statement -> compound_statement .)
    BANG            reduce using rule 110 (statement -> compound_statement .)
    OPENPAREN       reduce using rule 110 (statement -> compound_statement .)
    INTEGER_CONSTANT reduce using rule 110 (statement -> compound_statement .)
    CHARACTER_CONSTANT reduce using rule 110 (statement -> compound_statement .)
    FLOATING_CONSTANT reduce using rule 110 (statement -> compound_statement .)
    ENUMERATION_CONSTANT reduce using rule 110 (statement -> compound_statement .)
    STRING_LITERAL  reduce using rule 110 (statement -> compound_statement .)
    ELSE            reduce using rule 110 (statement -> compound_statement .)


state 268

    (131) iteration_statement -> FOR . OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> FOR . OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> FOR . OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> FOR . OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> FOR . OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR . OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR . OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR . OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 313


state 269

    (140) jump_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 314


state 270

    (119) expression_statement -> expression . SEMI
    (145) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 315
    COMMA           shift and go to state 217


state 271

    (117) labeled_statement -> DEFAULT . COLON statement

    COLON           shift and go to state 316


state 272

    (129) iteration_statement -> WHILE . OPENPAREN expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 317


state 273

    (116) labeled_statement -> CASE . constant_expression COLON statement
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 318
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 274

    (128) selection_statement -> SWITCH . OPENPAREN expression CLOSEPAREN statement

    OPENPAREN       shift and go to state 319


state 275

    (124) statement_list -> read_mode_e statement .

    CLOSEBRACE      reduce using rule 124 (statement_list -> read_mode_e statement .)
    CASE            reduce using rule 124 (statement_list -> read_mode_e statement .)
    DEFAULT         reduce using rule 124 (statement_list -> read_mode_e statement .)
    OPENBRACE       reduce using rule 124 (statement_list -> read_mode_e statement .)
    SEMI            reduce using rule 124 (statement_list -> read_mode_e statement .)
    IF              reduce using rule 124 (statement_list -> read_mode_e statement .)
    SWITCH          reduce using rule 124 (statement_list -> read_mode_e statement .)
    WHILE           reduce using rule 124 (statement_list -> read_mode_e statement .)
    DO              reduce using rule 124 (statement_list -> read_mode_e statement .)
    FOR             reduce using rule 124 (statement_list -> read_mode_e statement .)
    GOTO            reduce using rule 124 (statement_list -> read_mode_e statement .)
    CONTINUE        reduce using rule 124 (statement_list -> read_mode_e statement .)
    BREAK           reduce using rule 124 (statement_list -> read_mode_e statement .)
    RETURN          reduce using rule 124 (statement_list -> read_mode_e statement .)
    IDENTIFIER      reduce using rule 124 (statement_list -> read_mode_e statement .)
    INC_OP          reduce using rule 124 (statement_list -> read_mode_e statement .)
    DEC_OP          reduce using rule 124 (statement_list -> read_mode_e statement .)
    SIZEOF          reduce using rule 124 (statement_list -> read_mode_e statement .)
    AMPERSAND       reduce using rule 124 (statement_list -> read_mode_e statement .)
    ASTERISK        reduce using rule 124 (statement_list -> read_mode_e statement .)
    PLUS            reduce using rule 124 (statement_list -> read_mode_e statement .)
    MINUS           reduce using rule 124 (statement_list -> read_mode_e statement .)
    TILDE           reduce using rule 124 (statement_list -> read_mode_e statement .)
    BANG            reduce using rule 124 (statement_list -> read_mode_e statement .)
    OPENPAREN       reduce using rule 124 (statement_list -> read_mode_e statement .)
    INTEGER_CONSTANT reduce using rule 124 (statement_list -> read_mode_e statement .)
    CHARACTER_CONSTANT reduce using rule 124 (statement_list -> read_mode_e statement .)
    FLOATING_CONSTANT reduce using rule 124 (statement_list -> read_mode_e statement .)
    ENUMERATION_CONSTANT reduce using rule 124 (statement_list -> read_mode_e statement .)
    STRING_LITERAL  reduce using rule 124 (statement_list -> read_mode_e statement .)


state 276

    (114) statement -> jump_statement .

    CLOSEBRACE      reduce using rule 114 (statement -> jump_statement .)
    CASE            reduce using rule 114 (statement -> jump_statement .)
    DEFAULT         reduce using rule 114 (statement -> jump_statement .)
    OPENBRACE       reduce using rule 114 (statement -> jump_statement .)
    SEMI            reduce using rule 114 (statement -> jump_statement .)
    IF              reduce using rule 114 (statement -> jump_statement .)
    SWITCH          reduce using rule 114 (statement -> jump_statement .)
    WHILE           reduce using rule 114 (statement -> jump_statement .)
    DO              reduce using rule 114 (statement -> jump_statement .)
    FOR             reduce using rule 114 (statement -> jump_statement .)
    GOTO            reduce using rule 114 (statement -> jump_statement .)
    CONTINUE        reduce using rule 114 (statement -> jump_statement .)
    BREAK           reduce using rule 114 (statement -> jump_statement .)
    RETURN          reduce using rule 114 (statement -> jump_statement .)
    IDENTIFIER      reduce using rule 114 (statement -> jump_statement .)
    INC_OP          reduce using rule 114 (statement -> jump_statement .)
    DEC_OP          reduce using rule 114 (statement -> jump_statement .)
    SIZEOF          reduce using rule 114 (statement -> jump_statement .)
    AMPERSAND       reduce using rule 114 (statement -> jump_statement .)
    ASTERISK        reduce using rule 114 (statement -> jump_statement .)
    PLUS            reduce using rule 114 (statement -> jump_statement .)
    MINUS           reduce using rule 114 (statement -> jump_statement .)
    TILDE           reduce using rule 114 (statement -> jump_statement .)
    BANG            reduce using rule 114 (statement -> jump_statement .)
    OPENPAREN       reduce using rule 114 (statement -> jump_statement .)
    INTEGER_CONSTANT reduce using rule 114 (statement -> jump_statement .)
    CHARACTER_CONSTANT reduce using rule 114 (statement -> jump_statement .)
    FLOATING_CONSTANT reduce using rule 114 (statement -> jump_statement .)
    ENUMERATION_CONSTANT reduce using rule 114 (statement -> jump_statement .)
    STRING_LITERAL  reduce using rule 114 (statement -> jump_statement .)
    ELSE            reduce using rule 114 (statement -> jump_statement .)


state 277

    (141) jump_statement -> BREAK . SEMI

    SEMI            shift and go to state 320


state 278

    (130) iteration_statement -> DO . statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 321
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 279

    (118) expression_statement -> SEMI .

    CLOSEBRACE      reduce using rule 118 (expression_statement -> SEMI .)
    CASE            reduce using rule 118 (expression_statement -> SEMI .)
    DEFAULT         reduce using rule 118 (expression_statement -> SEMI .)
    OPENBRACE       reduce using rule 118 (expression_statement -> SEMI .)
    SEMI            reduce using rule 118 (expression_statement -> SEMI .)
    IF              reduce using rule 118 (expression_statement -> SEMI .)
    SWITCH          reduce using rule 118 (expression_statement -> SEMI .)
    WHILE           reduce using rule 118 (expression_statement -> SEMI .)
    DO              reduce using rule 118 (expression_statement -> SEMI .)
    FOR             reduce using rule 118 (expression_statement -> SEMI .)
    GOTO            reduce using rule 118 (expression_statement -> SEMI .)
    CONTINUE        reduce using rule 118 (expression_statement -> SEMI .)
    BREAK           reduce using rule 118 (expression_statement -> SEMI .)
    RETURN          reduce using rule 118 (expression_statement -> SEMI .)
    IDENTIFIER      reduce using rule 118 (expression_statement -> SEMI .)
    INC_OP          reduce using rule 118 (expression_statement -> SEMI .)
    DEC_OP          reduce using rule 118 (expression_statement -> SEMI .)
    SIZEOF          reduce using rule 118 (expression_statement -> SEMI .)
    AMPERSAND       reduce using rule 118 (expression_statement -> SEMI .)
    ASTERISK        reduce using rule 118 (expression_statement -> SEMI .)
    PLUS            reduce using rule 118 (expression_statement -> SEMI .)
    MINUS           reduce using rule 118 (expression_statement -> SEMI .)
    TILDE           reduce using rule 118 (expression_statement -> SEMI .)
    BANG            reduce using rule 118 (expression_statement -> SEMI .)
    OPENPAREN       reduce using rule 118 (expression_statement -> SEMI .)
    INTEGER_CONSTANT reduce using rule 118 (expression_statement -> SEMI .)
    CHARACTER_CONSTANT reduce using rule 118 (expression_statement -> SEMI .)
    FLOATING_CONSTANT reduce using rule 118 (expression_statement -> SEMI .)
    ENUMERATION_CONSTANT reduce using rule 118 (expression_statement -> SEMI .)
    STRING_LITERAL  reduce using rule 118 (expression_statement -> SEMI .)
    ELSE            reduce using rule 118 (expression_statement -> SEMI .)


state 280

    (112) statement -> selection_statement .

    CLOSEBRACE      reduce using rule 112 (statement -> selection_statement .)
    CASE            reduce using rule 112 (statement -> selection_statement .)
    DEFAULT         reduce using rule 112 (statement -> selection_statement .)
    OPENBRACE       reduce using rule 112 (statement -> selection_statement .)
    SEMI            reduce using rule 112 (statement -> selection_statement .)
    IF              reduce using rule 112 (statement -> selection_statement .)
    SWITCH          reduce using rule 112 (statement -> selection_statement .)
    WHILE           reduce using rule 112 (statement -> selection_statement .)
    DO              reduce using rule 112 (statement -> selection_statement .)
    FOR             reduce using rule 112 (statement -> selection_statement .)
    GOTO            reduce using rule 112 (statement -> selection_statement .)
    CONTINUE        reduce using rule 112 (statement -> selection_statement .)
    BREAK           reduce using rule 112 (statement -> selection_statement .)
    RETURN          reduce using rule 112 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 112 (statement -> selection_statement .)
    INC_OP          reduce using rule 112 (statement -> selection_statement .)
    DEC_OP          reduce using rule 112 (statement -> selection_statement .)
    SIZEOF          reduce using rule 112 (statement -> selection_statement .)
    AMPERSAND       reduce using rule 112 (statement -> selection_statement .)
    ASTERISK        reduce using rule 112 (statement -> selection_statement .)
    PLUS            reduce using rule 112 (statement -> selection_statement .)
    MINUS           reduce using rule 112 (statement -> selection_statement .)
    TILDE           reduce using rule 112 (statement -> selection_statement .)
    BANG            reduce using rule 112 (statement -> selection_statement .)
    OPENPAREN       reduce using rule 112 (statement -> selection_statement .)
    INTEGER_CONSTANT reduce using rule 112 (statement -> selection_statement .)
    CHARACTER_CONSTANT reduce using rule 112 (statement -> selection_statement .)
    FLOATING_CONSTANT reduce using rule 112 (statement -> selection_statement .)
    ENUMERATION_CONSTANT reduce using rule 112 (statement -> selection_statement .)
    STRING_LITERAL  reduce using rule 112 (statement -> selection_statement .)
    ELSE            reduce using rule 112 (statement -> selection_statement .)


state 281

    (126) selection_statement -> IF . OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> IF . OPENPAREN expression CLOSEPAREN statement ELSE statement

    OPENPAREN       shift and go to state 322


state 282

    (58) struct_declarator -> declarator COLON constant_expression .

    SEMI            reduce using rule 58 (struct_declarator -> declarator COLON constant_expression .)
    COMMA           reduce using rule 58 (struct_declarator -> declarator COLON constant_expression .)


state 283

    (55) struct_declarator_list -> struct_declarator_list COMMA struct_declarator .

    SEMI            reduce using rule 55 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)
    COMMA           reduce using rule 55 (struct_declarator_list -> struct_declarator_list COMMA struct_declarator .)


state 284

    (147) assignment_expression -> unary_expression assignment_operator assignment_expression .

    SEMI            reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COMMA           reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEPAREN      reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COLON           reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEBRACKET    reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    CLOSEBRACE      reduce using rule 147 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 285

    (145) expression -> expression COMMA assignment_expression .

    CLOSEPAREN      reduce using rule 145 (expression -> expression COMMA assignment_expression .)
    COMMA           reduce using rule 145 (expression -> expression COMMA assignment_expression .)
    CLOSEBRACKET    reduce using rule 145 (expression -> expression COMMA assignment_expression .)
    SEMI            reduce using rule 145 (expression -> expression COMMA assignment_expression .)
    COLON           reduce using rule 145 (expression -> expression COMMA assignment_expression .)


state 286

    (191) cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .

    ASTERISK        reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    DIV             reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PERCENT         reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PLUS            reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MINUS           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LEFT_OP         reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    RIGHT_OP        reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LE              reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    GT              reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LE_OP           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    GE_OP           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    EQ_OP           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    NE_OP           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AMPERSAND       reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CARAT           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    PIPE            reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AND_OP          reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    QMARK           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    OR_OP           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    SEMI            reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    COMMA           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEBRACKET    reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEPAREN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    CLOSEBRACE      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    COLON           reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    ASSIGN          reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MUL_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    DIV_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    MOD_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    ADD_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    SUB_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    LEFT_ASSIGN     reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    RIGHT_ASSIGN    reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    AND_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    XOR_ASSIGN      reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)
    OR_ASSIGN       reduce using rule 191 (cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression .)


state 287

    (101) direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 101 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 101 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 101 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 101 (direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET .)


state 288

    (102) direct_abstract_declarator -> OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 323


state 289

    (103) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET . CLOSEBRACKET
    (104) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET . constant_expression CLOSEBRACKET
    (161) constant_expression -> . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    CLOSEBRACKET    shift and go to state 324
    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    constant_expression            shift and go to state 325
    conditional_expression         shift and go to state 107
    identifier                     shift and go to state 108

state 290

    (107) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN . CLOSEPAREN
    (108) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN . parameter_type_list CLOSEPAREN
    (81) parameter_type_list -> . parameter_list
    (82) parameter_type_list -> . parameter_list COMMA ELIPSIS
    (83) parameter_list -> . parameter_declaration
    (84) parameter_list -> . parameter_list COMMA parameter_declaration
    (85) parameter_declaration -> . declaration_specifiers declarator
    (86) parameter_declaration -> . declaration_specifiers
    (87) parameter_declaration -> . declaration_specifiers abstract_declarator
    (13) declaration_specifiers -> . storage_class_specifier
    (14) declaration_specifiers -> . storage_class_specifier declaration_specifiers
    (15) declaration_specifiers -> . type_specifier
    (16) declaration_specifiers -> . type_specifier declaration_specifiers
    (17) declaration_specifiers -> . type_qualifier
    (18) declaration_specifiers -> . type_qualifier declaration_specifiers
    (19) storage_class_specifier -> . AUTO
    (20) storage_class_specifier -> . REGISTER
    (21) storage_class_specifier -> . STATIC
    (22) storage_class_specifier -> . EXTERN
    (23) storage_class_specifier -> . TYPEDEF
    (24) type_specifier -> . VOID
    (25) type_specifier -> . CHAR
    (26) type_specifier -> . SHORT
    (27) type_specifier -> . INT
    (28) type_specifier -> . LONG
    (29) type_specifier -> . FLOAT
    (30) type_specifier -> . DOUBLE
    (31) type_specifier -> . SIGNED
    (32) type_specifier -> . UNSIGNED
    (33) type_specifier -> . struct_or_union_specifier
    (34) type_specifier -> . enum_specifier
    (35) type_specifier -> . TYPEDEF_NAME
    (36) type_qualifier -> . CONST
    (37) type_qualifier -> . VOLATILE
    (38) struct_or_union_specifier -> . struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE
    (39) struct_or_union_specifier -> . struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE
    (40) struct_or_union_specifier -> . struct_or_union identifier
    (59) enum_specifier -> . ENUM OPENBRACE enumerator_list CLOSEBRACE
    (60) enum_specifier -> . ENUM identifier OPENBRACE enumerator_list CLOSEBRACE
    (61) enum_specifier -> . ENUM identifier
    (41) struct_or_union -> . STRUCT
    (42) struct_or_union -> . UNION

    CLOSEPAREN      shift and go to state 326
    AUTO            shift and go to state 22
    REGISTER        shift and go to state 14
    STATIC          shift and go to state 8
    EXTERN          shift and go to state 9
    TYPEDEF         shift and go to state 20
    VOID            shift and go to state 5
    CHAR            shift and go to state 7
    SHORT           shift and go to state 2
    INT             shift and go to state 30
    LONG            shift and go to state 16
    FLOAT           shift and go to state 27
    DOUBLE          shift and go to state 31
    SIGNED          shift and go to state 33
    UNSIGNED        shift and go to state 15
    TYPEDEF_NAME    shift and go to state 19
    CONST           shift and go to state 3
    VOLATILE        shift and go to state 35
    ENUM            shift and go to state 21
    STRUCT          shift and go to state 29
    UNION           shift and go to state 18

    storage_class_specifier        shift and go to state 1
    struct_or_union                shift and go to state 6
    type_specifier                 shift and go to state 13
    parameter_list                 shift and go to state 181
    parameter_type_list            shift and go to state 327
    parameter_declaration          shift and go to state 178
    type_qualifier                 shift and go to state 32
    enum_specifier                 shift and go to state 34
    struct_or_union_specifier      shift and go to state 4
    declaration_specifiers         shift and go to state 180

state 291

    (99) abstract_declarator -> pointer direct_abstract_declarator .
    (103) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET CLOSEBRACKET
    (104) direct_abstract_declarator -> direct_abstract_declarator . OPENBRACKET constant_expression CLOSEBRACKET
    (107) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN CLOSEPAREN
    (108) direct_abstract_declarator -> direct_abstract_declarator . OPENPAREN parameter_type_list CLOSEPAREN

    COMMA           reduce using rule 99 (abstract_declarator -> pointer direct_abstract_declarator .)
    CLOSEPAREN      reduce using rule 99 (abstract_declarator -> pointer direct_abstract_declarator .)
    OPENBRACKET     shift and go to state 289
    OPENPAREN       shift and go to state 290


state 292

    (105) direct_abstract_declarator -> OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 105 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 105 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 105 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 105 (direct_abstract_declarator -> OPENPAREN CLOSEPAREN .)


state 293

    (106) direct_abstract_declarator -> OPENPAREN parameter_type_list . CLOSEPAREN

    CLOSEPAREN      shift and go to state 328


state 294

    (100) direct_abstract_declarator -> OPENPAREN abstract_declarator . CLOSEPAREN

    CLOSEPAREN      shift and go to state 329


state 295

    (160) conditional_expression -> logical_or_expression QMARK expression COLON . conditional_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL

    OPENPAREN       shift and go to state 84
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 74
    exclusive_or_expression        shift and go to state 77
    additive_expression            shift and go to state 94
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    and_expression                 shift and go to state 80
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    relational_expression          shift and go to state 85
    string                         shift and go to state 90
    multiplicative_expression      shift and go to state 102
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 330
    identifier                     shift and go to state 108

state 296

    (197) unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .

    ASTERISK        reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    DIV             reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PERCENT         reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PLUS            reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MINUS           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LEFT_OP         reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    RIGHT_OP        reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LE              reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    GT              reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LE_OP           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    GE_OP           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    EQ_OP           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    NE_OP           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AMPERSAND       reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CARAT           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    PIPE            reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AND_OP          reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    QMARK           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    OR_OP           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    COLON           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    COMMA           reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    SEMI            reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    ASSIGN          reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 197 (unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN .)


state 297

    (205) postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PERIOD          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PTR_OP          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    INC_OP          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DEC_OP          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ASSIGN          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MUL_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DIV_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MOD_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ADD_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    SUB_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LEFT_ASSIGN     reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    RIGHT_ASSIGN    reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AND_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    XOR_ASSIGN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OR_ASSIGN       reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    ASTERISK        reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    DIV             reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PERCENT         reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PLUS            reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    MINUS           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LEFT_OP         reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    RIGHT_OP        reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LE              reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    GT              reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    LE_OP           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    GE_OP           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    EQ_OP           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    NE_OP           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AMPERSAND       reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CARAT           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    PIPE            reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    AND_OP          reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    QMARK           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    OR_OP           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    SEMI            reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    COMMA           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    CLOSEBRACE      reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)
    COLON           reduce using rule 205 (postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET .)


state 298

    (207) postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PERIOD          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PTR_OP          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    INC_OP          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DEC_OP          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ASSIGN          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MUL_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DIV_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MOD_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ADD_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    SUB_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LEFT_ASSIGN     reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    RIGHT_ASSIGN    reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AND_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    XOR_ASSIGN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OR_ASSIGN       reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    ASTERISK        reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    DIV             reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PERCENT         reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PLUS            reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    MINUS           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LEFT_OP         reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    RIGHT_OP        reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LE              reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    GT              reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    LE_OP           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    GE_OP           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    EQ_OP           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    NE_OP           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AMPERSAND       reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CARAT           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    PIPE            reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    AND_OP          reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    QMARK           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    OR_OP           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    SEMI            reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    COMMA           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    CLOSEBRACE      reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)
    COLON           reduce using rule 207 (postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN .)


state 299

    (217) argument_expression_list -> argument_expression_list COMMA . assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 331
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108

state 300

    (73) direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .

    OPENBRACKET     reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    OPENPAREN       reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    COLON           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    SEMI            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    COMMA           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    OPENBRACE       reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    AUTO            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    REGISTER        reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    STATIC          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    EXTERN          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    TYPEDEF         reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    VOID            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    CHAR            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    SHORT           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    INT             reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    LONG            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    FLOAT           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    DOUBLE          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    SIGNED          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    UNSIGNED        reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    TYPEDEF_NAME    reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    CONST           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    VOLATILE        reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    ENUM            reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    STRUCT          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    UNION           reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    ASSIGN          reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 73 (direct_declarator -> direct_declarator OPENPAREN push_scope_e parameter_type_list push_scope_e CLOSEPAREN .)


state 301

    (82) parameter_type_list -> parameter_list COMMA ELIPSIS .

    CLOSEPAREN      reduce using rule 82 (parameter_type_list -> parameter_list COMMA ELIPSIS .)


state 302

    (84) parameter_list -> parameter_list COMMA parameter_declaration .

    COMMA           reduce using rule 84 (parameter_list -> parameter_list COMMA parameter_declaration .)
    CLOSEPAREN      reduce using rule 84 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 303

    (91) initializer -> OPENBRACE initializer_list CLOSEBRACE .

    SEMI            reduce using rule 91 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)
    COMMA           reduce using rule 91 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 91 (initializer -> OPENBRACE initializer_list CLOSEBRACE .)


state 304

    (92) initializer -> OPENBRACE initializer_list COMMA . CLOSEBRACE
    (94) initializer_list -> initializer_list COMMA . initializer
    (90) initializer -> . assignment_expression
    (91) initializer -> . OPENBRACE initializer_list CLOSEBRACE
    (92) initializer -> . OPENBRACE initializer_list COMMA CLOSEBRACE
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEBRACE      shift and go to state 333
    OPENBRACE       shift and go to state 187
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    initializer                    shift and go to state 332
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 189
    multiplicative_expression      shift and go to state 102
    conditional_expression         shift and go to state 150
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    identifier                     shift and go to state 108

state 305

    (122) compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .

    CLOSEBRACE      reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 122 (compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE .)


state 306

    (123) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e . pop_scope_e CLOSEBRACE
    (227) pop_scope_e -> .

    CLOSEBRACE      reduce using rule 227 (pop_scope_e -> .)

    pop_scope_e                    shift and go to state 334

state 307

    (121) compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .

    CLOSEBRACE      reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 121 (compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE .)


state 308

    (125) statement_list -> statement_list read_mode_e statement .

    CLOSEBRACE      reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    CASE            reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    DEFAULT         reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    OPENBRACE       reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    SEMI            reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    IF              reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    SWITCH          reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    WHILE           reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    DO              reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    FOR             reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    GOTO            reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    CONTINUE        reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    BREAK           reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    RETURN          reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    IDENTIFIER      reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    INC_OP          reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    DEC_OP          reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    SIZEOF          reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    AMPERSAND       reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    ASTERISK        reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    PLUS            reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    MINUS           reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    TILDE           reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    BANG            reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    OPENPAREN       reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    INTEGER_CONSTANT reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    CHARACTER_CONSTANT reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    FLOATING_CONSTANT reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    ENUMERATION_CONSTANT reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)
    STRING_LITERAL  reduce using rule 125 (statement_list -> statement_list read_mode_e statement .)


state 309

    (139) jump_statement -> GOTO identifier . SEMI

    SEMI            shift and go to state 335


state 310

    (115) labeled_statement -> identifier COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 336
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 311

    (142) jump_statement -> RETURN SEMI .

    CLOSEBRACE      reduce using rule 142 (jump_statement -> RETURN SEMI .)
    CASE            reduce using rule 142 (jump_statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 142 (jump_statement -> RETURN SEMI .)
    OPENBRACE       reduce using rule 142 (jump_statement -> RETURN SEMI .)
    SEMI            reduce using rule 142 (jump_statement -> RETURN SEMI .)
    IF              reduce using rule 142 (jump_statement -> RETURN SEMI .)
    SWITCH          reduce using rule 142 (jump_statement -> RETURN SEMI .)
    WHILE           reduce using rule 142 (jump_statement -> RETURN SEMI .)
    DO              reduce using rule 142 (jump_statement -> RETURN SEMI .)
    FOR             reduce using rule 142 (jump_statement -> RETURN SEMI .)
    GOTO            reduce using rule 142 (jump_statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 142 (jump_statement -> RETURN SEMI .)
    BREAK           reduce using rule 142 (jump_statement -> RETURN SEMI .)
    RETURN          reduce using rule 142 (jump_statement -> RETURN SEMI .)
    IDENTIFIER      reduce using rule 142 (jump_statement -> RETURN SEMI .)
    INC_OP          reduce using rule 142 (jump_statement -> RETURN SEMI .)
    DEC_OP          reduce using rule 142 (jump_statement -> RETURN SEMI .)
    SIZEOF          reduce using rule 142 (jump_statement -> RETURN SEMI .)
    AMPERSAND       reduce using rule 142 (jump_statement -> RETURN SEMI .)
    ASTERISK        reduce using rule 142 (jump_statement -> RETURN SEMI .)
    PLUS            reduce using rule 142 (jump_statement -> RETURN SEMI .)
    MINUS           reduce using rule 142 (jump_statement -> RETURN SEMI .)
    TILDE           reduce using rule 142 (jump_statement -> RETURN SEMI .)
    BANG            reduce using rule 142 (jump_statement -> RETURN SEMI .)
    OPENPAREN       reduce using rule 142 (jump_statement -> RETURN SEMI .)
    INTEGER_CONSTANT reduce using rule 142 (jump_statement -> RETURN SEMI .)
    CHARACTER_CONSTANT reduce using rule 142 (jump_statement -> RETURN SEMI .)
    FLOATING_CONSTANT reduce using rule 142 (jump_statement -> RETURN SEMI .)
    ENUMERATION_CONSTANT reduce using rule 142 (jump_statement -> RETURN SEMI .)
    STRING_LITERAL  reduce using rule 142 (jump_statement -> RETURN SEMI .)
    ELSE            reduce using rule 142 (jump_statement -> RETURN SEMI .)


state 312

    (143) jump_statement -> RETURN expression . SEMI
    (145) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 337
    COMMA           shift and go to state 217


state 313

    (131) iteration_statement -> FOR OPENPAREN . SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> FOR OPENPAREN . SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> FOR OPENPAREN . SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> FOR OPENPAREN . SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> FOR OPENPAREN . expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN . expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR OPENPAREN . expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN . expression SEMI expression SEMI expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 338
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 339

state 314

    (140) jump_statement -> CONTINUE SEMI .

    CLOSEBRACE      reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    OPENBRACE       reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    IF              reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    DO              reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    GOTO            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    IDENTIFIER      reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    INC_OP          reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    DEC_OP          reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    AMPERSAND       reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    ASTERISK        reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    PLUS            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    MINUS           reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    TILDE           reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    BANG            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    OPENPAREN       reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    INTEGER_CONSTANT reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    CHARACTER_CONSTANT reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    FLOATING_CONSTANT reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    ENUMERATION_CONSTANT reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    STRING_LITERAL  reduce using rule 140 (jump_statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 140 (jump_statement -> CONTINUE SEMI .)


state 315

    (119) expression_statement -> expression SEMI .

    CLOSEBRACE      reduce using rule 119 (expression_statement -> expression SEMI .)
    CASE            reduce using rule 119 (expression_statement -> expression SEMI .)
    DEFAULT         reduce using rule 119 (expression_statement -> expression SEMI .)
    OPENBRACE       reduce using rule 119 (expression_statement -> expression SEMI .)
    SEMI            reduce using rule 119 (expression_statement -> expression SEMI .)
    IF              reduce using rule 119 (expression_statement -> expression SEMI .)
    SWITCH          reduce using rule 119 (expression_statement -> expression SEMI .)
    WHILE           reduce using rule 119 (expression_statement -> expression SEMI .)
    DO              reduce using rule 119 (expression_statement -> expression SEMI .)
    FOR             reduce using rule 119 (expression_statement -> expression SEMI .)
    GOTO            reduce using rule 119 (expression_statement -> expression SEMI .)
    CONTINUE        reduce using rule 119 (expression_statement -> expression SEMI .)
    BREAK           reduce using rule 119 (expression_statement -> expression SEMI .)
    RETURN          reduce using rule 119 (expression_statement -> expression SEMI .)
    IDENTIFIER      reduce using rule 119 (expression_statement -> expression SEMI .)
    INC_OP          reduce using rule 119 (expression_statement -> expression SEMI .)
    DEC_OP          reduce using rule 119 (expression_statement -> expression SEMI .)
    SIZEOF          reduce using rule 119 (expression_statement -> expression SEMI .)
    AMPERSAND       reduce using rule 119 (expression_statement -> expression SEMI .)
    ASTERISK        reduce using rule 119 (expression_statement -> expression SEMI .)
    PLUS            reduce using rule 119 (expression_statement -> expression SEMI .)
    MINUS           reduce using rule 119 (expression_statement -> expression SEMI .)
    TILDE           reduce using rule 119 (expression_statement -> expression SEMI .)
    BANG            reduce using rule 119 (expression_statement -> expression SEMI .)
    OPENPAREN       reduce using rule 119 (expression_statement -> expression SEMI .)
    INTEGER_CONSTANT reduce using rule 119 (expression_statement -> expression SEMI .)
    CHARACTER_CONSTANT reduce using rule 119 (expression_statement -> expression SEMI .)
    FLOATING_CONSTANT reduce using rule 119 (expression_statement -> expression SEMI .)
    ENUMERATION_CONSTANT reduce using rule 119 (expression_statement -> expression SEMI .)
    STRING_LITERAL  reduce using rule 119 (expression_statement -> expression SEMI .)
    ELSE            reduce using rule 119 (expression_statement -> expression SEMI .)


state 316

    (117) labeled_statement -> DEFAULT COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 340
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 317

    (129) iteration_statement -> WHILE OPENPAREN . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 341

state 318

    (116) labeled_statement -> CASE constant_expression . COLON statement

    COLON           shift and go to state 342


state 319

    (128) selection_statement -> SWITCH OPENPAREN . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 343

state 320

    (141) jump_statement -> BREAK SEMI .

    CLOSEBRACE      reduce using rule 141 (jump_statement -> BREAK SEMI .)
    CASE            reduce using rule 141 (jump_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 141 (jump_statement -> BREAK SEMI .)
    OPENBRACE       reduce using rule 141 (jump_statement -> BREAK SEMI .)
    SEMI            reduce using rule 141 (jump_statement -> BREAK SEMI .)
    IF              reduce using rule 141 (jump_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 141 (jump_statement -> BREAK SEMI .)
    WHILE           reduce using rule 141 (jump_statement -> BREAK SEMI .)
    DO              reduce using rule 141 (jump_statement -> BREAK SEMI .)
    FOR             reduce using rule 141 (jump_statement -> BREAK SEMI .)
    GOTO            reduce using rule 141 (jump_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 141 (jump_statement -> BREAK SEMI .)
    BREAK           reduce using rule 141 (jump_statement -> BREAK SEMI .)
    RETURN          reduce using rule 141 (jump_statement -> BREAK SEMI .)
    IDENTIFIER      reduce using rule 141 (jump_statement -> BREAK SEMI .)
    INC_OP          reduce using rule 141 (jump_statement -> BREAK SEMI .)
    DEC_OP          reduce using rule 141 (jump_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 141 (jump_statement -> BREAK SEMI .)
    AMPERSAND       reduce using rule 141 (jump_statement -> BREAK SEMI .)
    ASTERISK        reduce using rule 141 (jump_statement -> BREAK SEMI .)
    PLUS            reduce using rule 141 (jump_statement -> BREAK SEMI .)
    MINUS           reduce using rule 141 (jump_statement -> BREAK SEMI .)
    TILDE           reduce using rule 141 (jump_statement -> BREAK SEMI .)
    BANG            reduce using rule 141 (jump_statement -> BREAK SEMI .)
    OPENPAREN       reduce using rule 141 (jump_statement -> BREAK SEMI .)
    INTEGER_CONSTANT reduce using rule 141 (jump_statement -> BREAK SEMI .)
    CHARACTER_CONSTANT reduce using rule 141 (jump_statement -> BREAK SEMI .)
    FLOATING_CONSTANT reduce using rule 141 (jump_statement -> BREAK SEMI .)
    ENUMERATION_CONSTANT reduce using rule 141 (jump_statement -> BREAK SEMI .)
    STRING_LITERAL  reduce using rule 141 (jump_statement -> BREAK SEMI .)
    ELSE            reduce using rule 141 (jump_statement -> BREAK SEMI .)


state 321

    (130) iteration_statement -> DO statement . WHILE OPENPAREN expression CLOSEPAREN SEMI

    WHILE           shift and go to state 344


state 322

    (126) selection_statement -> IF OPENPAREN . expression CLOSEPAREN statement
    (127) selection_statement -> IF OPENPAREN . expression CLOSEPAREN statement ELSE statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 345

state 323

    (102) direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 102 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 102 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 102 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 102 (direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET .)


state 324

    (103) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .

    OPENBRACKET     reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    OPENPAREN       reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    COMMA           reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 103 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET .)


state 325

    (104) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 346


state 326

    (107) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .

    OPENBRACKET     reduce using rule 107 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    OPENPAREN       reduce using rule 107 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    COMMA           reduce using rule 107 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 107 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN .)


state 327

    (108) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list . CLOSEPAREN

    CLOSEPAREN      shift and go to state 347


state 328

    (106) direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 106 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 106 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    COMMA           reduce using rule 106 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 106 (direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN .)


state 329

    (100) direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .

    OPENBRACKET     reduce using rule 100 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    OPENPAREN       reduce using rule 100 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    COMMA           reduce using rule 100 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 100 (direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN .)


state 330

    (160) conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .

    SEMI            reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    COMMA           reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    CLOSEPAREN      reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    COLON           reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    CLOSEBRACKET    reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)
    CLOSEBRACE      reduce using rule 160 (conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression .)


state 331

    (217) argument_expression_list -> argument_expression_list COMMA assignment_expression .

    CLOSEPAREN      reduce using rule 217 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)
    COMMA           reduce using rule 217 (argument_expression_list -> argument_expression_list COMMA assignment_expression .)


state 332

    (94) initializer_list -> initializer_list COMMA initializer .

    CLOSEBRACE      reduce using rule 94 (initializer_list -> initializer_list COMMA initializer .)
    COMMA           reduce using rule 94 (initializer_list -> initializer_list COMMA initializer .)


state 333

    (92) initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .

    SEMI            reduce using rule 92 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)
    COMMA           reduce using rule 92 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 92 (initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE .)


state 334

    (123) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e . CLOSEBRACE

    CLOSEBRACE      shift and go to state 348


state 335

    (139) jump_statement -> GOTO identifier SEMI .

    CLOSEBRACE      reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    CASE            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    DEFAULT         reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    OPENBRACE       reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    SEMI            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    IF              reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    SWITCH          reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    WHILE           reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    DO              reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    FOR             reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    GOTO            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    CONTINUE        reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    BREAK           reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    RETURN          reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    IDENTIFIER      reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    INC_OP          reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    DEC_OP          reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    SIZEOF          reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    AMPERSAND       reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    ASTERISK        reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    PLUS            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    MINUS           reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    TILDE           reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    BANG            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    OPENPAREN       reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    INTEGER_CONSTANT reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    CHARACTER_CONSTANT reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    FLOATING_CONSTANT reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    ENUMERATION_CONSTANT reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    STRING_LITERAL  reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)
    ELSE            reduce using rule 139 (jump_statement -> GOTO identifier SEMI .)


state 336

    (115) labeled_statement -> identifier COLON statement .

    CLOSEBRACE      reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    CASE            reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    DEFAULT         reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    OPENBRACE       reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    SEMI            reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    IF              reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    SWITCH          reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    WHILE           reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    DO              reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    FOR             reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    GOTO            reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    CONTINUE        reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    BREAK           reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    RETURN          reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    IDENTIFIER      reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    INC_OP          reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    DEC_OP          reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    SIZEOF          reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    AMPERSAND       reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    ASTERISK        reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    PLUS            reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    MINUS           reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    TILDE           reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    BANG            reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    OPENPAREN       reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    INTEGER_CONSTANT reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    CHARACTER_CONSTANT reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    FLOATING_CONSTANT reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    STRING_LITERAL  reduce using rule 115 (labeled_statement -> identifier COLON statement .)
    ELSE            reduce using rule 115 (labeled_statement -> identifier COLON statement .)


state 337

    (143) jump_statement -> RETURN expression SEMI .

    CLOSEBRACE      reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    CASE            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    DEFAULT         reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    OPENBRACE       reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    SEMI            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    IF              reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    SWITCH          reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    WHILE           reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    DO              reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    FOR             reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    GOTO            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    CONTINUE        reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    BREAK           reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    RETURN          reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    IDENTIFIER      reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    INC_OP          reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    DEC_OP          reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    SIZEOF          reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    AMPERSAND       reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    ASTERISK        reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    PLUS            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    MINUS           reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    TILDE           reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    BANG            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    OPENPAREN       reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    INTEGER_CONSTANT reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    CHARACTER_CONSTANT reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    FLOATING_CONSTANT reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    ENUMERATION_CONSTANT reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    STRING_LITERAL  reduce using rule 143 (jump_statement -> RETURN expression SEMI .)
    ELSE            reduce using rule 143 (jump_statement -> RETURN expression SEMI .)


state 338

    (131) iteration_statement -> FOR OPENPAREN SEMI . SEMI CLOSEPAREN statement
    (132) iteration_statement -> FOR OPENPAREN SEMI . SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> FOR OPENPAREN SEMI . expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> FOR OPENPAREN SEMI . expression SEMI expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 349
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 350

state 339

    (135) iteration_statement -> FOR OPENPAREN expression . SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN expression . SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR OPENPAREN expression . SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN expression . SEMI expression SEMI expression CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 351
    COMMA           shift and go to state 217


state 340

    (117) labeled_statement -> DEFAULT COLON statement .

    CLOSEBRACE      reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CASE            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    DEFAULT         reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    OPENBRACE       reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SEMI            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    IF              reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SWITCH          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    WHILE           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    DO              reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    FOR             reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    GOTO            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CONTINUE        reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    BREAK           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    RETURN          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    IDENTIFIER      reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    INC_OP          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    DEC_OP          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    SIZEOF          reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    AMPERSAND       reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ASTERISK        reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    PLUS            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    MINUS           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    TILDE           reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    BANG            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    OPENPAREN       reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    INTEGER_CONSTANT reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    CHARACTER_CONSTANT reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    FLOATING_CONSTANT reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    STRING_LITERAL  reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)
    ELSE            reduce using rule 117 (labeled_statement -> DEFAULT COLON statement .)


state 341

    (129) iteration_statement -> WHILE OPENPAREN expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 352
    COMMA           shift and go to state 217


state 342

    (116) labeled_statement -> CASE constant_expression COLON . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 353
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 343

    (128) selection_statement -> SWITCH OPENPAREN expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 354
    COMMA           shift and go to state 217


state 344

    (130) iteration_statement -> DO statement WHILE . OPENPAREN expression CLOSEPAREN SEMI

    OPENPAREN       shift and go to state 355


state 345

    (126) selection_statement -> IF OPENPAREN expression . CLOSEPAREN statement
    (127) selection_statement -> IF OPENPAREN expression . CLOSEPAREN statement ELSE statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 356
    COMMA           shift and go to state 217


state 346

    (104) direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 104 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    OPENPAREN       reduce using rule 104 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    COMMA           reduce using rule 104 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 104 (direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET .)


state 347

    (108) direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .

    OPENBRACKET     reduce using rule 108 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    OPENPAREN       reduce using rule 108 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    COMMA           reduce using rule 108 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 108 (direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN .)


state 348

    (123) compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .

    CLOSEBRACE      reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CASE            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DEFAULT         reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    OPENBRACE       reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SEMI            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    IF              reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SWITCH          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    WHILE           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DO              reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FOR             reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    GOTO            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CONTINUE        reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    BREAK           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    RETURN          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    IDENTIFIER      reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INC_OP          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DEC_OP          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SIZEOF          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    AMPERSAND       reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ASTERISK        reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    PLUS            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    MINUS           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TILDE           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    BANG            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    OPENPAREN       reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INTEGER_CONSTANT reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CHARACTER_CONSTANT reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FLOATING_CONSTANT reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ENUMERATION_CONSTANT reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STRING_LITERAL  reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ELSE            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    AUTO            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    REGISTER        reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STATIC          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    EXTERN          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TYPEDEF         reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    VOID            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CHAR            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SHORT           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    INT             reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    LONG            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    FLOAT           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    DOUBLE          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    SIGNED          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    UNSIGNED        reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    TYPEDEF_NAME    reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    CONST           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    VOLATILE        reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    ENUM            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    STRUCT          reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    UNION           reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)
    $end            reduce using rule 123 (compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE .)


state 349

    (131) iteration_statement -> FOR OPENPAREN SEMI SEMI . CLOSEPAREN statement
    (132) iteration_statement -> FOR OPENPAREN SEMI SEMI . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 357
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 358

state 350

    (133) iteration_statement -> FOR OPENPAREN SEMI expression . SEMI CLOSEPAREN statement
    (134) iteration_statement -> FOR OPENPAREN SEMI expression . SEMI expression CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 359
    COMMA           shift and go to state 217


state 351

    (135) iteration_statement -> FOR OPENPAREN expression SEMI . SEMI CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN expression SEMI . SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> FOR OPENPAREN expression SEMI . expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN expression SEMI . expression SEMI expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    SEMI            shift and go to state 360
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 361

state 352

    (129) iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 362
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 353

    (116) labeled_statement -> CASE constant_expression COLON statement .

    CLOSEBRACE      reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CASE            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    DEFAULT         reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    OPENBRACE       reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SEMI            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    IF              reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SWITCH          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    WHILE           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    DO              reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    FOR             reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    GOTO            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CONTINUE        reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    BREAK           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    RETURN          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    IDENTIFIER      reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    INC_OP          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    DEC_OP          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    SIZEOF          reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    AMPERSAND       reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ASTERISK        reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    PLUS            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    MINUS           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    TILDE           reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    BANG            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    OPENPAREN       reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    INTEGER_CONSTANT reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    CHARACTER_CONSTANT reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    FLOATING_CONSTANT reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ENUMERATION_CONSTANT reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    STRING_LITERAL  reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)
    ELSE            reduce using rule 116 (labeled_statement -> CASE constant_expression COLON statement .)


state 354

    (128) selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 363
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 355

    (130) iteration_statement -> DO statement WHILE OPENPAREN . expression CLOSEPAREN SEMI
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 364

state 356

    (126) selection_statement -> IF OPENPAREN expression CLOSEPAREN . statement
    (127) selection_statement -> IF OPENPAREN expression CLOSEPAREN . statement ELSE statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 365
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 357

    (131) iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 366
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 358

    (132) iteration_statement -> FOR OPENPAREN SEMI SEMI expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 367
    COMMA           shift and go to state 217


state 359

    (133) iteration_statement -> FOR OPENPAREN SEMI expression SEMI . CLOSEPAREN statement
    (134) iteration_statement -> FOR OPENPAREN SEMI expression SEMI . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 368
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 369

state 360

    (135) iteration_statement -> FOR OPENPAREN expression SEMI SEMI . CLOSEPAREN statement
    (136) iteration_statement -> FOR OPENPAREN expression SEMI SEMI . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 370
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 371

state 361

    (137) iteration_statement -> FOR OPENPAREN expression SEMI expression . SEMI CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN expression SEMI expression . SEMI expression CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 372
    COMMA           shift and go to state 217


state 362

    (129) iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)
    ELSE            reduce using rule 129 (iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement .)


state 363

    (128) selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)
    ELSE            reduce using rule 128 (selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement .)


state 364

    (130) iteration_statement -> DO statement WHILE OPENPAREN expression . CLOSEPAREN SEMI
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 373
    COMMA           shift and go to state 217


state 365

    (126) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .
    (127) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    CLOSEBRACE      reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CASE            reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SEMI            reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    IF              reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    WHILE           reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DO              reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    FOR             reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    GOTO            reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    BREAK           reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    RETURN          reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    PLUS            reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    MINUS           reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    TILDE           reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    BANG            reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .)
    ELSE            shift and go to state 374

  ! ELSE            [ reduce using rule 126 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement .) ]


state 366

    (131) iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    IF              reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DO              reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 131 (iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement .)


state 367

    (132) iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 375
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 368

    (133) iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 376
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 369

    (134) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 377
    COMMA           shift and go to state 217


state 370

    (135) iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 378
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 371

    (136) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 379
    COMMA           shift and go to state 217


state 372

    (137) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI . CLOSEPAREN statement
    (138) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI . expression CLOSEPAREN statement
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (223) identifier -> . IDENTIFIER
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CLOSEPAREN      shift and go to state 380
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    IDENTIFIER      shift and go to state 17
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    inclusive_or_expression        shift and go to state 82
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 108
    expression                     shift and go to state 381

state 373

    (130) iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN . SEMI

    SEMI            shift and go to state 382


state 374

    (127) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 383
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 375

    (132) iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 132 (iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement .)


state 376

    (133) iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    IF              reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DO              reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 133 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement .)


state 377

    (134) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 384
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 378

    (135) iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    IF              reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DO              reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 135 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement .)


state 379

    (136) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 385
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 380

    (137) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 386
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 381

    (138) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression . CLOSEPAREN statement
    (145) expression -> expression . COMMA assignment_expression

    CLOSEPAREN      shift and go to state 387
    COMMA           shift and go to state 217


state 382

    (130) iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .

    CLOSEBRACE      reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CASE            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DEFAULT         reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    OPENBRACE       reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SEMI            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    IF              reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SWITCH          reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    WHILE           reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DO              reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    FOR             reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    GOTO            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CONTINUE        reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    BREAK           reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    RETURN          reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    IDENTIFIER      reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    INC_OP          reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    DEC_OP          reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    SIZEOF          reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    AMPERSAND       reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ASTERISK        reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    PLUS            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    MINUS           reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    TILDE           reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    BANG            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    OPENPAREN       reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    INTEGER_CONSTANT reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    CHARACTER_CONSTANT reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    FLOATING_CONSTANT reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ENUMERATION_CONSTANT reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    STRING_LITERAL  reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)
    ELSE            reduce using rule 130 (iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI .)


state 383

    (127) selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .

    CLOSEBRACE      reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CASE            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    OPENBRACE       reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SEMI            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    IF              reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SWITCH          reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    WHILE           reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DO              reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    FOR             reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    GOTO            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CONTINUE        reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    BREAK           reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    RETURN          reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    INC_OP          reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    DEC_OP          reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    SIZEOF          reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    AMPERSAND       reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ASTERISK        reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    PLUS            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    MINUS           reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    TILDE           reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    BANG            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    OPENPAREN       reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    INTEGER_CONSTANT reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    CHARACTER_CONSTANT reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    FLOATING_CONSTANT reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ENUMERATION_CONSTANT reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    STRING_LITERAL  reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)
    ELSE            reduce using rule 127 (selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement .)


state 384

    (134) iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 134 (iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement .)


state 385

    (136) iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 136 (iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement .)


state 386

    (137) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CASE            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DEFAULT         reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SEMI            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    IF              reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SWITCH          reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    WHILE           reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DO              reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    FOR             reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    GOTO            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CONTINUE        reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    BREAK           reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    RETURN          reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    INC_OP          reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    DEC_OP          reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    SIZEOF          reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ASTERISK        reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    PLUS            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    MINUS           reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    TILDE           reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    BANG            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)
    ELSE            reduce using rule 137 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement .)


state 387

    (138) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN . statement
    (109) statement -> . labeled_statement
    (110) statement -> . compound_statement
    (111) statement -> . expression_statement
    (112) statement -> . selection_statement
    (113) statement -> . iteration_statement
    (114) statement -> . jump_statement
    (115) labeled_statement -> . identifier COLON statement
    (116) labeled_statement -> . CASE constant_expression COLON statement
    (117) labeled_statement -> . DEFAULT COLON statement
    (120) compound_statement -> . OPENBRACE CLOSEBRACE
    (121) compound_statement -> . OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE
    (122) compound_statement -> . OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE
    (123) compound_statement -> . OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE
    (118) expression_statement -> . SEMI
    (119) expression_statement -> . expression SEMI
    (126) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement
    (127) selection_statement -> . IF OPENPAREN expression CLOSEPAREN statement ELSE statement
    (128) selection_statement -> . SWITCH OPENPAREN expression CLOSEPAREN statement
    (129) iteration_statement -> . WHILE OPENPAREN expression CLOSEPAREN statement
    (130) iteration_statement -> . DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI
    (131) iteration_statement -> . FOR OPENPAREN SEMI SEMI CLOSEPAREN statement
    (132) iteration_statement -> . FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement
    (133) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement
    (134) iteration_statement -> . FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement
    (135) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement
    (136) iteration_statement -> . FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement
    (137) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement
    (138) iteration_statement -> . FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement
    (139) jump_statement -> . GOTO identifier SEMI
    (140) jump_statement -> . CONTINUE SEMI
    (141) jump_statement -> . BREAK SEMI
    (142) jump_statement -> . RETURN SEMI
    (143) jump_statement -> . RETURN expression SEMI
    (223) identifier -> . IDENTIFIER
    (144) expression -> . assignment_expression
    (145) expression -> . expression COMMA assignment_expression
    (146) assignment_expression -> . conditional_expression
    (147) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (159) conditional_expression -> . logical_or_expression
    (160) conditional_expression -> . logical_or_expression QMARK expression COLON conditional_expression
    (192) unary_expression -> . postfix_expression
    (193) unary_expression -> . INC_OP unary_expression
    (194) unary_expression -> . DEC_OP unary_expression
    (195) unary_expression -> . unary_operator cast_expression
    (196) unary_expression -> . SIZEOF unary_expression
    (197) unary_expression -> . SIZEOF OPENPAREN type_name CLOSEPAREN
    (162) logical_or_expression -> . logical_and_expression
    (163) logical_or_expression -> . logical_or_expression OR_OP logical_and_expression
    (204) postfix_expression -> . primary_expression
    (205) postfix_expression -> . postfix_expression OPENBRACKET expression CLOSEBRACKET
    (206) postfix_expression -> . postfix_expression OPENPAREN CLOSEPAREN
    (207) postfix_expression -> . postfix_expression OPENPAREN argument_expression_list CLOSEPAREN
    (208) postfix_expression -> . postfix_expression PERIOD identifier
    (209) postfix_expression -> . postfix_expression PTR_OP identifier
    (210) postfix_expression -> . postfix_expression INC_OP
    (211) postfix_expression -> . postfix_expression DEC_OP
    (198) unary_operator -> . AMPERSAND
    (199) unary_operator -> . ASTERISK
    (200) unary_operator -> . PLUS
    (201) unary_operator -> . MINUS
    (202) unary_operator -> . TILDE
    (203) unary_operator -> . BANG
    (164) logical_and_expression -> . inclusive_or_expression
    (165) logical_and_expression -> . logical_and_expression AND_OP inclusive_or_expression
    (212) primary_expression -> . identifier
    (213) primary_expression -> . constant
    (214) primary_expression -> . string
    (215) primary_expression -> . OPENPAREN expression CLOSEPAREN
    (166) inclusive_or_expression -> . exclusive_or_expression
    (167) inclusive_or_expression -> . inclusive_or_expression PIPE exclusive_or_expression
    (218) constant -> . INTEGER_CONSTANT
    (219) constant -> . CHARACTER_CONSTANT
    (220) constant -> . FLOATING_CONSTANT
    (221) constant -> . ENUMERATION_CONSTANT
    (222) string -> . STRING_LITERAL
    (168) exclusive_or_expression -> . and_expression
    (169) exclusive_or_expression -> . exclusive_or_expression CARAT and_expression
    (170) and_expression -> . equality_expression
    (171) and_expression -> . and_expression AMPERSAND equality_expression
    (172) equality_expression -> . relational_expression
    (173) equality_expression -> . equality_expression EQ_OP relational_expression
    (174) equality_expression -> . equality_expression NE_OP relational_expression
    (175) relational_expression -> . shift_expression
    (176) relational_expression -> . relational_expression LE shift_expression
    (177) relational_expression -> . relational_expression GT shift_expression
    (178) relational_expression -> . relational_expression LE_OP shift_expression
    (179) relational_expression -> . relational_expression GE_OP shift_expression
    (180) shift_expression -> . additive_expression
    (181) shift_expression -> . shift_expression LEFT_OP additive_expression
    (182) shift_expression -> . shift_expression RIGHT_OP additive_expression
    (183) additive_expression -> . multiplicative_expression
    (184) additive_expression -> . additive_expression PLUS multiplicative_expression
    (185) additive_expression -> . additive_expression MINUS multiplicative_expression
    (186) multiplicative_expression -> . cast_expression
    (187) multiplicative_expression -> . multiplicative_expression ASTERISK cast_expression
    (188) multiplicative_expression -> . multiplicative_expression DIV cast_expression
    (189) multiplicative_expression -> . multiplicative_expression PERCENT cast_expression
    (190) cast_expression -> . unary_expression
    (191) cast_expression -> . OPENPAREN type_name CLOSEPAREN cast_expression

    CASE            shift and go to state 273
    DEFAULT         shift and go to state 271
    OPENBRACE       shift and go to state 60
    SEMI            shift and go to state 279
    IF              shift and go to state 281
    SWITCH          shift and go to state 274
    WHILE           shift and go to state 272
    DO              shift and go to state 278
    FOR             shift and go to state 268
    GOTO            shift and go to state 263
    CONTINUE        shift and go to state 269
    BREAK           shift and go to state 277
    RETURN          shift and go to state 266
    IDENTIFIER      shift and go to state 17
    INC_OP          shift and go to state 103
    DEC_OP          shift and go to state 76
    SIZEOF          shift and go to state 91
    AMPERSAND       shift and go to state 95
    ASTERISK        shift and go to state 93
    PLUS            shift and go to state 87
    MINUS           shift and go to state 79
    TILDE           shift and go to state 86
    BANG            shift and go to state 104
    OPENPAREN       shift and go to state 145
    INTEGER_CONSTANT shift and go to state 83
    CHARACTER_CONSTANT shift and go to state 75
    FLOATING_CONSTANT shift and go to state 78
    ENUMERATION_CONSTANT shift and go to state 105
    STRING_LITERAL  shift and go to state 101

    expression_statement           shift and go to state 261
    constant                       shift and go to state 73
    unary_expression               shift and go to state 144
    exclusive_or_expression        shift and go to state 77
    iteration_statement            shift and go to state 262
    and_expression                 shift and go to state 80
    string                         shift and go to state 90
    compound_statement             shift and go to state 267
    inclusive_or_expression        shift and go to state 82
    selection_statement            shift and go to state 280
    postfix_expression             shift and go to state 92
    relational_expression          shift and go to state 85
    statement                      shift and go to state 388
    cast_expression                shift and go to state 97
    logical_or_expression          shift and go to state 88
    unary_operator                 shift and go to state 106
    assignment_expression          shift and go to state 148
    multiplicative_expression      shift and go to state 102
    additive_expression            shift and go to state 94
    primary_expression             shift and go to state 96
    logical_and_expression         shift and go to state 98
    shift_expression               shift and go to state 99
    equality_expression            shift and go to state 100
    jump_statement                 shift and go to state 276
    labeled_statement              shift and go to state 264
    conditional_expression         shift and go to state 150
    identifier                     shift and go to state 265
    expression                     shift and go to state 270

state 388

    (138) iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .

    CLOSEBRACE      reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CASE            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DEFAULT         reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENBRACE       reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SEMI            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    IF              reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SWITCH          reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    WHILE           reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DO              reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    FOR             reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    GOTO            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CONTINUE        reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    BREAK           reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    RETURN          reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    IDENTIFIER      reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    INC_OP          reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    DEC_OP          reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    SIZEOF          reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    AMPERSAND       reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ASTERISK        reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    PLUS            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    MINUS           reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    TILDE           reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    BANG            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    OPENPAREN       reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    INTEGER_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    CHARACTER_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    FLOATING_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ENUMERATION_CONSTANT reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    STRING_LITERAL  reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)
    ELSE            reduce using rule 138 (iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 365 resolved as shift
