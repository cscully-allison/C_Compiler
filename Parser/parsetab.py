
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SINGLE_LINE_COMMENT SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VARYING_COMMENT VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration_list :  declarationdeclaration_list :  declaration_list declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator :  direct_declaratordeclarator :  pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementlabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE statement_list CLOSEBRACEcompound_statement :  OPENBRACE declaration_list CLOSEBRACEcompound_statement :  OPENBRACE declaration_list statement_list CLOSEBRACEstatement_list :  statementstatement_list :  statement_list statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIER'
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[5,5,-26,-36,-33,-24,-25,-21,-22,-1,5,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,5,-31,-34,-37,5,5,-68,-40,5,-67,-61,5,-9,5,-2,5,-5,-11,5,5,5,5,-43,5,-69,-70,5,-72,-10,-7,5,5,5,-120,-6,-12,5,-39,-44,-59,-71,5,-73,5,-74,5,-8,-122,-121,-38,-49,-60,5,5,-123,]),'DIV_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,231,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'MINUS':([17,47,52,58,61,74,75,76,77,79,80,84,85,87,88,91,92,93,94,95,96,97,98,102,103,104,105,106,107,109,120,122,124,125,127,128,129,130,131,132,133,134,137,141,143,144,146,147,148,154,162,167,168,169,170,171,172,176,177,178,179,180,181,183,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,260,261,273,274,275,278,279,281,282,285,286,287,290,301,302,303,304,306,309,311,317,318,319,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-223,80,-9,80,-11,-213,-190,-219,80,-220,-201,-218,80,-202,-200,-214,80,-192,-199,192,-198,-204,-186,-222,-183,80,-203,-221,80,-212,-10,80,-111,-113,-109,80,-212,80,-190,80,-120,-110,80,80,-124,-114,80,-118,-112,-12,80,80,-194,80,80,80,80,80,80,80,80,80,80,-196,80,80,-211,-210,80,80,80,80,80,80,80,80,80,80,80,-193,-195,80,80,-122,80,80,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,80,80,-140,-121,-125,80,-119,80,80,80,-141,80,80,-215,80,-208,-209,-206,-184,-185,192,192,-189,-187,-188,80,-139,-123,-115,-143,80,-117,80,-191,80,-197,-205,-207,80,80,80,80,80,-116,80,80,80,80,80,80,-129,-128,-126,-131,80,80,80,80,80,-132,-133,80,-135,80,80,-130,-127,-134,-136,-137,80,-138,]),'LE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,177,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,177,177,-189,-187,-188,-191,-197,-205,-207,]),'ENUMERATION_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[106,-9,106,-11,106,-201,106,-202,-200,106,-199,-198,106,-203,106,-10,106,-111,-113,-109,106,106,106,-120,-110,106,106,-124,-114,106,-118,-112,-12,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-122,106,106,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,106,106,-140,-121,-125,106,-119,106,106,106,-141,106,106,106,106,-139,-123,-115,-143,106,-117,106,106,106,106,106,106,106,-116,106,106,106,106,106,106,-129,-128,-126,-131,106,106,106,106,106,-132,-133,106,-135,106,106,-130,-127,-134,-136,-137,106,-138,]),'LONG':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[16,16,-26,-36,-33,-24,-25,-21,-22,-1,16,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,16,-31,-34,-37,16,16,-68,-40,16,-67,-61,16,-9,16,-2,16,-5,-11,16,16,16,16,-43,16,-69,-70,16,-72,-10,-7,16,16,16,-120,-6,-12,16,-39,-44,-59,-71,16,-73,16,-74,16,-8,-122,-121,-38,-49,-60,16,16,-123,]),'PLUS':([17,47,52,58,61,74,75,76,77,79,80,84,85,87,88,91,92,93,94,95,96,97,98,102,103,104,105,106,107,109,120,122,124,125,127,128,129,130,131,132,133,134,137,141,143,144,146,147,148,154,162,167,168,169,170,171,172,176,177,178,179,180,181,183,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,260,261,273,274,275,278,279,281,282,285,286,287,290,301,302,303,304,306,309,311,317,318,319,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-223,88,-9,88,-11,-213,-190,-219,88,-220,-201,-218,88,-202,-200,-214,88,-192,-199,191,-198,-204,-186,-222,-183,88,-203,-221,88,-212,-10,88,-111,-113,-109,88,-212,88,-190,88,-120,-110,88,88,-124,-114,88,-118,-112,-12,88,88,-194,88,88,88,88,88,88,88,88,88,88,-196,88,88,-211,-210,88,88,88,88,88,88,88,88,88,88,88,-193,-195,88,88,-122,88,88,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,88,88,-140,-121,-125,88,-119,88,88,88,-141,88,88,-215,88,-208,-209,-206,-184,-185,191,191,-189,-187,-188,88,-139,-123,-115,-143,88,-117,88,-191,88,-197,-205,-207,88,88,88,88,88,-116,88,88,88,88,88,88,-129,-128,-126,-131,88,88,88,88,88,-132,-133,88,-135,88,88,-130,-127,-134,-136,-137,88,-138,]),'TYPEDEF_NAME':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[19,19,-26,-36,-33,-24,-25,-21,-22,-1,19,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,19,-31,-34,-37,19,19,-68,-40,19,-67,-61,19,-9,19,-2,19,-5,-11,19,19,19,19,-43,19,-69,-70,19,-72,-10,-7,19,19,19,-120,-6,-12,19,-39,-44,-59,-71,19,-73,19,-74,19,-8,-122,-121,-38,-49,-60,19,19,-123,]),'GT':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,176,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,176,176,-189,-187,-188,-191,-197,-205,-207,]),'GOTO':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,126,-11,-10,-111,-113,-109,126,-120,-110,126,-124,-114,126,-118,-112,-12,-122,126,126,-142,-140,-121,-125,-119,126,-141,-139,-123,-115,-143,-117,126,126,-116,126,126,126,-129,-128,-126,-131,126,126,126,126,-132,-133,126,-135,126,126,-130,-127,-134,-136,-137,126,-138,]),'ENUM':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[21,21,-26,-36,-33,-24,-25,-21,-22,-1,21,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,21,-31,-34,-37,21,21,-68,-40,21,-67,-61,21,-9,21,-2,21,-5,-11,21,21,21,21,-43,21,-69,-70,21,-72,-10,-7,21,21,21,-120,-6,-12,21,-39,-44,-59,-71,21,-73,21,-74,21,-8,-122,-121,-38,-49,-60,21,21,-123,]),'PERIOD':([17,74,76,79,84,91,93,97,102,106,109,129,186,187,260,273,274,275,320,321,],[-223,-213,-219,-220,-218,-214,188,-204,-222,-221,-212,-212,-211,-210,-215,-208,-209,-206,-205,-207,]),'LEFT_OP':([17,74,75,76,79,84,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,194,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,194,194,194,194,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-191,-197,-205,-207,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[31,31,-26,-36,-33,-24,-25,-21,-22,-1,31,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,31,-31,-34,-37,31,31,-68,-40,31,-67,-61,31,-9,31,-2,31,-5,-11,31,31,31,31,-43,31,-69,-70,31,-72,-10,-7,31,31,31,-120,-6,-12,31,-39,-44,-59,-71,31,-73,31,-74,31,-8,-122,-121,-38,-49,-60,31,31,-123,]),'INC_OP':([17,47,52,58,61,74,76,77,79,80,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,120,122,124,125,127,128,129,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,260,261,273,274,275,290,301,302,303,304,306,309,311,318,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-223,104,-9,104,-11,-213,-219,104,-220,-201,-218,104,-202,-200,-214,104,187,-199,-198,-204,-222,104,-203,-221,104,-212,-10,104,-111,-113,-109,104,-212,104,104,-120,-110,104,104,-124,-114,104,-118,-112,-12,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-211,-210,104,104,104,104,104,104,104,104,104,104,104,104,104,-122,104,104,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,104,104,-140,-121,-125,104,-119,104,104,104,-141,104,104,-215,104,-208,-209,-206,104,-139,-123,-115,-143,104,-117,104,104,-205,-207,104,104,104,104,104,-116,104,104,104,104,104,104,-129,-128,-126,-131,104,104,104,104,104,-132,-133,104,-135,104,104,-130,-127,-134,-136,-137,104,-138,]),'NE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,101,102,103,106,109,129,131,168,183,186,187,201,202,258,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,196,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,196,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'SHORT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[2,2,-26,-36,-33,-24,-25,-21,-22,-1,2,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,2,-31,-34,-37,2,2,-68,-40,2,-67,-61,2,-9,2,-2,2,-5,-11,2,2,2,2,-43,2,-69,-70,2,-72,-10,-7,2,2,2,-120,-6,-12,2,-39,-44,-59,-71,2,-73,2,-74,2,-8,-122,-121,-38,-49,-60,2,2,-123,]),'RETURN':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,130,-11,-10,-111,-113,-109,130,-120,-110,130,-124,-114,130,-118,-112,-12,-122,130,130,-142,-140,-121,-125,-119,130,-141,-139,-123,-115,-143,-117,130,130,-116,130,130,130,-129,-128,-126,-131,130,130,130,130,-132,-133,130,-135,130,130,-130,-127,-134,-136,-137,130,-138,]),'OPENBRACE':([6,17,18,21,23,29,37,38,40,42,45,52,55,58,61,62,69,82,110,120,122,123,124,125,127,128,133,134,137,143,144,146,147,148,154,182,203,211,214,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,331,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[41,-223,-42,46,-66,-41,58,-68,63,-67,70,-9,58,58,-11,58,-69,-70,-72,-10,214,58,-111,-113,-109,58,-120,-110,58,-124,-114,58,-118,-112,-12,-71,-73,-74,214,-122,58,58,-142,-140,-121,-125,-119,58,-141,-139,-123,-115,-143,-117,58,214,58,-116,58,58,58,-129,-128,-126,-131,58,58,58,58,-132,-133,58,-135,58,58,-130,-127,-134,-136,-137,58,-138,]),'STATIC':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,128,133,153,154,156,166,182,203,209,211,212,217,219,238,249,254,264,291,302,],[8,8,-26,-36,-33,-24,-25,-21,-22,-1,8,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,8,-31,-34,-37,8,8,-68,-40,-67,-61,8,-9,8,-2,8,-5,-11,8,-69,-70,-72,-10,-7,8,8,-120,-6,-12,-39,-59,-71,-73,8,-74,8,-8,-122,-121,-38,-60,8,8,-123,]),'EQ_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,101,102,103,106,109,129,131,168,183,186,187,201,202,258,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,197,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,197,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'SIZEOF':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[92,-9,92,-11,92,-201,92,-202,-200,92,-199,-198,92,-203,92,-10,92,-111,-113,-109,92,92,92,-120,-110,92,92,-124,-114,92,-118,-112,-12,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-122,92,92,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,92,92,-140,-121,-125,92,-119,92,92,92,-141,92,92,92,92,-139,-123,-115,-143,92,-117,92,92,92,92,92,92,92,-116,92,92,92,92,92,92,-129,-128,-126,-131,92,92,92,92,92,-132,-133,92,-135,92,92,-130,-127,-134,-136,-137,92,-138,]),'OPENPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,42,44,45,47,49,50,51,52,56,57,58,59,60,61,65,67,68,69,74,76,77,79,80,82,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,110,113,117,118,119,120,121,122,124,125,127,128,129,130,132,133,134,135,137,140,141,142,143,144,146,147,148,150,153,154,156,158,159,162,166,167,169,170,171,172,175,176,177,178,179,180,181,182,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,203,204,207,208,209,211,214,217,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,249,250,252,254,260,261,263,264,273,274,275,288,290,292,293,301,302,303,304,306,309,311,313,318,320,321,322,323,324,326,328,329,331,332,334,335,336,337,338,339,342,343,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[11,-13,-26,-36,-33,-24,-25,-21,-22,11,11,-1,-15,-20,-32,-28,-223,-35,-23,-19,48,-75,11,-4,-29,-3,-27,-30,-17,-31,-34,-37,11,-68,-14,-40,48,-16,-61,85,-79,-76,-77,-9,-18,-2,132,-5,11,-11,-50,-52,11,-69,-213,-219,169,-220,-201,-70,-218,132,-202,-200,-214,184,190,-199,-198,-204,-222,169,-203,-221,85,-212,-72,209,-80,-78,11,-10,-7,132,-111,-113,-109,132,-212,132,132,-120,-110,236,132,243,85,245,-124,-114,132,-118,-112,248,-6,-12,-39,-51,-53,85,-59,85,132,85,85,85,264,85,85,85,85,132,85,-71,132,132,-211,-210,132,85,85,85,85,85,85,85,85,85,85,-73,85,291,209,209,-74,132,-8,-122,132,132,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,132,132,-140,-121,-125,132,-119,132,132,132,-141,132,-38,85,11,-60,-215,85,264,264,-208,-209,-206,-101,85,291,-105,-139,-123,-115,-143,132,-117,132,338,85,-205,-207,132,-102,-103,-107,-106,-100,132,132,132,132,-116,132,132,132,-104,-108,132,132,132,-129,-128,-126,-131,132,132,132,132,132,-132,-133,132,-135,132,132,-130,-127,-134,-136,-137,132,-138,]),'CLOSEBRACE':([17,52,58,61,64,66,71,72,73,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,120,124,125,127,128,131,133,134,137,143,144,147,148,151,154,155,157,164,168,183,186,187,201,202,216,219,220,222,237,238,239,241,246,253,255,256,257,258,259,260,265,266,267,268,270,273,274,275,278,279,280,281,282,283,284,285,286,287,299,300,301,302,303,304,305,309,317,319,320,321,330,331,336,340,344,345,351,352,354,355,364,365,367,371,372,373,374,375,377,],[-223,-9,133,-11,156,-43,-62,166,-64,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-10,-111,-113,-109,219,-190,-120,-110,238,-124,-114,-118,-112,-146,-12,249,-44,254,-194,-196,-211,-210,-193,-195,-90,-122,302,-142,-140,-121,-125,-119,-141,-49,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-93,330,-139,-123,-115,-143,-147,-117,-191,-197,-205,-207,-91,345,-116,-160,-94,-92,-129,-128,-126,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'INTEGER_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[84,-9,84,-11,84,-201,84,-202,-200,84,-199,-198,84,-203,84,-10,84,-111,-113,-109,84,84,84,-120,-110,84,84,-124,-114,84,-118,-112,-12,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-122,84,84,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,84,84,-140,-121,-125,84,-119,84,84,84,-141,84,84,84,84,-139,-123,-115,-143,84,-117,84,84,84,84,84,84,84,-116,84,84,84,84,84,84,-129,-128,-126,-131,84,84,84,84,84,-132,-133,84,-135,84,84,-130,-127,-134,-136,-137,84,-138,]),'CLOSEPAREN':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,43,44,45,48,49,50,51,56,65,67,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,110,111,112,113,114,115,116,117,118,131,149,151,156,158,159,166,168,173,174,175,182,183,186,187,190,201,202,203,205,206,207,208,209,211,249,254,257,258,259,260,262,263,264,265,266,267,268,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,292,293,294,295,296,297,298,305,308,310,312,314,317,319,320,321,323,324,326,327,328,329,332,340,341,342,343,347,348,349,353,358,360,361,370,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,69,-16,-61,110,-79,-76,-77,-18,-50,-52,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-72,-83,203,-86,211,-81,-88,-80,-78,-190,-144,-146,-39,-51,-53,-59,-194,260,261,-95,-71,-196,-211,-210,275,-193,-195,-73,-87,-85,-98,-97,293,-74,-38,-60,-169,-171,-167,-215,-96,-97,293,-177,-178,-176,-179,-163,319,-208,-209,-206,-216,321,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,326,-99,-105,328,329,-89,-82,-84,-147,-145,335,337,339,-191,-197,-205,-207,-102,-103,-107,343,-106,-100,346,-160,-217,-104,-108,356,357,359,362,366,368,369,376,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[15,15,-26,-36,-33,-24,-25,-21,-22,-1,15,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,15,-31,-34,-37,15,15,-68,-40,15,-67,-61,15,-9,15,-2,15,-5,-11,15,15,15,15,-43,15,-69,-70,15,-72,-10,-7,15,15,15,-120,-6,-12,15,-39,-44,-59,-71,15,-73,15,-74,15,-8,-122,-121,-38,-49,-60,15,15,-123,]),'OR_OP':([17,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,129,131,168,183,186,187,201,202,257,258,259,260,265,266,267,268,270,273,274,275,278,279,280,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,181,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'COLON':([2,3,4,5,7,15,16,17,19,23,27,30,31,33,34,35,38,40,42,45,65,67,68,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,129,131,139,149,151,156,158,159,161,166,168,182,183,186,187,201,202,203,211,244,249,252,254,257,258,259,260,265,266,267,268,269,270,273,274,275,278,279,280,281,282,283,284,285,286,287,305,308,317,319,320,321,340,],[-26,-36,-33,-24,-25,-32,-28,-223,-35,-66,-29,-27,-30,-31,-34,-37,-68,-40,-67,-61,-50,-52,162,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,221,-190,242,-144,-146,-39,-51,-53,250,-59,-194,-71,-196,-211,-210,-193,-195,-73,-74,311,-38,162,-60,-169,-171,-167,-215,-177,-178,-176,-179,318,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-147,-145,-191,-197,-205,-207,-160,]),'$end':([12,26,28,36,52,57,59,120,121,133,153,217,219,238,302,],[-1,-4,-3,0,-9,-2,-5,-10,-7,-120,-6,-8,-122,-121,-123,]),'FOR':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,135,-11,-10,-111,-113,-109,135,-120,-110,135,-124,-114,135,-118,-112,-12,-122,135,135,-142,-140,-121,-125,-119,135,-141,-139,-123,-115,-143,-117,135,135,-116,135,135,135,-129,-128,-126,-131,135,135,135,135,-132,-133,135,-135,135,135,-130,-127,-134,-136,-137,135,-138,]),'UNION':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[18,18,-26,-36,-33,-24,-25,-21,-22,-1,18,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,18,-31,-34,-37,18,18,-68,-40,18,-67,-61,18,-9,18,-2,18,-5,-11,18,18,18,18,-43,18,-69,-70,18,-72,-10,-7,18,18,18,-120,-6,-12,18,-39,-44,-59,-71,18,-73,18,-74,18,-8,-122,-121,-38,-49,-60,18,18,-123,]),'ELSE':([124,125,127,133,134,144,147,148,219,222,237,238,241,246,301,302,303,304,309,336,351,352,354,355,364,365,367,371,372,373,374,375,377,],[-111,-113,-109,-120,-110,-114,-118,-112,-122,-142,-140,-121,-119,-141,-139,-123,-115,-143,-117,-116,-129,-128,363,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'AMPERSAND':([17,47,52,58,61,74,75,76,77,79,80,81,84,85,86,87,88,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,109,120,122,124,125,127,128,129,130,131,132,133,134,137,141,143,144,146,147,148,154,162,167,168,169,170,171,172,176,177,178,179,180,181,183,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,257,258,260,261,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,290,301,302,303,304,306,309,311,317,318,319,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-223,96,-9,96,-11,-213,-190,-219,96,-220,-201,171,-218,96,-172,-202,-200,-214,96,-192,-199,-180,-198,-204,-186,-175,-170,-222,-183,96,-203,-221,96,-212,-10,96,-111,-113,-109,96,-212,96,-190,96,-120,-110,96,96,-124,-114,96,-118,-112,-12,96,96,-194,96,96,96,96,96,96,96,96,96,96,-196,96,96,-211,-210,96,96,96,96,96,96,96,96,96,96,96,-193,-195,96,96,-122,96,96,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,96,96,-140,-121,-125,96,-119,96,96,96,-141,96,96,171,-171,-215,96,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,96,-139,-123,-115,-143,96,-117,96,-191,96,-197,-205,-207,96,96,96,96,96,-116,96,96,96,96,96,96,-129,-128,-126,-131,96,96,96,96,96,-132,-133,96,-135,96,96,-130,-127,-134,-136,-137,96,-138,]),'CLOSEBRACKET':([17,47,74,75,76,78,79,81,83,84,86,89,90,91,93,95,97,98,99,100,101,102,103,106,108,109,131,149,151,168,183,186,187,201,202,204,257,258,259,260,265,266,267,268,270,272,273,274,275,278,279,280,281,282,283,284,285,286,287,289,290,305,308,317,319,320,321,325,340,],[-223,82,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,182,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-190,-144,-146,-194,-196,-211,-210,-193,-195,288,-169,-171,-167,-215,-177,-178,-176,-179,-163,320,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,323,324,-147,-145,-191,-197,-205,-207,342,-160,]),'SUB_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,224,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'XOR_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,226,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'INT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[30,30,-26,-36,-33,-24,-25,-21,-22,-1,30,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,30,-31,-34,-37,30,30,-68,-40,30,-67,-61,30,-9,30,-2,30,-5,-11,30,30,30,30,-43,30,-69,-70,30,-72,-10,-7,30,30,30,-120,-6,-12,30,-39,-44,-59,-71,30,-73,30,-74,30,-8,-122,-121,-38,-49,-60,30,30,-123,]),'SIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[33,33,-26,-36,-33,-24,-25,-21,-22,-1,33,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,33,-31,-34,-37,33,33,-68,-40,33,-67,-61,33,-9,33,-2,33,-5,-11,33,33,33,33,-43,33,-69,-70,33,-72,-10,-7,33,33,33,-120,-6,-12,33,-39,-44,-59,-71,33,-73,33,-74,33,-8,-122,-121,-38,-49,-60,33,33,-123,]),'CONTINUE':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,136,-11,-10,-111,-113,-109,136,-120,-110,136,-124,-114,136,-118,-112,-12,-122,136,136,-142,-140,-121,-125,-119,136,-141,-139,-123,-115,-143,-117,136,136,-116,136,136,136,-129,-128,-126,-131,136,136,136,136,-132,-133,136,-135,136,136,-130,-127,-134,-136,-137,136,-138,]),'MUL_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,230,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'RIGHT_OP':([17,74,75,76,79,84,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,195,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,195,195,195,195,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-191,-197,-205,-207,]),'RIGHT_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,234,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'DEFAULT':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,139,-11,-10,-111,-113,-109,139,-120,-110,139,-124,-114,139,-118,-112,-12,-122,139,139,-142,-140,-121,-125,-119,139,-141,-139,-123,-115,-143,-117,139,139,-116,139,139,139,-129,-128,-126,-131,139,139,139,139,-132,-133,139,-135,139,139,-130,-127,-134,-136,-137,139,-138,]),'CHAR':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[7,7,-26,-36,-33,-24,-25,-21,-22,-1,7,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,7,-31,-34,-37,7,7,-68,-40,7,-67,-61,7,-9,7,-2,7,-5,-11,7,7,7,7,-43,7,-69,-70,7,-72,-10,-7,7,7,7,-120,-6,-12,7,-39,-44,-59,-71,7,-73,7,-74,7,-8,-122,-121,-38,-49,-60,7,7,-123,]),'WHILE':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,247,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,140,-11,-10,-111,-113,-109,140,-120,-110,140,-124,-114,140,-118,-112,-12,-122,140,140,-142,-140,-121,-125,-119,140,-141,313,-139,-123,-115,-143,-117,140,140,-116,140,140,140,-129,-128,-126,-131,140,140,140,140,-132,-133,140,-135,140,140,-130,-127,-134,-136,-137,140,-138,]),'EXTERN':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,128,133,153,154,156,166,182,203,209,211,212,217,219,238,249,254,264,291,302,],[9,9,-26,-36,-33,-24,-25,-21,-22,-1,9,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,9,-31,-34,-37,9,9,-68,-40,-67,-61,9,-9,9,-2,9,-5,-11,9,-69,-70,-72,-10,-7,9,9,-120,-6,-12,-39,-59,-71,-73,9,-74,9,-8,-122,-121,-38,-60,9,9,-123,]),'CASE':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,141,-11,-10,-111,-113,-109,141,-120,-110,141,-124,-114,141,-118,-112,-12,-122,141,141,-142,-140,-121,-125,-119,141,-141,-139,-123,-115,-143,-117,141,141,-116,141,141,141,-129,-128,-126,-131,141,141,141,141,-132,-133,141,-135,141,141,-130,-127,-134,-136,-137,141,-138,]),'FLOATING_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[79,-9,79,-11,79,-201,79,-202,-200,79,-199,-198,79,-203,79,-10,79,-111,-113,-109,79,79,79,-120,-110,79,79,-124,-114,79,-118,-112,-12,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-122,79,79,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,79,79,-140,-121,-125,79,-119,79,79,79,-141,79,79,79,79,-139,-123,-115,-143,79,-117,79,79,79,79,79,79,79,-116,79,79,79,79,79,79,-129,-128,-126,-131,79,79,79,79,79,-132,-133,79,-135,79,79,-130,-127,-134,-136,-137,79,-138,]),'OPENBRACKET':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,56,65,67,69,74,76,79,82,84,91,93,97,102,106,109,110,113,117,118,129,156,158,159,166,175,182,186,187,203,207,208,209,211,249,254,260,263,264,273,274,275,288,292,293,320,321,323,324,326,328,329,342,343,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,47,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,47,-16,-61,-79,-76,-77,-18,-50,-52,-69,-213,-219,-220,-70,-218,-214,185,-204,-222,-221,-212,-72,204,-80,-78,-212,-39,-51,-53,-59,204,-71,-211,-210,-73,290,204,204,-74,-38,-60,-215,204,204,-208,-209,-206,-101,290,-105,-205,-207,-102,-103,-107,-106,-100,-104,-108,]),'REGISTER':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,128,133,153,154,156,166,182,203,209,211,212,217,219,238,249,254,264,291,302,],[14,14,-26,-36,-33,-24,-25,-21,-22,-1,14,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,14,-31,-34,-37,14,14,-68,-40,-67,-61,14,-9,14,-2,14,-5,-11,14,-69,-70,-72,-10,-7,14,14,-120,-6,-12,-39,-59,-71,-73,14,-74,14,-8,-122,-121,-38,-60,14,14,-123,]),'PIPE':([17,74,75,76,78,79,81,83,84,86,91,93,95,97,98,100,101,102,103,106,109,129,131,168,183,186,187,201,202,257,258,259,260,265,266,267,268,273,274,275,278,279,280,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-166,-220,-168,172,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,172,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'DEC_OP':([17,47,52,58,61,74,76,77,79,80,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,120,122,124,125,127,128,129,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,260,261,273,274,275,290,301,302,303,304,306,309,311,318,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-223,77,-9,77,-11,-213,-219,77,-220,-201,-218,77,-202,-200,-214,77,186,-199,-198,-204,-222,77,-203,-221,77,-212,-10,77,-111,-113,-109,77,-212,77,77,-120,-110,77,77,-124,-114,77,-118,-112,-12,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-211,-210,77,77,77,77,77,77,77,77,77,77,77,77,77,-122,77,77,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,77,77,-140,-121,-125,77,-119,77,77,77,-141,77,77,-215,77,-208,-209,-206,77,-139,-123,-115,-143,77,-117,77,77,-205,-207,77,77,77,77,77,-116,77,77,77,77,77,77,-129,-128,-126,-131,77,77,77,77,77,-132,-133,77,-135,77,77,-130,-127,-134,-136,-137,77,-138,]),'SWITCH':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,142,-11,-10,-111,-113,-109,142,-120,-110,142,-124,-114,142,-118,-112,-12,-122,142,142,-142,-140,-121,-125,-119,142,-141,-139,-123,-115,-143,-117,142,142,-116,142,142,142,-129,-128,-126,-131,142,142,142,142,-132,-133,142,-135,142,142,-130,-127,-134,-136,-137,142,-138,]),'AND_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,229,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'ELIPSIS':([212,],[297,]),'TILDE':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[87,-9,87,-11,87,-201,87,-202,-200,87,-199,-198,87,-203,87,-10,87,-111,-113,-109,87,87,87,-120,-110,87,87,-124,-114,87,-118,-112,-12,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-122,87,87,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,87,87,-140,-121,-125,87,-119,87,87,87,-141,87,87,87,87,-139,-123,-115,-143,87,-117,87,87,87,87,87,87,87,-116,87,87,87,87,87,87,-129,-128,-126,-131,87,87,87,87,87,-132,-133,87,-135,87,87,-130,-127,-134,-136,-137,87,-138,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,65,67,68,70,77,80,85,87,88,92,94,96,104,105,107,113,117,118,119,120,121,122,124,125,126,127,128,130,132,133,134,137,141,143,144,146,147,148,153,154,156,158,159,162,165,166,167,169,170,171,172,176,177,178,179,180,181,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,204,208,209,210,214,217,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,249,250,252,254,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[17,-13,-26,-36,-33,-24,17,-25,-21,-22,17,17,-1,-15,-20,-32,-28,-223,-42,-35,-23,17,-19,-75,17,-4,-29,-3,-41,-27,-30,-17,-31,-34,-37,17,-14,-40,-16,-61,17,17,17,-79,-76,-77,-9,-18,-2,17,-5,17,-11,-50,-52,17,17,17,-201,17,-202,-200,17,-199,-198,17,-203,17,17,-80,-78,17,-10,-7,17,-111,-113,17,-109,17,17,17,-120,-110,17,17,-124,-114,17,-118,-112,-6,-12,-39,-51,-53,17,17,-59,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,-122,17,17,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,17,17,-140,-121,-125,17,-119,17,17,17,-141,17,-38,17,17,-60,17,17,-139,-123,-115,-143,17,-117,17,17,17,17,17,17,17,-116,17,17,17,17,17,17,-129,-128,-126,-131,17,17,17,17,17,-132,-133,17,-135,17,17,-130,-127,-134,-136,-137,17,-138,]),'ADD_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,228,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'PERCENT':([17,74,75,76,79,84,91,93,97,98,102,103,106,109,129,131,168,183,186,187,201,202,260,273,274,275,278,279,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,198,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,198,198,-189,-187,-188,-191,-197,-205,-207,]),'GE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,179,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,179,179,-189,-187,-188,-191,-197,-205,-207,]),'STRUCT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[29,29,-26,-36,-33,-24,-25,-21,-22,-1,29,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,29,-31,-34,-37,29,29,-68,-40,29,-67,-61,29,-9,29,-2,29,-5,-11,29,29,29,29,-43,29,-69,-70,29,-72,-10,-7,29,29,29,-120,-6,-12,29,-39,-44,-59,-71,29,-73,29,-74,29,-8,-122,-121,-38,-49,-60,29,29,-123,]),'MOD_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,225,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'QMARK':([17,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,129,131,168,183,186,187,201,202,257,258,259,260,265,266,267,268,270,273,274,275,278,279,280,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,180,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'OR_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,227,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),'BREAK':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,145,-11,-10,-111,-113,-109,145,-120,-110,145,-124,-114,145,-118,-112,-12,-122,145,145,-142,-140,-121,-125,-119,145,-141,-139,-123,-115,-143,-117,145,145,-116,145,145,145,-129,-128,-126,-131,145,145,145,145,-132,-133,145,-135,145,145,-130,-127,-134,-136,-137,145,-138,]),'VOLATILE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,117,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[35,35,-26,-36,-33,-24,-25,-21,-22,-1,35,-20,-32,-28,-223,-35,-23,-19,-66,35,-4,-29,-3,-27,-30,35,-31,-34,-37,35,35,-68,-40,35,-67,-61,35,-79,35,-9,35,-2,35,-5,-11,35,35,35,35,-43,35,-69,-70,35,-72,-80,-10,-7,35,35,35,-120,-6,-12,35,-39,-44,-59,-71,35,-73,35,-74,35,-8,-122,-121,-38,-49,-60,35,35,-123,]),'DO':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,146,-11,-10,-111,-113,-109,146,-120,-110,146,-124,-114,146,-118,-112,-12,-122,146,146,-142,-140,-121,-125,-119,146,-141,-139,-123,-115,-143,-117,146,146,-116,146,146,146,-129,-128,-126,-131,146,146,146,146,-132,-133,146,-135,146,146,-130,-127,-134,-136,-137,146,-138,]),'CONST':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,117,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[3,3,-26,-36,-33,-24,-25,-21,-22,-1,3,-20,-32,-28,-223,-35,-23,-19,-66,3,-4,-29,-3,-27,-30,3,-31,-34,-37,3,3,-68,-40,3,-67,-61,3,-79,3,-9,3,-2,3,-5,-11,3,3,3,3,-43,3,-69,-70,3,-72,-80,-10,-7,3,3,3,-120,-6,-12,3,-39,-44,-59,-71,3,-73,3,-74,3,-8,-122,-121,-38,-49,-60,3,3,-123,]),'CARAT':([17,74,75,76,78,79,81,84,86,91,93,95,97,98,100,101,102,103,106,109,129,131,168,183,186,187,201,202,257,258,259,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,170,-220,-168,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-169,-171,170,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'DIV':([17,74,75,76,79,84,91,93,97,98,102,103,106,109,129,131,168,183,186,187,201,202,260,273,274,275,278,279,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,200,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,200,200,-189,-187,-188,-191,-197,-205,-207,]),'LE':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,129,131,168,183,186,187,201,202,260,265,266,267,268,273,274,275,278,279,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-220,-218,178,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,178,178,-189,-187,-188,-191,-197,-205,-207,]),'SEMI':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,25,27,30,31,32,33,34,35,38,39,40,42,44,45,52,53,54,55,56,58,60,61,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,120,124,125,127,128,129,130,131,133,134,136,137,138,143,144,145,146,147,148,149,151,152,154,156,160,161,163,166,168,182,183,186,187,201,202,203,211,213,215,216,218,219,220,221,222,223,236,237,238,239,241,242,246,249,251,254,257,258,259,260,265,266,267,268,270,273,274,275,278,279,280,281,282,283,284,285,286,287,301,302,303,304,305,306,307,308,309,311,315,316,317,319,320,321,330,333,334,335,336,337,339,340,345,346,350,351,352,354,355,356,357,359,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,52,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-9,-45,120,-47,-18,147,52,-11,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-10,-111,-113,-109,147,-212,222,-190,-120,-110,237,147,241,-124,-114,246,147,-118,-112,-144,-146,-47,-12,-39,-54,-56,253,-59,-194,-71,-196,-211,-210,-193,-195,-73,-74,-46,-48,-90,301,-122,147,147,-142,304,306,-140,-121,-125,-119,147,-141,-38,-57,-60,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-139,-123,-115,-143,-147,332,334,-145,-117,147,-58,-55,-191,-197,-205,-207,-91,348,349,147,-116,147,147,-160,-92,147,361,-129,-128,-126,-131,147,147,147,371,147,-132,-133,147,-135,147,147,-130,-127,-134,-136,-137,147,-138,]),'CHARACTER_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[76,-9,76,-11,76,-201,76,-202,-200,76,-199,-198,76,-203,76,-10,76,-111,-113,-109,76,76,76,-120,-110,76,76,-124,-114,76,-118,-112,-12,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-122,76,76,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,76,76,-140,-121,-125,76,-119,76,76,76,-141,76,76,76,76,-139,-123,-115,-143,76,-117,76,76,76,76,76,76,76,-116,76,76,76,76,76,76,-129,-128,-126,-131,76,76,76,76,76,-132,-133,76,-135,76,76,-130,-127,-134,-136,-137,76,-138,]),'COMMA':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,53,54,55,56,69,71,72,73,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,111,113,114,115,116,117,118,129,131,138,149,151,152,156,160,161,163,164,166,168,173,182,183,186,187,201,202,203,205,206,207,208,211,213,215,216,223,249,251,254,255,256,257,258,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,292,293,296,298,299,300,305,307,308,310,312,314,315,316,317,319,320,321,323,324,326,328,329,330,333,340,341,342,343,344,345,347,350,353,358,360,370,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-79,-76,-77,-45,119,-47,-18,-69,-62,165,-64,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-83,-86,210,212,-88,-80,-78,-212,-190,240,-144,-146,-47,-39,-54,-56,252,165,-59,-194,240,-71,-196,-211,-210,-193,-195,-73,-87,-85,-98,-97,-74,-46,-48,-90,240,-38,-57,-60,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,240,-163,240,-208,-209,-206,-216,322,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,-99,-105,-89,-84,-93,331,-147,240,-145,240,240,240,-58,-55,-191,-197,-205,-207,-102,-103,-107,-106,-100,-91,240,-160,-217,-104,-108,-94,-92,240,240,240,240,240,240,]),'PTR_OP':([17,74,76,79,84,91,93,97,102,106,109,129,186,187,260,273,274,275,320,321,],[-223,-213,-219,-220,-218,-214,189,-204,-222,-221,-212,-212,-211,-210,-215,-208,-209,-206,-205,-207,]),'ASSIGN':([17,23,38,42,55,69,73,74,75,76,79,82,84,91,93,97,102,106,109,110,129,131,152,168,182,183,186,187,201,202,203,211,260,273,274,275,317,319,320,321,],[-223,-66,-68,-67,122,-69,167,-213,-190,-219,-220,-70,-218,-214,-192,-204,-222,-221,-212,-72,-212,233,122,-194,-71,-196,-211,-210,-193,-195,-73,-74,-215,-208,-209,-206,-191,-197,-205,-207,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,128,133,153,154,156,166,182,203,209,211,212,217,219,238,249,254,264,291,302,],[20,20,-26,-36,-33,-24,-25,-21,-22,-1,20,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,20,-31,-34,-37,20,20,-68,-40,-67,-61,20,-9,20,-2,20,-5,-11,20,-69,-70,-72,-10,-7,20,20,-120,-6,-12,-39,-59,-71,-73,20,-74,20,-8,-122,-121,-38,-60,20,20,-123,]),'AUTO':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,128,133,153,154,156,166,182,203,209,211,212,217,219,238,249,254,264,291,302,],[22,22,-26,-36,-33,-24,-25,-21,-22,-1,22,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,22,-31,-34,-37,22,22,-68,-40,-67,-61,22,-9,22,-2,22,-5,-11,22,-69,-70,-72,-10,-7,22,22,-120,-6,-12,-39,-59,-71,-73,22,-74,22,-8,-122,-121,-38,-60,22,22,-123,]),'ASTERISK':([0,1,2,3,4,5,7,8,9,11,12,13,14,15,16,17,19,20,22,24,25,26,27,28,30,31,32,33,34,35,36,39,40,44,45,47,49,50,52,56,57,58,59,60,61,65,67,68,74,75,76,77,79,80,84,85,87,88,91,92,93,94,96,97,98,102,103,104,105,106,107,109,113,117,119,120,121,122,124,125,127,128,129,130,131,132,133,134,137,141,143,144,146,147,148,153,154,156,158,159,162,166,167,168,169,170,171,172,175,176,177,178,179,180,181,183,184,185,186,187,190,191,192,193,194,195,196,197,198,199,200,201,202,204,209,214,217,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,249,250,252,254,260,261,264,273,274,275,278,279,285,286,287,290,301,302,303,304,306,309,311,317,318,319,320,321,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[24,-13,-26,-36,-33,-24,-25,-21,-22,24,-1,-15,-20,-32,-28,-223,-35,-23,-19,24,24,-4,-29,-3,-27,-30,-17,-31,-34,-37,24,-14,-40,-16,-61,94,-79,24,-9,-18,-2,94,-5,24,-11,-50,-52,24,-213,-190,-219,94,-220,-201,-218,94,-202,-200,-214,94,-192,-199,-198,-204,-186,-222,199,94,-203,-221,94,-212,24,-80,24,-10,-7,94,-111,-113,-109,94,-212,94,-190,94,-120,-110,94,94,-124,-114,94,-118,-112,-6,-12,-39,-51,-53,94,-59,94,-194,94,94,94,94,24,94,94,94,94,94,94,-196,94,94,-211,-210,94,94,94,94,94,94,94,94,94,94,94,-193,-195,94,24,94,-8,-122,94,94,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,94,94,-140,-121,-125,94,-119,94,94,94,-141,94,-38,94,24,-60,-215,94,24,-208,-209,-206,199,199,-189,-187,-188,94,-139,-123,-115,-143,94,-117,94,-191,94,-197,-205,-207,94,94,94,94,94,-116,94,94,94,94,94,94,-129,-128,-126,-131,94,94,94,94,94,-132,-133,94,-135,94,94,-130,-127,-134,-136,-137,94,-138,]),'AND_OP':([17,74,75,76,78,79,81,83,84,86,91,93,95,97,98,99,100,101,102,103,106,109,129,131,168,183,186,187,201,202,257,258,259,260,265,266,267,268,270,273,274,275,278,279,280,281,282,283,284,285,286,287,317,319,320,321,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,-214,-192,-180,-204,-186,193,-175,-170,-222,-183,-221,-212,-212,-190,-194,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,193,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'BANG':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[105,-9,105,-11,105,-201,105,-202,-200,105,-199,-198,105,-203,105,-10,105,-111,-113,-109,105,105,105,-120,-110,105,105,-124,-114,105,-118,-112,-12,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-122,105,105,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,105,105,-140,-121,-125,105,-119,105,105,105,-141,105,105,105,105,-139,-123,-115,-143,105,-117,105,105,105,105,105,105,105,-116,105,105,105,105,105,105,-129,-128,-126,-131,105,105,105,105,105,-132,-133,105,-135,105,105,-130,-127,-134,-136,-137,105,-138,]),'IF':([52,58,61,120,124,125,127,128,133,134,137,143,144,146,147,148,154,219,220,221,222,237,238,239,241,242,246,301,302,303,304,309,311,335,336,337,339,346,351,352,354,355,356,357,359,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[-9,150,-11,-10,-111,-113,-109,150,-120,-110,150,-124,-114,150,-118,-112,-12,-122,150,150,-142,-140,-121,-125,-119,150,-141,-139,-123,-115,-143,-117,150,150,-116,150,150,150,-129,-128,-126,-131,150,150,150,150,-132,-133,150,-135,150,150,-130,-127,-134,-136,-137,150,-138,]),'STRING_LITERAL':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,124,125,127,128,130,132,133,134,137,141,143,144,146,147,148,154,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,248,250,261,290,301,302,303,304,306,309,311,318,322,331,332,334,335,336,337,338,339,346,348,349,351,352,354,355,356,357,359,361,363,364,365,366,367,368,369,371,372,373,374,375,376,377,],[102,-9,102,-11,102,-201,102,-202,-200,102,-199,-198,102,-203,102,-10,102,-111,-113,-109,102,102,102,-120,-110,102,102,-124,-114,102,-118,-112,-12,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-122,102,102,-142,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,102,102,-140,-121,-125,102,-119,102,102,102,-141,102,102,102,102,-139,-123,-115,-143,102,-117,102,102,102,102,102,102,102,-116,102,102,102,102,102,102,-129,-128,-126,-131,102,102,102,102,102,-132,-133,102,-135,102,102,-130,-127,-134,-136,-137,102,-138,]),'FLOAT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,128,132,133,153,154,155,156,157,166,182,184,203,209,211,212,217,219,238,249,253,254,264,291,302,],[27,27,-26,-36,-33,-24,-25,-21,-22,-1,27,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,27,-31,-34,-37,27,27,-68,-40,27,-67,-61,27,-9,27,-2,27,-5,-11,27,27,27,27,-43,27,-69,-70,27,-72,-10,-7,27,27,27,-120,-6,-12,27,-39,-44,-59,-71,27,-73,27,-74,27,-8,-122,-121,-38,-49,-60,27,27,-123,]),'LEFT_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,129,131,168,183,186,187,201,202,260,273,274,275,317,319,320,321,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-212,232,-194,-196,-211,-210,-193,-195,-215,-208,-209,-206,-191,-197,-205,-207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,32,36,37,48,55,58,62,123,128,209,212,264,291,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,278,279,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'type_name':([85,132,184,],[174,174,271,]),'constant':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'unary_expression':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[75,131,168,131,183,201,75,131,131,131,131,131,75,131,75,75,131,75,75,75,75,75,75,75,131,75,131,131,131,75,75,75,75,75,75,75,75,75,75,75,131,131,131,131,131,131,131,131,131,131,75,75,75,131,131,75,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'conditional_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,180,184,185,190,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[108,151,151,151,151,151,151,151,108,151,108,108,151,151,151,151,151,108,151,151,151,151,151,151,151,151,151,151,108,108,151,151,340,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'struct_or_union_specifier':([0,1,13,32,36,37,41,48,55,58,62,63,64,65,67,85,123,128,132,155,184,209,212,264,291,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,172,180,181,184,185,190,193,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[78,78,78,78,78,78,78,78,78,78,78,78,78,259,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'identifier_list':([48,],[114,]),'init_declarator_list':([25,60,],[54,54,]),'struct_declaration_list':([41,63,],[64,155,]),'assignment_operator':([131,],[235,]),'enumerator':([46,70,165,],[71,71,255,]),'abstract_declarator':([113,175,209,264,],[205,262,295,295,]),'pointer':([0,11,24,25,36,50,60,68,113,119,175,209,252,264,],[10,10,51,10,10,118,10,10,208,10,263,208,10,263,]),'and_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,172,180,181,184,185,190,193,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[81,81,81,81,81,81,81,81,81,81,81,81,81,257,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'assignment_expression':([58,85,122,128,130,132,137,146,169,180,184,185,190,214,220,221,235,236,240,242,243,245,248,306,311,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[149,149,216,149,149,149,149,149,149,149,149,149,276,216,149,149,305,149,308,149,149,149,149,149,149,341,216,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'external_declaration':([0,36,],[12,57,]),'type_specifier':([0,1,13,32,36,37,41,48,55,58,62,63,64,65,67,85,123,128,132,155,184,209,212,264,291,],[13,13,13,13,13,13,65,13,13,13,13,65,65,65,65,65,13,13,65,65,65,13,13,13,13,]),'compound_statement':([37,55,58,62,123,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[59,121,134,153,217,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'inclusive_or_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,180,181,184,185,190,193,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,280,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'iteration_statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'selection_statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'postfix_expression':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'additive_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,193,194,195,196,197,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,281,282,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'expression_statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'unary_operator':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'cast_expression':([47,58,85,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[98,98,98,202,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,285,286,287,98,98,98,98,98,98,98,98,98,98,98,98,317,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'initializer_list':([214,],[300,]),'struct_declarator_list':([68,],[163,]),'logical_or_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,180,184,185,190,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'translation_unit':([0,],[36,]),'relational_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,171,172,180,181,184,185,190,193,196,197,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,283,284,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'struct_or_union':([0,1,13,32,36,37,41,48,55,58,62,63,64,65,67,85,123,128,132,155,184,209,212,264,291,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'struct_declaration':([41,63,64,155,],[66,66,157,157,]),'string':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'parameter_type_list':([48,209,264,291,],[112,294,294,327,]),'parameter_declaration':([48,209,212,264,291,],[111,111,298,111,111,]),'direct_declarator':([0,10,11,25,36,60,68,113,119,208,209,252,],[23,42,23,23,23,23,23,23,23,42,23,23,]),'type_qualifier_list':([24,],[50,]),'argument_expression_list':([190,],[277,]),'initializer':([122,214,331,],[215,299,344,]),'direct_abstract_declarator':([113,175,208,209,263,264,],[207,207,292,207,292,207,]),'primary_expression':([47,58,77,85,92,104,107,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,191,192,193,194,195,196,197,198,199,200,204,214,220,221,235,236,240,242,243,245,248,250,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'declaration_specifiers':([0,1,13,32,36,37,48,55,58,62,123,128,209,212,264,291,],[25,39,44,56,25,60,113,60,60,60,60,60,113,113,113,113,]),'declaration':([0,36,37,55,58,62,123,128,],[26,26,61,61,61,154,154,154,]),'logical_and_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,180,181,184,185,190,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,270,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'declarator':([0,11,25,36,60,68,113,119,209,252,],[37,43,55,37,152,161,206,152,43,161,]),'shift_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,171,172,176,177,178,179,180,181,184,185,190,193,196,197,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,265,266,267,268,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'equality_expression':([47,58,85,122,128,130,132,137,141,146,162,167,169,170,171,172,180,181,184,185,190,193,204,214,220,221,235,236,240,242,243,245,248,250,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,258,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'jump_statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'struct_declarator':([68,252,],[160,316,]),'function_definition':([0,36,],[28,28,]),'parameter_list':([48,209,264,291,],[115,115,115,115,]),'enum_specifier':([0,1,13,32,36,37,41,48,55,58,62,63,64,65,67,85,123,128,132,155,184,209,212,264,291,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,13,24,32,36,37,41,48,50,55,58,62,63,64,65,67,85,123,128,132,155,184,209,212,264,291,],[32,32,32,49,32,32,32,67,32,117,32,32,32,67,67,67,67,67,32,32,67,67,67,32,32,32,32,]),'enumerator_list':([46,70,],[72,164,]),'labeled_statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'declaration_list':([37,55,58,],[62,123,128,]),'specifier_qualifier_list':([41,63,64,65,67,85,132,155,184,],[68,68,68,158,159,175,175,68,175,]),'statement':([58,128,137,146,220,221,242,311,335,337,339,346,356,357,359,363,366,368,369,376,],[143,143,239,247,239,303,309,336,351,352,354,355,364,365,367,372,373,374,375,377,]),'constant_expression':([47,141,162,167,204,250,290,],[90,244,251,256,289,315,325,]),'init_declarator':([25,60,119,],[53,53,213,]),'statement_list':([58,128,],[137,220,]),'identifier':([0,6,10,11,21,25,36,46,47,48,58,60,68,70,77,85,92,104,107,113,119,122,126,128,130,132,137,141,146,162,165,167,169,170,171,172,176,177,178,179,180,181,184,185,188,189,190,191,192,193,194,195,196,197,198,199,200,204,208,209,210,214,220,221,235,236,240,242,243,245,248,250,252,261,290,306,311,318,322,331,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[38,40,38,38,45,38,38,73,109,116,129,38,38,73,109,109,109,109,109,38,38,109,218,129,109,109,129,109,129,109,73,109,109,109,109,109,109,109,109,109,109,109,109,109,273,274,109,109,109,109,109,109,109,109,109,109,109,109,38,38,296,109,129,129,109,109,109,129,109,109,109,109,38,109,109,109,129,109,109,109,109,109,129,129,109,129,129,109,109,129,129,129,109,129,129,129,129,129,]),'expression':([58,85,128,130,132,137,146,169,180,184,185,220,221,236,242,243,245,248,306,311,332,334,335,337,338,339,346,348,349,356,357,359,361,363,366,368,369,376,],[138,173,138,223,173,138,138,173,269,173,272,138,138,307,138,310,312,314,333,138,347,350,138,138,353,138,138,358,360,138,138,138,370,138,138,138,138,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','G_Parser.py',28),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','G_Parser.py',34),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','G_Parser.py',40),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','G_Parser.py',46),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','G_Parser.py',52),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','G_Parser.py',58),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','G_Parser.py',64),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','G_Parser.py',70),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','G_Parser.py',76),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','G_Parser.py',82),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','G_Parser.py',88),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','G_Parser.py',94),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','G_Parser.py',100),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','G_Parser.py',106),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','G_Parser.py',112),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','G_Parser.py',118),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','G_Parser.py',124),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','G_Parser.py',130),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','G_Parser.py',136),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','G_Parser.py',142),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','G_Parser.py',148),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','G_Parser.py',154),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','G_Parser.py',160),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','G_Parser.py',166),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','G_Parser.py',172),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','G_Parser.py',178),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','G_Parser.py',184),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','G_Parser.py',190),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','G_Parser.py',196),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','G_Parser.py',202),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','G_Parser.py',208),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','G_Parser.py',214),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','G_Parser.py',220),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','G_Parser.py',226),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','G_Parser.py',232),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','G_Parser.py',238),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','G_Parser.py',244),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','G_Parser.py',250),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','G_Parser.py',256),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','G_Parser.py',262),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','G_Parser.py',268),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','G_Parser.py',274),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','G_Parser.py',280),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','G_Parser.py',286),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','G_Parser.py',292),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','G_Parser.py',298),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','G_Parser.py',304),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','G_Parser.py',310),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','G_Parser.py',316),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','G_Parser.py',322),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','G_Parser.py',328),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','G_Parser.py',334),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','G_Parser.py',340),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','G_Parser.py',346),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','G_Parser.py',352),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','G_Parser.py',358),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','G_Parser.py',364),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','G_Parser.py',370),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','G_Parser.py',376),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','G_Parser.py',382),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','G_Parser.py',388),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','G_Parser.py',394),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','G_Parser.py',400),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','G_Parser.py',406),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','G_Parser.py',412),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','G_Parser.py',418),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','G_Parser.py',424),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','G_Parser.py',430),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','G_Parser.py',436),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','G_Parser.py',442),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','G_Parser.py',448),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','G_Parser.py',454),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','G_Parser.py',460),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','G_Parser.py',466),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','G_Parser.py',472),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','G_Parser.py',478),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','G_Parser.py',484),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','G_Parser.py',490),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','G_Parser.py',496),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','G_Parser.py',502),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','G_Parser.py',508),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','G_Parser.py',514),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','G_Parser.py',520),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','G_Parser.py',526),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','G_Parser.py',532),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','G_Parser.py',538),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','G_Parser.py',544),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','G_Parser.py',550),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','G_Parser.py',556),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','G_Parser.py',562),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','G_Parser.py',568),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','G_Parser.py',574),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','G_Parser.py',580),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','G_Parser.py',586),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','G_Parser.py',592),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','G_Parser.py',598),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','G_Parser.py',604),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','G_Parser.py',610),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','G_Parser.py',616),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','G_Parser.py',622),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','G_Parser.py',628),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','G_Parser.py',634),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','G_Parser.py',640),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','G_Parser.py',646),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','G_Parser.py',652),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','G_Parser.py',658),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','G_Parser.py',664),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','G_Parser.py',670),
  ('statement -> labeled_statement','statement',1,'p_statement_1','G_Parser.py',676),
  ('statement -> compound_statement','statement',1,'p_statement_2','G_Parser.py',682),
  ('statement -> expression_statement','statement',1,'p_statement_3','G_Parser.py',688),
  ('statement -> selection_statement','statement',1,'p_statement_4','G_Parser.py',694),
  ('statement -> iteration_statement','statement',1,'p_statement_5','G_Parser.py',700),
  ('statement -> jump_statement','statement',1,'p_statement_6','G_Parser.py',706),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','G_Parser.py',712),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','G_Parser.py',718),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','G_Parser.py',724),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','G_Parser.py',730),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','G_Parser.py',736),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','G_Parser.py',742),
  ('compound_statement -> OPENBRACE statement_list CLOSEBRACE','compound_statement',3,'p_compound_statement_2','G_Parser.py',748),
  ('compound_statement -> OPENBRACE declaration_list CLOSEBRACE','compound_statement',3,'p_compound_statement_3','G_Parser.py',754),
  ('compound_statement -> OPENBRACE declaration_list statement_list CLOSEBRACE','compound_statement',4,'p_compound_statement_4','G_Parser.py',760),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','G_Parser.py',766),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','G_Parser.py',772),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','G_Parser.py',778),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','G_Parser.py',784),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','G_Parser.py',790),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','G_Parser.py',796),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','G_Parser.py',802),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','G_Parser.py',808),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','G_Parser.py',814),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','G_Parser.py',820),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','G_Parser.py',826),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','G_Parser.py',832),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','G_Parser.py',838),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','G_Parser.py',844),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','G_Parser.py',850),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','G_Parser.py',856),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','G_Parser.py',862),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','G_Parser.py',868),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','G_Parser.py',874),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','G_Parser.py',880),
  ('expression -> assignment_expression','expression',1,'p_expression_1','G_Parser.py',886),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','G_Parser.py',892),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','G_Parser.py',898),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','G_Parser.py',904),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','G_Parser.py',910),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','G_Parser.py',916),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','G_Parser.py',922),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','G_Parser.py',928),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','G_Parser.py',934),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','G_Parser.py',940),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','G_Parser.py',946),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','G_Parser.py',952),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','G_Parser.py',958),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','G_Parser.py',964),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','G_Parser.py',970),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','G_Parser.py',976),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','G_Parser.py',982),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','G_Parser.py',988),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','G_Parser.py',994),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','G_Parser.py',1000),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','G_Parser.py',1006),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','G_Parser.py',1012),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','G_Parser.py',1018),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','G_Parser.py',1024),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','G_Parser.py',1030),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','G_Parser.py',1036),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','G_Parser.py',1042),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','G_Parser.py',1048),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','G_Parser.py',1054),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','G_Parser.py',1060),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','G_Parser.py',1066),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','G_Parser.py',1072),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','G_Parser.py',1078),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','G_Parser.py',1084),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','G_Parser.py',1090),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','G_Parser.py',1096),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','G_Parser.py',1102),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','G_Parser.py',1108),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','G_Parser.py',1114),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','G_Parser.py',1120),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','G_Parser.py',1126),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','G_Parser.py',1132),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','G_Parser.py',1138),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','G_Parser.py',1144),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','G_Parser.py',1150),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','G_Parser.py',1156),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','G_Parser.py',1162),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','G_Parser.py',1168),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','G_Parser.py',1174),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','G_Parser.py',1180),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','G_Parser.py',1186),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','G_Parser.py',1192),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','G_Parser.py',1198),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','G_Parser.py',1204),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','G_Parser.py',1210),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','G_Parser.py',1216),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','G_Parser.py',1222),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','G_Parser.py',1228),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','G_Parser.py',1234),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','G_Parser.py',1240),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','G_Parser.py',1246),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','G_Parser.py',1252),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','G_Parser.py',1258),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','G_Parser.py',1264),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','G_Parser.py',1270),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','G_Parser.py',1276),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','G_Parser.py',1282),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','G_Parser.py',1288),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','G_Parser.py',1294),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','G_Parser.py',1300),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','G_Parser.py',1306),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','G_Parser.py',1312),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','G_Parser.py',1318),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','G_Parser.py',1324),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','G_Parser.py',1330),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','G_Parser.py',1336),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','G_Parser.py',1342),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','G_Parser.py',1348),
  ('string -> STRING_LITERAL','string',1,'p_string_1','G_Parser.py',1354),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','G_Parser.py',1360),
]
