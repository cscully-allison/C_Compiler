
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SINGLE_LINE_COMMENT SIZEOF ST2_F ST2_O STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VARYING_COMMENT VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration :  PD_Odeclaration :  PD_Fdeclaration_list :  insert_mode_e declarationdeclaration_list :  declaration_list insert_mode_e declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator : direct_declaratordeclarator : pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementstatement : PD_Ostatement : PD_Flabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACEstatement_list : read_mode_e statementstatement_list :  statement_list read_mode_e statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIERinsert_mode_e :read_mode_e :push_scope_e :pop_scope_e :'
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[5,5,5,-38,-35,-26,-25,-27,-28,-23,-24,-1,5,-22,-34,-30,-227,-37,5,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,5,-69,-2,-63,5,-9,-228,5,-5,-230,-228,5,5,5,-45,5,-71,-72,5,-74,-10,-7,-228,-13,-228,-124,5,-6,5,-41,-46,-61,5,-73,5,-75,5,-76,5,-8,-228,-14,-40,-51,-62,5,5,-126,-125,-127,]),'DIV_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,221,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'MINUS':([20,23,27,51,56,62,75,76,77,78,80,81,85,86,88,89,92,93,94,95,96,97,98,99,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,245,246,248,249,252,253,254,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,299,300,301,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-227,-11,-12,81,-9,-230,-217,-194,-223,81,-224,-205,-222,81,-206,-204,-218,81,-196,-203,172,-202,-208,-190,-226,-187,81,-207,-225,81,-216,-10,81,-13,-229,-124,81,81,-198,81,81,81,81,-194,81,81,81,81,81,81,81,-200,81,81,-215,-214,81,81,81,81,81,81,81,81,81,81,81,-197,-199,81,81,-229,-229,81,-14,81,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,81,81,-219,81,-212,-213,-210,-188,-189,172,172,-193,-191,-192,81,-229,81,-113,-115,-111,-216,81,-112,-117,-118,81,-128,-116,81,-122,-114,-195,81,-201,-209,-211,81,81,-126,-125,-129,81,-146,81,-144,-123,81,81,81,-145,81,-143,-119,-147,81,-121,81,-127,81,81,81,-120,81,81,81,81,81,81,-133,-132,-130,-135,81,81,81,81,81,-136,-137,81,-139,81,81,-134,-131,-138,-140,-141,81,-142,]),'LE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,157,-218,-196,-184,-208,-190,-179,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,157,157,-193,-191,-192,-216,-195,-201,-209,-211,]),'ENUMERATION_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,107,-9,-230,107,-205,107,-206,-204,107,-203,-202,107,-207,107,-10,107,-13,-229,-124,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-229,-229,107,-14,107,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,107,107,107,107,-229,107,-113,-115,-111,107,-112,-117,-118,107,-128,-116,107,-122,-114,107,107,107,-126,-125,-129,107,-146,107,-144,-123,107,107,107,-145,107,-143,-119,-147,107,-121,107,-127,107,107,107,-120,107,107,107,107,107,107,-133,-132,-130,-135,107,107,107,107,107,-136,-137,107,-139,107,107,-134,-131,-138,-140,-141,107,-142,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[18,18,18,-38,-35,-26,-25,-27,-28,-23,-24,-1,18,-22,-34,-30,-227,-37,18,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,18,-69,-2,-63,18,-9,-228,18,-5,-230,-228,18,18,18,-45,18,-71,-72,18,-74,-10,-7,-228,-13,-228,-124,18,-6,18,-41,-46,-61,18,-73,18,-75,18,-76,18,-8,-228,-14,-40,-51,-62,18,18,-126,-125,-127,]),'PLUS':([20,23,27,51,56,62,75,76,77,78,80,81,85,86,88,89,92,93,94,95,96,97,98,99,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,245,246,248,249,252,253,254,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,299,300,301,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-227,-11,-12,89,-9,-230,-217,-194,-223,89,-224,-205,-222,89,-206,-204,-218,89,-196,-203,171,-202,-208,-190,-226,-187,89,-207,-225,89,-216,-10,89,-13,-229,-124,89,89,-198,89,89,89,89,-194,89,89,89,89,89,89,89,-200,89,89,-215,-214,89,89,89,89,89,89,89,89,89,89,89,-197,-199,89,89,-229,-229,89,-14,89,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,89,89,-219,89,-212,-213,-210,-188,-189,171,171,-193,-191,-192,89,-229,89,-113,-115,-111,-216,89,-112,-117,-118,89,-128,-116,89,-122,-114,-195,89,-201,-209,-211,89,89,-126,-125,-129,89,-146,89,-144,-123,89,89,89,-145,89,-143,-119,-147,89,-121,89,-127,89,89,89,-120,89,89,89,89,89,89,-133,-132,-130,-135,89,89,89,89,89,-136,-137,89,-139,89,89,-134,-131,-138,-140,-141,89,-142,]),'TYPEDEF_NAME':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[21,21,21,-38,-35,-26,-25,-27,-28,-23,-24,-1,21,-22,-34,-30,-227,-37,21,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,21,-69,-2,-63,21,-9,-228,21,-5,-230,-228,21,21,21,-45,21,-71,-72,21,-74,-10,-7,-228,-13,-228,-124,21,-6,21,-41,-46,-61,21,-73,21,-75,21,-76,21,-8,-228,-14,-40,-51,-62,21,21,-126,-125,-127,]),'GT':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,156,-218,-196,-184,-208,-190,-179,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,156,156,-193,-191,-192,-216,-195,-201,-209,-211,]),'GOTO':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,274,-14,-229,274,-113,-115,-111,-112,-117,-118,-128,-116,274,-122,-114,-126,-125,-129,274,-146,-144,-123,274,-145,-143,-119,-147,-121,274,-127,274,-120,274,274,274,-133,-132,-130,-135,274,274,274,274,-136,-137,274,-139,274,274,-134,-131,-138,-140,-141,274,-142,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[24,24,24,-38,-35,-26,-25,-27,-28,-23,-24,-1,24,-22,-34,-30,-227,-37,24,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,24,-69,-2,-63,24,-9,-228,24,-5,-230,-228,24,24,24,-45,24,-71,-72,24,-74,-10,-7,-228,-13,-228,-124,24,-6,24,-41,-46,-61,24,-73,24,-75,24,-76,24,-8,-228,-14,-40,-51,-62,24,24,-126,-125,-127,]),'PERIOD':([20,75,77,80,85,92,94,98,103,107,110,166,167,227,240,241,242,276,302,303,],[-227,-217,-223,-224,-222,-218,168,-208,-226,-225,-216,-215,-214,-219,-212,-213,-210,-216,-209,-211,]),'LEFT_OP':([20,75,76,77,80,85,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-184,-208,-190,174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,174,174,174,174,-212,-213,-210,-188,-189,-185,-186,-193,-191,-192,-216,-195,-201,-209,-211,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[35,35,35,-38,-35,-26,-25,-27,-28,-23,-24,-1,35,-22,-34,-30,-227,-37,35,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,35,-69,-2,-63,35,-9,-228,35,-5,-230,-228,35,35,35,-45,35,-71,-72,35,-74,-10,-7,-228,-13,-228,-124,35,-6,35,-41,-46,-61,35,-73,35,-75,35,-76,35,-8,-228,-14,-40,-51,-62,35,35,-126,-125,-127,]),'INC_OP':([20,23,27,51,56,62,75,77,78,80,81,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,300,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-227,-11,-12,105,-9,-230,-217,-223,105,-224,-205,-222,105,-206,-204,-218,105,167,-203,-202,-208,-226,105,-207,-225,105,-216,-10,105,-13,-229,-124,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-215,-214,105,105,105,105,105,105,105,105,105,105,105,105,105,-229,-229,105,-14,105,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,105,105,-219,105,-212,-213,-210,105,-229,105,-113,-115,-111,-216,105,-112,-117,-118,105,-128,-116,105,-122,-114,105,-209,-211,105,105,-126,-125,-129,105,-146,105,-144,-123,105,105,105,-145,105,-143,-119,-147,105,-121,105,-127,105,105,105,-120,105,105,105,105,105,105,-133,-132,-130,-135,105,105,105,105,105,-136,-137,105,-139,105,105,-134,-131,-138,-140,-141,105,-142,]),'NE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,212,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-176,-218,-196,-184,-208,-190,-179,176,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,176,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[8,8,8,-38,-35,-26,-25,-27,-28,-23,-24,-1,8,-22,-34,-30,-227,-37,8,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,8,-69,-2,-63,8,-9,-228,8,-5,-230,-228,8,8,8,-45,8,-71,-72,8,-74,-10,-7,-228,-13,-228,-124,8,-6,8,-41,-46,-61,8,-73,8,-75,8,-76,8,-8,-228,-14,-40,-51,-62,8,8,-126,-125,-127,]),'RETURN':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,277,-14,-229,277,-113,-115,-111,-112,-117,-118,-128,-116,277,-122,-114,-126,-125,-129,277,-146,-144,-123,277,-145,-143,-119,-147,-121,277,-127,277,-120,277,277,277,-133,-132,-130,-135,277,277,277,277,-136,-137,277,-139,277,277,-134,-131,-138,-140,-141,277,-142,]),'OPENBRACE':([11,19,20,23,24,26,27,33,39,40,43,45,49,56,59,62,63,70,83,111,121,123,124,126,127,128,162,183,191,196,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,313,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[44,-44,-227,-11,50,-68,-12,-43,62,-70,64,-69,71,-9,62,-230,62,-71,-72,-74,-10,62,196,-13,-229,-124,-73,-75,-76,196,-229,-229,62,-14,-229,62,-113,-115,-111,-112,-117,-118,-128,-116,62,-122,-114,196,-126,-125,-129,62,-146,-144,-123,62,-145,-143,-119,-147,-121,62,-127,62,-120,62,62,62,-133,-132,-130,-135,62,62,62,62,-136,-137,62,-139,62,62,-134,-131,-138,-140,-141,62,-142,]),'STATIC':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,314,316,350,],[9,9,9,-38,-35,-26,-25,-27,-28,-23,-24,-1,9,-22,-34,-30,-227,-37,9,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,-69,-2,-63,9,-9,-228,9,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,9,-6,-41,-61,-73,-75,9,-76,9,-8,-228,-14,-40,-62,9,9,-126,-125,-127,]),'EQ_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,212,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-176,-218,-196,-184,-208,-190,-179,177,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,177,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'SIZEOF':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,93,-9,-230,93,-205,93,-206,-204,93,-203,-202,93,-207,93,-10,93,-13,-229,-124,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-229,-229,93,-14,93,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,93,93,93,93,-229,93,-113,-115,-111,93,-112,-117,-118,93,-128,-116,93,-122,-114,93,93,93,-126,-125,-129,93,-146,93,-144,-123,93,93,93,-145,93,-143,-119,-147,93,-121,93,-127,93,93,93,-120,93,93,93,93,93,93,-133,-132,-130,-135,93,93,93,93,93,-136,-137,93,-139,93,93,-134,-131,-138,-140,-141,93,-142,]),'OPENPAREN':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,40,41,42,43,45,47,48,49,51,53,54,55,56,61,62,66,68,69,70,75,77,78,80,81,83,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,111,114,118,119,120,121,122,124,125,126,127,128,130,132,134,135,138,142,143,145,146,147,148,150,154,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,183,184,187,188,189,191,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,240,241,242,255,257,259,260,269,271,272,273,275,276,277,278,279,280,281,285,286,287,288,289,291,292,293,294,300,302,303,304,305,306,308,310,311,313,314,316,317,319,320,322,323,324,325,326,328,329,331,334,335,339,340,341,342,344,346,348,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[13,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,13,13,-1,-17,-22,-34,-30,-227,-37,13,-11,-21,52,-12,-77,13,-4,-31,-3,-29,-32,-33,-36,-39,-70,-16,-20,-42,52,-18,-2,-63,86,-81,-78,-79,-9,-5,-230,-52,-54,13,-71,-217,-223,145,-224,-205,-72,-222,150,-206,-204,-218,164,170,-203,-202,-208,-226,145,-207,-225,86,-216,-74,189,-82,-80,13,-10,-7,150,13,-13,-229,-124,-6,-41,-53,-55,86,-61,86,150,86,86,86,150,231,86,86,86,86,150,86,-73,150,150,-215,-214,150,86,86,86,86,86,86,86,86,86,86,-75,86,258,189,189,-76,-8,150,-229,-229,150,-14,-40,86,13,-62,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,150,150,-219,86,231,231,-212,-213,-210,-103,86,258,-107,-229,150,-113,-115,-111,-216,150,-112,-117,322,-118,326,86,328,-128,-116,150,-122,-114,331,86,-209,-211,150,-104,-105,-109,-108,-102,150,-126,-125,-129,150,-146,150,-144,-123,150,150,150,-145,150,-106,-110,-143,-119,-147,150,-121,150,357,-127,150,150,150,-120,150,150,150,150,150,150,-133,-132,-130,-135,150,150,150,150,150,-136,-137,150,-139,150,150,-134,-131,-138,-140,-141,150,-142,]),'CLOSEBRACE':([20,23,27,56,62,65,67,72,73,74,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,121,126,128,131,133,140,144,149,155,163,166,167,181,182,198,199,200,202,207,209,210,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,266,267,268,269,270,272,273,275,278,279,281,288,289,292,293,297,299,301,302,303,312,313,314,315,316,317,320,323,324,329,332,336,337,338,339,340,341,344,350,355,364,365,367,368,377,378,380,384,385,386,387,388,390,],[-227,-11,-12,-9,128,132,-45,-64,142,-66,-217,-194,-223,-170,-224,-172,-168,-222,-176,-163,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-165,-216,-10,-13,-124,203,-46,208,-198,-194,-150,-200,-215,-214,-197,-199,-92,-231,-231,-14,-51,-65,-67,-173,-175,-171,-219,-181,-182,-180,-183,-167,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-95,312,314,-228,316,-113,-115,-111,-112,-117,-118,-128,-116,-122,-114,-151,-195,-201,-209,-211,-93,337,-126,-231,-125,-129,-146,-144,-123,-145,-164,-96,-94,350,-143,-119,-147,-121,-127,-120,-133,-132,-130,-135,-136,-137,-139,-134,-131,-138,-140,-141,-142,]),'INTEGER_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,85,-9,-230,85,-205,85,-206,-204,85,-203,-202,85,-207,85,-10,85,-13,-229,-124,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-229,-229,85,-14,85,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,85,85,85,85,-229,85,-113,-115,-111,85,-112,-117,-118,85,-128,-116,85,-122,-114,85,85,85,-126,-125,-129,85,-146,85,-144,-123,85,85,85,-145,85,-143,-119,-147,85,-121,85,-127,85,85,85,-120,85,85,85,85,85,85,-133,-132,-130,-135,85,85,85,85,85,-136,-137,85,-139,85,85,-134,-131,-138,-140,-141,85,-142,]),'CLOSEPAREN':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,46,47,49,52,53,54,55,66,68,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,111,112,113,114,115,116,117,118,119,132,134,135,142,144,149,151,152,153,154,155,162,163,166,167,170,181,182,183,185,186,187,188,189,191,203,208,211,212,213,227,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,258,259,260,261,262,263,264,265,297,298,299,301,302,303,305,306,308,309,310,311,332,333,334,335,345,347,349,351,360,361,362,366,371,373,374,383,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-227,-37,-21,-68,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,70,-18,-63,111,-81,-78,-79,-52,-54,-71,-217,-194,-223,-170,-224,-172,-72,-168,-222,-176,-163,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-216,-74,-85,183,-88,191,-83,-90,-82,-80,-41,-53,-55,-61,-198,-194,227,228,-148,-97,-150,-73,-200,-215,-214,242,-197,-199,-75,-89,-87,-100,-99,260,-76,-40,-62,-173,-175,-171,-219,-98,-99,260,-181,-182,-180,-183,-167,301,-212,-213,-210,-220,303,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-103,308,-101,-107,310,311,-91,-84,-86,-151,-149,-195,-201,-209,-211,-104,-105,-109,335,-108,-102,-164,-221,-106,-110,354,356,358,359,369,370,372,375,379,381,382,389,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[17,17,17,-38,-35,-26,-25,-27,-28,-23,-24,-1,17,-22,-34,-30,-227,-37,17,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,17,-69,-2,-63,17,-9,-228,17,-5,-230,-228,17,17,17,-45,17,-71,-72,17,-74,-10,-7,-228,-13,-228,-124,17,-6,17,-41,-46,-61,17,-73,17,-75,17,-76,17,-8,-228,-14,-40,-51,-62,17,17,-126,-125,-127,]),'OR_OP':([20,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-170,-224,-172,-168,-222,-176,161,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-173,-175,-171,-219,-181,-182,-180,-183,-167,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'COLON':([3,4,5,7,8,17,18,20,21,26,31,34,35,36,37,38,40,43,45,49,66,68,69,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,132,134,135,137,142,144,149,153,155,162,163,166,167,181,182,183,191,203,206,208,211,212,213,227,232,233,234,235,236,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,284,297,298,299,301,302,303,327,332,],[-38,-35,-26,-27,-28,-34,-30,-227,-37,-68,-31,-29,-32,-33,-36,-39,-70,-42,-69,-63,-52,-54,138,-71,-217,-194,-223,-170,-224,-172,-72,-168,-222,-176,-163,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-165,-216,-74,-41,-53,-55,204,-61,-198,-194,-148,-150,-73,-200,-215,-214,-197,-199,-75,-76,-40,138,-62,-173,-175,-171,-219,-181,-182,-180,-183,300,-167,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,319,325,-151,-149,-195,-201,-209,-211,346,-164,]),'$end':([14,22,23,27,30,32,48,56,61,121,122,128,130,195,314,316,350,],[-1,0,-11,-12,-4,-3,-2,-9,-5,-10,-7,-124,-6,-8,-126,-125,-127,]),'PD_O':([0,14,20,22,23,26,27,30,32,39,40,45,48,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,162,183,191,195,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[23,-1,-227,23,-11,-68,-12,-4,-3,-228,-70,-69,-2,-9,-228,23,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,23,-6,-73,-75,-76,-8,-228,-229,279,-14,-229,279,-113,-115,-111,-112,-117,-118,-128,-116,279,-122,-114,-126,-125,-129,279,-146,-144,-123,279,-145,-143,-119,-147,-121,279,-127,279,-120,279,279,279,-133,-132,-130,-135,279,279,279,279,-136,-137,279,-139,279,279,-134,-131,-138,-140,-141,279,-142,]),'FOR':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,280,-14,-229,280,-113,-115,-111,-112,-117,-118,-128,-116,280,-122,-114,-126,-125,-129,280,-146,-144,-123,280,-145,-143,-119,-147,-121,280,-127,280,-120,280,280,280,-133,-132,-130,-135,280,280,280,280,-136,-137,280,-139,280,280,-134,-131,-138,-140,-141,280,-142,]),'UNION':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[19,19,19,-38,-35,-26,-25,-27,-28,-23,-24,-1,19,-22,-34,-30,-227,-37,19,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,19,-69,-2,-63,19,-9,-228,19,-5,-230,-228,19,19,19,-45,19,-71,-72,19,-74,-10,-7,-228,-13,-228,-124,19,-6,19,-41,-46,-61,19,-73,19,-75,19,-76,19,-8,-228,-14,-40,-51,-62,19,19,-126,-125,-127,]),'PD_F':([0,14,20,22,23,26,27,30,32,39,40,45,48,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,162,183,191,195,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[27,-1,-227,27,-11,-68,-12,-4,-3,-228,-70,-69,-2,-9,-228,27,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,27,-6,-73,-75,-76,-8,-228,-229,281,-14,-229,281,-113,-115,-111,-112,-117,-118,-128,-116,281,-122,-114,-126,-125,-129,281,-146,-144,-123,281,-145,-143,-119,-147,-121,281,-127,281,-120,281,281,281,-133,-132,-130,-135,281,281,281,281,-136,-137,281,-139,281,281,-134,-131,-138,-140,-141,281,-142,]),'ELSE':([128,272,273,275,278,279,281,289,292,293,314,316,320,323,324,329,339,340,341,344,350,355,364,365,367,368,377,378,380,384,385,386,387,388,390,],[-124,-113,-115,-111,-112,-117,-118,-116,-122,-114,-126,-125,-146,-144,-123,-145,-143,-119,-147,-121,-127,-120,-133,-132,376,-135,-136,-137,-139,-134,-131,-138,-140,-141,-142,]),'AMPERSAND':([20,23,27,51,56,62,75,76,77,78,80,81,82,85,86,87,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,299,300,301,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-227,-11,-12,97,-9,-230,-217,-194,-223,97,-224,-205,147,-222,97,-176,-206,-204,-218,97,-196,-203,-184,-202,-208,-190,-179,-174,-226,-187,97,-207,-225,97,-216,-10,97,-13,-229,-124,97,97,-198,97,97,97,97,-194,97,97,97,97,97,97,97,-200,97,97,-215,-214,97,97,97,97,97,97,97,97,97,97,97,-197,-199,97,97,-229,-229,97,-14,97,147,-175,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,97,97,-219,97,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,-178,-177,-193,-191,-192,97,-229,97,-113,-115,-111,-216,97,-112,-117,-118,97,-128,-116,97,-122,-114,-195,97,-201,-209,-211,97,97,-126,-125,-129,97,-146,97,-144,-123,97,97,97,-145,97,-143,-119,-147,97,-121,97,-127,97,97,97,-120,97,97,97,97,97,97,-133,-132,-130,-135,97,97,97,97,97,-136,-137,97,-139,97,97,-134,-131,-138,-140,-141,97,-142,]),'CLOSEBRACKET':([20,51,75,76,77,79,80,82,84,85,87,90,91,92,94,96,98,99,100,101,102,103,104,107,109,110,144,149,153,155,163,166,167,181,182,184,211,212,213,227,232,233,234,235,237,239,240,241,242,245,246,247,248,249,250,251,252,253,254,256,257,297,298,299,301,302,303,307,332,],[-227,83,-217,-194,-223,-170,-224,-172,-168,-222,-176,-163,162,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-165,-216,-198,-194,-148,-150,-200,-215,-214,-197,-199,255,-173,-175,-171,-219,-181,-182,-180,-183,-167,302,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,305,306,-151,-149,-195,-201,-209,-211,334,-164,]),'SUB_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,214,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'XOR_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,216,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[34,34,34,-38,-35,-26,-25,-27,-28,-23,-24,-1,34,-22,-34,-30,-227,-37,34,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,34,-69,-2,-63,34,-9,-228,34,-5,-230,-228,34,34,34,-45,34,-71,-72,34,-74,-10,-7,-228,-13,-228,-124,34,-6,34,-41,-46,-61,34,-73,34,-75,34,-76,34,-8,-228,-14,-40,-51,-62,34,34,-126,-125,-127,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[36,36,36,-38,-35,-26,-25,-27,-28,-23,-24,-1,36,-22,-34,-30,-227,-37,36,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,36,-69,-2,-63,36,-9,-228,36,-5,-230,-228,36,36,36,-45,36,-71,-72,36,-74,-10,-7,-228,-13,-228,-124,36,-6,36,-41,-46,-61,36,-73,36,-75,36,-76,36,-8,-228,-14,-40,-51,-62,36,36,-126,-125,-127,]),'CONTINUE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,282,-14,-229,282,-113,-115,-111,-112,-117,-118,-128,-116,282,-122,-114,-126,-125,-129,282,-146,-144,-123,282,-145,-143,-119,-147,-121,282,-127,282,-120,282,282,282,-133,-132,-130,-135,282,282,282,282,-136,-137,282,-139,282,282,-134,-131,-138,-140,-141,282,-142,]),'MUL_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,220,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'RIGHT_OP':([20,75,76,77,80,85,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-184,-208,-190,175,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,175,175,175,175,-212,-213,-210,-188,-189,-185,-186,-193,-191,-192,-216,-195,-201,-209,-211,]),'RIGHT_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,224,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'DEFAULT':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,284,-14,-229,284,-113,-115,-111,-112,-117,-118,-128,-116,284,-122,-114,-126,-125,-129,284,-146,-144,-123,284,-145,-143,-119,-147,-121,284,-127,284,-120,284,284,284,-133,-132,-130,-135,284,284,284,284,-136,-137,284,-139,284,284,-134,-131,-138,-140,-141,284,-142,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[7,7,7,-38,-35,-26,-25,-27,-28,-23,-24,-1,7,-22,-34,-30,-227,-37,7,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,7,-69,-2,-63,7,-9,-228,7,-5,-230,-228,7,7,7,-45,7,-71,-72,7,-74,-10,-7,-228,-13,-228,-124,7,-6,7,-41,-46,-61,7,-73,7,-75,7,-76,7,-8,-228,-14,-40,-51,-62,7,7,-126,-125,-127,]),'WHILE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,330,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,285,-14,-229,285,-113,-115,-111,-112,-117,-118,-128,-116,285,-122,-114,-126,-125,-129,285,-146,-144,-123,285,-145,348,-143,-119,-147,-121,285,-127,285,-120,285,285,285,-133,-132,-130,-135,285,285,285,285,-136,-137,285,-139,285,285,-134,-131,-138,-140,-141,285,-142,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,314,316,350,],[10,10,10,-38,-35,-26,-25,-27,-28,-23,-24,-1,10,-22,-34,-30,-227,-37,10,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,-69,-2,-63,10,-9,-228,10,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,10,-6,-41,-61,-73,-75,10,-76,10,-8,-228,-14,-40,-62,10,10,-126,-125,-127,]),'CASE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,286,-14,-229,286,-113,-115,-111,-112,-117,-118,-128,-116,286,-122,-114,-126,-125,-129,286,-146,-144,-123,286,-145,-143,-119,-147,-121,286,-127,286,-120,286,286,286,-133,-132,-130,-135,286,286,286,286,-136,-137,286,-139,286,286,-134,-131,-138,-140,-141,286,-142,]),'FLOATING_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,80,-9,-230,80,-205,80,-206,-204,80,-203,-202,80,-207,80,-10,80,-13,-229,-124,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-229,-229,80,-14,80,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,80,80,80,80,-229,80,-113,-115,-111,80,-112,-117,-118,80,-128,-116,80,-122,-114,80,80,80,-126,-125,-129,80,-146,80,-144,-123,80,80,80,-145,80,-143,-119,-147,80,-121,80,-127,80,80,80,-120,80,80,80,80,80,80,-133,-132,-130,-135,80,80,80,80,80,-136,-137,80,-139,80,80,-134,-131,-138,-140,-141,80,-142,]),'OPENBRACKET':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,47,49,53,54,55,66,68,70,75,77,80,83,85,92,94,98,103,107,110,111,114,118,119,132,134,135,142,154,162,166,167,183,187,188,189,191,203,208,227,230,231,240,241,242,255,259,260,276,302,303,305,306,308,310,311,334,335,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-227,-37,-21,51,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,51,-18,-63,-81,-78,-79,-52,-54,-71,-217,-223,-224,-72,-222,-218,165,-208,-226,-225,-216,-74,184,-82,-80,-41,-53,-55,-61,184,-73,-215,-214,-75,257,184,184,-76,-40,-62,-219,184,184,-212,-213,-210,-103,257,-107,-216,-209,-211,-104,-105,-109,-108,-102,-106,-110,]),'REGISTER':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,314,316,350,],[16,16,16,-38,-35,-26,-25,-27,-28,-23,-24,-1,16,-22,-34,-30,-227,-37,16,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,-69,-2,-63,16,-9,-228,16,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,16,-6,-41,-61,-73,-75,16,-76,16,-8,-228,-14,-40,-62,16,16,-126,-125,-127,]),'PIPE':([20,75,76,77,79,80,82,84,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,240,241,242,245,246,247,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-170,-224,-172,148,-222,-176,-218,-196,-184,-208,-190,-179,-174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-173,-175,-171,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,148,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'DEC_OP':([20,23,27,51,56,62,75,77,78,80,81,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,300,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-227,-11,-12,78,-9,-230,-217,-223,78,-224,-205,-222,78,-206,-204,-218,78,166,-203,-202,-208,-226,78,-207,-225,78,-216,-10,78,-13,-229,-124,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-215,-214,78,78,78,78,78,78,78,78,78,78,78,78,78,-229,-229,78,-14,78,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,78,78,-219,78,-212,-213,-210,78,-229,78,-113,-115,-111,-216,78,-112,-117,-118,78,-128,-116,78,-122,-114,78,-209,-211,78,78,-126,-125,-129,78,-146,78,-144,-123,78,78,78,-145,78,-143,-119,-147,78,-121,78,-127,78,78,78,-120,78,78,78,78,78,78,-133,-132,-130,-135,78,78,78,78,78,-136,-137,78,-139,78,78,-134,-131,-138,-140,-141,78,-142,]),'SWITCH':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,287,-14,-229,287,-113,-115,-111,-112,-117,-118,-128,-116,287,-122,-114,-126,-125,-129,287,-146,-144,-123,287,-145,-143,-119,-147,-121,287,-127,287,-120,287,287,287,-133,-132,-130,-135,287,287,287,287,-136,-137,287,-139,287,287,-134,-131,-138,-140,-141,287,-142,]),'AND_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,219,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'ELIPSIS':([192,],[264,]),'TILDE':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,88,-9,-230,88,-205,88,-206,-204,88,-203,-202,88,-207,88,-10,88,-13,-229,-124,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-229,-229,88,-14,88,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,88,88,88,88,-229,88,-113,-115,-111,88,-112,-117,-118,88,-128,-116,88,-122,-114,88,88,88,-126,-125,-129,88,-146,88,-144,-123,88,88,88,-145,88,-143,-119,-147,88,-121,88,-127,88,88,88,-120,88,88,88,88,88,88,-133,-132,-130,-135,88,88,88,88,88,-136,-137,88,-139,88,88,-134,-131,-138,-140,-141,88,-142,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,47,48,49,50,51,52,53,54,55,56,61,62,66,68,69,71,78,81,86,88,89,93,95,97,105,106,108,114,118,119,120,121,122,124,125,126,127,128,130,132,134,135,138,141,142,143,145,146,147,148,150,156,157,158,159,160,161,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,184,188,189,190,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,274,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[20,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,20,20,20,-1,-17,-22,-34,-30,-44,-227,-37,20,-11,20,-21,-12,-77,20,-4,-31,-3,-43,-29,-32,-33,-36,-39,-16,-20,-42,-18,-2,-63,20,20,20,-81,-78,-79,-9,-5,-230,-52,-54,20,20,20,-205,20,-206,-204,20,-203,-202,20,-207,20,20,-82,-80,20,-10,-7,20,20,-13,-229,-124,-6,-41,-53,-55,20,20,-61,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-8,20,-229,-229,20,-14,-40,20,20,-62,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,20,20,20,20,-229,20,-113,-115,20,-111,20,-112,-117,-118,20,-128,-116,20,-122,-114,20,20,20,-126,-125,-129,20,-146,20,-144,-123,20,20,20,-145,20,-143,-119,-147,20,-121,20,-127,20,20,20,-120,20,20,20,20,20,20,-133,-132,-130,-135,20,20,20,20,20,-136,-137,20,-139,20,20,-134,-131,-138,-140,-141,20,-142,]),'ADD_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,218,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'PERCENT':([20,75,76,77,80,85,92,94,98,99,103,104,107,110,144,149,163,166,167,181,182,227,240,241,242,245,246,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-190,-226,178,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-212,-213,-210,178,178,-193,-191,-192,-216,-195,-201,-209,-211,]),'GE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,159,-218,-196,-184,-208,-190,-179,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,159,159,-193,-191,-192,-216,-195,-201,-209,-211,]),'STRUCT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[33,33,33,-38,-35,-26,-25,-27,-28,-23,-24,-1,33,-22,-34,-30,-227,-37,33,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,33,-69,-2,-63,33,-9,-228,33,-5,-230,-228,33,33,33,-45,33,-71,-72,33,-74,-10,-7,-228,-13,-228,-124,33,-6,33,-41,-46,-61,33,-73,33,-75,33,-76,33,-8,-228,-14,-40,-51,-62,33,33,-126,-125,-127,]),'MOD_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,215,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'QMARK':([20,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-170,-224,-172,-168,-222,-176,160,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-173,-175,-171,-219,-181,-182,-180,-183,-167,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'OR_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,217,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'BREAK':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,290,-14,-229,290,-113,-115,-111,-112,-117,-118,-128,-116,290,-122,-114,-126,-125,-129,290,-146,-144,-123,290,-145,-143,-119,-147,-121,290,-127,290,-120,290,290,290,-133,-132,-130,-135,290,290,290,290,-136,-137,290,-139,290,290,-134,-131,-138,-140,-141,290,-142,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,53,54,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,118,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[38,38,38,-38,-35,-26,-25,-27,-28,-23,-24,-1,38,-22,-34,-30,-227,-37,38,-11,-21,-68,-12,38,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,38,-69,-2,-63,38,-81,38,-9,-228,38,-5,-230,-228,38,38,38,-45,38,-71,-72,38,-74,-82,-10,-7,-228,-13,-228,-124,38,-6,38,-41,-46,-61,38,-73,38,-75,38,-76,38,-8,-228,-14,-40,-51,-62,38,38,-126,-125,-127,]),'DO':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,291,-14,-229,291,-113,-115,-111,-112,-117,-118,-128,-116,291,-122,-114,-126,-125,-129,291,-146,-144,-123,291,-145,-143,-119,-147,-121,291,-127,291,-120,291,291,291,-133,-132,-130,-135,291,291,291,291,-136,-137,291,-139,291,291,-134,-131,-138,-140,-141,291,-142,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,53,54,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,118,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[3,3,3,-38,-35,-26,-25,-27,-28,-23,-24,-1,3,-22,-34,-30,-227,-37,3,-11,-21,-68,-12,3,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,3,-69,-2,-63,3,-81,3,-9,-228,3,-5,-230,-228,3,3,3,-45,3,-71,-72,3,-74,-82,-10,-7,-228,-13,-228,-124,3,-6,3,-41,-46,-61,3,-73,3,-75,3,-76,3,-8,-228,-14,-40,-51,-62,3,3,-126,-125,-127,]),'CARAT':([20,75,76,77,79,80,82,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,146,-224,-172,-222,-176,-218,-196,-184,-208,-190,-179,-174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-173,-175,146,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'DIV':([20,75,76,77,80,85,92,94,98,99,103,104,107,110,144,149,163,166,167,181,182,227,240,241,242,245,246,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-190,-226,180,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-212,-213,-210,180,180,-193,-191,-192,-216,-195,-201,-209,-211,]),'LE':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,158,-218,-196,-184,-208,-190,-179,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-219,-181,-182,-180,-183,-212,-213,-210,-188,-189,-185,-186,158,158,-193,-191,-192,-216,-195,-201,-209,-211,]),'SEMI':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,23,25,26,27,29,31,34,35,36,37,38,40,41,42,43,45,47,49,56,57,58,59,62,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,121,125,126,127,128,132,136,137,139,142,144,149,153,155,162,163,166,167,181,182,183,191,193,194,197,198,199,200,201,202,203,205,208,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,269,271,272,273,275,276,277,278,279,281,282,283,288,289,290,291,292,293,295,296,297,298,299,301,302,303,312,314,316,317,318,319,320,321,322,323,324,325,329,332,337,339,340,341,342,343,344,346,350,352,353,354,355,356,358,359,363,364,365,367,368,369,370,372,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-227,-37,-11,-21,-68,-12,56,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,-18,-63,-9,-47,121,-49,-230,-71,-217,-194,-223,-170,-224,-172,-72,-168,-222,-176,-163,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-165,-216,-74,-10,56,-13,-229,-124,-41,-56,-58,207,-61,-198,-194,-148,-150,-73,-200,-215,-214,-197,-199,-75,-76,-48,-49,-50,-92,-229,-229,292,-14,-40,-59,-62,-173,-175,-171,-219,-181,-182,-180,-183,-167,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-229,292,-113,-115,-111,-216,320,-112,-117,-118,323,324,-128,-116,329,292,-122,-114,-60,-57,-151,-149,-195,-201,-209,-211,-93,-126,-125,-129,339,292,-146,341,342,-144,-123,292,-145,-164,-94,-143,-119,-147,351,353,-121,292,-127,361,362,292,-120,292,292,292,374,-133,-132,-130,-135,292,292,292,384,292,-136,-137,292,-139,292,292,-134,-131,-138,-140,-141,292,-142,]),'CHARACTER_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,77,-9,-230,77,-205,77,-206,-204,77,-203,-202,77,-207,77,-10,77,-13,-229,-124,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-229,-229,77,-14,77,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,77,77,77,77,-229,77,-113,-115,-111,77,-112,-117,-118,77,-128,-116,77,-122,-114,77,77,77,-126,-125,-129,77,-146,77,-144,-123,77,77,77,-145,77,-143,-119,-147,77,-121,77,-127,77,77,77,-120,77,77,77,77,77,77,-133,-132,-130,-135,77,77,77,77,77,-136,-137,77,-139,77,77,-134,-131,-138,-140,-141,77,-142,]),'COMMA':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,47,49,53,54,55,57,58,59,70,72,73,74,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,112,114,115,116,117,118,119,132,136,137,139,140,142,144,149,151,153,155,162,163,166,167,181,182,183,185,186,187,188,191,193,194,197,198,203,205,208,209,210,211,212,213,227,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,259,260,263,265,266,267,276,283,295,296,297,298,299,301,302,303,305,306,308,310,311,312,321,332,333,334,335,336,337,343,345,347,349,352,360,363,366,371,373,383,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-227,-37,-21,-68,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,-18,-63,-81,-78,-79,-47,120,-49,-71,-64,141,-66,-217,-194,-223,-170,-224,-172,-72,-168,-222,-176,-163,-218,-196,-184,-208,-190,-166,-179,-174,-226,-187,-225,-165,-216,-74,-85,-88,190,192,-90,-82,-80,-41,-56,-58,206,141,-61,-198,-194,226,-148,-150,-73,-200,-215,-214,-197,-199,-75,-89,-87,-100,-99,-76,-48,-49,-50,-92,-40,-59,-62,-65,-67,-173,-175,-171,-219,-181,-182,-180,-183,226,-167,226,-212,-213,-210,-220,304,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-103,-101,-107,-91,-86,-95,313,-216,226,-60,-57,-151,-149,-195,-201,-209,-211,-104,-105,-109,-108,-102,-93,226,-164,-221,-106,-110,-96,-94,226,226,226,226,226,226,226,226,226,226,226,]),'PTR_OP':([20,75,77,80,85,92,94,98,103,107,110,166,167,227,240,241,242,276,302,303,],[-227,-217,-223,-224,-222,-218,169,-208,-226,-225,-216,-215,-214,-219,-212,-213,-210,-216,-209,-211,]),'ASSIGN':([20,26,40,45,59,70,74,75,76,77,80,83,85,92,94,98,103,107,110,111,144,149,162,163,166,167,181,182,183,191,194,227,240,241,242,276,299,301,302,303,],[-227,-68,-70,-69,124,-71,143,-217,-194,-223,-224,-72,-222,-218,-196,-208,-226,-225,-216,-74,-198,223,-73,-200,-215,-214,-197,-199,-75,-76,124,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,314,316,350,],[6,6,6,-38,-35,-26,-25,-27,-28,-23,-24,-1,6,-22,-34,-30,-227,-37,6,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,-69,-2,-63,6,-9,-228,6,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,6,-6,-41,-61,-73,-75,6,-76,6,-8,-228,-14,-40,-62,6,6,-126,-125,-127,]),'AUTO':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,314,316,350,],[25,25,25,-38,-35,-26,-25,-27,-28,-23,-24,-1,25,-22,-34,-30,-227,-37,25,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,-69,-2,-63,25,-9,-228,25,-5,-230,-228,-71,-72,-74,-10,-7,-228,-13,-228,-124,25,-6,-41,-61,-73,-75,25,-76,25,-8,-228,-14,-40,-62,25,25,-126,-125,-127,]),'ASTERISK':([0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,20,21,22,23,25,27,28,29,30,31,32,34,35,36,37,38,41,42,43,47,48,49,51,53,54,56,61,62,66,68,69,75,76,77,78,80,81,85,86,88,89,92,93,94,95,97,98,99,103,104,105,106,107,108,110,114,118,120,121,122,124,125,126,127,128,130,132,134,135,138,142,143,144,145,146,147,148,149,150,154,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,189,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,240,241,242,245,246,252,253,254,257,269,271,272,273,275,276,277,278,279,281,286,288,289,291,292,293,299,300,301,302,303,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[28,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,28,-1,-17,-22,-34,-30,-227,-37,28,-11,-21,-12,28,28,-4,-31,-3,-29,-32,-33,-36,-39,-16,-20,-42,-18,-2,-63,95,-81,28,-9,-5,-230,-52,-54,28,-217,-194,-223,95,-224,-205,-222,95,-206,-204,-218,95,-196,-203,-202,-208,-190,-226,179,95,-207,-225,95,-216,28,-82,28,-10,-7,95,28,-13,-229,-124,-6,-41,-53,-55,95,-61,95,-198,95,95,95,95,-194,95,28,95,95,95,95,95,95,-200,95,95,-215,-214,95,95,95,95,95,95,95,95,95,95,95,-197,-199,95,28,-8,95,-229,-229,95,-14,-40,95,28,-62,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,95,95,-219,95,28,-212,-213,-210,179,179,-193,-191,-192,95,-229,95,-113,-115,-111,-216,95,-112,-117,-118,95,-128,-116,95,-122,-114,-195,95,-201,-209,-211,95,95,-126,-125,-129,95,-146,95,-144,-123,95,95,95,-145,95,-143,-119,-147,95,-121,95,-127,95,95,95,-120,95,95,95,95,95,95,-133,-132,-130,-135,95,95,95,95,95,-136,-137,95,-139,95,95,-134,-131,-138,-140,-141,95,-142,]),'AND_OP':([20,75,76,77,79,80,82,84,85,87,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,299,301,302,303,],[-227,-217,-194,-223,-170,-224,-172,-168,-222,-176,-218,-196,-184,-208,-190,173,-179,-174,-226,-187,-225,-216,-198,-194,-200,-215,-214,-197,-199,-173,-175,-171,-219,-181,-182,-180,-183,173,-212,-213,-210,-188,-189,-169,-185,-186,-178,-177,-193,-191,-192,-216,-195,-201,-209,-211,]),'BANG':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,106,-9,-230,106,-205,106,-206,-204,106,-203,-202,106,-207,106,-10,106,-13,-229,-124,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-229,-229,106,-14,106,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,106,106,106,106,-229,106,-113,-115,-111,106,-112,-117,-118,106,-128,-116,106,-122,-114,106,106,106,-126,-125,-129,106,-146,106,-144,-123,106,106,106,-145,106,-143,-119,-147,106,-121,106,-127,106,106,106,-120,106,106,106,106,106,106,-133,-132,-130,-135,106,106,106,106,106,-136,-137,106,-139,106,106,-134,-131,-138,-140,-141,106,-142,]),'IF':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,279,281,288,289,291,292,293,314,316,317,319,320,323,324,325,329,339,340,341,344,346,350,354,355,356,358,359,364,365,367,368,369,370,372,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,-9,-230,-10,-13,-229,-124,-229,-229,294,-14,-229,294,-113,-115,-111,-112,-117,-118,-128,-116,294,-122,-114,-126,-125,-129,294,-146,-144,-123,294,-145,-143,-119,-147,-121,294,-127,294,-120,294,294,294,-133,-132,-130,-135,294,294,294,294,-136,-137,294,-139,294,294,-134,-131,-138,-140,-141,294,-142,]),'STRING_LITERAL':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,279,281,286,288,289,291,292,293,300,304,313,314,316,317,319,320,322,323,324,325,326,328,329,331,339,340,341,342,344,346,350,351,353,354,355,356,357,358,359,361,362,364,365,367,368,369,370,372,374,376,377,378,379,380,381,382,384,385,386,387,388,389,390,],[-11,-12,103,-9,-230,103,-205,103,-206,-204,103,-203,-202,103,-207,103,-10,103,-13,-229,-124,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-229,-229,103,-14,103,-157,-155,-161,-162,-156,-160,-153,-154,-158,-152,-159,103,103,103,103,-229,103,-113,-115,-111,103,-112,-117,-118,103,-128,-116,103,-122,-114,103,103,103,-126,-125,-129,103,-146,103,-144,-123,103,103,103,-145,103,-143,-119,-147,103,-121,103,-127,103,103,103,-120,103,103,103,103,103,103,-133,-132,-130,-135,103,103,103,103,103,-136,-137,103,-139,103,103,-134,-131,-138,-140,-141,103,-142,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,314,316,350,],[31,31,31,-38,-35,-26,-25,-27,-28,-23,-24,-1,31,-22,-34,-30,-227,-37,31,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-228,-70,-42,31,-69,-2,-63,31,-9,-228,31,-5,-230,-228,31,31,31,-45,31,-71,-72,31,-74,-10,-7,-228,-13,-228,-124,31,-6,31,-41,-46,-61,31,-73,31,-75,31,-76,31,-8,-228,-14,-40,-51,-62,31,31,-126,-125,-127,]),'LEFT_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,299,301,302,303,],[-227,-217,-194,-223,-224,-222,-218,-196,-208,-226,-225,-216,-198,222,-200,-215,-214,-197,-199,-219,-212,-213,-210,-216,-195,-201,-209,-211,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,2,15,22,52,60,129,189,192,231,258,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,245,246,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'selection_statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,]),'constant':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'unary_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[76,144,149,163,181,76,149,76,76,149,76,76,76,149,76,76,76,76,149,76,149,149,149,76,76,76,76,76,76,76,76,76,76,76,149,149,76,149,149,76,76,149,149,76,149,76,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'conditional_expression':([51,86,124,138,143,145,150,160,164,165,170,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[109,155,155,109,109,155,155,155,155,155,155,109,155,155,109,155,155,109,155,155,109,155,332,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'struct_or_union_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([51,86,124,138,143,145,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[79,79,79,79,79,79,213,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'identifier_list':([52,],[115,]),'init_declarator_list':([29,125,],[58,58,]),'struct_declaration_list':([44,64,],[65,131,]),'assignment_operator':([149,],[225,]),'enumerator':([50,71,141,],[72,72,209,]),'abstract_declarator':([114,154,189,231,],[185,229,262,262,]),'pointer':([0,13,22,28,29,54,69,114,120,125,154,189,206,231,],[12,12,12,55,12,119,12,188,12,12,230,188,12,230,]),'read_mode_e':([127,199,200,269,],[201,201,271,271,]),'and_expression':([51,86,124,138,143,145,146,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[82,82,82,82,82,82,211,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'assignment_expression':([86,124,145,150,160,164,165,170,196,201,225,226,271,277,291,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[153,198,153,153,153,153,153,243,198,153,297,298,153,153,153,333,198,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'external_declaration':([0,22,],[14,48,]),'type_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[15,15,15,15,15,66,15,15,66,66,66,66,66,15,66,66,66,15,15,15,15,]),'compound_statement':([39,59,63,123,201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[61,122,130,195,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,]),'inclusive_or_expression':([51,86,124,138,143,145,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[84,84,84,84,84,84,84,84,84,84,84,84,247,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'iteration_statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,]),'type_name':([86,150,164,],[152,152,238,]),'postfix_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'additive_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,173,174,175,176,177,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,248,249,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'expression_statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,]),'unary_operator':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'cast_expression':([51,86,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[99,99,182,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,252,253,254,99,99,99,99,99,99,299,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'initializer_list':([196,],[267,]),'struct_declarator_list':([69,],[139,]),'logical_or_expression':([51,86,124,138,143,145,150,160,164,165,170,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'translation_unit':([0,],[22,]),'relational_expression':([51,86,124,138,143,145,146,147,148,150,160,161,164,165,170,173,176,177,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,250,251,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'struct_or_union':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'struct_declaration':([44,64,65,131,],[67,67,133,133,]),'string':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'parameter_type_list':([52,189,231,258,],[113,261,261,309,]),'parameter_declaration':([52,189,192,231,258,],[112,112,265,112,112,]),'direct_declarator':([0,12,13,22,29,69,114,120,125,188,189,206,],[26,45,26,26,26,26,26,26,26,45,26,26,]),'type_qualifier_list':([28,],[54,]),'argument_expression_list':([170,],[244,]),'initializer':([124,196,313,],[197,266,336,]),'statement_list':([127,199,],[200,269,]),'primary_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'declaration_specifiers':([0,1,2,15,22,52,60,129,189,192,231,258,],[29,41,42,47,29,114,125,125,114,114,114,114,]),'declaration':([0,22,60,129,],[30,30,126,202,]),'push_scope_e':([62,],[127,]),'logical_and_expression':([51,86,124,138,143,145,150,160,161,164,165,170,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[100,100,100,100,100,100,100,100,237,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'declarator':([0,13,22,29,69,114,120,125,189,206,],[39,46,39,59,137,186,194,194,46,137,]),'shift_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,173,176,177,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[101,101,101,101,101,101,101,101,101,101,232,233,234,235,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'equality_expression':([51,86,124,138,143,145,146,147,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[102,102,102,102,102,102,102,212,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'jump_statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,]),'struct_declarator':([69,206,],[136,296,]),'function_definition':([0,22,],[32,32,]),'parameter_list':([52,189,231,258,],[116,116,116,116,]),'insert_mode_e':([39,59,63,123,127,199,269,],[60,60,129,129,60,129,315,]),'pop_scope_e':([199,200,315,],[268,270,338,]),'enum_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'type_qualifier':([0,1,2,15,22,28,44,52,54,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[2,2,2,2,2,53,68,2,118,2,68,68,68,68,68,2,68,68,68,2,2,2,2,]),'enumerator_list':([50,71,],[73,140,]),'labeled_statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,]),'declaration_list':([39,59,127,],[63,123,199,]),'specifier_qualifier_list':([44,64,65,66,68,86,131,150,164,],[69,69,69,134,135,154,69,154,154,]),'statement':([201,271,291,319,325,346,354,356,358,359,369,370,372,376,379,381,382,389,],[288,317,330,340,344,355,364,365,367,368,377,378,380,385,386,387,388,390,]),'constant_expression':([51,138,143,184,204,257,286,],[91,205,210,256,295,307,327,]),'init_declarator':([29,120,125,],[57,193,57,]),'direct_abstract_declarator':([114,154,188,189,230,231,],[187,187,259,187,259,187,]),'identifier':([0,11,12,13,22,24,29,50,51,52,69,71,78,86,93,105,108,114,120,124,125,138,141,143,145,146,147,148,150,156,157,158,159,160,161,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,184,188,189,190,196,201,204,206,225,226,228,257,271,274,277,286,291,300,304,313,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[40,43,40,40,40,49,40,74,110,117,40,74,110,110,110,110,110,40,40,110,40,110,74,110,110,110,110,110,110,110,110,110,110,110,110,110,110,240,241,110,110,110,110,110,110,110,110,110,110,110,110,40,40,263,110,276,110,40,110,110,110,110,276,318,110,110,276,110,110,110,276,110,276,110,110,110,110,276,110,110,276,276,110,276,276,110,110,276,276,276,110,276,276,276,276,276,]),'expression':([86,145,150,160,164,165,201,271,277,291,319,322,325,326,328,331,342,346,351,353,354,356,357,358,359,361,362,369,370,372,374,376,379,381,382,389,],[151,151,151,236,151,239,283,283,321,283,283,343,283,345,347,349,352,283,360,363,283,283,366,283,283,371,373,283,283,283,383,283,283,283,283,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','Parser_M.py',36),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','Parser_M.py',42),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','Parser_M.py',48),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','Parser_M.py',54),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','Parser_M.py',60),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','Parser_M.py',66),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','Parser_M.py',72),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','Parser_M.py',78),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','Parser_M.py',84),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','Parser_M.py',90),
  ('declaration -> PD_O','declaration',1,'p_declaration_3','Parser_M.py',109),
  ('declaration -> PD_F','declaration',1,'p_declaration_4','Parser_M.py',116),
  ('declaration_list -> insert_mode_e declaration','declaration_list',2,'p_declaration_list_1','Parser_M.py',125),
  ('declaration_list -> declaration_list insert_mode_e declaration','declaration_list',3,'p_declaration_list_2','Parser_M.py',131),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','Parser_M.py',137),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','Parser_M.py',144),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','Parser_M.py',150),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','Parser_M.py',157),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','Parser_M.py',163),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','Parser_M.py',169),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','Parser_M.py',175),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','Parser_M.py',182),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','Parser_M.py',189),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','Parser_M.py',196),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','Parser_M.py',202),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','Parser_M.py',209),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','Parser_M.py',217),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','Parser_M.py',225),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','Parser_M.py',231),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','Parser_M.py',239),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','Parser_M.py',247),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','Parser_M.py',255),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','Parser_M.py',263),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','Parser_M.py',271),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','Parser_M.py',279),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','Parser_M.py',287),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','Parser_M.py',295),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','Parser_M.py',303),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','Parser_M.py',311),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','Parser_M.py',319),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','Parser_M.py',325),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','Parser_M.py',331),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','Parser_M.py',337),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','Parser_M.py',343),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','Parser_M.py',349),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','Parser_M.py',355),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','Parser_M.py',361),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','Parser_M.py',374),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','Parser_M.py',389),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','Parser_M.py',400),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','Parser_M.py',406),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','Parser_M.py',412),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','Parser_M.py',418),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','Parser_M.py',424),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','Parser_M.py',430),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','Parser_M.py',436),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','Parser_M.py',442),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','Parser_M.py',448),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','Parser_M.py',454),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','Parser_M.py',460),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','Parser_M.py',466),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','Parser_M.py',472),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','Parser_M.py',478),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','Parser_M.py',484),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','Parser_M.py',490),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','Parser_M.py',496),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','Parser_M.py',502),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','Parser_M.py',508),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','Parser_M.py',517),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','Parser_M.py',524),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','Parser_M.py',534),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','Parser_M.py',541),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','Parser_M.py',548),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','Parser_M.py',555),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','Parser_M.py',561),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','Parser_M.py',570),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','Parser_M.py',576),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','Parser_M.py',582),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','Parser_M.py',588),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','Parser_M.py',594),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','Parser_M.py',600),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','Parser_M.py',606),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','Parser_M.py',612),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','Parser_M.py',618),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','Parser_M.py',624),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','Parser_M.py',630),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','Parser_M.py',636),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','Parser_M.py',642),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','Parser_M.py',648),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','Parser_M.py',654),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','Parser_M.py',660),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','Parser_M.py',666),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','Parser_M.py',672),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','Parser_M.py',678),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','Parser_M.py',684),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','Parser_M.py',690),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','Parser_M.py',696),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','Parser_M.py',702),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','Parser_M.py',708),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','Parser_M.py',714),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','Parser_M.py',720),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','Parser_M.py',726),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','Parser_M.py',732),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','Parser_M.py',738),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','Parser_M.py',744),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','Parser_M.py',750),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','Parser_M.py',756),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','Parser_M.py',762),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','Parser_M.py',768),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','Parser_M.py',774),
  ('statement -> labeled_statement','statement',1,'p_statement_1','Parser_M.py',780),
  ('statement -> compound_statement','statement',1,'p_statement_2','Parser_M.py',786),
  ('statement -> expression_statement','statement',1,'p_statement_3','Parser_M.py',792),
  ('statement -> selection_statement','statement',1,'p_statement_4','Parser_M.py',798),
  ('statement -> iteration_statement','statement',1,'p_statement_5','Parser_M.py',804),
  ('statement -> jump_statement','statement',1,'p_statement_6','Parser_M.py',810),
  ('statement -> PD_O','statement',1,'p_statement_7','Parser_M.py',816),
  ('statement -> PD_F','statement',1,'p_statement_8','Parser_M.py',823),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','Parser_M.py',830),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','Parser_M.py',836),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','Parser_M.py',842),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','Parser_M.py',848),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','Parser_M.py',854),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','Parser_M.py',860),
  ('compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_2','Parser_M.py',866),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_3','Parser_M.py',872),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE','compound_statement',7,'p_compound_statement_4','Parser_M.py',878),
  ('statement_list -> read_mode_e statement','statement_list',2,'p_statement_list_1','Parser_M.py',885),
  ('statement_list -> statement_list read_mode_e statement','statement_list',3,'p_statement_list_2','Parser_M.py',891),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','Parser_M.py',897),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','Parser_M.py',903),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','Parser_M.py',909),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','Parser_M.py',915),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','Parser_M.py',921),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','Parser_M.py',927),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','Parser_M.py',933),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','Parser_M.py',939),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','Parser_M.py',945),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','Parser_M.py',951),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','Parser_M.py',957),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','Parser_M.py',963),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','Parser_M.py',969),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','Parser_M.py',975),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','Parser_M.py',981),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','Parser_M.py',987),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','Parser_M.py',993),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','Parser_M.py',999),
  ('expression -> assignment_expression','expression',1,'p_expression_1','Parser_M.py',1005),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','Parser_M.py',1011),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','Parser_M.py',1017),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','Parser_M.py',1023),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','Parser_M.py',1029),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','Parser_M.py',1035),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','Parser_M.py',1041),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','Parser_M.py',1047),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','Parser_M.py',1053),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','Parser_M.py',1059),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','Parser_M.py',1065),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','Parser_M.py',1071),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','Parser_M.py',1077),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','Parser_M.py',1083),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','Parser_M.py',1089),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','Parser_M.py',1095),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','Parser_M.py',1101),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','Parser_M.py',1107),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','Parser_M.py',1113),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','Parser_M.py',1119),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','Parser_M.py',1125),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','Parser_M.py',1131),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','Parser_M.py',1137),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','Parser_M.py',1143),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','Parser_M.py',1149),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','Parser_M.py',1155),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','Parser_M.py',1161),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','Parser_M.py',1167),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','Parser_M.py',1173),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','Parser_M.py',1179),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','Parser_M.py',1185),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','Parser_M.py',1191),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','Parser_M.py',1197),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','Parser_M.py',1203),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','Parser_M.py',1209),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','Parser_M.py',1215),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','Parser_M.py',1221),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','Parser_M.py',1227),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','Parser_M.py',1233),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','Parser_M.py',1239),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','Parser_M.py',1245),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','Parser_M.py',1251),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','Parser_M.py',1257),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','Parser_M.py',1263),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','Parser_M.py',1269),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','Parser_M.py',1275),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','Parser_M.py',1281),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','Parser_M.py',1287),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','Parser_M.py',1293),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','Parser_M.py',1299),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','Parser_M.py',1305),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','Parser_M.py',1311),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','Parser_M.py',1317),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','Parser_M.py',1323),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','Parser_M.py',1329),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','Parser_M.py',1335),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','Parser_M.py',1341),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','Parser_M.py',1347),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','Parser_M.py',1353),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','Parser_M.py',1359),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','Parser_M.py',1365),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','Parser_M.py',1371),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','Parser_M.py',1377),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','Parser_M.py',1383),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','Parser_M.py',1389),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','Parser_M.py',1395),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','Parser_M.py',1401),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','Parser_M.py',1407),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','Parser_M.py',1413),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','Parser_M.py',1419),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','Parser_M.py',1425),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','Parser_M.py',1431),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','Parser_M.py',1437),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','Parser_M.py',1443),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','Parser_M.py',1449),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','Parser_M.py',1455),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','Parser_M.py',1461),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','Parser_M.py',1467),
  ('string -> STRING_LITERAL','string',1,'p_string_1','Parser_M.py',1473),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','Parser_M.py',1479),
  ('insert_mode_e -> <empty>','insert_mode_e',0,'p_empty_insertmode','Parser_M.py',1489),
  ('read_mode_e -> <empty>','read_mode_e',0,'p_empty_readmode','Parser_M.py',1499),
  ('push_scope_e -> <empty>','push_scope_e',0,'p_empty_push_scope','Parser_M.py',1509),
  ('pop_scope_e -> <empty>','pop_scope_e',0,'p_empty_pop_scope','Parser_M.py',1517),
]
