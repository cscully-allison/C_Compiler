
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration :  PD_Odeclaration :  PD_Fdeclaration_list :  insert_mode_e declarationdeclaration_list :  declaration_list insert_mode_e declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator : direct_declaratordeclarator : pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementlabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACEstatement_list : read_mode_e statementstatement_list :  statement_list read_mode_e statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIERinsert_mode_e :read_mode_e :push_scope_e :pop_scope_e :'
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[5,5,5,-38,-35,-26,-25,-27,-28,-23,-24,-1,5,-22,-34,-30,-225,-37,5,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,5,-69,-2,-63,5,-9,-226,5,-5,-228,-226,5,5,5,-45,5,-71,-72,5,-74,-10,-7,-226,-13,-226,-122,5,-6,5,-41,-46,-61,5,-73,5,-75,5,-76,5,-8,-226,-14,-40,-51,-62,5,5,-124,-123,-125,]),'DIV_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,221,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'MINUS':([20,23,27,51,56,62,75,76,77,78,80,81,85,86,88,89,92,93,94,95,96,97,98,99,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,245,246,248,249,252,253,254,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,297,298,299,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-225,-11,-12,81,-9,-228,-215,-192,-221,81,-222,-203,-220,81,-204,-202,-216,81,-194,-201,172,-200,-206,-188,-224,-185,81,-205,-223,81,-214,-10,81,-13,-227,-122,81,81,-196,81,81,81,81,-192,81,81,81,81,81,81,81,-198,81,81,-213,-212,81,81,81,81,81,81,81,81,81,81,81,-195,-197,81,81,-227,-227,81,-14,81,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,81,81,-217,81,-210,-211,-208,-186,-187,172,172,-191,-189,-190,81,-227,81,-113,-115,-111,-214,81,-112,81,-126,-116,81,-120,-114,-193,81,-199,-207,-209,81,81,-124,-123,-127,81,-144,81,-142,-121,81,81,81,-143,81,-141,-117,-145,81,-119,81,-125,81,81,81,-118,81,81,81,81,81,81,-131,-130,-128,-133,81,81,81,81,81,-134,-135,81,-137,81,81,-132,-129,-136,-138,-139,81,-140,]),'LE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,157,-216,-194,-182,-206,-188,-177,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,157,157,-191,-189,-190,-214,-193,-199,-207,-209,]),'ENUMERATION_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,107,-9,-228,107,-203,107,-204,-202,107,-201,-200,107,-205,107,-10,107,-13,-227,-122,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-227,-227,107,-14,107,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,107,107,107,107,-227,107,-113,-115,-111,107,-112,107,-126,-116,107,-120,-114,107,107,107,-124,-123,-127,107,-144,107,-142,-121,107,107,107,-143,107,-141,-117,-145,107,-119,107,-125,107,107,107,-118,107,107,107,107,107,107,-131,-130,-128,-133,107,107,107,107,107,-134,-135,107,-137,107,107,-132,-129,-136,-138,-139,107,-140,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[18,18,18,-38,-35,-26,-25,-27,-28,-23,-24,-1,18,-22,-34,-30,-225,-37,18,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,18,-69,-2,-63,18,-9,-226,18,-5,-228,-226,18,18,18,-45,18,-71,-72,18,-74,-10,-7,-226,-13,-226,-122,18,-6,18,-41,-46,-61,18,-73,18,-75,18,-76,18,-8,-226,-14,-40,-51,-62,18,18,-124,-123,-125,]),'PLUS':([20,23,27,51,56,62,75,76,77,78,80,81,85,86,88,89,92,93,94,95,96,97,98,99,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,245,246,248,249,252,253,254,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,297,298,299,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-225,-11,-12,89,-9,-228,-215,-192,-221,89,-222,-203,-220,89,-204,-202,-216,89,-194,-201,171,-200,-206,-188,-224,-185,89,-205,-223,89,-214,-10,89,-13,-227,-122,89,89,-196,89,89,89,89,-192,89,89,89,89,89,89,89,-198,89,89,-213,-212,89,89,89,89,89,89,89,89,89,89,89,-195,-197,89,89,-227,-227,89,-14,89,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,89,89,-217,89,-210,-211,-208,-186,-187,171,171,-191,-189,-190,89,-227,89,-113,-115,-111,-214,89,-112,89,-126,-116,89,-120,-114,-193,89,-199,-207,-209,89,89,-124,-123,-127,89,-144,89,-142,-121,89,89,89,-143,89,-141,-117,-145,89,-119,89,-125,89,89,89,-118,89,89,89,89,89,89,-131,-130,-128,-133,89,89,89,89,89,-134,-135,89,-137,89,89,-132,-129,-136,-138,-139,89,-140,]),'TYPEDEF_NAME':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[21,21,21,-38,-35,-26,-25,-27,-28,-23,-24,-1,21,-22,-34,-30,-225,-37,21,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,21,-69,-2,-63,21,-9,-226,21,-5,-228,-226,21,21,21,-45,21,-71,-72,21,-74,-10,-7,-226,-13,-226,-122,21,-6,21,-41,-46,-61,21,-73,21,-75,21,-76,21,-8,-226,-14,-40,-51,-62,21,21,-124,-123,-125,]),'GT':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,156,-216,-194,-182,-206,-188,-177,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,156,156,-191,-189,-190,-214,-193,-199,-207,-209,]),'GOTO':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,274,-14,-227,274,-113,-115,-111,-112,-126,-116,274,-120,-114,-124,-123,-127,274,-144,-142,-121,274,-143,-141,-117,-145,-119,274,-125,274,-118,274,274,274,-131,-130,-128,-133,274,274,274,274,-134,-135,274,-137,274,274,-132,-129,-136,-138,-139,274,-140,]),'ENUM':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[24,24,24,-38,-35,-26,-25,-27,-28,-23,-24,-1,24,-22,-34,-30,-225,-37,24,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,24,-69,-2,-63,24,-9,-226,24,-5,-228,-226,24,24,24,-45,24,-71,-72,24,-74,-10,-7,-226,-13,-226,-122,24,-6,24,-41,-46,-61,24,-73,24,-75,24,-76,24,-8,-226,-14,-40,-51,-62,24,24,-124,-123,-125,]),'PERIOD':([20,75,77,80,85,92,94,98,103,107,110,166,167,227,240,241,242,276,300,301,],[-225,-215,-221,-222,-220,-216,168,-206,-224,-223,-214,-213,-212,-217,-210,-211,-208,-214,-207,-209,]),'LEFT_OP':([20,75,76,77,80,85,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-182,-206,-188,174,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,174,174,174,174,-210,-211,-208,-186,-187,-183,-184,-191,-189,-190,-214,-193,-199,-207,-209,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[35,35,35,-38,-35,-26,-25,-27,-28,-23,-24,-1,35,-22,-34,-30,-225,-37,35,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,35,-69,-2,-63,35,-9,-226,35,-5,-228,-226,35,35,35,-45,35,-71,-72,35,-74,-10,-7,-226,-13,-226,-122,35,-6,35,-41,-46,-61,35,-73,35,-75,35,-76,35,-8,-226,-14,-40,-51,-62,35,35,-124,-123,-125,]),'INC_OP':([20,23,27,51,56,62,75,77,78,80,81,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,298,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-225,-11,-12,105,-9,-228,-215,-221,105,-222,-203,-220,105,-204,-202,-216,105,167,-201,-200,-206,-224,105,-205,-223,105,-214,-10,105,-13,-227,-122,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-213,-212,105,105,105,105,105,105,105,105,105,105,105,105,105,-227,-227,105,-14,105,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,105,105,-217,105,-210,-211,-208,105,-227,105,-113,-115,-111,-214,105,-112,105,-126,-116,105,-120,-114,105,-207,-209,105,105,-124,-123,-127,105,-144,105,-142,-121,105,105,105,-143,105,-141,-117,-145,105,-119,105,-125,105,105,105,-118,105,105,105,105,105,105,-131,-130,-128,-133,105,105,105,105,105,-134,-135,105,-137,105,105,-132,-129,-136,-138,-139,105,-140,]),'NE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,212,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-174,-216,-194,-182,-206,-188,-177,176,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,176,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[8,8,8,-38,-35,-26,-25,-27,-28,-23,-24,-1,8,-22,-34,-30,-225,-37,8,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,8,-69,-2,-63,8,-9,-226,8,-5,-228,-226,8,8,8,-45,8,-71,-72,8,-74,-10,-7,-226,-13,-226,-122,8,-6,8,-41,-46,-61,8,-73,8,-75,8,-76,8,-8,-226,-14,-40,-51,-62,8,8,-124,-123,-125,]),'RETURN':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,277,-14,-227,277,-113,-115,-111,-112,-126,-116,277,-120,-114,-124,-123,-127,277,-144,-142,-121,277,-143,-141,-117,-145,-119,277,-125,277,-118,277,277,277,-131,-130,-128,-133,277,277,277,277,-134,-135,277,-137,277,277,-132,-129,-136,-138,-139,277,-140,]),'OPENBRACE':([11,19,20,23,24,26,27,33,39,40,43,45,49,56,59,62,63,70,83,111,121,123,124,126,127,128,162,183,191,196,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,311,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[44,-44,-225,-11,50,-68,-12,-43,62,-70,64,-69,71,-9,62,-228,62,-71,-72,-74,-10,62,196,-13,-227,-122,-73,-75,-76,196,-227,-227,62,-14,-227,62,-113,-115,-111,-112,-126,-116,62,-120,-114,196,-124,-123,-127,62,-144,-142,-121,62,-143,-141,-117,-145,-119,62,-125,62,-118,62,62,62,-131,-130,-128,-133,62,62,62,62,-134,-135,62,-137,62,62,-132,-129,-136,-138,-139,62,-140,]),'STATIC':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,312,314,348,],[9,9,9,-38,-35,-26,-25,-27,-28,-23,-24,-1,9,-22,-34,-30,-225,-37,9,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,-69,-2,-63,9,-9,-226,9,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,9,-6,-41,-61,-73,-75,9,-76,9,-8,-226,-14,-40,-62,9,9,-124,-123,-125,]),'EQ_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,212,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-174,-216,-194,-182,-206,-188,-177,177,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,177,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'SIZEOF':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,93,-9,-228,93,-203,93,-204,-202,93,-201,-200,93,-205,93,-10,93,-13,-227,-122,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-227,-227,93,-14,93,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,93,93,93,93,-227,93,-113,-115,-111,93,-112,93,-126,-116,93,-120,-114,93,93,93,-124,-123,-127,93,-144,93,-142,-121,93,93,93,-143,93,-141,-117,-145,93,-119,93,-125,93,93,93,-118,93,93,93,93,93,93,-131,-130,-128,-133,93,93,93,93,93,-134,-135,93,-137,93,93,-132,-129,-136,-138,-139,93,-140,]),'OPENPAREN':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,30,31,32,34,35,36,37,38,40,41,42,43,45,47,48,49,51,53,54,55,56,61,62,66,68,69,70,75,77,78,80,81,83,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,111,114,118,119,120,121,122,124,125,126,127,128,130,132,134,135,138,142,143,145,146,147,148,150,154,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,183,184,187,188,189,191,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,240,241,242,255,257,259,260,269,271,272,273,275,276,277,278,279,283,284,285,286,287,289,290,291,292,298,300,301,302,303,304,306,308,309,311,312,314,315,317,318,320,321,322,323,324,326,327,329,332,333,337,338,339,340,342,344,346,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[13,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,13,13,-1,-17,-22,-34,-30,-225,-37,13,-11,-21,52,-12,-77,13,-4,-31,-3,-29,-32,-33,-36,-39,-70,-16,-20,-42,52,-18,-2,-63,86,-81,-78,-79,-9,-5,-228,-52,-54,13,-71,-215,-221,145,-222,-203,-72,-220,150,-204,-202,-216,164,170,-201,-200,-206,-224,145,-205,-223,86,-214,-74,189,-82,-80,13,-10,-7,150,13,-13,-227,-122,-6,-41,-53,-55,86,-61,86,150,86,86,86,150,231,86,86,86,86,150,86,-73,150,150,-213,-212,150,86,86,86,86,86,86,86,86,86,86,-75,86,258,189,189,-76,-8,150,-227,-227,150,-14,-40,86,13,-62,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,150,150,-217,86,231,231,-210,-211,-208,-103,86,258,-107,-227,150,-113,-115,-111,-214,150,-112,320,324,86,326,-126,-116,150,-120,-114,329,86,-207,-209,150,-104,-105,-109,-108,-102,150,-124,-123,-127,150,-144,150,-142,-121,150,150,150,-143,150,-106,-110,-141,-117,-145,150,-119,150,355,-125,150,150,150,-118,150,150,150,150,150,150,-131,-130,-128,-133,150,150,150,150,150,-134,-135,150,-137,150,150,-132,-129,-136,-138,-139,150,-140,]),'CLOSEBRACE':([20,23,27,56,62,65,67,72,73,74,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,121,126,128,131,133,140,144,149,155,163,166,167,181,182,198,199,200,202,207,209,210,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,266,267,268,269,270,272,273,275,278,286,287,290,291,295,297,299,300,301,310,311,312,313,314,315,318,321,322,327,330,334,335,336,337,338,339,342,348,353,362,363,365,366,375,376,378,382,383,384,385,386,388,],[-225,-11,-12,-9,128,132,-45,-64,142,-66,-215,-192,-221,-168,-222,-170,-166,-220,-174,-161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-163,-214,-10,-13,-122,203,-46,208,-196,-192,-148,-198,-213,-212,-195,-197,-92,-229,-229,-14,-51,-65,-67,-171,-173,-169,-217,-179,-180,-178,-181,-165,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-95,310,312,-226,314,-113,-115,-111,-112,-126,-116,-120,-114,-149,-193,-199,-207,-209,-93,335,-124,-229,-123,-127,-144,-142,-121,-143,-162,-96,-94,348,-141,-117,-145,-119,-125,-118,-131,-130,-128,-133,-134,-135,-137,-132,-129,-136,-138,-139,-140,]),'INTEGER_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,85,-9,-228,85,-203,85,-204,-202,85,-201,-200,85,-205,85,-10,85,-13,-227,-122,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-227,-227,85,-14,85,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,85,85,85,85,-227,85,-113,-115,-111,85,-112,85,-126,-116,85,-120,-114,85,85,85,-124,-123,-127,85,-144,85,-142,-121,85,85,85,-143,85,-141,-117,-145,85,-119,85,-125,85,85,85,-118,85,85,85,85,85,85,-131,-130,-128,-133,85,85,85,85,85,-134,-135,85,-137,85,85,-132,-129,-136,-138,-139,85,-140,]),'CLOSEPAREN':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,46,47,49,52,53,54,55,66,68,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,111,112,113,114,115,116,117,118,119,132,134,135,142,144,149,151,152,153,154,155,162,163,166,167,170,181,182,183,185,186,187,188,189,191,203,208,211,212,213,227,229,230,231,232,233,234,235,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,258,259,260,261,262,263,264,265,295,296,297,299,300,301,303,304,306,307,308,309,330,331,332,333,343,345,347,349,358,359,360,364,369,371,372,381,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-225,-37,-21,-68,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,70,-18,-63,111,-81,-78,-79,-52,-54,-71,-215,-192,-221,-168,-222,-170,-72,-166,-220,-174,-161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-214,-74,-85,183,-88,191,-83,-90,-82,-80,-41,-53,-55,-61,-196,-192,227,228,-146,-97,-148,-73,-198,-213,-212,242,-195,-197,-75,-89,-87,-100,-99,260,-76,-40,-62,-171,-173,-169,-217,-98,-99,260,-179,-180,-178,-181,-165,299,-210,-211,-208,-218,301,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-103,306,-101,-107,308,309,-91,-84,-86,-149,-147,-193,-199,-207,-209,-104,-105,-109,333,-108,-102,-162,-219,-106,-110,352,354,356,357,367,368,370,373,377,379,380,387,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[17,17,17,-38,-35,-26,-25,-27,-28,-23,-24,-1,17,-22,-34,-30,-225,-37,17,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,17,-69,-2,-63,17,-9,-226,17,-5,-228,-226,17,17,17,-45,17,-71,-72,17,-74,-10,-7,-226,-13,-226,-122,17,-6,17,-41,-46,-61,17,-73,17,-75,17,-76,17,-8,-226,-14,-40,-51,-62,17,17,-124,-123,-125,]),'OR_OP':([20,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-168,-222,-170,-166,-220,-174,161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-171,-173,-169,-217,-179,-180,-178,-181,-165,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'COLON':([3,4,5,7,8,17,18,20,21,26,31,34,35,36,37,38,40,43,45,49,66,68,69,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,132,134,135,137,142,144,149,153,155,162,163,166,167,181,182,183,191,203,206,208,211,212,213,227,232,233,234,235,236,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,282,295,296,297,299,300,301,325,330,],[-38,-35,-26,-27,-28,-34,-30,-225,-37,-68,-31,-29,-32,-33,-36,-39,-70,-42,-69,-63,-52,-54,138,-71,-215,-192,-221,-168,-222,-170,-72,-166,-220,-174,-161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-163,-214,-74,-41,-53,-55,204,-61,-196,-192,-146,-148,-73,-198,-213,-212,-195,-197,-75,-76,-40,138,-62,-171,-173,-169,-217,-179,-180,-178,-181,298,-165,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,317,323,-149,-147,-193,-199,-207,-209,344,-162,]),'$end':([14,22,23,27,30,32,48,56,61,121,122,128,130,195,312,314,348,],[-1,0,-11,-12,-4,-3,-2,-9,-5,-10,-7,-122,-6,-8,-124,-123,-125,]),'PD_O':([0,14,20,22,23,26,27,30,32,39,40,45,48,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,162,183,191,195,199,202,312,314,348,],[23,-1,-225,23,-11,-68,-12,-4,-3,-226,-70,-69,-2,-9,-226,23,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,23,-6,-73,-75,-76,-8,-226,-14,-124,-123,-125,]),'FOR':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,279,-14,-227,279,-113,-115,-111,-112,-126,-116,279,-120,-114,-124,-123,-127,279,-144,-142,-121,279,-143,-141,-117,-145,-119,279,-125,279,-118,279,279,279,-131,-130,-128,-133,279,279,279,279,-134,-135,279,-137,279,279,-132,-129,-136,-138,-139,279,-140,]),'UNION':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[19,19,19,-38,-35,-26,-25,-27,-28,-23,-24,-1,19,-22,-34,-30,-225,-37,19,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,19,-69,-2,-63,19,-9,-226,19,-5,-228,-226,19,19,19,-45,19,-71,-72,19,-74,-10,-7,-226,-13,-226,-122,19,-6,19,-41,-46,-61,19,-73,19,-75,19,-76,19,-8,-226,-14,-40,-51,-62,19,19,-124,-123,-125,]),'PD_F':([0,14,20,22,23,26,27,30,32,39,40,45,48,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,162,183,191,195,199,202,312,314,348,],[27,-1,-225,27,-11,-68,-12,-4,-3,-226,-70,-69,-2,-9,-226,27,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,27,-6,-73,-75,-76,-8,-226,-14,-124,-123,-125,]),'ELSE':([128,272,273,275,278,287,290,291,312,314,318,321,322,327,337,338,339,342,348,353,362,363,365,366,375,376,378,382,383,384,385,386,388,],[-122,-113,-115,-111,-112,-116,-120,-114,-124,-123,-144,-142,-121,-143,-141,-117,-145,-119,-125,-118,-131,-130,374,-133,-134,-135,-137,-132,-129,-136,-138,-139,-140,]),'AMPERSAND':([20,23,27,51,56,62,75,76,77,78,80,81,82,85,86,87,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,110,121,124,126,127,128,138,143,144,145,146,147,148,149,150,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,196,199,200,201,202,204,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,297,298,299,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-225,-11,-12,97,-9,-228,-215,-192,-221,97,-222,-203,147,-220,97,-174,-204,-202,-216,97,-194,-201,-182,-200,-206,-188,-177,-172,-224,-185,97,-205,-223,97,-214,-10,97,-13,-227,-122,97,97,-196,97,97,97,97,-192,97,97,97,97,97,97,97,-198,97,97,-213,-212,97,97,97,97,97,97,97,97,97,97,97,-195,-197,97,97,-227,-227,97,-14,97,147,-173,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,97,97,-217,97,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,-176,-175,-191,-189,-190,97,-227,97,-113,-115,-111,-214,97,-112,97,-126,-116,97,-120,-114,-193,97,-199,-207,-209,97,97,-124,-123,-127,97,-144,97,-142,-121,97,97,97,-143,97,-141,-117,-145,97,-119,97,-125,97,97,97,-118,97,97,97,97,97,97,-131,-130,-128,-133,97,97,97,97,97,-134,-135,97,-137,97,97,-132,-129,-136,-138,-139,97,-140,]),'CLOSEBRACKET':([20,51,75,76,77,79,80,82,84,85,87,90,91,92,94,96,98,99,100,101,102,103,104,107,109,110,144,149,153,155,163,166,167,181,182,184,211,212,213,227,232,233,234,235,237,239,240,241,242,245,246,247,248,249,250,251,252,253,254,256,257,295,296,297,299,300,301,305,330,],[-225,83,-215,-192,-221,-168,-222,-170,-166,-220,-174,-161,162,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-163,-214,-196,-192,-146,-148,-198,-213,-212,-195,-197,255,-171,-173,-169,-217,-179,-180,-178,-181,-165,300,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,303,304,-149,-147,-193,-199,-207,-209,332,-162,]),'SUB_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,214,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'XOR_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,216,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[34,34,34,-38,-35,-26,-25,-27,-28,-23,-24,-1,34,-22,-34,-30,-225,-37,34,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,34,-69,-2,-63,34,-9,-226,34,-5,-228,-226,34,34,34,-45,34,-71,-72,34,-74,-10,-7,-226,-13,-226,-122,34,-6,34,-41,-46,-61,34,-73,34,-75,34,-76,34,-8,-226,-14,-40,-51,-62,34,34,-124,-123,-125,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[36,36,36,-38,-35,-26,-25,-27,-28,-23,-24,-1,36,-22,-34,-30,-225,-37,36,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,36,-69,-2,-63,36,-9,-226,36,-5,-228,-226,36,36,36,-45,36,-71,-72,36,-74,-10,-7,-226,-13,-226,-122,36,-6,36,-41,-46,-61,36,-73,36,-75,36,-76,36,-8,-226,-14,-40,-51,-62,36,36,-124,-123,-125,]),'CONTINUE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,280,-14,-227,280,-113,-115,-111,-112,-126,-116,280,-120,-114,-124,-123,-127,280,-144,-142,-121,280,-143,-141,-117,-145,-119,280,-125,280,-118,280,280,280,-131,-130,-128,-133,280,280,280,280,-134,-135,280,-137,280,280,-132,-129,-136,-138,-139,280,-140,]),'MUL_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,220,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'RIGHT_OP':([20,75,76,77,80,85,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-182,-206,-188,175,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,175,175,175,175,-210,-211,-208,-186,-187,-183,-184,-191,-189,-190,-214,-193,-199,-207,-209,]),'RIGHT_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,224,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'DEFAULT':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,282,-14,-227,282,-113,-115,-111,-112,-126,-116,282,-120,-114,-124,-123,-127,282,-144,-142,-121,282,-143,-141,-117,-145,-119,282,-125,282,-118,282,282,282,-131,-130,-128,-133,282,282,282,282,-134,-135,282,-137,282,282,-132,-129,-136,-138,-139,282,-140,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[7,7,7,-38,-35,-26,-25,-27,-28,-23,-24,-1,7,-22,-34,-30,-225,-37,7,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,7,-69,-2,-63,7,-9,-226,7,-5,-228,-226,7,7,7,-45,7,-71,-72,7,-74,-10,-7,-226,-13,-226,-122,7,-6,7,-41,-46,-61,7,-73,7,-75,7,-76,7,-8,-226,-14,-40,-51,-62,7,7,-124,-123,-125,]),'WHILE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,328,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,283,-14,-227,283,-113,-115,-111,-112,-126,-116,283,-120,-114,-124,-123,-127,283,-144,-142,-121,283,-143,346,-141,-117,-145,-119,283,-125,283,-118,283,283,283,-131,-130,-128,-133,283,283,283,283,-134,-135,283,-137,283,283,-132,-129,-136,-138,-139,283,-140,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,312,314,348,],[10,10,10,-38,-35,-26,-25,-27,-28,-23,-24,-1,10,-22,-34,-30,-225,-37,10,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,-69,-2,-63,10,-9,-226,10,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,10,-6,-41,-61,-73,-75,10,-76,10,-8,-226,-14,-40,-62,10,10,-124,-123,-125,]),'CASE':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,284,-14,-227,284,-113,-115,-111,-112,-126,-116,284,-120,-114,-124,-123,-127,284,-144,-142,-121,284,-143,-141,-117,-145,-119,284,-125,284,-118,284,284,284,-131,-130,-128,-133,284,284,284,284,-134,-135,284,-137,284,284,-132,-129,-136,-138,-139,284,-140,]),'FLOATING_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,80,-9,-228,80,-203,80,-204,-202,80,-201,-200,80,-205,80,-10,80,-13,-227,-122,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-227,-227,80,-14,80,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,80,80,80,80,-227,80,-113,-115,-111,80,-112,80,-126,-116,80,-120,-114,80,80,80,-124,-123,-127,80,-144,80,-142,-121,80,80,80,-143,80,-141,-117,-145,80,-119,80,-125,80,80,80,-118,80,80,80,80,80,80,-131,-130,-128,-133,80,80,80,80,80,-134,-135,80,-137,80,80,-132,-129,-136,-138,-139,80,-140,]),'OPENBRACKET':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,47,49,53,54,55,66,68,70,75,77,80,83,85,92,94,98,103,107,110,111,114,118,119,132,134,135,142,154,162,166,167,183,187,188,189,191,203,208,227,230,231,240,241,242,255,259,260,276,300,301,303,304,306,308,309,332,333,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-225,-37,-21,51,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,51,-18,-63,-81,-78,-79,-52,-54,-71,-215,-221,-222,-72,-220,-216,165,-206,-224,-223,-214,-74,184,-82,-80,-41,-53,-55,-61,184,-73,-213,-212,-75,257,184,184,-76,-40,-62,-217,184,184,-210,-211,-208,-103,257,-107,-214,-207,-209,-104,-105,-109,-108,-102,-106,-110,]),'REGISTER':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,312,314,348,],[16,16,16,-38,-35,-26,-25,-27,-28,-23,-24,-1,16,-22,-34,-30,-225,-37,16,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,-69,-2,-63,16,-9,-226,16,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,16,-6,-41,-61,-73,-75,16,-76,16,-8,-226,-14,-40,-62,16,16,-124,-123,-125,]),'PIPE':([20,75,76,77,79,80,82,84,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,240,241,242,245,246,247,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-168,-222,-170,148,-220,-174,-216,-194,-182,-206,-188,-177,-172,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-171,-173,-169,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,148,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'DEC_OP':([20,23,27,51,56,62,75,77,78,80,81,85,86,88,89,92,93,94,95,97,98,103,105,106,107,108,110,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,240,241,242,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,298,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-225,-11,-12,78,-9,-228,-215,-221,78,-222,-203,-220,78,-204,-202,-216,78,166,-201,-200,-206,-224,78,-205,-223,78,-214,-10,78,-13,-227,-122,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-213,-212,78,78,78,78,78,78,78,78,78,78,78,78,78,-227,-227,78,-14,78,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,78,78,-217,78,-210,-211,-208,78,-227,78,-113,-115,-111,-214,78,-112,78,-126,-116,78,-120,-114,78,-207,-209,78,78,-124,-123,-127,78,-144,78,-142,-121,78,78,78,-143,78,-141,-117,-145,78,-119,78,-125,78,78,78,-118,78,78,78,78,78,78,-131,-130,-128,-133,78,78,78,78,78,-134,-135,78,-137,78,78,-132,-129,-136,-138,-139,78,-140,]),'SWITCH':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,285,-14,-227,285,-113,-115,-111,-112,-126,-116,285,-120,-114,-124,-123,-127,285,-144,-142,-121,285,-143,-141,-117,-145,-119,285,-125,285,-118,285,285,285,-131,-130,-128,-133,285,285,285,285,-134,-135,285,-137,285,285,-132,-129,-136,-138,-139,285,-140,]),'AND_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,219,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'ELIPSIS':([192,],[264,]),'TILDE':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,88,-9,-228,88,-203,88,-204,-202,88,-201,-200,88,-205,88,-10,88,-13,-227,-122,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-227,-227,88,-14,88,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,88,88,88,88,-227,88,-113,-115,-111,88,-112,88,-126,-116,88,-120,-114,88,88,88,-124,-123,-127,88,-144,88,-142,-121,88,88,88,-143,88,-141,-117,-145,88,-119,88,-125,88,88,88,-118,88,88,88,88,88,88,-131,-130,-128,-133,88,88,88,88,88,-134,-135,88,-137,88,88,-132,-129,-136,-138,-139,88,-140,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,47,48,49,50,51,52,53,54,55,56,61,62,66,68,69,71,78,81,86,88,89,93,95,97,105,106,108,114,118,119,120,121,122,124,125,126,127,128,130,132,134,135,138,141,142,143,145,146,147,148,150,156,157,158,159,160,161,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,184,188,189,190,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,274,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[20,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,20,20,20,-1,-17,-22,-34,-30,-44,-225,-37,20,-11,20,-21,-12,-77,20,-4,-31,-3,-43,-29,-32,-33,-36,-39,-16,-20,-42,-18,-2,-63,20,20,20,-81,-78,-79,-9,-5,-228,-52,-54,20,20,20,-203,20,-204,-202,20,-201,-200,20,-205,20,20,-82,-80,20,-10,-7,20,20,-13,-227,-122,-6,-41,-53,-55,20,20,-61,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-8,20,-227,-227,20,-14,-40,20,20,-62,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,20,20,20,20,-227,20,-113,-115,20,-111,20,-112,20,-126,-116,20,-120,-114,20,20,20,-124,-123,-127,20,-144,20,-142,-121,20,20,20,-143,20,-141,-117,-145,20,-119,20,-125,20,20,20,-118,20,20,20,20,20,20,-131,-130,-128,-133,20,20,20,20,20,-134,-135,20,-137,20,20,-132,-129,-136,-138,-139,20,-140,]),'ADD_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,218,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'PERCENT':([20,75,76,77,80,85,92,94,98,99,103,104,107,110,144,149,163,166,167,181,182,227,240,241,242,245,246,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-188,-224,178,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-210,-211,-208,178,178,-191,-189,-190,-214,-193,-199,-207,-209,]),'GE_OP':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,159,-216,-194,-182,-206,-188,-177,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,159,159,-191,-189,-190,-214,-193,-199,-207,-209,]),'STRUCT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[33,33,33,-38,-35,-26,-25,-27,-28,-23,-24,-1,33,-22,-34,-30,-225,-37,33,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,33,-69,-2,-63,33,-9,-226,33,-5,-228,-226,33,33,33,-45,33,-71,-72,33,-74,-10,-7,-226,-13,-226,-122,33,-6,33,-41,-46,-61,33,-73,33,-75,33,-76,33,-8,-226,-14,-40,-51,-62,33,33,-124,-123,-125,]),'MOD_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,215,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'QMARK':([20,75,76,77,79,80,82,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-168,-222,-170,-166,-220,-174,160,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-171,-173,-169,-217,-179,-180,-178,-181,-165,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'OR_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,217,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'BREAK':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,288,-14,-227,288,-113,-115,-111,-112,-126,-116,288,-120,-114,-124,-123,-127,288,-144,-142,-121,288,-143,-141,-117,-145,-119,288,-125,288,-118,288,288,288,-131,-130,-128,-133,288,288,288,288,-134,-135,288,-137,288,288,-132,-129,-136,-138,-139,288,-140,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,53,54,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,118,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[38,38,38,-38,-35,-26,-25,-27,-28,-23,-24,-1,38,-22,-34,-30,-225,-37,38,-11,-21,-68,-12,38,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,38,-69,-2,-63,38,-81,38,-9,-226,38,-5,-228,-226,38,38,38,-45,38,-71,-72,38,-74,-82,-10,-7,-226,-13,-226,-122,38,-6,38,-41,-46,-61,38,-73,38,-75,38,-76,38,-8,-226,-14,-40,-51,-62,38,38,-124,-123,-125,]),'DO':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,289,-14,-227,289,-113,-115,-111,-112,-126,-116,289,-120,-114,-124,-123,-127,289,-144,-142,-121,289,-143,-141,-117,-145,-119,289,-125,289,-118,289,289,289,-131,-130,-128,-133,289,289,289,289,-134,-135,289,-137,289,289,-132,-129,-136,-138,-139,289,-140,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,28,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,53,54,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,118,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[3,3,3,-38,-35,-26,-25,-27,-28,-23,-24,-1,3,-22,-34,-30,-225,-37,3,-11,-21,-68,-12,3,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,3,-69,-2,-63,3,-81,3,-9,-226,3,-5,-228,-226,3,3,3,-45,3,-71,-72,3,-74,-82,-10,-7,-226,-13,-226,-122,3,-6,3,-41,-46,-61,3,-73,3,-75,3,-76,3,-8,-226,-14,-40,-51,-62,3,3,-124,-123,-125,]),'CARAT':([20,75,76,77,79,80,82,85,87,92,94,96,98,99,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,146,-222,-170,-220,-174,-216,-194,-182,-206,-188,-177,-172,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-171,-173,146,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'DIV':([20,75,76,77,80,85,92,94,98,99,103,104,107,110,144,149,163,166,167,181,182,227,240,241,242,245,246,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-188,-224,180,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-210,-211,-208,180,180,-191,-189,-190,-214,-193,-199,-207,-209,]),'LE':([20,75,76,77,80,85,87,92,94,96,98,99,101,103,104,107,110,144,149,163,166,167,181,182,227,232,233,234,235,240,241,242,245,246,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,158,-216,-194,-182,-206,-188,-177,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-217,-179,-180,-178,-181,-210,-211,-208,-186,-187,-183,-184,158,158,-191,-189,-190,-214,-193,-199,-207,-209,]),'SEMI':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,23,25,26,27,29,31,34,35,36,37,38,40,41,42,43,45,47,49,56,57,58,59,62,70,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,121,125,126,127,128,132,136,137,139,142,144,149,153,155,162,163,166,167,181,182,183,191,193,194,197,198,199,200,201,202,203,205,208,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,269,271,272,273,275,276,277,278,280,281,286,287,288,289,290,291,293,294,295,296,297,299,300,301,310,312,314,315,316,317,318,319,320,321,322,323,327,330,335,337,338,339,340,341,342,344,348,350,351,352,353,354,356,357,361,362,363,365,366,367,368,370,373,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-225,-37,-11,-21,-68,-12,56,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,-18,-63,-9,-47,121,-49,-228,-71,-215,-192,-221,-168,-222,-170,-72,-166,-220,-174,-161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-163,-214,-74,-10,56,-13,-227,-122,-41,-56,-58,207,-61,-196,-192,-146,-148,-73,-198,-213,-212,-195,-197,-75,-76,-48,-49,-50,-92,-227,-227,290,-14,-40,-59,-62,-171,-173,-169,-217,-179,-180,-178,-181,-165,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-227,290,-113,-115,-111,-214,318,-112,321,322,-126,-116,327,290,-120,-114,-60,-57,-149,-147,-193,-199,-207,-209,-93,-124,-123,-127,337,290,-144,339,340,-142,-121,290,-143,-162,-94,-141,-117,-145,349,351,-119,290,-125,359,360,290,-118,290,290,290,372,-131,-130,-128,-133,290,290,290,382,290,-134,-135,290,-137,290,290,-132,-129,-136,-138,-139,290,-140,]),'CHARACTER_CONSTANT':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,77,-9,-228,77,-203,77,-204,-202,77,-201,-200,77,-205,77,-10,77,-13,-227,-122,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-227,-227,77,-14,77,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,77,77,77,77,-227,77,-113,-115,-111,77,-112,77,-126,-116,77,-120,-114,77,77,77,-124,-123,-127,77,-144,77,-142,-121,77,77,77,-143,77,-141,-117,-145,77,-119,77,-125,77,77,77,-118,77,77,77,77,77,77,-131,-130,-128,-133,77,77,77,77,77,-134,-135,77,-137,77,77,-132,-129,-136,-138,-139,77,-140,]),'COMMA':([1,2,3,4,5,6,7,8,9,10,15,16,17,18,20,21,25,26,28,31,34,35,36,37,38,40,41,42,43,45,47,49,53,54,55,57,58,59,70,72,73,74,75,76,77,79,80,82,83,84,85,87,90,92,94,96,98,99,100,101,102,103,104,107,109,110,111,112,114,115,116,117,118,119,132,136,137,139,140,142,144,149,151,153,155,162,163,166,167,181,182,183,185,186,187,188,191,193,194,197,198,203,205,208,209,210,211,212,213,227,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,259,260,263,265,266,267,276,281,293,294,295,296,297,299,300,301,303,304,306,308,309,310,319,330,331,332,333,334,335,341,343,345,347,350,358,361,364,369,371,381,],[-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,-17,-22,-34,-30,-225,-37,-21,-68,-77,-31,-29,-32,-33,-36,-39,-70,-16,-20,-42,-69,-18,-63,-81,-78,-79,-47,120,-49,-71,-64,141,-66,-215,-192,-221,-168,-222,-170,-72,-166,-220,-174,-161,-216,-194,-182,-206,-188,-164,-177,-172,-224,-185,-223,-163,-214,-74,-85,-88,190,192,-90,-82,-80,-41,-56,-58,206,141,-61,-196,-192,226,-146,-148,-73,-198,-213,-212,-195,-197,-75,-89,-87,-100,-99,-76,-48,-49,-50,-92,-40,-59,-62,-65,-67,-171,-173,-169,-217,-179,-180,-178,-181,226,-165,226,-210,-211,-208,-218,302,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-103,-101,-107,-91,-86,-95,311,-214,226,-60,-57,-149,-147,-193,-199,-207,-209,-104,-105,-109,-108,-102,-93,226,-162,-219,-106,-110,-96,-94,226,226,226,226,226,226,226,226,226,226,226,]),'PTR_OP':([20,75,77,80,85,92,94,98,103,107,110,166,167,227,240,241,242,276,300,301,],[-225,-215,-221,-222,-220,-216,169,-206,-224,-223,-214,-213,-212,-217,-210,-211,-208,-214,-207,-209,]),'ASSIGN':([20,26,40,45,59,70,74,75,76,77,80,83,85,92,94,98,103,107,110,111,144,149,162,163,166,167,181,182,183,191,194,227,240,241,242,276,297,299,300,301,],[-225,-68,-70,-69,124,-71,143,-215,-192,-221,-222,-72,-220,-216,-194,-206,-224,-223,-214,-74,-196,223,-73,-198,-213,-212,-195,-197,-75,-76,124,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),'TYPEDEF':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,312,314,348,],[6,6,6,-38,-35,-26,-25,-27,-28,-23,-24,-1,6,-22,-34,-30,-225,-37,6,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,-69,-2,-63,6,-9,-226,6,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,6,-6,-41,-61,-73,-75,6,-76,6,-8,-226,-14,-40,-62,6,6,-124,-123,-125,]),'AUTO':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,45,48,49,52,56,59,60,61,62,63,70,83,111,121,122,123,126,127,128,129,130,132,142,162,183,189,191,192,195,199,202,203,208,231,258,312,314,348,],[25,25,25,-38,-35,-26,-25,-27,-28,-23,-24,-1,25,-22,-34,-30,-225,-37,25,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,-69,-2,-63,25,-9,-226,25,-5,-228,-226,-71,-72,-74,-10,-7,-226,-13,-226,-122,25,-6,-41,-61,-73,-75,25,-76,25,-8,-226,-14,-40,-62,25,25,-124,-123,-125,]),'ASTERISK':([0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,20,21,22,23,25,27,28,29,30,31,32,34,35,36,37,38,41,42,43,47,48,49,51,53,54,56,61,62,66,68,69,75,76,77,78,80,81,85,86,88,89,92,93,94,95,97,98,99,103,104,105,106,107,108,110,114,118,120,121,122,124,125,126,127,128,130,132,134,135,138,142,143,144,145,146,147,148,149,150,154,156,157,158,159,160,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,184,189,195,196,199,200,201,202,203,204,206,208,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,240,241,242,245,246,252,253,254,257,269,271,272,273,275,276,277,278,284,286,287,289,290,291,297,298,299,300,301,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[28,-15,-19,-38,-35,-26,-25,-27,-28,-23,-24,28,-1,-17,-22,-34,-30,-225,-37,28,-11,-21,-12,28,28,-4,-31,-3,-29,-32,-33,-36,-39,-16,-20,-42,-18,-2,-63,95,-81,28,-9,-5,-228,-52,-54,28,-215,-192,-221,95,-222,-203,-220,95,-204,-202,-216,95,-194,-201,-200,-206,-188,-224,179,95,-205,-223,95,-214,28,-82,28,-10,-7,95,28,-13,-227,-122,-6,-41,-53,-55,95,-61,95,-196,95,95,95,95,-192,95,28,95,95,95,95,95,95,-198,95,95,-213,-212,95,95,95,95,95,95,95,95,95,95,95,-195,-197,95,28,-8,95,-227,-227,95,-14,-40,95,28,-62,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,95,95,-217,95,28,-210,-211,-208,179,179,-191,-189,-190,95,-227,95,-113,-115,-111,-214,95,-112,95,-126,-116,95,-120,-114,-193,95,-199,-207,-209,95,95,-124,-123,-127,95,-144,95,-142,-121,95,95,95,-143,95,-141,-117,-145,95,-119,95,-125,95,95,95,-118,95,95,95,95,95,95,-131,-130,-128,-133,95,95,95,95,95,-134,-135,95,-137,95,95,-132,-129,-136,-138,-139,95,-140,]),'AND_OP':([20,75,76,77,79,80,82,84,85,87,92,94,96,98,99,100,101,102,103,104,107,110,144,149,163,166,167,181,182,211,212,213,227,232,233,234,235,237,240,241,242,245,246,247,248,249,250,251,252,253,254,276,297,299,300,301,],[-225,-215,-192,-221,-168,-222,-170,-166,-220,-174,-216,-194,-182,-206,-188,173,-177,-172,-224,-185,-223,-214,-196,-192,-198,-213,-212,-195,-197,-171,-173,-169,-217,-179,-180,-178,-181,173,-210,-211,-208,-186,-187,-167,-183,-184,-176,-175,-191,-189,-190,-214,-193,-199,-207,-209,]),'BANG':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,106,-9,-228,106,-203,106,-204,-202,106,-201,-200,106,-205,106,-10,106,-13,-227,-122,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-227,-227,106,-14,106,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,106,106,106,106,-227,106,-113,-115,-111,106,-112,106,-126,-116,106,-120,-114,106,106,106,-124,-123,-127,106,-144,106,-142,-121,106,106,106,-143,106,-141,-117,-145,106,-119,106,-125,106,106,106,-118,106,106,106,106,106,106,-131,-130,-128,-133,106,106,106,106,106,-134,-135,106,-137,106,106,-132,-129,-136,-138,-139,106,-140,]),'IF':([23,27,56,62,121,126,127,128,199,200,201,202,269,271,272,273,275,278,286,287,289,290,291,312,314,315,317,318,321,322,323,327,337,338,339,342,344,348,352,353,354,356,357,362,363,365,366,367,368,370,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,-9,-228,-10,-13,-227,-122,-227,-227,292,-14,-227,292,-113,-115,-111,-112,-126,-116,292,-120,-114,-124,-123,-127,292,-144,-142,-121,292,-143,-141,-117,-145,-119,292,-125,292,-118,292,292,292,-131,-130,-128,-133,292,292,292,292,-134,-135,292,-137,292,292,-132,-129,-136,-138,-139,292,-140,]),'STRING_LITERAL':([23,27,51,56,62,78,81,86,88,89,93,95,97,105,106,108,121,124,126,127,128,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,199,200,201,202,204,214,215,216,217,218,219,220,221,222,223,224,225,226,228,257,269,271,272,273,275,277,278,284,286,287,289,290,291,298,302,311,312,314,315,317,318,320,321,322,323,324,326,327,329,337,338,339,340,342,344,348,349,351,352,353,354,355,356,357,359,360,362,363,365,366,367,368,370,372,374,375,376,377,378,379,380,382,383,384,385,386,387,388,],[-11,-12,103,-9,-228,103,-203,103,-204,-202,103,-201,-200,103,-205,103,-10,103,-13,-227,-122,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-227,-227,103,-14,103,-155,-153,-159,-160,-154,-158,-151,-152,-156,-150,-157,103,103,103,103,-227,103,-113,-115,-111,103,-112,103,-126,-116,103,-120,-114,103,103,103,-124,-123,-127,103,-144,103,-142,-121,103,103,103,-143,103,-141,-117,-145,103,-119,103,-125,103,103,103,-118,103,103,103,103,103,103,-131,-130,-128,-133,103,103,103,103,103,-134,-135,103,-137,103,103,-132,-129,-136,-138,-139,103,-140,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,20,21,22,23,25,26,27,30,31,32,34,35,36,37,38,39,40,43,44,45,48,49,52,56,59,60,61,62,63,64,65,66,67,68,70,83,86,111,121,122,123,126,127,128,129,130,131,132,133,142,150,162,164,183,189,191,192,195,199,202,203,207,208,231,258,312,314,348,],[31,31,31,-38,-35,-26,-25,-27,-28,-23,-24,-1,31,-22,-34,-30,-225,-37,31,-11,-21,-68,-12,-4,-31,-3,-29,-32,-33,-36,-39,-226,-70,-42,31,-69,-2,-63,31,-9,-226,31,-5,-228,-226,31,31,31,-45,31,-71,-72,31,-74,-10,-7,-226,-13,-226,-122,31,-6,31,-41,-46,-61,31,-73,31,-75,31,-76,31,-8,-226,-14,-40,-51,-62,31,31,-124,-123,-125,]),'LEFT_ASSIGN':([20,75,76,77,80,85,92,94,98,103,107,110,144,149,163,166,167,181,182,227,240,241,242,276,297,299,300,301,],[-225,-215,-192,-221,-222,-220,-216,-194,-206,-224,-223,-214,-196,222,-198,-213,-212,-195,-197,-217,-210,-211,-208,-214,-193,-199,-207,-209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,2,15,22,52,60,129,189,192,231,258,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,245,246,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'selection_statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,]),'constant':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'unary_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[76,144,149,163,181,76,149,76,76,149,76,76,76,149,76,76,76,76,149,76,149,149,149,76,76,76,76,76,76,76,76,76,76,76,149,149,76,149,149,76,76,149,149,76,149,76,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'conditional_expression':([51,86,124,138,143,145,150,160,164,165,170,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[109,155,155,109,109,155,155,155,155,155,155,109,155,155,109,155,155,109,155,155,109,155,330,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'struct_or_union_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([51,86,124,138,143,145,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[79,79,79,79,79,79,213,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'identifier_list':([52,],[115,]),'init_declarator_list':([29,125,],[58,58,]),'struct_declaration_list':([44,64,],[65,131,]),'assignment_operator':([149,],[225,]),'enumerator':([50,71,141,],[72,72,209,]),'abstract_declarator':([114,154,189,231,],[185,229,262,262,]),'pointer':([0,13,22,28,29,54,69,114,120,125,154,189,206,231,],[12,12,12,55,12,119,12,188,12,12,230,188,12,230,]),'read_mode_e':([127,199,200,269,],[201,201,271,271,]),'and_expression':([51,86,124,138,143,145,146,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[82,82,82,82,82,82,211,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'assignment_expression':([86,124,145,150,160,164,165,170,196,201,225,226,271,277,289,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[153,198,153,153,153,153,153,243,198,153,295,296,153,153,153,331,198,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'external_declaration':([0,22,],[14,48,]),'type_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[15,15,15,15,15,66,15,15,66,66,66,66,66,15,66,66,66,15,15,15,15,]),'compound_statement':([39,59,63,123,201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[61,122,130,195,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,]),'inclusive_or_expression':([51,86,124,138,143,145,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[84,84,84,84,84,84,84,84,84,84,84,84,247,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'iteration_statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,]),'type_name':([86,150,164,],[152,152,238,]),'postfix_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'additive_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,173,174,175,176,177,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,248,249,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'expression_statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,]),'unary_operator':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'cast_expression':([51,86,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[99,99,182,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,252,253,254,99,99,99,99,99,99,297,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'initializer_list':([196,],[267,]),'struct_declarator_list':([69,],[139,]),'logical_or_expression':([51,86,124,138,143,145,150,160,164,165,170,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'translation_unit':([0,],[22,]),'relational_expression':([51,86,124,138,143,145,146,147,148,150,160,161,164,165,170,173,176,177,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,250,251,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'struct_or_union':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'struct_declaration':([44,64,65,131,],[67,67,133,133,]),'string':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'parameter_type_list':([52,189,231,258,],[113,261,261,307,]),'parameter_declaration':([52,189,192,231,258,],[112,112,265,112,112,]),'direct_declarator':([0,12,13,22,29,69,114,120,125,188,189,206,],[26,45,26,26,26,26,26,26,26,45,26,26,]),'type_qualifier_list':([28,],[54,]),'argument_expression_list':([170,],[244,]),'initializer':([124,196,311,],[197,266,334,]),'statement_list':([127,199,],[200,269,]),'primary_expression':([51,78,86,93,105,108,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,171,172,173,174,175,176,177,178,179,180,184,196,201,204,225,226,228,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'declaration_specifiers':([0,1,2,15,22,52,60,129,189,192,231,258,],[29,41,42,47,29,114,125,125,114,114,114,114,]),'declaration':([0,22,60,129,],[30,30,126,202,]),'push_scope_e':([62,],[127,]),'logical_and_expression':([51,86,124,138,143,145,150,160,161,164,165,170,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[100,100,100,100,100,100,100,100,237,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'declarator':([0,13,22,29,69,114,120,125,189,206,],[39,46,39,59,137,186,194,194,46,137,]),'shift_expression':([51,86,124,138,143,145,146,147,148,150,156,157,158,159,160,161,164,165,170,173,176,177,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[101,101,101,101,101,101,101,101,101,101,232,233,234,235,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'equality_expression':([51,86,124,138,143,145,146,147,148,150,160,161,164,165,170,173,184,196,201,204,225,226,257,271,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[102,102,102,102,102,102,102,212,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'jump_statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,]),'struct_declarator':([69,206,],[136,294,]),'function_definition':([0,22,],[32,32,]),'parameter_list':([52,189,231,258,],[116,116,116,116,]),'insert_mode_e':([39,59,63,123,127,199,269,],[60,60,129,129,60,129,313,]),'pop_scope_e':([199,200,313,],[268,270,336,]),'enum_specifier':([0,1,2,15,22,44,52,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'type_qualifier':([0,1,2,15,22,28,44,52,54,60,64,65,66,68,86,129,131,150,164,189,192,231,258,],[2,2,2,2,2,53,68,2,118,2,68,68,68,68,68,2,68,68,68,2,2,2,2,]),'enumerator_list':([50,71,],[73,140,]),'labeled_statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,]),'declaration_list':([39,59,127,],[63,123,199,]),'specifier_qualifier_list':([44,64,65,66,68,86,131,150,164,],[69,69,69,134,135,154,69,154,154,]),'statement':([201,271,289,317,323,344,352,354,356,357,367,368,370,374,377,379,380,387,],[286,315,328,338,342,353,362,363,365,366,375,376,378,383,384,385,386,388,]),'constant_expression':([51,138,143,184,204,257,284,],[91,205,210,256,293,305,325,]),'init_declarator':([29,120,125,],[57,193,57,]),'direct_abstract_declarator':([114,154,188,189,230,231,],[187,187,259,187,259,187,]),'identifier':([0,11,12,13,22,24,29,50,51,52,69,71,78,86,93,105,108,114,120,124,125,138,141,143,145,146,147,148,150,156,157,158,159,160,161,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,184,188,189,190,196,201,204,206,225,226,228,257,271,274,277,284,289,298,302,311,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[40,43,40,40,40,49,40,74,110,117,40,74,110,110,110,110,110,40,40,110,40,110,74,110,110,110,110,110,110,110,110,110,110,110,110,110,110,240,241,110,110,110,110,110,110,110,110,110,110,110,110,40,40,263,110,276,110,40,110,110,110,110,276,316,110,110,276,110,110,110,276,110,276,110,110,110,110,276,110,110,276,276,110,276,276,110,110,276,276,276,110,276,276,276,276,276,]),'expression':([86,145,150,160,164,165,201,271,277,289,317,320,323,324,326,329,340,344,349,351,352,354,355,356,357,359,360,367,368,370,372,374,377,379,380,387,],[151,151,151,236,151,239,281,281,319,281,281,341,281,343,345,347,350,281,358,361,281,281,364,281,281,369,371,281,281,281,381,281,281,281,281,281,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','Parser_M.py',33),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','Parser_M.py',39),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','Parser_M.py',45),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','Parser_M.py',51),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','Parser_M.py',57),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','Parser_M.py',63),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','Parser_M.py',69),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','Parser_M.py',75),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','Parser_M.py',81),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','Parser_M.py',87),
  ('declaration -> PD_O','declaration',1,'p_declaration_3','Parser_M.py',93),
  ('declaration -> PD_F','declaration',1,'p_declaration_4','Parser_M.py',102),
  ('declaration_list -> insert_mode_e declaration','declaration_list',2,'p_declaration_list_1','Parser_M.py',111),
  ('declaration_list -> declaration_list insert_mode_e declaration','declaration_list',3,'p_declaration_list_2','Parser_M.py',117),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','Parser_M.py',123),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','Parser_M.py',129),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','Parser_M.py',135),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','Parser_M.py',141),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','Parser_M.py',147),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','Parser_M.py',153),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','Parser_M.py',159),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','Parser_M.py',165),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','Parser_M.py',171),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','Parser_M.py',177),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','Parser_M.py',183),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','Parser_M.py',189),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','Parser_M.py',195),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','Parser_M.py',201),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','Parser_M.py',207),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','Parser_M.py',213),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','Parser_M.py',219),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','Parser_M.py',225),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','Parser_M.py',231),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','Parser_M.py',237),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','Parser_M.py',243),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','Parser_M.py',249),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','Parser_M.py',255),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','Parser_M.py',261),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','Parser_M.py',267),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','Parser_M.py',273),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','Parser_M.py',279),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','Parser_M.py',285),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','Parser_M.py',291),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','Parser_M.py',297),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','Parser_M.py',303),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','Parser_M.py',309),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','Parser_M.py',315),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','Parser_M.py',321),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','Parser_M.py',327),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','Parser_M.py',333),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','Parser_M.py',339),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','Parser_M.py',345),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','Parser_M.py',351),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','Parser_M.py',357),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','Parser_M.py',363),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','Parser_M.py',369),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','Parser_M.py',375),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','Parser_M.py',381),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','Parser_M.py',387),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','Parser_M.py',393),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','Parser_M.py',399),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','Parser_M.py',405),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','Parser_M.py',411),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','Parser_M.py',417),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','Parser_M.py',423),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','Parser_M.py',429),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','Parser_M.py',435),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','Parser_M.py',441),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','Parser_M.py',447),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','Parser_M.py',453),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','Parser_M.py',459),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','Parser_M.py',465),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','Parser_M.py',471),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','Parser_M.py',477),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','Parser_M.py',483),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','Parser_M.py',489),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','Parser_M.py',495),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','Parser_M.py',501),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','Parser_M.py',507),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','Parser_M.py',513),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','Parser_M.py',519),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','Parser_M.py',525),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','Parser_M.py',531),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','Parser_M.py',537),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','Parser_M.py',543),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','Parser_M.py',549),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','Parser_M.py',555),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','Parser_M.py',561),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','Parser_M.py',567),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','Parser_M.py',573),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','Parser_M.py',579),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','Parser_M.py',585),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','Parser_M.py',591),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','Parser_M.py',597),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','Parser_M.py',603),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','Parser_M.py',609),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','Parser_M.py',615),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','Parser_M.py',621),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','Parser_M.py',627),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','Parser_M.py',633),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','Parser_M.py',639),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','Parser_M.py',645),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','Parser_M.py',651),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','Parser_M.py',657),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','Parser_M.py',663),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','Parser_M.py',669),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','Parser_M.py',675),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','Parser_M.py',681),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','Parser_M.py',687),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','Parser_M.py',693),
  ('statement -> labeled_statement','statement',1,'p_statement_1','Parser_M.py',699),
  ('statement -> compound_statement','statement',1,'p_statement_2','Parser_M.py',705),
  ('statement -> expression_statement','statement',1,'p_statement_3','Parser_M.py',711),
  ('statement -> selection_statement','statement',1,'p_statement_4','Parser_M.py',717),
  ('statement -> iteration_statement','statement',1,'p_statement_5','Parser_M.py',723),
  ('statement -> jump_statement','statement',1,'p_statement_6','Parser_M.py',729),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','Parser_M.py',735),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','Parser_M.py',741),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','Parser_M.py',747),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','Parser_M.py',753),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','Parser_M.py',759),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','Parser_M.py',765),
  ('compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_2','Parser_M.py',771),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_3','Parser_M.py',777),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE','compound_statement',7,'p_compound_statement_4','Parser_M.py',783),
  ('statement_list -> read_mode_e statement','statement_list',2,'p_statement_list_1','Parser_M.py',790),
  ('statement_list -> statement_list read_mode_e statement','statement_list',3,'p_statement_list_2','Parser_M.py',796),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','Parser_M.py',802),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','Parser_M.py',808),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','Parser_M.py',814),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','Parser_M.py',820),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','Parser_M.py',826),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','Parser_M.py',832),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','Parser_M.py',838),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','Parser_M.py',844),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','Parser_M.py',850),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','Parser_M.py',856),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','Parser_M.py',862),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','Parser_M.py',868),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','Parser_M.py',874),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','Parser_M.py',880),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','Parser_M.py',886),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','Parser_M.py',892),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','Parser_M.py',898),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','Parser_M.py',904),
  ('expression -> assignment_expression','expression',1,'p_expression_1','Parser_M.py',910),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','Parser_M.py',916),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','Parser_M.py',922),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','Parser_M.py',928),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','Parser_M.py',934),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','Parser_M.py',940),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','Parser_M.py',946),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','Parser_M.py',952),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','Parser_M.py',958),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','Parser_M.py',964),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','Parser_M.py',970),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','Parser_M.py',976),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','Parser_M.py',982),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','Parser_M.py',988),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','Parser_M.py',994),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','Parser_M.py',1000),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','Parser_M.py',1006),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','Parser_M.py',1012),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','Parser_M.py',1018),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','Parser_M.py',1024),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','Parser_M.py',1030),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','Parser_M.py',1036),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','Parser_M.py',1042),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','Parser_M.py',1048),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','Parser_M.py',1054),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','Parser_M.py',1060),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','Parser_M.py',1066),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','Parser_M.py',1072),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','Parser_M.py',1078),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','Parser_M.py',1084),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','Parser_M.py',1090),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','Parser_M.py',1096),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','Parser_M.py',1102),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','Parser_M.py',1108),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','Parser_M.py',1114),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','Parser_M.py',1120),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','Parser_M.py',1126),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','Parser_M.py',1132),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','Parser_M.py',1138),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','Parser_M.py',1144),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','Parser_M.py',1150),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','Parser_M.py',1156),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','Parser_M.py',1162),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','Parser_M.py',1168),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','Parser_M.py',1174),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','Parser_M.py',1180),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','Parser_M.py',1186),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','Parser_M.py',1192),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','Parser_M.py',1198),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','Parser_M.py',1204),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','Parser_M.py',1210),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','Parser_M.py',1216),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','Parser_M.py',1222),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','Parser_M.py',1228),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','Parser_M.py',1234),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','Parser_M.py',1240),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','Parser_M.py',1246),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','Parser_M.py',1252),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','Parser_M.py',1258),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','Parser_M.py',1264),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','Parser_M.py',1270),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','Parser_M.py',1276),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','Parser_M.py',1282),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','Parser_M.py',1288),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','Parser_M.py',1294),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','Parser_M.py',1300),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','Parser_M.py',1306),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','Parser_M.py',1312),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','Parser_M.py',1318),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','Parser_M.py',1324),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','Parser_M.py',1330),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','Parser_M.py',1336),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','Parser_M.py',1342),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','Parser_M.py',1348),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','Parser_M.py',1354),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','Parser_M.py',1360),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','Parser_M.py',1366),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','Parser_M.py',1372),
  ('string -> STRING_LITERAL','string',1,'p_string_1','Parser_M.py',1378),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','Parser_M.py',1384),
  ('insert_mode_e -> <empty>','insert_mode_e',0,'p_empty_insertmode','Parser_M.py',1393),
  ('read_mode_e -> <empty>','read_mode_e',0,'p_empty_readmode','Parser_M.py',1403),
  ('push_scope_e -> <empty>','push_scope_e',0,'p_empty_push_scope','Parser_M.py',1413),
  ('pop_scope_e -> <empty>','pop_scope_e',0,'p_empty_pop_scope','Parser_M.py',1419),
]
