
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SINGLE_LINE_COMMENT SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VARYING_COMMENT VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration_list :  insert_mode_e declarationdeclaration_list :  declaration_list insert_mode_e declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator : direct_declaratordeclarator : pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementlabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACEstatement_list : read_mode_e statementstatement_list :  statement_list read_mode_e statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIERinsert_mode_e :read_mode_e :push_scope_e :pop_scope_e :'
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[5,5,-26,-36,-33,-24,-25,-21,-22,-1,5,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,5,-31,-34,-37,5,-224,-68,-40,5,-67,-61,5,-9,-224,-2,5,-5,-226,-224,5,5,5,-43,5,-69,-70,5,-72,-10,-7,-224,-11,-224,-120,5,-6,5,-39,-44,-59,5,-71,5,-73,5,-74,5,-8,-224,-12,-38,-49,-60,5,5,-122,-121,-123,]),'DIV_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,219,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'MINUS':([17,47,52,60,73,74,75,76,78,79,83,84,86,87,90,91,92,93,94,95,96,97,101,102,103,104,105,106,108,119,122,124,125,126,136,141,142,143,144,145,146,147,148,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,238,239,240,243,244,246,247,250,251,252,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,295,296,297,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-223,79,-9,-226,-213,-190,-219,79,-220,-201,-218,79,-202,-200,-214,79,-192,-199,170,-198,-204,-186,-222,-183,79,-203,-221,79,-212,-10,79,-11,-225,-120,79,79,-194,79,79,79,79,-190,79,79,79,79,79,79,79,-196,79,79,-211,-210,79,79,79,79,79,79,79,79,79,79,79,-193,-195,79,79,-225,-225,79,-12,79,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,79,79,-215,79,-208,-209,-206,-184,-185,170,170,-189,-187,-188,79,-225,79,-111,-113,-109,-212,79,-110,79,-124,-114,79,-118,-112,-191,79,-197,-205,-207,79,79,-122,-121,-125,79,-142,79,-140,-119,79,79,79,-141,79,-139,-115,-143,79,-117,79,-123,79,79,79,-116,79,79,79,79,79,79,-129,-128,-126,-131,79,79,79,79,79,-132,-133,79,-135,79,79,-130,-127,-134,-136,-137,79,-138,]),'LE_OP':([17,73,74,75,78,83,85,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,155,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,155,155,-189,-187,-188,-212,-191,-197,-205,-207,]),'ENUMERATION_CONSTANT':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[105,-9,-226,105,-201,105,-202,-200,105,-199,-198,105,-203,105,-10,105,-11,-225,-120,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-225,-225,105,-12,105,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,105,105,105,105,-225,105,-111,-113,-109,105,-110,105,-124,-114,105,-118,-112,105,105,105,-122,-121,-125,105,-142,105,-140,-119,105,105,105,-141,105,-139,-115,-143,105,-117,105,-123,105,105,105,-116,105,105,105,105,105,105,-129,-128,-126,-131,105,105,105,105,105,-132,-133,105,-135,105,105,-130,-127,-134,-136,-137,105,-138,]),'LONG':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[16,16,-26,-36,-33,-24,-25,-21,-22,-1,16,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,16,-31,-34,-37,16,-224,-68,-40,16,-67,-61,16,-9,-224,-2,16,-5,-226,-224,16,16,16,-43,16,-69,-70,16,-72,-10,-7,-224,-11,-224,-120,16,-6,16,-39,-44,-59,16,-71,16,-73,16,-74,16,-8,-224,-12,-38,-49,-60,16,16,-122,-121,-123,]),'PLUS':([17,47,52,60,73,74,75,76,78,79,83,84,86,87,90,91,92,93,94,95,96,97,101,102,103,104,105,106,108,119,122,124,125,126,136,141,142,143,144,145,146,147,148,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,238,239,240,243,244,246,247,250,251,252,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,295,296,297,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-223,87,-9,-226,-213,-190,-219,87,-220,-201,-218,87,-202,-200,-214,87,-192,-199,169,-198,-204,-186,-222,-183,87,-203,-221,87,-212,-10,87,-11,-225,-120,87,87,-194,87,87,87,87,-190,87,87,87,87,87,87,87,-196,87,87,-211,-210,87,87,87,87,87,87,87,87,87,87,87,-193,-195,87,87,-225,-225,87,-12,87,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,87,87,-215,87,-208,-209,-206,-184,-185,169,169,-189,-187,-188,87,-225,87,-111,-113,-109,-212,87,-110,87,-124,-114,87,-118,-112,-191,87,-197,-205,-207,87,87,-122,-121,-125,87,-142,87,-140,-119,87,87,87,-141,87,-139,-115,-143,87,-117,87,-123,87,87,87,-116,87,87,87,87,87,87,-129,-128,-126,-131,87,87,87,87,87,-132,-133,87,-135,87,87,-130,-127,-134,-136,-137,87,-138,]),'TYPEDEF_NAME':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[19,19,-26,-36,-33,-24,-25,-21,-22,-1,19,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,19,-31,-34,-37,19,-224,-68,-40,19,-67,-61,19,-9,-224,-2,19,-5,-226,-224,19,19,19,-43,19,-69,-70,19,-72,-10,-7,-224,-11,-224,-120,19,-6,19,-39,-44,-59,19,-71,19,-73,19,-74,19,-8,-224,-12,-38,-49,-60,19,19,-122,-121,-123,]),'GT':([17,73,74,75,78,83,85,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,154,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,154,154,-189,-187,-188,-212,-191,-197,-205,-207,]),'GOTO':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,272,-12,-225,272,-111,-113,-109,-110,-124,-114,272,-118,-112,-122,-121,-125,272,-142,-140,-119,272,-141,-139,-115,-143,-117,272,-123,272,-116,272,272,272,-129,-128,-126,-131,272,272,272,272,-132,-133,272,-135,272,272,-130,-127,-134,-136,-137,272,-138,]),'ENUM':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[21,21,-26,-36,-33,-24,-25,-21,-22,-1,21,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,21,-31,-34,-37,21,-224,-68,-40,21,-67,-61,21,-9,-224,-2,21,-5,-226,-224,21,21,21,-43,21,-69,-70,21,-72,-10,-7,-224,-11,-224,-120,21,-6,21,-39,-44,-59,21,-71,21,-73,21,-74,21,-8,-224,-12,-38,-49,-60,21,21,-122,-121,-123,]),'PERIOD':([17,73,75,78,83,90,92,96,101,105,108,164,165,225,238,239,240,274,298,299,],[-223,-213,-219,-220,-218,-214,166,-204,-222,-221,-212,-211,-210,-215,-208,-209,-206,-212,-205,-207,]),'LEFT_OP':([17,73,74,75,78,83,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,172,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,172,172,172,172,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-212,-191,-197,-205,-207,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[31,31,-26,-36,-33,-24,-25,-21,-22,-1,31,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,31,-31,-34,-37,31,-224,-68,-40,31,-67,-61,31,-9,-224,-2,31,-5,-226,-224,31,31,31,-43,31,-69,-70,31,-72,-10,-7,-224,-11,-224,-120,31,-6,31,-39,-44,-59,31,-71,31,-73,31,-74,31,-8,-224,-12,-38,-49,-60,31,31,-122,-121,-123,]),'INC_OP':([17,47,52,60,73,75,76,78,79,83,84,86,87,90,91,92,93,95,96,101,103,104,105,106,108,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,238,239,240,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,296,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-223,103,-9,-226,-213,-219,103,-220,-201,-218,103,-202,-200,-214,103,165,-199,-198,-204,-222,103,-203,-221,103,-212,-10,103,-11,-225,-120,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-211,-210,103,103,103,103,103,103,103,103,103,103,103,103,103,-225,-225,103,-12,103,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,103,103,-215,103,-208,-209,-206,103,-225,103,-111,-113,-109,-212,103,-110,103,-124,-114,103,-118,-112,103,-205,-207,103,103,-122,-121,-125,103,-142,103,-140,-119,103,103,103,-141,103,-139,-115,-143,103,-117,103,-123,103,103,103,-116,103,103,103,103,103,103,-129,-128,-126,-131,103,103,103,103,103,-132,-133,103,-135,103,103,-130,-127,-134,-136,-137,103,-138,]),'NE_OP':([17,73,74,75,78,83,85,90,92,94,96,97,99,100,101,102,105,108,142,147,161,164,165,179,180,210,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,174,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,174,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'SHORT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[2,2,-26,-36,-33,-24,-25,-21,-22,-1,2,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,2,-31,-34,-37,2,-224,-68,-40,2,-67,-61,2,-9,-224,-2,2,-5,-226,-224,2,2,2,-43,2,-69,-70,2,-72,-10,-7,-224,-11,-224,-120,2,-6,2,-39,-44,-59,2,-71,2,-73,2,-74,2,-8,-224,-12,-38,-49,-60,2,2,-122,-121,-123,]),'RETURN':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,275,-12,-225,275,-111,-113,-109,-110,-124,-114,275,-118,-112,-122,-121,-125,275,-142,-140,-119,275,-141,-139,-115,-143,-117,275,-123,275,-116,275,275,275,-129,-128,-126,-131,275,275,275,275,-132,-133,275,-135,275,275,-130,-127,-134,-136,-137,275,-138,]),'OPENBRACE':([6,17,18,21,23,29,37,38,40,42,45,52,55,60,61,68,81,109,119,121,122,124,125,126,160,181,189,194,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,309,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[41,-223,-42,46,-66,-41,60,-68,62,-67,69,-9,60,-226,60,-69,-70,-72,-10,60,194,-11,-225,-120,-71,-73,-74,194,-225,-225,60,-12,-225,60,-111,-113,-109,-110,-124,-114,60,-118,-112,194,-122,-121,-125,60,-142,-140,-119,60,-141,-139,-115,-143,-117,60,-123,60,-116,60,60,60,-129,-128,-126,-131,60,60,60,60,-132,-133,60,-135,60,60,-130,-127,-134,-136,-137,60,-138,]),'STATIC':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,60,61,68,81,109,119,120,121,124,125,126,127,128,130,140,160,181,187,189,190,193,197,200,201,206,229,256,310,312,346,],[8,8,-26,-36,-33,-24,-25,-21,-22,-1,8,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,8,-31,-34,-37,8,-224,-68,-40,-67,-61,8,-9,-224,-2,8,-5,-226,-224,-69,-70,-72,-10,-7,-224,-11,-224,-120,8,-6,-39,-59,-71,-73,8,-74,8,-8,-224,-12,-38,-60,8,8,-122,-121,-123,]),'EQ_OP':([17,73,74,75,78,83,85,90,92,94,96,97,99,100,101,102,105,108,142,147,161,164,165,179,180,210,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,175,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'SIZEOF':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[91,-9,-226,91,-201,91,-202,-200,91,-199,-198,91,-203,91,-10,91,-11,-225,-120,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-225,-225,91,-12,91,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,91,91,91,91,-225,91,-111,-113,-109,91,-110,91,-124,-114,91,-118,-112,91,91,91,-122,-121,-125,91,-142,91,-140,-119,91,91,91,-141,91,-139,-115,-143,91,-117,91,-123,91,91,91,-116,91,91,91,91,91,91,-129,-128,-126,-131,91,91,91,91,91,-132,-133,91,-135,91,91,-130,-127,-134,-136,-137,91,-138,]),'OPENPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,42,44,45,47,49,50,51,52,56,57,59,60,64,66,67,68,73,75,76,78,79,81,83,84,86,87,90,91,92,93,95,96,101,103,104,105,106,108,109,112,116,117,118,119,120,122,123,124,125,126,128,130,132,133,136,140,141,143,144,145,146,148,152,154,155,156,157,158,159,160,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,181,182,185,186,187,189,193,194,197,198,199,200,201,202,204,206,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,238,239,240,253,255,257,258,267,269,270,271,273,274,275,276,277,281,282,283,284,285,287,288,289,290,296,298,299,300,301,302,304,306,307,309,310,312,313,315,316,318,319,320,321,322,324,325,327,330,331,335,336,337,338,340,342,344,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[11,-13,-26,-36,-33,-24,-25,-21,-22,11,11,-1,-15,-20,-32,-28,-223,-35,-23,-19,48,-75,11,-4,-29,-3,-27,-30,-17,-31,-34,-37,11,-68,-14,-40,48,-16,-61,84,-79,-76,-77,-9,-18,-2,-5,-226,-50,-52,11,-69,-213,-219,143,-220,-201,-70,-218,148,-202,-200,-214,162,168,-199,-198,-204,-222,143,-203,-221,84,-212,-72,187,-80,-78,11,-10,-7,148,11,-11,-225,-120,-6,-39,-51,-53,84,-59,84,148,84,84,84,148,229,84,84,84,84,148,84,-71,148,148,-211,-210,148,84,84,84,84,84,84,84,84,84,84,-73,84,256,187,187,-74,-8,148,-225,-225,148,-12,-38,84,11,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,148,148,-215,84,229,229,-208,-209,-206,-101,84,256,-105,-225,148,-111,-113,-109,-212,148,-110,318,322,84,324,-124,-114,148,-118,-112,327,84,-205,-207,148,-102,-103,-107,-106,-100,148,-122,-121,-125,148,-142,148,-140,-119,148,148,148,-141,148,-104,-108,-139,-115,-143,148,-117,148,353,-123,148,148,148,-116,148,148,148,148,148,148,-129,-128,-126,-131,148,148,148,148,148,-132,-133,148,-135,148,148,-130,-127,-134,-136,-137,148,-138,]),'CLOSEBRACE':([17,52,60,63,65,70,71,72,73,74,75,77,78,80,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,107,108,119,124,126,129,131,138,142,147,153,161,164,165,179,180,196,197,198,200,205,207,208,209,210,211,225,230,231,232,233,235,238,239,240,243,244,245,246,247,248,249,250,251,252,264,265,266,267,268,270,271,273,276,284,285,288,289,293,295,297,298,299,308,309,310,311,312,313,316,319,320,325,328,332,333,334,335,336,337,340,346,351,360,361,363,364,373,374,376,380,381,382,383,384,386,],[-223,-9,126,130,-43,-62,140,-64,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-10,-11,-120,201,-44,206,-194,-190,-146,-196,-211,-210,-193,-195,-90,-227,-227,-12,-49,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-93,308,310,-224,312,-111,-113,-109,-110,-124,-114,-118,-112,-147,-191,-197,-205,-207,-91,333,-122,-227,-121,-125,-142,-140,-119,-141,-160,-94,-92,346,-139,-115,-143,-117,-123,-116,-129,-128,-126,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'INTEGER_CONSTANT':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[83,-9,-226,83,-201,83,-202,-200,83,-199,-198,83,-203,83,-10,83,-11,-225,-120,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-225,-225,83,-12,83,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,83,83,83,83,-225,83,-111,-113,-109,83,-110,83,-124,-114,83,-118,-112,83,83,83,-122,-121,-125,83,-142,83,-140,-119,83,83,83,-141,83,-139,-115,-143,83,-117,83,-123,83,83,83,-116,83,83,83,83,83,83,-129,-128,-126,-131,83,83,83,83,83,-132,-133,83,-135,83,83,-130,-127,-134,-136,-137,83,-138,]),'CLOSEPAREN':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,43,44,45,48,49,50,51,56,64,66,68,73,74,75,77,78,80,81,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,108,109,110,111,112,113,114,115,116,117,130,132,133,140,142,147,149,150,151,152,153,160,161,164,165,168,179,180,181,183,184,185,186,187,189,201,206,209,210,211,225,227,228,229,230,231,232,233,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,256,257,258,259,260,261,262,263,293,294,295,297,298,299,301,302,304,305,306,307,328,329,330,331,341,343,345,347,356,357,358,362,367,369,370,379,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,68,-16,-61,109,-79,-76,-77,-18,-50,-52,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-72,-83,181,-86,189,-81,-88,-80,-78,-39,-51,-53,-59,-194,-190,225,226,-144,-95,-146,-71,-196,-211,-210,240,-193,-195,-73,-87,-85,-98,-97,258,-74,-38,-60,-169,-171,-167,-215,-96,-97,258,-177,-178,-176,-179,-163,297,-208,-209,-206,-216,299,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,304,-99,-105,306,307,-89,-82,-84,-147,-145,-191,-197,-205,-207,-102,-103,-107,331,-106,-100,-160,-217,-104,-108,350,352,354,355,365,366,368,371,375,377,378,385,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[15,15,-26,-36,-33,-24,-25,-21,-22,-1,15,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,15,-31,-34,-37,15,-224,-68,-40,15,-67,-61,15,-9,-224,-2,15,-5,-226,-224,15,15,15,-43,15,-69,-70,15,-72,-10,-7,-224,-11,-224,-120,15,-6,15,-39,-44,-59,15,-71,15,-73,15,-74,15,-8,-224,-12,-38,-49,-60,15,15,-122,-121,-123,]),'OR_OP':([17,73,74,75,77,78,80,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,108,142,147,161,164,165,179,180,209,210,211,225,230,231,232,233,235,238,239,240,243,244,245,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'COLON':([2,3,4,5,7,15,16,17,19,23,27,30,31,33,34,35,38,40,42,45,64,66,67,68,73,74,75,77,78,80,81,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,107,108,109,130,132,133,135,140,142,147,151,153,160,161,164,165,179,180,181,189,201,204,206,209,210,211,225,230,231,232,233,234,235,238,239,240,243,244,245,246,247,248,249,250,251,252,274,280,293,294,295,297,298,299,323,328,],[-26,-36,-33,-24,-25,-32,-28,-223,-35,-66,-29,-27,-30,-31,-34,-37,-68,-40,-67,-61,-50,-52,136,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-39,-51,-53,202,-59,-194,-190,-144,-146,-71,-196,-211,-210,-193,-195,-73,-74,-38,136,-60,-169,-171,-167,-215,-177,-178,-176,-179,296,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,315,321,-147,-145,-191,-197,-205,-207,342,-160,]),'$end':([12,26,28,36,52,57,59,119,120,126,128,193,310,312,346,],[-1,-4,-3,0,-9,-2,-5,-10,-7,-120,-6,-8,-122,-121,-123,]),'FOR':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,277,-12,-225,277,-111,-113,-109,-110,-124,-114,277,-118,-112,-122,-121,-125,277,-142,-140,-119,277,-141,-139,-115,-143,-117,277,-123,277,-116,277,277,277,-129,-128,-126,-131,277,277,277,277,-132,-133,277,-135,277,277,-130,-127,-134,-136,-137,277,-138,]),'UNION':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[18,18,-26,-36,-33,-24,-25,-21,-22,-1,18,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,18,-31,-34,-37,18,-224,-68,-40,18,-67,-61,18,-9,-224,-2,18,-5,-226,-224,18,18,18,-43,18,-69,-70,18,-72,-10,-7,-224,-11,-224,-120,18,-6,18,-39,-44,-59,18,-71,18,-73,18,-74,18,-8,-224,-12,-38,-49,-60,18,18,-122,-121,-123,]),'ELSE':([126,270,271,273,276,285,288,289,310,312,316,319,320,325,335,336,337,340,346,351,360,361,363,364,373,374,376,380,381,382,383,384,386,],[-120,-111,-113,-109,-110,-114,-118,-112,-122,-121,-142,-140,-119,-141,-139,-115,-143,-117,-123,-116,-129,-128,372,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'AMPERSAND':([17,47,52,60,73,74,75,76,78,79,80,83,84,85,86,87,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,108,119,122,124,125,126,136,141,142,143,144,145,146,147,148,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,182,194,197,198,199,200,202,209,210,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,295,296,297,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-223,95,-9,-226,-213,-190,-219,95,-220,-201,145,-218,95,-172,-202,-200,-214,95,-192,-199,-180,-198,-204,-186,-175,-170,-222,-183,95,-203,-221,95,-212,-10,95,-11,-225,-120,95,95,-194,95,95,95,95,-190,95,95,95,95,95,95,95,-196,95,95,-211,-210,95,95,95,95,95,95,95,95,95,95,95,-193,-195,95,95,-225,-225,95,-12,95,145,-171,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,95,95,-215,95,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,95,-225,95,-111,-113,-109,-212,95,-110,95,-124,-114,95,-118,-112,-191,95,-197,-205,-207,95,95,-122,-121,-125,95,-142,95,-140,-119,95,95,95,-141,95,-139,-115,-143,95,-117,95,-123,95,95,95,-116,95,95,95,95,95,95,-129,-128,-126,-131,95,95,95,95,95,-132,-133,95,-135,95,95,-130,-127,-134,-136,-137,95,-138,]),'CLOSEBRACKET':([17,47,73,74,75,77,78,80,82,83,85,88,89,90,92,94,96,97,98,99,100,101,102,105,107,108,142,147,151,153,161,164,165,179,180,182,209,210,211,225,230,231,232,233,235,237,238,239,240,243,244,245,246,247,248,249,250,251,252,254,255,293,294,295,297,298,299,303,328,],[-223,81,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,160,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-194,-190,-144,-146,-196,-211,-210,-193,-195,253,-169,-171,-167,-215,-177,-178,-176,-179,-163,298,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,301,302,-147,-145,-191,-197,-205,-207,330,-160,]),'SUB_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,212,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'XOR_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,214,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'INT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[30,30,-26,-36,-33,-24,-25,-21,-22,-1,30,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,30,-31,-34,-37,30,-224,-68,-40,30,-67,-61,30,-9,-224,-2,30,-5,-226,-224,30,30,30,-43,30,-69,-70,30,-72,-10,-7,-224,-11,-224,-120,30,-6,30,-39,-44,-59,30,-71,30,-73,30,-74,30,-8,-224,-12,-38,-49,-60,30,30,-122,-121,-123,]),'SIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[33,33,-26,-36,-33,-24,-25,-21,-22,-1,33,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,33,-31,-34,-37,33,-224,-68,-40,33,-67,-61,33,-9,-224,-2,33,-5,-226,-224,33,33,33,-43,33,-69,-70,33,-72,-10,-7,-224,-11,-224,-120,33,-6,33,-39,-44,-59,33,-71,33,-73,33,-74,33,-8,-224,-12,-38,-49,-60,33,33,-122,-121,-123,]),'CONTINUE':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,278,-12,-225,278,-111,-113,-109,-110,-124,-114,278,-118,-112,-122,-121,-125,278,-142,-140,-119,278,-141,-139,-115,-143,-117,278,-123,278,-116,278,278,278,-129,-128,-126,-131,278,278,278,278,-132,-133,278,-135,278,278,-130,-127,-134,-136,-137,278,-138,]),'MUL_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,218,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'RIGHT_OP':([17,73,74,75,78,83,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,173,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,173,173,173,173,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-212,-191,-197,-205,-207,]),'RIGHT_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,222,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'DEFAULT':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,280,-12,-225,280,-111,-113,-109,-110,-124,-114,280,-118,-112,-122,-121,-125,280,-142,-140,-119,280,-141,-139,-115,-143,-117,280,-123,280,-116,280,280,280,-129,-128,-126,-131,280,280,280,280,-132,-133,280,-135,280,280,-130,-127,-134,-136,-137,280,-138,]),'CHAR':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[7,7,-26,-36,-33,-24,-25,-21,-22,-1,7,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,7,-31,-34,-37,7,-224,-68,-40,7,-67,-61,7,-9,-224,-2,7,-5,-226,-224,7,7,7,-43,7,-69,-70,7,-72,-10,-7,-224,-11,-224,-120,7,-6,7,-39,-44,-59,7,-71,7,-73,7,-74,7,-8,-224,-12,-38,-49,-60,7,7,-122,-121,-123,]),'WHILE':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,326,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,281,-12,-225,281,-111,-113,-109,-110,-124,-114,281,-118,-112,-122,-121,-125,281,-142,-140,-119,281,-141,344,-139,-115,-143,-117,281,-123,281,-116,281,281,281,-129,-128,-126,-131,281,281,281,281,-132,-133,281,-135,281,281,-130,-127,-134,-136,-137,281,-138,]),'EXTERN':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,60,61,68,81,109,119,120,121,124,125,126,127,128,130,140,160,181,187,189,190,193,197,200,201,206,229,256,310,312,346,],[9,9,-26,-36,-33,-24,-25,-21,-22,-1,9,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,9,-31,-34,-37,9,-224,-68,-40,-67,-61,9,-9,-224,-2,9,-5,-226,-224,-69,-70,-72,-10,-7,-224,-11,-224,-120,9,-6,-39,-59,-71,-73,9,-74,9,-8,-224,-12,-38,-60,9,9,-122,-121,-123,]),'CASE':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,282,-12,-225,282,-111,-113,-109,-110,-124,-114,282,-118,-112,-122,-121,-125,282,-142,-140,-119,282,-141,-139,-115,-143,-117,282,-123,282,-116,282,282,282,-129,-128,-126,-131,282,282,282,282,-132,-133,282,-135,282,282,-130,-127,-134,-136,-137,282,-138,]),'FLOATING_CONSTANT':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[78,-9,-226,78,-201,78,-202,-200,78,-199,-198,78,-203,78,-10,78,-11,-225,-120,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-225,-225,78,-12,78,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,78,78,78,78,-225,78,-111,-113,-109,78,-110,78,-124,-114,78,-118,-112,78,78,78,-122,-121,-125,78,-142,78,-140,-119,78,78,78,-141,78,-139,-115,-143,78,-117,78,-123,78,78,78,-116,78,78,78,78,78,78,-129,-128,-126,-131,78,78,78,78,78,-132,-133,78,-135,78,78,-130,-127,-134,-136,-137,78,-138,]),'OPENBRACKET':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,56,64,66,68,73,75,78,81,83,90,92,96,101,105,108,109,112,116,117,130,132,133,140,152,160,164,165,181,185,186,187,189,201,206,225,228,229,238,239,240,253,257,258,274,298,299,301,302,304,306,307,330,331,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,47,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,47,-16,-61,-79,-76,-77,-18,-50,-52,-69,-213,-219,-220,-70,-218,-214,163,-204,-222,-221,-212,-72,182,-80,-78,-39,-51,-53,-59,182,-71,-211,-210,-73,255,182,182,-74,-38,-60,-215,182,182,-208,-209,-206,-101,255,-105,-212,-205,-207,-102,-103,-107,-106,-100,-104,-108,]),'REGISTER':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,60,61,68,81,109,119,120,121,124,125,126,127,128,130,140,160,181,187,189,190,193,197,200,201,206,229,256,310,312,346,],[14,14,-26,-36,-33,-24,-25,-21,-22,-1,14,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,14,-31,-34,-37,14,-224,-68,-40,-67,-61,14,-9,-224,-2,14,-5,-226,-224,-69,-70,-72,-10,-7,-224,-11,-224,-120,14,-6,-39,-59,-71,-73,14,-74,14,-8,-224,-12,-38,-60,14,14,-122,-121,-123,]),'PIPE':([17,73,74,75,77,78,80,82,83,85,90,92,94,96,97,99,100,101,102,105,108,142,147,161,164,165,179,180,209,210,211,225,230,231,232,233,238,239,240,243,244,245,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-166,-220,-168,146,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,146,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'DEC_OP':([17,47,52,60,73,75,76,78,79,83,84,86,87,90,91,92,93,95,96,101,103,104,105,106,108,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,238,239,240,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,296,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-223,76,-9,-226,-213,-219,76,-220,-201,-218,76,-202,-200,-214,76,164,-199,-198,-204,-222,76,-203,-221,76,-212,-10,76,-11,-225,-120,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-211,-210,76,76,76,76,76,76,76,76,76,76,76,76,76,-225,-225,76,-12,76,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,76,76,-215,76,-208,-209,-206,76,-225,76,-111,-113,-109,-212,76,-110,76,-124,-114,76,-118,-112,76,-205,-207,76,76,-122,-121,-125,76,-142,76,-140,-119,76,76,76,-141,76,-139,-115,-143,76,-117,76,-123,76,76,76,-116,76,76,76,76,76,76,-129,-128,-126,-131,76,76,76,76,76,-132,-133,76,-135,76,76,-130,-127,-134,-136,-137,76,-138,]),'SWITCH':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,283,-12,-225,283,-111,-113,-109,-110,-124,-114,283,-118,-112,-122,-121,-125,283,-142,-140,-119,283,-141,-139,-115,-143,-117,283,-123,283,-116,283,283,283,-129,-128,-126,-131,283,283,283,283,-132,-133,283,-135,283,283,-130,-127,-134,-136,-137,283,-138,]),'AND_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,217,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'ELIPSIS':([190,],[262,]),'TILDE':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[86,-9,-226,86,-201,86,-202,-200,86,-199,-198,86,-203,86,-10,86,-11,-225,-120,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-225,-225,86,-12,86,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,86,86,86,86,-225,86,-111,-113,-109,86,-110,86,-124,-114,86,-118,-112,86,86,86,-122,-121,-125,86,-142,86,-140,-119,86,86,86,-141,86,-139,-115,-143,86,-117,86,-123,86,86,86,-116,86,86,86,86,86,86,-129,-128,-126,-131,86,86,86,86,86,-132,-133,86,-135,86,86,-130,-127,-134,-136,-137,86,-138,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,44,45,46,47,48,49,50,51,52,56,57,59,60,64,66,67,69,76,79,84,86,87,91,93,95,103,104,106,112,116,117,118,119,120,122,123,124,125,126,128,130,132,133,136,139,140,141,143,144,145,146,148,154,155,156,157,158,159,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,182,186,187,188,193,194,197,198,199,200,201,202,204,206,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,272,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[17,-13,-26,-36,-33,-24,17,-25,-21,-22,17,17,-1,-15,-20,-32,-28,-223,-42,-35,-23,17,-19,-75,17,-4,-29,-3,-41,-27,-30,-17,-31,-34,-37,17,-14,-40,-16,-61,17,17,17,-79,-76,-77,-9,-18,-2,-5,-226,-50,-52,17,17,17,-201,17,-202,-200,17,-199,-198,17,-203,17,17,-80,-78,17,-10,-7,17,17,-11,-225,-120,-6,-39,-51,-53,17,17,-59,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,17,-225,-225,17,-12,-38,17,17,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,17,17,17,17,-225,17,-111,-113,17,-109,17,-110,17,-124,-114,17,-118,-112,17,17,17,-122,-121,-125,17,-142,17,-140,-119,17,17,17,-141,17,-139,-115,-143,17,-117,17,-123,17,17,17,-116,17,17,17,17,17,17,-129,-128,-126,-131,17,17,17,17,17,-132,-133,17,-135,17,17,-130,-127,-134,-136,-137,17,-138,]),'ADD_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,216,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'PERCENT':([17,73,74,75,78,83,90,92,96,97,101,102,105,108,142,147,161,164,165,179,180,225,238,239,240,243,244,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,176,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-208,-209,-206,176,176,-189,-187,-188,-212,-191,-197,-205,-207,]),'GE_OP':([17,73,74,75,78,83,85,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,157,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,157,157,-189,-187,-188,-212,-191,-197,-205,-207,]),'STRUCT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[29,29,-26,-36,-33,-24,-25,-21,-22,-1,29,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,29,-31,-34,-37,29,-224,-68,-40,29,-67,-61,29,-9,-224,-2,29,-5,-226,-224,29,29,29,-43,29,-69,-70,29,-72,-10,-7,-224,-11,-224,-120,29,-6,29,-39,-44,-59,29,-71,29,-73,29,-74,29,-8,-224,-12,-38,-49,-60,29,29,-122,-121,-123,]),'MOD_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,213,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'QMARK':([17,73,74,75,77,78,80,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,108,142,147,161,164,165,179,180,209,210,211,225,230,231,232,233,235,238,239,240,243,244,245,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,158,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'OR_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,215,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'BREAK':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,286,-12,-225,286,-111,-113,-109,-110,-124,-114,286,-118,-112,-122,-121,-125,286,-142,-140,-119,286,-141,-139,-115,-143,-117,286,-123,286,-116,286,286,286,-129,-128,-126,-131,286,286,286,286,-132,-133,286,-135,286,286,-130,-127,-134,-136,-137,286,-138,]),'VOLATILE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,116,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[35,35,-26,-36,-33,-24,-25,-21,-22,-1,35,-20,-32,-28,-223,-35,-23,-19,-66,35,-4,-29,-3,-27,-30,35,-31,-34,-37,35,-224,-68,-40,35,-67,-61,35,-79,35,-9,-224,-2,35,-5,-226,-224,35,35,35,-43,35,-69,-70,35,-72,-80,-10,-7,-224,-11,-224,-120,35,-6,35,-39,-44,-59,35,-71,35,-73,35,-74,35,-8,-224,-12,-38,-49,-60,35,35,-122,-121,-123,]),'DO':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,287,-12,-225,287,-111,-113,-109,-110,-124,-114,287,-118,-112,-122,-121,-125,287,-142,-140,-119,287,-141,-139,-115,-143,-117,287,-123,287,-116,287,287,287,-129,-128,-126,-131,287,287,287,287,-132,-133,287,-135,287,287,-130,-127,-134,-136,-137,287,-138,]),'CONST':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,116,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[3,3,-26,-36,-33,-24,-25,-21,-22,-1,3,-20,-32,-28,-223,-35,-23,-19,-66,3,-4,-29,-3,-27,-30,3,-31,-34,-37,3,-224,-68,-40,3,-67,-61,3,-79,3,-9,-224,-2,3,-5,-226,-224,3,3,3,-43,3,-69,-70,3,-72,-80,-10,-7,-224,-11,-224,-120,3,-6,3,-39,-44,-59,3,-71,3,-73,3,-74,3,-8,-224,-12,-38,-49,-60,3,3,-122,-121,-123,]),'CARAT':([17,73,74,75,77,78,80,83,85,90,92,94,96,97,99,100,101,102,105,108,142,147,161,164,165,179,180,209,210,211,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,144,-220,-168,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-169,-171,144,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'DIV':([17,73,74,75,78,83,90,92,96,97,101,102,105,108,142,147,161,164,165,179,180,225,238,239,240,243,244,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,178,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-208,-209,-206,178,178,-189,-187,-188,-212,-191,-197,-205,-207,]),'LE':([17,73,74,75,78,83,85,90,92,94,96,97,99,101,102,105,108,142,147,161,164,165,179,180,225,230,231,232,233,238,239,240,243,244,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,156,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,156,156,-189,-187,-188,-212,-191,-197,-205,-207,]),'SEMI':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,25,27,30,31,32,33,34,35,38,39,40,42,44,45,52,53,54,55,56,60,68,73,74,75,77,78,80,81,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,107,108,109,119,123,124,125,126,130,134,135,137,140,142,147,151,153,160,161,164,165,179,180,181,189,191,192,195,196,197,198,199,200,201,203,206,209,210,211,225,230,231,232,233,235,238,239,240,243,244,245,246,247,248,249,250,251,252,267,269,270,271,273,274,275,276,278,279,284,285,286,287,288,289,291,292,293,294,295,297,298,299,308,310,312,313,314,315,316,317,318,319,320,321,325,328,333,335,336,337,338,339,340,342,346,348,349,350,351,352,354,355,359,360,361,363,364,365,366,368,371,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,52,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-9,-45,119,-47,-18,-226,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-10,52,-11,-225,-120,-39,-54,-56,205,-59,-194,-190,-144,-146,-71,-196,-211,-210,-193,-195,-73,-74,-46,-47,-48,-90,-225,-225,288,-12,-38,-57,-60,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-225,288,-111,-113,-109,-212,316,-110,319,320,-124,-114,325,288,-118,-112,-58,-55,-147,-145,-191,-197,-205,-207,-91,-122,-121,-125,335,288,-142,337,338,-140,-119,288,-141,-160,-92,-139,-115,-143,347,349,-117,288,-123,357,358,288,-116,288,288,288,370,-129,-128,-126,-131,288,288,288,380,288,-132,-133,288,-135,288,288,-130,-127,-134,-136,-137,288,-138,]),'CHARACTER_CONSTANT':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[75,-9,-226,75,-201,75,-202,-200,75,-199,-198,75,-203,75,-10,75,-11,-225,-120,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-225,-225,75,-12,75,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,75,75,75,75,-225,75,-111,-113,-109,75,-110,75,-124,-114,75,-118,-112,75,75,75,-122,-121,-125,75,-142,75,-140,-119,75,75,75,-141,75,-139,-115,-143,75,-117,75,-123,75,75,75,-116,75,75,75,75,75,75,-129,-128,-126,-131,75,75,75,75,75,-132,-133,75,-135,75,75,-130,-127,-134,-136,-137,75,-138,]),'COMMA':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,53,54,55,56,68,70,71,72,73,74,75,77,78,80,81,82,83,85,88,90,92,94,96,97,98,99,100,101,102,105,107,108,109,110,112,113,114,115,116,117,130,134,135,137,138,140,142,147,149,151,153,160,161,164,165,179,180,181,183,184,185,186,189,191,192,195,196,201,203,206,207,208,209,210,211,225,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,257,258,261,263,264,265,274,279,291,292,293,294,295,297,298,299,301,302,304,306,307,308,317,328,329,330,331,332,333,339,341,343,345,348,356,359,362,367,369,379,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-79,-76,-77,-45,118,-47,-18,-69,-62,139,-64,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-83,-86,188,190,-88,-80,-78,-39,-54,-56,204,139,-59,-194,-190,224,-144,-146,-71,-196,-211,-210,-193,-195,-73,-87,-85,-98,-97,-74,-46,-47,-48,-90,-38,-57,-60,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,224,-163,224,-208,-209,-206,-216,300,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,-99,-105,-89,-84,-93,309,-212,224,-58,-55,-147,-145,-191,-197,-205,-207,-102,-103,-107,-106,-100,-91,224,-160,-217,-104,-108,-94,-92,224,224,224,224,224,224,224,224,224,224,224,]),'PTR_OP':([17,73,75,78,83,90,92,96,101,105,108,164,165,225,238,239,240,274,298,299,],[-223,-213,-219,-220,-218,-214,167,-204,-222,-221,-212,-211,-210,-215,-208,-209,-206,-212,-205,-207,]),'ASSIGN':([17,23,38,42,55,68,72,73,74,75,78,81,83,90,92,96,101,105,108,109,142,147,160,161,164,165,179,180,181,189,192,225,238,239,240,274,295,297,298,299,],[-223,-66,-68,-67,122,-69,141,-213,-190,-219,-220,-70,-218,-214,-192,-204,-222,-221,-212,-72,-194,221,-71,-196,-211,-210,-193,-195,-73,-74,122,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,60,61,68,81,109,119,120,121,124,125,126,127,128,130,140,160,181,187,189,190,193,197,200,201,206,229,256,310,312,346,],[20,20,-26,-36,-33,-24,-25,-21,-22,-1,20,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,20,-31,-34,-37,20,-224,-68,-40,-67,-61,20,-9,-224,-2,20,-5,-226,-224,-69,-70,-72,-10,-7,-224,-11,-224,-120,20,-6,-39,-59,-71,-73,20,-74,20,-8,-224,-12,-38,-60,20,20,-122,-121,-123,]),'AUTO':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,60,61,68,81,109,119,120,121,124,125,126,127,128,130,140,160,181,187,189,190,193,197,200,201,206,229,256,310,312,346,],[22,22,-26,-36,-33,-24,-25,-21,-22,-1,22,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,22,-31,-34,-37,22,-224,-68,-40,-67,-61,22,-9,-224,-2,22,-5,-226,-224,-69,-70,-72,-10,-7,-224,-11,-224,-120,22,-6,-39,-59,-71,-73,22,-74,22,-8,-224,-12,-38,-60,22,22,-122,-121,-123,]),'ASTERISK':([0,1,2,3,4,5,7,8,9,11,12,13,14,15,16,17,19,20,22,24,25,26,27,28,30,31,32,33,34,35,36,39,40,44,45,47,49,50,52,56,57,59,60,64,66,67,73,74,75,76,78,79,83,84,86,87,90,91,92,93,95,96,97,101,102,103,104,105,106,108,112,116,118,119,120,122,123,124,125,126,128,130,132,133,136,140,141,142,143,144,145,146,147,148,152,154,155,156,157,158,159,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,182,187,193,194,197,198,199,200,201,202,204,206,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,229,238,239,240,243,244,250,251,252,255,267,269,270,271,273,274,275,276,282,284,285,287,288,289,295,296,297,298,299,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[24,-13,-26,-36,-33,-24,-25,-21,-22,24,-1,-15,-20,-32,-28,-223,-35,-23,-19,24,24,-4,-29,-3,-27,-30,-17,-31,-34,-37,24,-14,-40,-16,-61,93,-79,24,-9,-18,-2,-5,-226,-50,-52,24,-213,-190,-219,93,-220,-201,-218,93,-202,-200,-214,93,-192,-199,-198,-204,-186,-222,177,93,-203,-221,93,-212,24,-80,24,-10,-7,93,24,-11,-225,-120,-6,-39,-51,-53,93,-59,93,-194,93,93,93,93,-190,93,24,93,93,93,93,93,93,-196,93,93,-211,-210,93,93,93,93,93,93,93,93,93,93,93,-193,-195,93,24,-8,93,-225,-225,93,-12,-38,93,24,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,93,93,-215,93,24,-208,-209,-206,177,177,-189,-187,-188,93,-225,93,-111,-113,-109,-212,93,-110,93,-124,-114,93,-118,-112,-191,93,-197,-205,-207,93,93,-122,-121,-125,93,-142,93,-140,-119,93,93,93,-141,93,-139,-115,-143,93,-117,93,-123,93,93,93,-116,93,93,93,93,93,93,-129,-128,-126,-131,93,93,93,93,93,-132,-133,93,-135,93,93,-130,-127,-134,-136,-137,93,-138,]),'AND_OP':([17,73,74,75,77,78,80,82,83,85,90,92,94,96,97,98,99,100,101,102,105,108,142,147,161,164,165,179,180,209,210,211,225,230,231,232,233,235,238,239,240,243,244,245,246,247,248,249,250,251,252,274,295,297,298,299,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,-214,-192,-180,-204,-186,171,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-169,-171,-167,-215,-177,-178,-176,-179,171,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-212,-191,-197,-205,-207,]),'BANG':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[104,-9,-226,104,-201,104,-202,-200,104,-199,-198,104,-203,104,-10,104,-11,-225,-120,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-225,-225,104,-12,104,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,104,104,104,104,-225,104,-111,-113,-109,104,-110,104,-124,-114,104,-118,-112,104,104,104,-122,-121,-125,104,-142,104,-140,-119,104,104,104,-141,104,-139,-115,-143,104,-117,104,-123,104,104,104,-116,104,104,104,104,104,104,-129,-128,-126,-131,104,104,104,104,104,-132,-133,104,-135,104,104,-130,-127,-134,-136,-137,104,-138,]),'IF':([52,60,119,124,125,126,197,198,199,200,267,269,270,271,273,276,284,285,287,288,289,310,312,313,315,316,319,320,321,325,335,336,337,340,342,346,350,351,352,354,355,360,361,363,364,365,366,368,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[-9,-226,-10,-11,-225,-120,-225,-225,290,-12,-225,290,-111,-113,-109,-110,-124,-114,290,-118,-112,-122,-121,-125,290,-142,-140,-119,290,-141,-139,-115,-143,-117,290,-123,290,-116,290,290,290,-129,-128,-126,-131,290,290,290,290,-132,-133,290,-135,290,290,-130,-127,-134,-136,-137,290,-138,]),'STRING_LITERAL':([47,52,60,76,79,84,86,87,91,93,95,103,104,106,119,122,124,125,126,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,197,198,199,200,202,212,213,214,215,216,217,218,219,220,221,222,223,224,226,255,267,269,270,271,273,275,276,282,284,285,287,288,289,296,300,309,310,312,313,315,316,318,319,320,321,322,324,325,327,335,336,337,338,340,342,346,347,349,350,351,352,353,354,355,357,358,360,361,363,364,365,366,368,370,372,373,374,375,376,377,378,380,381,382,383,384,385,386,],[101,-9,-226,101,-201,101,-202,-200,101,-199,-198,101,-203,101,-10,101,-11,-225,-120,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-225,-225,101,-12,101,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,101,101,101,101,-225,101,-111,-113,-109,101,-110,101,-124,-114,101,-118,-112,101,101,101,-122,-121,-125,101,-142,101,-140,-119,101,101,101,-141,101,-139,-115,-143,101,-117,101,-123,101,101,101,-116,101,101,101,101,101,101,-129,-128,-126,-131,101,101,101,101,101,-132,-133,101,-135,101,101,-130,-127,-134,-136,-137,101,-138,]),'FLOAT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,60,61,62,63,64,65,66,68,81,84,109,119,120,121,124,125,126,127,128,129,130,131,140,148,160,162,181,187,189,190,193,197,200,201,205,206,229,256,310,312,346,],[27,27,-26,-36,-33,-24,-25,-21,-22,-1,27,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,27,-31,-34,-37,27,-224,-68,-40,27,-67,-61,27,-9,-224,-2,27,-5,-226,-224,27,27,27,-43,27,-69,-70,27,-72,-10,-7,-224,-11,-224,-120,27,-6,27,-39,-44,-59,27,-71,27,-73,27,-74,27,-8,-224,-12,-38,-49,-60,27,27,-122,-121,-123,]),'LEFT_ASSIGN':([17,73,74,75,78,83,90,92,96,101,105,108,142,147,161,164,165,179,180,225,238,239,240,274,295,297,298,299,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,220,-196,-211,-210,-193,-195,-215,-208,-209,-206,-212,-191,-197,-205,-207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,32,36,48,58,127,187,190,229,256,],[1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([47,84,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,243,244,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'selection_statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,]),'constant':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'unary_expression':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[74,142,147,161,179,74,147,74,74,147,74,74,74,147,74,74,74,74,147,74,147,147,147,74,74,74,74,74,74,74,74,74,74,74,147,147,74,147,147,74,74,147,147,74,147,74,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'conditional_expression':([47,84,122,136,141,143,148,158,162,163,168,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[107,153,153,107,107,153,153,153,153,153,153,107,153,153,107,153,153,107,153,153,107,153,328,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'struct_or_union_specifier':([0,1,13,32,36,41,48,58,62,63,64,66,84,127,129,148,162,187,190,229,256,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([47,84,122,136,141,143,146,148,158,159,162,163,168,171,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[77,77,77,77,77,77,211,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'identifier_list':([48,],[113,]),'init_declarator_list':([25,123,],[54,54,]),'struct_declaration_list':([41,62,],[63,129,]),'assignment_operator':([147,],[223,]),'enumerator':([46,69,139,],[70,70,207,]),'abstract_declarator':([112,152,187,229,],[183,227,260,260,]),'pointer':([0,11,24,25,36,50,67,112,118,123,152,187,204,229,],[10,10,51,10,10,117,10,186,10,10,228,186,10,228,]),'read_mode_e':([125,197,198,267,],[199,199,269,269,]),'and_expression':([47,84,122,136,141,143,144,146,148,158,159,162,163,168,171,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[80,80,80,80,80,80,209,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'assignment_expression':([84,122,143,148,158,162,163,168,194,199,223,224,269,275,287,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[151,196,151,151,151,151,151,241,196,151,293,294,151,151,151,329,196,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'external_declaration':([0,36,],[12,57,]),'type_specifier':([0,1,13,32,36,41,48,58,62,63,64,66,84,127,129,148,162,187,190,229,256,],[13,13,13,13,13,64,13,13,64,64,64,64,64,13,64,64,64,13,13,13,13,]),'compound_statement':([37,55,61,121,199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[59,120,128,193,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,]),'inclusive_or_expression':([47,84,122,136,141,143,148,158,159,162,163,168,171,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[82,82,82,82,82,82,82,82,82,82,82,82,245,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'iteration_statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,]),'type_name':([84,148,162,],[150,150,236,]),'postfix_expression':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'additive_expression':([47,84,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,171,172,173,174,175,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,246,247,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'expression_statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,]),'unary_operator':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cast_expression':([47,84,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[97,97,180,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,250,251,252,97,97,97,97,97,97,295,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'initializer_list':([194,],[265,]),'struct_declarator_list':([67,],[137,]),'logical_or_expression':([47,84,122,136,141,143,148,158,162,163,168,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'translation_unit':([0,],[36,]),'relational_expression':([47,84,122,136,141,143,144,145,146,148,158,159,162,163,168,171,174,175,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,248,249,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'struct_or_union':([0,1,13,32,36,41,48,58,62,63,64,66,84,127,129,148,162,187,190,229,256,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'struct_declaration':([41,62,63,129,],[65,65,131,131,]),'string':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'parameter_type_list':([48,187,229,256,],[111,259,259,305,]),'parameter_declaration':([48,187,190,229,256,],[110,110,263,110,110,]),'direct_declarator':([0,10,11,25,36,67,112,118,123,186,187,204,],[23,42,23,23,23,23,23,23,23,42,23,23,]),'type_qualifier_list':([24,],[50,]),'argument_expression_list':([168,],[242,]),'initializer':([122,194,309,],[195,264,332,]),'statement_list':([125,197,],[198,267,]),'primary_expression':([47,76,84,91,103,106,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,169,170,171,172,173,174,175,176,177,178,182,194,199,202,223,224,226,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'declaration_specifiers':([0,1,13,32,36,48,58,127,187,190,229,256,],[25,39,44,56,25,112,123,123,112,112,112,112,]),'declaration':([0,36,58,127,],[26,26,124,200,]),'push_scope_e':([60,],[125,]),'logical_and_expression':([47,84,122,136,141,143,148,158,159,162,163,168,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[98,98,98,98,98,98,98,98,235,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'declarator':([0,11,25,36,67,112,118,123,187,204,],[37,43,55,37,135,184,192,192,43,135,]),'shift_expression':([47,84,122,136,141,143,144,145,146,148,154,155,156,157,158,159,162,163,168,171,174,175,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[99,99,99,99,99,99,99,99,99,99,230,231,232,233,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'equality_expression':([47,84,122,136,141,143,144,145,146,148,158,159,162,163,168,171,182,194,199,202,223,224,255,269,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[100,100,100,100,100,100,100,210,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'jump_statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,]),'struct_declarator':([67,204,],[134,292,]),'function_definition':([0,36,],[28,28,]),'parameter_list':([48,187,229,256,],[114,114,114,114,]),'insert_mode_e':([37,55,61,121,125,197,267,],[58,58,127,127,58,127,311,]),'pop_scope_e':([197,198,311,],[266,268,334,]),'enum_specifier':([0,1,13,32,36,41,48,58,62,63,64,66,84,127,129,148,162,187,190,229,256,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,13,24,32,36,41,48,50,58,62,63,64,66,84,127,129,148,162,187,190,229,256,],[32,32,32,49,32,32,66,32,116,32,66,66,66,66,66,32,66,66,66,32,32,32,32,]),'enumerator_list':([46,69,],[71,138,]),'labeled_statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,]),'declaration_list':([37,55,125,],[61,121,197,]),'specifier_qualifier_list':([41,62,63,64,66,84,129,148,162,],[67,67,67,132,133,152,67,152,152,]),'statement':([199,269,287,315,321,342,350,352,354,355,365,366,368,372,375,377,378,385,],[284,313,326,336,340,351,360,361,363,364,373,374,376,381,382,383,384,386,]),'constant_expression':([47,136,141,182,202,255,282,],[89,203,208,254,291,303,323,]),'init_declarator':([25,118,123,],[53,191,53,]),'direct_abstract_declarator':([112,152,186,187,228,229,],[185,185,257,185,257,185,]),'identifier':([0,6,10,11,21,25,36,46,47,48,67,69,76,84,91,103,106,112,118,122,123,136,139,141,143,144,145,146,148,154,155,156,157,158,159,162,163,166,167,168,169,170,171,172,173,174,175,176,177,178,182,186,187,188,194,199,202,204,223,224,226,255,269,272,275,282,287,296,300,309,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[38,40,38,38,45,38,38,72,108,115,38,72,108,108,108,108,108,38,38,108,38,108,72,108,108,108,108,108,108,108,108,108,108,108,108,108,108,238,239,108,108,108,108,108,108,108,108,108,108,108,108,38,38,261,108,274,108,38,108,108,108,108,274,314,108,108,274,108,108,108,274,108,274,108,108,108,108,274,108,108,274,274,108,274,274,108,108,274,274,274,108,274,274,274,274,274,]),'expression':([84,143,148,158,162,163,199,269,275,287,315,318,321,322,324,327,338,342,347,349,350,352,353,354,355,357,358,365,366,368,370,372,375,377,378,385,],[149,149,149,234,149,237,279,279,317,279,279,339,279,341,343,345,348,279,356,359,279,279,362,279,279,367,369,279,279,279,379,279,279,279,279,279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','Parser_M.py',33),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','Parser_M.py',39),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','Parser_M.py',45),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','Parser_M.py',51),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','Parser_M.py',57),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','Parser_M.py',63),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','Parser_M.py',69),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','Parser_M.py',75),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','Parser_M.py',81),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','Parser_M.py',87),
  ('declaration_list -> insert_mode_e declaration','declaration_list',2,'p_declaration_list_1','Parser_M.py',93),
  ('declaration_list -> declaration_list insert_mode_e declaration','declaration_list',3,'p_declaration_list_2','Parser_M.py',99),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','Parser_M.py',105),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','Parser_M.py',111),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','Parser_M.py',117),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','Parser_M.py',123),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','Parser_M.py',129),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','Parser_M.py',135),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','Parser_M.py',141),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','Parser_M.py',147),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','Parser_M.py',153),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','Parser_M.py',159),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','Parser_M.py',165),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','Parser_M.py',171),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','Parser_M.py',177),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','Parser_M.py',183),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','Parser_M.py',189),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','Parser_M.py',195),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','Parser_M.py',201),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','Parser_M.py',207),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','Parser_M.py',213),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','Parser_M.py',219),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','Parser_M.py',225),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','Parser_M.py',231),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','Parser_M.py',237),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','Parser_M.py',243),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','Parser_M.py',249),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','Parser_M.py',255),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','Parser_M.py',261),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','Parser_M.py',267),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','Parser_M.py',273),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','Parser_M.py',279),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','Parser_M.py',285),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','Parser_M.py',291),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','Parser_M.py',297),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','Parser_M.py',303),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','Parser_M.py',309),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','Parser_M.py',315),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','Parser_M.py',321),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','Parser_M.py',327),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','Parser_M.py',333),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','Parser_M.py',339),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','Parser_M.py',345),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','Parser_M.py',351),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','Parser_M.py',357),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','Parser_M.py',363),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','Parser_M.py',369),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','Parser_M.py',375),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','Parser_M.py',381),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','Parser_M.py',387),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','Parser_M.py',393),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','Parser_M.py',399),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','Parser_M.py',405),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','Parser_M.py',411),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','Parser_M.py',417),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','Parser_M.py',423),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','Parser_M.py',429),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','Parser_M.py',435),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','Parser_M.py',441),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','Parser_M.py',447),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','Parser_M.py',453),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','Parser_M.py',459),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','Parser_M.py',465),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','Parser_M.py',471),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','Parser_M.py',477),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','Parser_M.py',483),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','Parser_M.py',489),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','Parser_M.py',495),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','Parser_M.py',501),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','Parser_M.py',507),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','Parser_M.py',513),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','Parser_M.py',519),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','Parser_M.py',525),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','Parser_M.py',531),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','Parser_M.py',537),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','Parser_M.py',543),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','Parser_M.py',549),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','Parser_M.py',555),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','Parser_M.py',561),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','Parser_M.py',567),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','Parser_M.py',573),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','Parser_M.py',579),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','Parser_M.py',585),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','Parser_M.py',591),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','Parser_M.py',597),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','Parser_M.py',603),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','Parser_M.py',609),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','Parser_M.py',615),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','Parser_M.py',621),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','Parser_M.py',627),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','Parser_M.py',633),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','Parser_M.py',639),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','Parser_M.py',645),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','Parser_M.py',651),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','Parser_M.py',657),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','Parser_M.py',663),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','Parser_M.py',669),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','Parser_M.py',675),
  ('statement -> labeled_statement','statement',1,'p_statement_1','Parser_M.py',681),
  ('statement -> compound_statement','statement',1,'p_statement_2','Parser_M.py',687),
  ('statement -> expression_statement','statement',1,'p_statement_3','Parser_M.py',693),
  ('statement -> selection_statement','statement',1,'p_statement_4','Parser_M.py',699),
  ('statement -> iteration_statement','statement',1,'p_statement_5','Parser_M.py',705),
  ('statement -> jump_statement','statement',1,'p_statement_6','Parser_M.py',711),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','Parser_M.py',717),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','Parser_M.py',723),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','Parser_M.py',729),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','Parser_M.py',735),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','Parser_M.py',741),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','Parser_M.py',747),
  ('compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_2','Parser_M.py',753),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_3','Parser_M.py',759),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE','compound_statement',7,'p_compound_statement_4','Parser_M.py',765),
  ('statement_list -> read_mode_e statement','statement_list',2,'p_statement_list_1','Parser_M.py',771),
  ('statement_list -> statement_list read_mode_e statement','statement_list',3,'p_statement_list_2','Parser_M.py',777),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','Parser_M.py',783),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','Parser_M.py',789),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','Parser_M.py',795),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','Parser_M.py',801),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','Parser_M.py',807),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','Parser_M.py',813),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','Parser_M.py',819),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','Parser_M.py',825),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','Parser_M.py',831),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','Parser_M.py',837),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','Parser_M.py',843),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','Parser_M.py',849),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','Parser_M.py',855),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','Parser_M.py',861),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','Parser_M.py',867),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','Parser_M.py',873),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','Parser_M.py',879),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','Parser_M.py',885),
  ('expression -> assignment_expression','expression',1,'p_expression_1','Parser_M.py',891),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','Parser_M.py',897),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','Parser_M.py',903),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','Parser_M.py',909),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','Parser_M.py',915),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','Parser_M.py',921),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','Parser_M.py',927),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','Parser_M.py',933),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','Parser_M.py',939),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','Parser_M.py',945),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','Parser_M.py',951),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','Parser_M.py',957),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','Parser_M.py',963),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','Parser_M.py',969),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','Parser_M.py',975),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','Parser_M.py',981),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','Parser_M.py',987),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','Parser_M.py',993),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','Parser_M.py',999),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','Parser_M.py',1005),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','Parser_M.py',1011),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','Parser_M.py',1017),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','Parser_M.py',1023),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','Parser_M.py',1029),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','Parser_M.py',1035),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','Parser_M.py',1041),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','Parser_M.py',1047),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','Parser_M.py',1053),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','Parser_M.py',1059),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','Parser_M.py',1065),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','Parser_M.py',1071),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','Parser_M.py',1077),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','Parser_M.py',1083),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','Parser_M.py',1089),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','Parser_M.py',1095),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','Parser_M.py',1101),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','Parser_M.py',1107),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','Parser_M.py',1113),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','Parser_M.py',1119),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','Parser_M.py',1125),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','Parser_M.py',1131),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','Parser_M.py',1137),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','Parser_M.py',1143),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','Parser_M.py',1149),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','Parser_M.py',1155),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','Parser_M.py',1161),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','Parser_M.py',1167),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','Parser_M.py',1173),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','Parser_M.py',1179),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','Parser_M.py',1185),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','Parser_M.py',1191),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','Parser_M.py',1197),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','Parser_M.py',1203),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','Parser_M.py',1209),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','Parser_M.py',1215),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','Parser_M.py',1221),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','Parser_M.py',1227),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','Parser_M.py',1233),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','Parser_M.py',1239),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','Parser_M.py',1245),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','Parser_M.py',1251),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','Parser_M.py',1257),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','Parser_M.py',1263),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','Parser_M.py',1269),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','Parser_M.py',1275),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','Parser_M.py',1281),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','Parser_M.py',1287),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','Parser_M.py',1293),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','Parser_M.py',1299),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','Parser_M.py',1305),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','Parser_M.py',1311),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','Parser_M.py',1317),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','Parser_M.py',1323),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','Parser_M.py',1329),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','Parser_M.py',1335),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','Parser_M.py',1341),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','Parser_M.py',1347),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','Parser_M.py',1353),
  ('string -> STRING_LITERAL','string',1,'p_string_1','Parser_M.py',1359),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','Parser_M.py',1365),
  ('insert_mode_e -> <empty>','insert_mode_e',0,'p_empty_insertmode','Parser_M.py',1374),
  ('read_mode_e -> <empty>','read_mode_e',0,'p_empty_readmode','Parser_M.py',1384),
  ('push_scope_e -> <empty>','push_scope_e',0,'p_empty_push_scope','Parser_M.py',1394),
  ('pop_scope_e -> <empty>','pop_scope_e',0,'p_empty_pop_scope','Parser_M.py',1400),
]
