
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SINGLE_LINE_COMMENT SIZEOF ST2_F ST2_O STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VARYING_COMMENT VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration :  PD_Odeclaration :  PD_Fdeclaration_list :  insert_mode_e declarationdeclaration_list :  declaration_list insert_mode_e declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator : direct_declaratordeclarator : pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementstatement : PD_Ostatement : PD_Flabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACEcompound_statement :  OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACEstatement_list : read_mode_e statementstatement_list :  statement_list read_mode_e statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIERinsert_mode_e :read_mode_e :push_scope_e :pop_scope_e :'
    
_lr_action_items = {'PD_O':([0,1,2,3,4,5,7,8,9,14,36,41,42,43,44,45,46,47,52,64,65,66,67,68,70,71,73,75,111,118,131,132,133,134,136,144,180,181,204,206,207,208,209,210,211,212,213,214,215,219,224,295,296,297,299,301,302,309,310,311,333,334,335,342,343,350,351,352,353,354,359,360,361,363,368,370,371,373,376,377,378,379,380,381,383,384,385,386,387,388,389,390,],[7,7,-1,-3,-4,-228,-11,-12,-68,-70,-227,-2,-5,-228,-230,7,-228,-9,-69,-6,7,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-229,-228,214,-8,-73,-75,-76,214,-229,-128,-111,-112,-113,-114,-115,-116,-117,-118,-122,214,-125,-129,-126,214,214,-123,-144,-145,-146,-119,214,-121,-143,-147,-127,-120,214,214,214,-130,-132,-133,214,214,-135,214,214,214,-131,-134,-136,214,-137,214,214,-139,-138,214,-141,-140,-142,]),'PD_F':([0,1,2,3,4,5,7,8,9,14,36,41,42,43,44,45,46,47,52,64,65,66,67,68,70,71,73,75,111,118,131,132,133,134,136,144,180,181,204,206,207,208,209,210,211,212,213,214,215,219,224,295,296,297,299,301,302,309,310,311,333,334,335,342,343,350,351,352,353,354,359,360,361,363,368,370,371,373,376,377,378,379,380,381,383,384,385,386,387,388,389,390,],[8,8,-1,-3,-4,-228,-11,-12,-68,-70,-227,-2,-5,-228,-230,8,-228,-9,-69,-6,8,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-229,-228,215,-8,-73,-75,-76,215,-229,-128,-111,-112,-113,-114,-115,-116,-117,-118,-122,215,-125,-129,-126,215,215,-123,-144,-145,-146,-119,215,-121,-143,-147,-127,-120,215,215,215,-130,-132,-133,215,215,-135,215,215,215,-131,-134,-136,215,-137,215,215,-139,-138,215,-141,-140,-142,]),'OPENPAREN':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,44,47,50,52,53,54,55,57,58,59,60,63,64,66,67,68,69,70,72,73,74,75,84,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,118,119,120,124,125,126,131,132,133,134,136,139,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,168,169,172,173,175,179,180,181,186,187,188,189,191,196,197,198,199,201,204,206,207,208,209,210,211,212,213,214,215,216,217,219,221,222,223,224,225,229,232,233,234,235,236,237,238,239,240,241,242,243,263,264,265,267,268,270,273,274,279,280,282,285,287,289,290,294,295,296,297,299,301,302,303,304,305,307,309,310,311,314,316,319,320,321,323,325,327,328,329,333,334,335,339,340,342,343,348,349,350,351,352,353,354,355,356,358,359,360,361,363,365,367,368,370,371,373,374,376,377,378,379,380,381,383,384,385,386,387,388,389,390,],[15,15,-1,-3,-4,15,-11,-12,51,15,-15,-17,-19,-70,15,-77,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-230,-9,94,51,-16,-18,-20,-78,-79,-81,-42,-63,-6,-124,-229,-13,15,-7,142,-10,15,-72,-202,-204,-205,-203,142,169,175,175,94,179,-208,-216,-206,-207,-217,-218,-222,-223,-224,-225,-226,-74,188,-71,-80,-82,15,-52,-54,-14,-229,-229,142,-8,142,142,-73,142,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,268,142,142,-214,-215,142,142,-75,-76,188,281,188,94,-41,94,-53,-55,-61,94,142,-229,-128,-111,-112,-113,-114,-115,-116,-117,-118,-216,94,-122,303,304,305,142,307,142,142,-152,-153,-154,-155,-156,-157,-158,-159,-160,-161,-162,94,-219,142,268,268,-210,-212,-213,281,94,-107,-103,-40,15,94,-62,-125,-129,-126,142,142,-123,142,142,142,142,-144,-145,-146,142,94,-209,-211,142,-105,-109,-102,-108,-104,-119,142,-121,355,142,-143,-147,-106,-110,-127,-120,142,142,142,142,142,142,-130,-132,-133,142,142,142,142,-135,142,142,142,142,-131,-134,-136,142,-137,142,142,-139,-138,142,-141,-140,-142,]),'ASTERISK':([0,1,2,3,4,6,7,8,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,44,47,50,53,54,55,57,59,60,63,64,66,67,68,69,70,72,73,74,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,117,120,124,125,126,131,132,133,134,136,139,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,168,169,172,173,174,175,176,177,178,179,188,189,191,196,197,198,199,201,204,206,207,208,209,210,211,212,213,214,215,216,217,219,224,229,232,233,234,235,236,237,238,239,240,241,242,243,258,259,260,261,262,263,264,265,268,270,273,274,280,287,289,290,294,295,296,297,299,301,302,303,304,305,307,309,310,311,314,316,317,319,320,321,322,333,334,335,340,342,343,350,351,352,353,354,355,356,358,359,360,361,363,365,367,368,370,371,373,374,376,377,378,379,380,381,383,384,385,386,387,388,389,390,],[16,16,-1,-3,-4,16,-11,-12,-15,-17,-19,16,16,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-230,-9,92,-16,-18,-20,16,-81,-42,-63,-6,-124,-229,-13,16,-7,92,-10,16,-202,161,-204,-205,-190,-203,-194,92,-196,92,92,92,92,-208,-216,-206,-207,-217,-218,-222,-223,-224,-225,-226,16,-82,16,-52,-54,-14,-229,-229,92,-8,92,-194,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,16,92,92,-214,-215,-197,92,-198,-199,-200,92,16,92,-41,92,-53,-55,-61,92,92,-229,-128,-111,-112,-113,-114,-115,-116,-117,-118,-216,92,-122,92,92,92,-152,-153,-154,-155,-156,-157,-158,-159,-160,-161,-162,161,161,-191,-192,-193,92,-219,92,16,-210,-212,-213,92,-40,16,92,-62,-125,-129,-126,92,92,-123,92,92,92,92,-144,-145,-146,92,92,-195,-209,-211,92,-201,-119,92,-121,92,-143,-147,-127,-120,92,92,92,92,92,92,-130,-132,-133,92,92,92,92,-135,92,92,92,92,-131,-134,-136,92,-137,92,92,-139,-138,92,-141,-140,-142,]),'AUTO':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,63,64,65,66,67,68,70,71,73,75,111,118,131,133,136,144,180,181,183,188,191,199,268,281,287,294,295,297,350,],[17,17,-1,-3,-4,-228,-11,-12,-68,17,17,17,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,17,-228,-9,17,-69,-42,-63,-6,17,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-228,-8,-73,-75,-76,17,17,-41,-61,17,17,-40,-62,-125,-126,-127,]),'REGISTER':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,63,64,65,66,67,68,70,71,73,75,111,118,131,133,136,144,180,181,183,188,191,199,268,281,287,294,295,297,350,],[18,18,-1,-3,-4,-228,-11,-12,-68,18,18,18,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,18,-228,-9,18,-69,-42,-63,-6,18,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-228,-8,-73,-75,-76,18,18,-41,-61,18,18,-40,-62,-125,-126,-127,]),'STATIC':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,63,64,65,66,67,68,70,71,73,75,111,118,131,133,136,144,180,181,183,188,191,199,268,281,287,294,295,297,350,],[19,19,-1,-3,-4,-228,-11,-12,-68,19,19,19,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,19,-228,-9,19,-69,-42,-63,-6,19,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-228,-8,-73,-75,-76,19,19,-41,-61,19,19,-40,-62,-125,-126,-127,]),'EXTERN':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,63,64,65,66,67,68,70,71,73,75,111,118,131,133,136,144,180,181,183,188,191,199,268,281,287,294,295,297,350,],[20,20,-1,-3,-4,-228,-11,-12,-68,20,20,20,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,20,-228,-9,20,-69,-42,-63,-6,20,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-228,-8,-73,-75,-76,20,20,-41,-61,20,20,-40,-62,-125,-126,-127,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,63,64,65,66,67,68,70,71,73,75,111,118,131,133,136,144,180,181,183,188,191,199,268,281,287,294,295,297,350,],[21,21,-1,-3,-4,-228,-11,-12,-68,21,21,21,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,21,-228,-9,21,-69,-42,-63,-6,21,-124,-228,-13,-7,-228,-10,-72,-74,-71,-14,-228,-8,-73,-75,-76,21,21,-41,-61,21,21,-40,-62,-125,-126,-127,]),'VOID':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[22,22,-1,-3,-4,-228,-11,-12,-68,22,22,22,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,22,-228,-9,22,-69,-42,22,-63,-6,22,-124,-228,-13,-7,-228,-10,-72,22,-74,-71,22,22,-45,22,22,-14,-228,-8,22,-73,22,-75,-76,22,22,22,-41,-46,-61,22,22,-40,-51,-62,-125,-126,-127,]),'CHAR':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[23,23,-1,-3,-4,-228,-11,-12,-68,23,23,23,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,23,-228,-9,23,-69,-42,23,-63,-6,23,-124,-228,-13,-7,-228,-10,-72,23,-74,-71,23,23,-45,23,23,-14,-228,-8,23,-73,23,-75,-76,23,23,23,-41,-46,-61,23,23,-40,-51,-62,-125,-126,-127,]),'SHORT':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[24,24,-1,-3,-4,-228,-11,-12,-68,24,24,24,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,24,-228,-9,24,-69,-42,24,-63,-6,24,-124,-228,-13,-7,-228,-10,-72,24,-74,-71,24,24,-45,24,24,-14,-228,-8,24,-73,24,-75,-76,24,24,24,-41,-46,-61,24,24,-40,-51,-62,-125,-126,-127,]),'INT':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[25,25,-1,-3,-4,-228,-11,-12,-68,25,25,25,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,25,-228,-9,25,-69,-42,25,-63,-6,25,-124,-228,-13,-7,-228,-10,-72,25,-74,-71,25,25,-45,25,25,-14,-228,-8,25,-73,25,-75,-76,25,25,25,-41,-46,-61,25,25,-40,-51,-62,-125,-126,-127,]),'LONG':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[26,26,-1,-3,-4,-228,-11,-12,-68,26,26,26,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,26,-228,-9,26,-69,-42,26,-63,-6,26,-124,-228,-13,-7,-228,-10,-72,26,-74,-71,26,26,-45,26,26,-14,-228,-8,26,-73,26,-75,-76,26,26,26,-41,-46,-61,26,26,-40,-51,-62,-125,-126,-127,]),'FLOAT':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[27,27,-1,-3,-4,-228,-11,-12,-68,27,27,27,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,27,-228,-9,27,-69,-42,27,-63,-6,27,-124,-228,-13,-7,-228,-10,-72,27,-74,-71,27,27,-45,27,27,-14,-228,-8,27,-73,27,-75,-76,27,27,27,-41,-46,-61,27,27,-40,-51,-62,-125,-126,-127,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[28,28,-1,-3,-4,-228,-11,-12,-68,28,28,28,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,28,-228,-9,28,-69,-42,28,-63,-6,28,-124,-228,-13,-7,-228,-10,-72,28,-74,-71,28,28,-45,28,28,-14,-228,-8,28,-73,28,-75,-76,28,28,28,-41,-46,-61,28,28,-40,-51,-62,-125,-126,-127,]),'SIGNED':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[29,29,-1,-3,-4,-228,-11,-12,-68,29,29,29,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,29,-228,-9,29,-69,-42,29,-63,-6,29,-124,-228,-13,-7,-228,-10,-72,29,-74,-71,29,29,-45,29,29,-14,-228,-8,29,-73,29,-75,-76,29,29,29,-41,-46,-61,29,29,-40,-51,-62,-125,-126,-127,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[30,30,-1,-3,-4,-228,-11,-12,-68,30,30,30,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,30,-228,-9,30,-69,-42,30,-63,-6,30,-124,-228,-13,-7,-228,-10,-72,30,-74,-71,30,30,-45,30,30,-14,-228,-8,30,-73,30,-75,-76,30,30,30,-41,-46,-61,30,30,-40,-51,-62,-125,-126,-127,]),'TYPEDEF_NAME':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[33,33,-1,-3,-4,-228,-11,-12,-68,33,33,33,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,33,-228,-9,33,-69,-42,33,-63,-6,33,-124,-228,-13,-7,-228,-10,-72,33,-74,-71,33,33,-45,33,33,-14,-228,-8,33,-73,33,-75,-76,33,33,33,-41,-46,-61,33,33,-40,-51,-62,-125,-126,-127,]),'CONST':([0,1,2,3,4,5,7,8,9,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,57,59,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,120,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[34,34,-1,-3,-4,-228,-11,-12,-68,34,34,34,-70,34,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,34,-228,-9,34,-69,34,-81,-42,34,-63,-6,34,-124,-228,-13,-7,-228,-10,-72,34,-74,-71,-82,34,34,-45,34,34,-14,-228,-8,34,-73,34,-75,-76,34,34,34,-41,-46,-61,34,34,-40,-51,-62,-125,-126,-127,]),'VOLATILE':([0,1,2,3,4,5,7,8,9,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,57,59,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,120,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[35,35,-1,-3,-4,-228,-11,-12,-68,35,35,35,-70,35,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,35,-228,-9,35,-69,35,-81,-42,35,-63,-6,35,-124,-228,-13,-7,-228,-10,-72,35,-74,-71,-82,35,35,-45,35,35,-14,-228,-8,35,-73,35,-75,-76,35,35,35,-41,-46,-61,35,35,-40,-51,-62,-125,-126,-127,]),'IDENTIFIER':([0,1,2,3,4,6,7,8,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,47,50,51,53,54,55,57,58,59,60,62,63,64,66,67,68,69,70,72,73,74,84,89,90,92,94,96,97,98,99,102,103,117,119,120,124,125,126,130,131,132,133,134,136,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,170,171,175,179,182,186,188,189,191,196,197,198,199,200,201,204,206,207,208,209,210,211,212,213,214,215,217,219,224,226,229,232,233,234,235,236,237,238,239,240,241,242,243,263,265,280,287,289,290,294,295,296,297,299,301,302,303,304,305,307,309,310,311,314,316,321,333,334,335,340,342,343,350,351,352,353,354,355,356,358,359,360,361,363,365,367,368,370,371,373,374,376,377,378,379,380,381,383,384,385,386,387,388,389,390,],[36,36,-1,-3,-4,36,-11,-12,36,-15,-17,-19,36,-77,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,36,36,-43,-44,-2,-5,-230,-9,36,36,-16,-18,-20,-78,-79,-81,-42,36,-63,-6,-124,-229,-13,36,-7,36,-10,36,-202,-204,-205,-203,36,36,36,36,36,-206,-207,36,-80,-82,36,-52,-54,36,-14,-229,-229,36,-8,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-41,36,-53,-55,-61,36,36,36,-229,-128,-111,-112,-113,-114,-115,-116,-117,-118,36,-122,36,36,36,36,-152,-153,-154,-155,-156,-157,-158,-159,-160,-161,-162,36,36,36,-40,36,36,-62,-125,-129,-126,36,36,-123,36,36,36,36,-144,-145,-146,36,36,36,-119,36,-121,36,-143,-147,-127,-120,36,36,36,36,36,36,-130,-132,-133,36,36,36,36,-135,36,36,36,36,-131,-134,-136,36,-137,36,36,-139,-138,36,-141,-140,-142,]),'ENUM':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[38,38,-1,-3,-4,-228,-11,-12,-68,38,38,38,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,38,-228,-9,38,-69,-42,38,-63,-6,38,-124,-228,-13,-7,-228,-10,-72,38,-74,-71,38,38,-45,38,38,-14,-228,-8,38,-73,38,-75,-76,38,38,38,-41,-46,-61,38,38,-40,-51,-62,-125,-126,-127,]),'STRUCT':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[39,39,-1,-3,-4,-228,-11,-12,-68,39,39,39,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,39,-228,-9,39,-69,-42,39,-63,-6,39,-124,-228,-13,-7,-228,-10,-72,39,-74,-71,39,39,-45,39,39,-14,-228,-8,39,-73,39,-75,-76,39,39,39,-41,-46,-61,39,39,-40,-51,-62,-125,-126,-127,]),'UNION':([0,1,2,3,4,5,7,8,9,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,41,42,43,44,45,46,47,51,52,60,61,63,64,65,66,67,68,70,71,73,75,94,111,118,121,122,123,125,126,131,133,136,142,144,179,180,181,183,188,190,191,192,199,268,281,287,288,294,295,297,350,],[40,40,-1,-3,-4,-228,-11,-12,-68,40,40,40,-70,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-227,-2,-5,-228,-230,40,-228,-9,40,-69,-42,40,-63,-6,40,-124,-228,-13,-7,-228,-10,-72,40,-74,-71,40,40,-45,40,40,-14,-228,-8,40,-73,40,-75,-76,40,40,40,-41,-46,-61,40,40,-40,-51,-62,-125,-126,-127,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,41,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,45,65,],[4,4,68,131,]),'declarator':([0,1,6,15,69,74,117,124,188,289,],[5,5,46,56,135,135,184,195,56,195,]),'declaration_specifiers':([0,1,11,12,13,45,51,65,183,188,268,281,],[6,6,53,54,55,69,117,69,117,117,117,117,]),'direct_declarator':([0,1,6,10,15,69,74,117,124,186,188,289,],[9,9,9,52,9,9,9,9,9,52,9,9,]),'pointer':([0,1,6,15,16,57,69,74,117,124,166,188,268,289,],[10,10,10,10,58,119,10,10,186,10,267,186,267,10,]),'storage_class_specifier':([0,1,11,12,13,45,51,65,183,188,268,281,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'type_specifier':([0,1,11,12,13,45,51,61,65,94,121,122,125,126,142,179,183,188,190,268,281,],[12,12,12,12,12,12,12,125,12,125,125,125,125,125,125,125,12,12,125,12,12,]),'type_qualifier':([0,1,11,12,13,16,45,51,57,61,65,94,121,122,125,126,142,179,183,188,190,268,281,],[13,13,13,13,13,59,13,13,120,126,13,126,126,126,126,126,126,126,13,13,126,13,13,]),'identifier':([0,1,6,10,15,37,38,50,51,62,69,72,74,94,96,97,98,99,117,124,130,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,170,171,175,179,182,186,188,189,196,200,201,204,217,224,226,229,232,263,265,280,289,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[14,14,14,14,14,60,63,101,115,129,14,101,14,101,101,101,101,101,14,14,129,216,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,273,274,101,101,276,14,14,101,101,129,101,216,101,216,308,101,101,101,101,101,14,101,216,216,101,101,101,101,101,101,101,216,101,216,216,216,101,101,101,216,101,101,216,216,216,101,216,216,216,216,216,]),'struct_or_union_specifier':([0,1,11,12,13,45,51,61,65,94,121,122,125,126,142,179,183,188,190,268,281,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'enum_specifier':([0,1,11,12,13,45,51,61,65,94,121,122,125,126,142,179,183,188,190,268,281,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'struct_or_union':([0,1,11,12,13,45,51,61,65,94,121,122,125,126,142,179,183,188,190,268,281,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'compound_statement':([5,43,46,71,134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[42,64,70,136,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'declaration_list':([5,46,67,],[43,71,133,]),'insert_mode_e':([5,43,46,67,71,133,206,],[45,65,45,45,65,65,298,]),'init_declarator_list':([6,69,],[48,48,]),'init_declarator':([6,69,74,],[49,49,143,]),'type_qualifier_list':([16,],[57,]),'push_scope_e':([44,],[67,]),'constant_expression':([50,189,196,201,217,280,290,],[76,286,291,293,300,324,331,]),'conditional_expression':([50,72,94,134,139,142,145,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[77,140,140,140,140,140,140,140,140,140,140,77,77,77,140,77,140,140,140,140,77,77,140,140,140,140,140,140,140,346,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'logical_or_expression':([50,72,94,134,139,142,145,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'logical_and_expression':([50,72,94,134,139,142,145,146,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[79,79,79,79,79,79,79,245,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'inclusive_or_expression':([50,72,94,134,139,142,145,146,147,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[80,80,80,80,80,80,80,80,246,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'exclusive_or_expression':([50,72,94,134,139,142,145,146,147,148,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[81,81,81,81,81,81,81,81,81,247,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'and_expression':([50,72,94,134,139,142,145,146,147,148,149,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[82,82,82,82,82,82,82,82,82,82,248,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'equality_expression':([50,72,94,134,139,142,145,146,147,148,149,150,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[83,83,83,83,83,83,83,83,83,83,83,249,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'relational_expression':([50,72,94,134,139,142,145,146,147,148,149,150,151,152,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[85,85,85,85,85,85,85,85,85,85,85,85,250,251,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'shift_expression':([50,72,94,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,252,253,254,255,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'additive_expression':([50,72,94,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,256,257,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'multiplicative_expression':([50,72,94,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,168,169,175,179,189,196,201,204,217,224,229,232,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,258,259,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'cast_expression':([50,72,94,98,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[91,91,91,177,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,260,261,262,91,91,91,91,91,91,91,91,91,91,91,91,317,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'unary_expression':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[93,141,141,174,176,93,178,141,141,141,141,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,141,141,141,141,93,93,93,141,93,141,141,141,93,141,93,93,141,141,141,141,141,141,141,93,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'postfix_expression':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'unary_operator':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'primary_expression':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'constant':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'string':([50,72,94,96,97,98,99,134,139,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,169,175,179,189,196,201,204,217,224,229,232,263,265,280,290,299,301,303,304,305,307,314,316,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'parameter_type_list':([51,188,268,281,],[112,284,284,326,]),'identifier_list':([51,],[113,]),'parameter_list':([51,188,268,281,],[114,114,114,114,]),'parameter_declaration':([51,183,188,268,281,],[116,278,116,116,116,]),'struct_declaration_list':([61,121,],[122,190,]),'struct_declaration':([61,121,122,190,],[123,123,192,192,]),'specifier_qualifier_list':([61,94,121,122,125,126,142,179,190,],[124,166,124,124,197,198,166,166,124,]),'enumerator_list':([62,130,],[127,202,]),'enumerator':([62,130,200,],[128,128,292,]),'statement_list':([67,133,],[132,206,]),'read_mode_e':([67,132,133,206,],[134,204,134,204,]),'initializer':([72,139,314,],[137,231,345,]),'assignment_expression':([72,94,134,139,142,145,168,169,175,179,204,224,229,232,265,299,301,303,304,305,307,314,321,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[138,167,167,138,167,167,167,272,167,167,167,167,167,315,318,167,167,167,167,167,167,138,347,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'type_name':([94,142,179,],[164,164,275,]),'expression':([94,134,142,145,168,175,179,204,224,229,299,301,303,304,305,307,334,340,352,353,354,355,356,358,363,365,367,368,371,373,374,376,380,383,384,387,],[165,220,165,244,269,165,165,220,220,312,220,220,336,337,338,341,220,357,220,220,220,362,364,366,220,372,375,220,220,220,382,220,220,220,220,220,]),'abstract_declarator':([117,166,188,268,],[185,266,283,283,]),'direct_abstract_declarator':([117,166,186,188,267,268,],[187,187,279,187,279,187,]),'struct_declarator_list':([124,],[193,]),'struct_declarator':([124,289,],[194,330,]),'pop_scope_e':([132,133,298,],[203,205,332,]),'statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[207,296,306,333,335,351,359,360,361,370,377,379,381,385,386,388,389,390,]),'labeled_statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'expression_statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'selection_statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'iteration_statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'jump_statement':([134,204,224,299,301,334,352,353,354,363,368,371,373,376,380,383,384,387,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'initializer_list':([139,],[230,]),'assignment_operator':([141,],[232,]),'argument_expression_list':([169,],[271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','Parser_M.py',36),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','Parser_M.py',42),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','Parser_M.py',48),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','Parser_M.py',54),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','Parser_M.py',60),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','Parser_M.py',66),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','Parser_M.py',72),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','Parser_M.py',78),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','Parser_M.py',84),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','Parser_M.py',90),
  ('declaration -> PD_O','declaration',1,'p_declaration_3','Parser_M.py',109),
  ('declaration -> PD_F','declaration',1,'p_declaration_4','Parser_M.py',116),
  ('declaration_list -> insert_mode_e declaration','declaration_list',2,'p_declaration_list_1','Parser_M.py',125),
  ('declaration_list -> declaration_list insert_mode_e declaration','declaration_list',3,'p_declaration_list_2','Parser_M.py',131),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','Parser_M.py',137),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','Parser_M.py',144),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','Parser_M.py',150),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','Parser_M.py',157),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','Parser_M.py',163),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','Parser_M.py',169),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','Parser_M.py',175),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','Parser_M.py',182),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','Parser_M.py',189),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','Parser_M.py',196),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','Parser_M.py',202),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','Parser_M.py',209),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','Parser_M.py',217),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','Parser_M.py',225),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','Parser_M.py',231),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','Parser_M.py',239),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','Parser_M.py',247),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','Parser_M.py',255),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','Parser_M.py',263),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','Parser_M.py',271),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','Parser_M.py',279),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','Parser_M.py',287),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','Parser_M.py',295),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','Parser_M.py',303),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','Parser_M.py',311),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','Parser_M.py',319),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','Parser_M.py',325),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','Parser_M.py',331),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','Parser_M.py',337),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','Parser_M.py',343),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','Parser_M.py',349),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','Parser_M.py',355),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','Parser_M.py',361),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','Parser_M.py',374),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','Parser_M.py',389),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','Parser_M.py',400),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','Parser_M.py',406),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','Parser_M.py',412),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','Parser_M.py',418),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','Parser_M.py',424),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','Parser_M.py',430),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','Parser_M.py',436),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','Parser_M.py',442),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','Parser_M.py',448),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','Parser_M.py',454),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','Parser_M.py',460),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','Parser_M.py',466),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','Parser_M.py',472),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','Parser_M.py',478),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','Parser_M.py',484),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','Parser_M.py',490),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','Parser_M.py',496),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','Parser_M.py',502),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','Parser_M.py',508),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','Parser_M.py',517),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','Parser_M.py',524),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','Parser_M.py',534),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','Parser_M.py',541),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','Parser_M.py',548),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','Parser_M.py',555),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','Parser_M.py',561),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','Parser_M.py',570),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','Parser_M.py',576),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','Parser_M.py',582),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','Parser_M.py',588),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','Parser_M.py',594),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','Parser_M.py',600),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','Parser_M.py',606),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','Parser_M.py',612),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','Parser_M.py',618),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','Parser_M.py',624),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','Parser_M.py',630),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','Parser_M.py',636),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','Parser_M.py',642),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','Parser_M.py',648),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','Parser_M.py',654),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','Parser_M.py',660),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','Parser_M.py',666),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','Parser_M.py',672),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','Parser_M.py',678),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','Parser_M.py',684),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','Parser_M.py',690),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','Parser_M.py',696),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','Parser_M.py',702),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','Parser_M.py',708),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','Parser_M.py',714),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','Parser_M.py',720),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','Parser_M.py',726),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','Parser_M.py',732),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','Parser_M.py',738),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','Parser_M.py',744),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','Parser_M.py',750),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','Parser_M.py',756),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','Parser_M.py',762),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','Parser_M.py',768),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','Parser_M.py',774),
  ('statement -> labeled_statement','statement',1,'p_statement_1','Parser_M.py',780),
  ('statement -> compound_statement','statement',1,'p_statement_2','Parser_M.py',786),
  ('statement -> expression_statement','statement',1,'p_statement_3','Parser_M.py',792),
  ('statement -> selection_statement','statement',1,'p_statement_4','Parser_M.py',798),
  ('statement -> iteration_statement','statement',1,'p_statement_5','Parser_M.py',804),
  ('statement -> jump_statement','statement',1,'p_statement_6','Parser_M.py',810),
  ('statement -> PD_O','statement',1,'p_statement_7','Parser_M.py',816),
  ('statement -> PD_F','statement',1,'p_statement_8','Parser_M.py',823),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','Parser_M.py',830),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','Parser_M.py',836),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','Parser_M.py',842),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','Parser_M.py',848),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','Parser_M.py',854),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','Parser_M.py',860),
  ('compound_statement -> OPENBRACE push_scope_e statement_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_2','Parser_M.py',866),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list pop_scope_e CLOSEBRACE','compound_statement',5,'p_compound_statement_3','Parser_M.py',872),
  ('compound_statement -> OPENBRACE push_scope_e declaration_list statement_list insert_mode_e pop_scope_e CLOSEBRACE','compound_statement',7,'p_compound_statement_4','Parser_M.py',878),
  ('statement_list -> read_mode_e statement','statement_list',2,'p_statement_list_1','Parser_M.py',885),
  ('statement_list -> statement_list read_mode_e statement','statement_list',3,'p_statement_list_2','Parser_M.py',891),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','Parser_M.py',897),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','Parser_M.py',903),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','Parser_M.py',909),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','Parser_M.py',915),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','Parser_M.py',921),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','Parser_M.py',927),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','Parser_M.py',933),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','Parser_M.py',939),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','Parser_M.py',945),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','Parser_M.py',951),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','Parser_M.py',957),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','Parser_M.py',963),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','Parser_M.py',969),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','Parser_M.py',975),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','Parser_M.py',981),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','Parser_M.py',987),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','Parser_M.py',993),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','Parser_M.py',999),
  ('expression -> assignment_expression','expression',1,'p_expression_1','Parser_M.py',1005),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','Parser_M.py',1011),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','Parser_M.py',1017),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','Parser_M.py',1023),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','Parser_M.py',1029),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','Parser_M.py',1035),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','Parser_M.py',1041),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','Parser_M.py',1047),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','Parser_M.py',1053),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','Parser_M.py',1059),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','Parser_M.py',1065),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','Parser_M.py',1071),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','Parser_M.py',1077),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','Parser_M.py',1083),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','Parser_M.py',1089),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','Parser_M.py',1095),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','Parser_M.py',1101),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','Parser_M.py',1107),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','Parser_M.py',1113),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','Parser_M.py',1119),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','Parser_M.py',1125),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','Parser_M.py',1131),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','Parser_M.py',1137),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','Parser_M.py',1143),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','Parser_M.py',1149),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','Parser_M.py',1155),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','Parser_M.py',1161),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','Parser_M.py',1167),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','Parser_M.py',1173),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','Parser_M.py',1179),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','Parser_M.py',1185),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','Parser_M.py',1191),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','Parser_M.py',1197),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','Parser_M.py',1203),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','Parser_M.py',1209),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','Parser_M.py',1215),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','Parser_M.py',1221),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','Parser_M.py',1227),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','Parser_M.py',1233),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','Parser_M.py',1239),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','Parser_M.py',1245),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','Parser_M.py',1251),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','Parser_M.py',1257),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','Parser_M.py',1263),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','Parser_M.py',1269),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','Parser_M.py',1275),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','Parser_M.py',1281),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','Parser_M.py',1287),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','Parser_M.py',1293),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','Parser_M.py',1299),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','Parser_M.py',1305),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','Parser_M.py',1311),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','Parser_M.py',1317),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','Parser_M.py',1323),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','Parser_M.py',1329),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','Parser_M.py',1335),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','Parser_M.py',1341),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','Parser_M.py',1347),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','Parser_M.py',1353),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','Parser_M.py',1359),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','Parser_M.py',1365),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','Parser_M.py',1371),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','Parser_M.py',1377),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','Parser_M.py',1383),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','Parser_M.py',1389),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','Parser_M.py',1395),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','Parser_M.py',1401),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','Parser_M.py',1407),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','Parser_M.py',1413),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','Parser_M.py',1419),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','Parser_M.py',1425),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','Parser_M.py',1431),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','Parser_M.py',1437),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','Parser_M.py',1443),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','Parser_M.py',1449),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','Parser_M.py',1455),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','Parser_M.py',1461),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','Parser_M.py',1467),
  ('string -> STRING_LITERAL','string',1,'p_string_1','Parser_M.py',1473),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','Parser_M.py',1479),
  ('insert_mode_e -> <empty>','insert_mode_e',0,'p_empty_insertmode','Parser_M.py',1489),
  ('read_mode_e -> <empty>','read_mode_e',0,'p_empty_readmode','Parser_M.py',1499),
  ('push_scope_e -> <empty>','push_scope_e',0,'p_empty_push_scope','Parser_M.py',1509),
  ('pop_scope_e -> <empty>','pop_scope_e',0,'p_empty_pop_scope','Parser_M.py',1517),
]
