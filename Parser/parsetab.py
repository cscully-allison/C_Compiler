
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration_list :  declarationdeclaration_list :  declaration_list declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator :  direct_declaratordeclarator :  pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementlabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE read_mode_e statement_list insert_mode_e CLOSEBRACEcompound_statement :  OPENBRACE insert_mode_e declaration_list read_mode_e CLOSEBRACEcompound_statement :  OPENBRACE insert_mode_e declaration_list read_mode_e statement_list insert_mode_e CLOSEBRACEstatement_list :  statementstatement_list :  statement_list statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIERinsert_mode_e :read_mode_e :'
    
_lr_action_items = {'VOID':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[5,5,-26,-36,-33,-24,-25,-21,-22,-1,5,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,5,-31,-34,-37,5,5,-68,-40,5,-67,-61,5,-9,5,-2,-224,-5,-11,5,5,5,5,-43,5,-69,-70,5,-72,-10,-7,5,5,-120,-6,-12,5,-39,-44,-59,5,-71,5,-73,5,-74,5,-8,5,-38,-49,-60,5,5,-122,-121,-123,]),'DIV_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,238,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'MINUS':([17,47,52,58,61,74,75,76,77,79,80,84,85,87,88,91,92,93,94,95,96,97,98,102,103,104,105,106,107,109,120,122,125,126,129,137,142,143,144,145,146,147,148,149,155,156,157,158,159,160,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,183,193,197,198,199,201,202,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,257,258,259,262,263,265,266,269,270,271,274,285,287,288,290,291,293,294,295,296,298,299,301,306,307,308,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-223,80,-9,-225,-11,-213,-190,-219,80,-220,-201,-218,80,-202,-200,-214,80,-192,-199,171,-198,-204,-186,-222,-183,80,-203,-221,80,-212,-10,80,80,-120,-12,80,80,-194,80,80,80,80,-190,80,80,80,80,80,80,80,-196,80,80,-211,-210,80,80,80,80,80,80,80,80,80,80,80,-193,-195,80,80,-225,-111,-113,-109,-212,80,-110,80,80,-124,-114,80,-118,-112,80,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,80,80,-215,80,-208,-209,-206,-184,-185,171,171,-189,-187,-188,80,80,80,-142,80,-140,-125,-119,80,80,80,-141,80,-191,80,-197,-205,-207,80,80,-122,80,-139,-115,-143,80,-121,-117,80,80,80,80,-116,80,80,80,-123,80,80,80,-129,-128,-126,-131,80,80,80,80,80,-132,-133,80,-135,80,80,-130,-127,-134,-136,-137,80,-138,]),'LE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,156,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,156,156,-189,-187,-188,-191,-197,-205,-207,]),'ENUMERATION_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[106,-9,-225,-11,106,-201,106,-202,-200,106,-199,-198,106,-203,106,-10,106,106,-120,-12,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-225,-111,-113,-109,106,-110,106,106,-124,-114,106,-118,-112,106,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,106,106,106,106,106,106,-142,106,-140,-125,-119,106,106,106,-141,106,106,106,106,-122,106,-139,-115,-143,106,-121,-117,106,106,106,106,-116,106,106,106,-123,106,106,106,-129,-128,-126,-131,106,106,106,106,106,-132,-133,106,-135,106,106,-130,-127,-134,-136,-137,106,-138,]),'LONG':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[16,16,-26,-36,-33,-24,-25,-21,-22,-1,16,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,16,-31,-34,-37,16,16,-68,-40,16,-67,-61,16,-9,16,-2,-224,-5,-11,16,16,16,16,-43,16,-69,-70,16,-72,-10,-7,16,16,-120,-6,-12,16,-39,-44,-59,16,-71,16,-73,16,-74,16,-8,16,-38,-49,-60,16,16,-122,-121,-123,]),'PLUS':([17,47,52,58,61,74,75,76,77,79,80,84,85,87,88,91,92,93,94,95,96,97,98,102,103,104,105,106,107,109,120,122,125,126,129,137,142,143,144,145,146,147,148,149,155,156,157,158,159,160,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,183,193,197,198,199,201,202,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,257,258,259,262,263,265,266,269,270,271,274,285,287,288,290,291,293,294,295,296,298,299,301,306,307,308,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-223,88,-9,-225,-11,-213,-190,-219,88,-220,-201,-218,88,-202,-200,-214,88,-192,-199,170,-198,-204,-186,-222,-183,88,-203,-221,88,-212,-10,88,88,-120,-12,88,88,-194,88,88,88,88,-190,88,88,88,88,88,88,88,-196,88,88,-211,-210,88,88,88,88,88,88,88,88,88,88,88,-193,-195,88,88,-225,-111,-113,-109,-212,88,-110,88,88,-124,-114,88,-118,-112,88,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,88,88,-215,88,-208,-209,-206,-184,-185,170,170,-189,-187,-188,88,88,88,-142,88,-140,-125,-119,88,88,88,-141,88,-191,88,-197,-205,-207,88,88,-122,88,-139,-115,-143,88,-121,-117,88,88,88,88,-116,88,88,88,-123,88,88,88,-129,-128,-126,-131,88,88,88,88,88,-132,-133,88,-135,88,88,-130,-127,-134,-136,-137,88,-138,]),'TYPEDEF_NAME':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[19,19,-26,-36,-33,-24,-25,-21,-22,-1,19,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,19,-31,-34,-37,19,19,-68,-40,19,-67,-61,19,-9,19,-2,-224,-5,-11,19,19,19,19,-43,19,-69,-70,19,-72,-10,-7,19,19,-120,-6,-12,19,-39,-44,-59,19,-71,19,-73,19,-74,19,-8,19,-38,-49,-60,19,19,-122,-121,-123,]),'GT':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,155,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,155,155,-189,-187,-188,-191,-197,-205,-207,]),'GOTO':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,200,-120,-12,-225,-111,-113,-109,-110,200,-124,-114,200,-118,-112,200,200,-142,-140,-125,-119,200,-141,-122,200,-139,-115,-143,-121,-117,200,200,-116,200,200,-123,200,-129,-128,-126,-131,200,200,200,200,-132,-133,200,-135,200,200,-130,-127,-134,-136,-137,200,-138,]),'ENUM':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[21,21,-26,-36,-33,-24,-25,-21,-22,-1,21,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,21,-31,-34,-37,21,21,-68,-40,21,-67,-61,21,-9,21,-2,-224,-5,-11,21,21,21,21,-43,21,-69,-70,21,-72,-10,-7,21,21,-120,-6,-12,21,-39,-44,-59,21,-71,21,-73,21,-74,21,-8,21,-38,-49,-60,21,21,-122,-121,-123,]),'PERIOD':([17,74,76,79,84,91,93,97,102,106,109,165,166,202,244,257,258,259,309,310,],[-223,-213,-219,-220,-218,-214,167,-204,-222,-221,-212,-211,-210,-212,-215,-208,-209,-206,-205,-207,]),'LEFT_OP':([17,74,75,76,79,84,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,173,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,173,173,173,173,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-191,-197,-205,-207,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[31,31,-26,-36,-33,-24,-25,-21,-22,-1,31,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,31,-31,-34,-37,31,31,-68,-40,31,-67,-61,31,-9,31,-2,-224,-5,-11,31,31,31,31,-43,31,-69,-70,31,-72,-10,-7,31,31,-120,-6,-12,31,-39,-44,-59,31,-71,31,-73,31,-74,31,-8,31,-38,-49,-60,31,31,-122,-121,-123,]),'INC_OP':([17,47,52,58,61,74,76,77,79,80,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,202,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,257,258,259,274,285,287,288,290,291,293,294,295,296,298,299,301,307,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-223,104,-9,-225,-11,-213,-219,104,-220,-201,-218,104,-202,-200,-214,104,166,-199,-198,-204,-222,104,-203,-221,104,-212,-10,104,104,-120,-12,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-211,-210,104,104,104,104,104,104,104,104,104,104,104,104,104,-225,-111,-113,-109,-212,104,-110,104,104,-124,-114,104,-118,-112,104,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,104,104,-215,104,-208,-209,-206,104,104,104,-142,104,-140,-125,-119,104,104,104,-141,104,104,-205,-207,104,104,-122,104,-139,-115,-143,104,-121,-117,104,104,104,104,-116,104,104,104,-123,104,104,104,-129,-128,-126,-131,104,104,104,104,104,-132,-133,104,-135,104,104,-130,-127,-134,-136,-137,104,-138,]),'NE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,101,102,103,106,109,143,148,162,165,166,180,181,202,229,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,175,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'SHORT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[2,2,-26,-36,-33,-24,-25,-21,-22,-1,2,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,2,-31,-34,-37,2,2,-68,-40,2,-67,-61,2,-9,2,-2,-224,-5,-11,2,2,2,2,-43,2,-69,-70,2,-72,-10,-7,2,2,-120,-6,-12,2,-39,-44,-59,2,-71,2,-73,2,-74,2,-8,2,-38,-49,-60,2,2,-122,-121,-123,]),'RETURN':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,203,-120,-12,-225,-111,-113,-109,-110,203,-124,-114,203,-118,-112,203,203,-142,-140,-125,-119,203,-141,-122,203,-139,-115,-143,-121,-117,203,203,-116,203,203,-123,203,-129,-128,-126,-131,203,203,203,203,-132,-133,203,-135,203,203,-130,-127,-134,-136,-137,203,-138,]),'OPENBRACE':([6,17,18,21,23,29,37,38,40,42,45,52,55,58,61,62,69,82,110,120,122,123,125,126,129,161,182,190,193,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,320,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[41,-223,-42,46,-66,-41,58,-68,63,-67,70,-9,58,-225,-11,58,-69,-70,-72,-10,193,58,58,-120,-12,-71,-73,-74,193,-225,-111,-113,-109,-110,58,-124,-114,58,-118,-112,58,58,-142,-140,-125,-119,58,-141,193,-122,58,-139,-115,-143,-121,-117,58,58,-116,58,58,-123,58,-129,-128,-126,-131,58,58,58,58,-132,-133,58,-135,58,58,-130,-127,-134,-136,-137,58,-138,]),'STATIC':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,124,126,128,129,131,141,161,182,188,190,191,196,197,220,225,248,275,321,328,350,],[8,8,-26,-36,-33,-24,-25,-21,-22,-1,8,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,8,-31,-34,-37,8,8,-68,-40,-67,-61,8,-9,8,-2,-224,-5,-11,8,-69,-70,-72,-10,-7,8,8,-120,-6,-12,-39,-59,-71,-73,8,-74,8,-8,8,-38,-60,8,8,-122,-121,-123,]),'EQ_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,101,102,103,106,109,143,148,162,165,166,180,181,202,229,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-172,-214,-192,-180,-204,-186,-175,176,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,176,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'SIZEOF':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[92,-9,-225,-11,92,-201,92,-202,-200,92,-199,-198,92,-203,92,-10,92,92,-120,-12,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-225,-111,-113,-109,92,-110,92,92,-124,-114,92,-118,-112,92,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,92,92,92,92,92,92,-142,92,-140,-125,-119,92,92,92,-141,92,92,92,92,-122,92,-139,-115,-143,92,-121,-117,92,92,92,92,-116,92,92,92,-123,92,92,92,-129,-128,-126,-131,92,92,92,92,92,-132,-133,92,-135,92,92,-130,-127,-134,-136,-137,92,-138,]),'OPENPAREN':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,19,20,22,23,24,25,26,27,28,30,31,32,33,34,35,36,38,39,40,42,44,45,47,49,50,51,52,56,57,58,59,60,61,65,67,68,69,74,76,77,79,80,82,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,110,113,117,118,119,120,121,122,125,126,128,129,131,133,134,137,141,142,144,145,146,147,149,153,155,156,157,158,159,160,161,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,182,183,186,187,188,190,193,196,197,198,199,201,202,203,204,205,207,210,211,212,213,214,216,217,218,219,220,221,223,225,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,257,258,259,272,274,276,277,285,287,288,290,291,293,294,295,296,298,299,301,307,309,310,311,312,313,315,317,318,320,321,322,323,324,325,326,328,329,331,333,337,338,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[11,-13,-26,-36,-33,-24,-25,-21,-22,11,11,-1,-15,-20,-32,-28,-223,-35,-23,-19,48,-75,11,-4,-29,-3,-27,-30,-17,-31,-34,-37,11,-68,-14,-40,48,-16,-61,85,-79,-76,-77,-9,-18,-2,-225,-5,11,-11,-50,-52,11,-69,-213,-219,144,-220,-201,-70,-218,149,-202,-200,-214,163,169,-199,-198,-204,-222,144,-203,-221,85,-212,-72,188,-80,-78,11,-10,-7,149,149,-120,-6,-12,-39,-51,-53,85,-59,85,149,85,85,85,149,248,85,85,85,85,149,85,-71,149,149,-211,-210,149,85,85,85,85,85,85,85,85,85,85,-73,85,275,188,188,-74,149,-8,-225,-111,-113,-109,-212,149,-110,290,149,296,85,298,-124,-114,149,-118,-112,301,-38,85,11,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,149,149,-215,85,248,248,-208,-209,-206,-101,85,275,-105,149,149,-142,149,-140,-125,-119,149,149,149,-141,149,85,-205,-207,149,-102,-103,-107,-106,-100,149,-122,149,-139,-115,-143,149,-121,-117,149,348,-104,-108,149,149,149,-116,149,149,149,-123,149,149,149,-129,-128,-126,-131,149,149,149,149,149,-132,-133,149,-135,149,149,-130,-127,-134,-136,-137,149,-138,]),'CLOSEBRACE':([17,52,58,61,64,66,71,72,73,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,120,126,129,130,132,139,143,148,154,162,165,166,180,181,195,197,198,199,201,204,207,213,214,217,218,224,226,227,228,229,230,244,249,250,251,252,254,257,258,259,262,263,264,265,266,267,268,269,270,271,283,284,285,288,291,292,293,294,299,304,306,308,309,310,319,320,321,322,323,324,325,328,329,335,339,340,341,346,350,356,357,359,360,369,370,372,376,377,378,379,380,382,],[-223,-9,126,-11,131,-43,-62,141,-64,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-10,-120,-12,220,-44,225,-194,-190,-146,-196,-211,-210,-193,-195,-90,-225,-111,-113,-109,-110,-224,-124,-114,-118,-112,-49,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-93,319,321,-142,-140,328,-125,-119,-141,-147,-191,-197,-205,-207,-91,340,-122,-224,-139,-115,-143,-121,-117,-160,-94,-92,350,-116,-123,-129,-128,-126,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'INTEGER_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[84,-9,-225,-11,84,-201,84,-202,-200,84,-199,-198,84,-203,84,-10,84,84,-120,-12,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-225,-111,-113,-109,84,-110,84,84,-124,-114,84,-118,-112,84,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,84,84,84,84,84,84,-142,84,-140,-125,-119,84,84,84,-141,84,84,84,84,-122,84,-139,-115,-143,84,-121,-117,84,84,84,84,-116,84,84,84,-123,84,84,84,-129,-128,-126,-131,84,84,84,84,84,-132,-133,84,-135,84,84,-130,-127,-134,-136,-137,84,-138,]),'CLOSEPAREN':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,43,44,45,48,49,50,51,56,65,67,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,110,111,112,113,114,115,116,117,118,131,133,134,141,143,148,150,151,152,153,154,161,162,165,166,169,180,181,182,184,185,186,187,188,190,220,225,228,229,230,244,246,247,248,249,250,251,252,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,304,305,306,308,309,310,312,313,315,316,317,318,330,332,334,335,336,337,338,342,352,353,354,358,363,365,366,375,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,69,-16,-61,110,-79,-76,-77,-18,-50,-52,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-72,-83,182,-86,190,-81,-88,-80,-78,-39,-51,-53,-59,-194,-190,244,245,-144,-95,-146,-71,-196,-211,-210,259,-193,-195,-73,-87,-85,-98,-97,277,-74,-38,-60,-169,-171,-167,-215,-96,-97,277,-177,-178,-176,-179,-163,308,-208,-209,-206,-216,310,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,315,-99,-105,317,318,-89,-82,-84,-147,-145,-191,-197,-205,-207,-102,-103,-107,338,-106,-100,345,347,349,-160,-217,-104,-108,351,361,362,364,367,371,373,374,381,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[15,15,-26,-36,-33,-24,-25,-21,-22,-1,15,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,15,-31,-34,-37,15,15,-68,-40,15,-67,-61,15,-9,15,-2,-224,-5,-11,15,15,15,15,-43,15,-69,-70,15,-72,-10,-7,15,15,-120,-6,-12,15,-39,-44,-59,15,-71,15,-73,15,-74,15,-8,15,-38,-49,-60,15,15,-122,-121,-123,]),'OR_OP':([17,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,143,148,162,165,166,180,181,202,228,229,230,244,249,250,251,252,254,257,258,259,262,263,264,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,160,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'COLON':([2,3,4,5,7,15,16,17,19,23,27,30,31,33,34,35,38,40,42,45,65,67,68,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,131,133,134,136,141,143,148,152,154,161,162,165,166,180,181,182,190,202,209,220,223,225,228,229,230,244,249,250,251,252,253,254,257,258,259,262,263,264,265,266,267,268,269,270,271,297,304,305,306,308,309,310,335,],[-26,-36,-33,-24,-25,-32,-28,-223,-35,-66,-29,-27,-30,-31,-34,-37,-68,-40,-67,-61,-50,-52,137,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-39,-51,-53,221,-59,-194,-190,-144,-146,-71,-196,-211,-210,-193,-195,-73,-74,287,295,-38,137,-60,-169,-171,-167,-215,-177,-178,-176,-179,307,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,331,-147,-145,-191,-197,-205,-207,-160,]),'$end':([12,26,28,36,52,57,59,120,121,126,128,196,321,328,350,],[-1,-4,-3,0,-9,-2,-5,-10,-7,-120,-6,-8,-122,-121,-123,]),'FOR':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,205,-120,-12,-225,-111,-113,-109,-110,205,-124,-114,205,-118,-112,205,205,-142,-140,-125,-119,205,-141,-122,205,-139,-115,-143,-121,-117,205,205,-116,205,205,-123,205,-129,-128,-126,-131,205,205,205,205,-132,-133,205,-135,205,205,-130,-127,-134,-136,-137,205,-138,]),'UNION':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[18,18,-26,-36,-33,-24,-25,-21,-22,-1,18,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,18,-31,-34,-37,18,18,-68,-40,18,-67,-61,18,-9,18,-2,-224,-5,-11,18,18,18,18,-43,18,-69,-70,18,-72,-10,-7,18,18,-120,-6,-12,18,-39,-44,-59,18,-71,18,-73,18,-74,18,-8,18,-38,-49,-60,18,18,-122,-121,-123,]),'ELSE':([126,198,199,201,204,214,217,218,288,291,294,299,321,323,324,325,328,329,346,350,356,357,359,360,369,370,372,376,377,378,379,380,382,],[-120,-111,-113,-109,-110,-114,-118,-112,-142,-140,-119,-141,-122,-139,-115,-143,-121,-117,-116,-123,-129,-128,368,-131,-132,-133,-135,-130,-127,-134,-136,-137,-138,]),'AMPERSAND':([17,47,52,58,61,74,75,76,77,79,80,81,84,85,86,87,88,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,109,120,122,125,126,129,137,142,143,144,145,146,147,148,149,155,156,157,158,159,160,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,183,193,197,198,199,201,202,203,204,207,211,213,214,216,217,218,221,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,274,285,287,288,290,291,293,294,295,296,298,299,301,306,307,308,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-223,96,-9,-225,-11,-213,-190,-219,96,-220,-201,146,-218,96,-172,-202,-200,-214,96,-192,-199,-180,-198,-204,-186,-175,-170,-222,-183,96,-203,-221,96,-212,-10,96,96,-120,-12,96,96,-194,96,96,96,96,-190,96,96,96,96,96,96,96,-196,96,96,-211,-210,96,96,96,96,96,96,96,96,96,96,96,-193,-195,96,96,-225,-111,-113,-109,-212,96,-110,96,96,-124,-114,96,-118,-112,96,146,-171,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,96,96,-215,96,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,96,96,96,-142,96,-140,-125,-119,96,96,96,-141,96,-191,96,-197,-205,-207,96,96,-122,96,-139,-115,-143,96,-121,-117,96,96,96,96,-116,96,96,96,-123,96,96,96,-129,-128,-126,-131,96,96,96,96,96,-132,-133,96,-135,96,96,-130,-127,-134,-136,-137,96,-138,]),'CLOSEBRACKET':([17,47,74,75,76,78,79,81,83,84,86,89,90,91,93,95,97,98,99,100,101,102,103,106,108,109,143,148,152,154,162,165,166,180,181,183,228,229,230,244,249,250,251,252,254,256,257,258,259,262,263,264,265,266,267,268,269,270,271,273,274,304,305,306,308,309,310,314,335,],[-223,82,-213,-190,-219,-166,-220,-168,-164,-218,-172,-159,161,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-194,-190,-144,-146,-196,-211,-210,-193,-195,272,-169,-171,-167,-215,-177,-178,-176,-179,-163,309,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,312,313,-147,-145,-191,-197,-205,-207,337,-160,]),'SUB_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,231,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'XOR_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,233,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'INT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[30,30,-26,-36,-33,-24,-25,-21,-22,-1,30,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,30,-31,-34,-37,30,30,-68,-40,30,-67,-61,30,-9,30,-2,-224,-5,-11,30,30,30,30,-43,30,-69,-70,30,-72,-10,-7,30,30,-120,-6,-12,30,-39,-44,-59,30,-71,30,-73,30,-74,30,-8,30,-38,-49,-60,30,30,-122,-121,-123,]),'SIGNED':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[33,33,-26,-36,-33,-24,-25,-21,-22,-1,33,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,33,-31,-34,-37,33,33,-68,-40,33,-67,-61,33,-9,33,-2,-224,-5,-11,33,33,33,33,-43,33,-69,-70,33,-72,-10,-7,33,33,-120,-6,-12,33,-39,-44,-59,33,-71,33,-73,33,-74,33,-8,33,-38,-49,-60,33,33,-122,-121,-123,]),'CONTINUE':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,206,-120,-12,-225,-111,-113,-109,-110,206,-124,-114,206,-118,-112,206,206,-142,-140,-125,-119,206,-141,-122,206,-139,-115,-143,-121,-117,206,206,-116,206,206,-123,206,-129,-128,-126,-131,206,206,206,206,-132,-133,206,-135,206,206,-130,-127,-134,-136,-137,206,-138,]),'MUL_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,237,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'RIGHT_OP':([17,74,75,76,79,84,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-180,-204,-186,174,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,174,174,174,174,-208,-209,-206,-184,-185,-181,-182,-189,-187,-188,-191,-197,-205,-207,]),'RIGHT_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,241,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'DEFAULT':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,209,-120,-12,-225,-111,-113,-109,-110,209,-124,-114,209,-118,-112,209,209,-142,-140,-125,-119,209,-141,-122,209,-139,-115,-143,-121,-117,209,209,-116,209,209,-123,209,-129,-128,-126,-131,209,209,209,209,-132,-133,209,-135,209,209,-130,-127,-134,-136,-137,209,-138,]),'CHAR':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[7,7,-26,-36,-33,-24,-25,-21,-22,-1,7,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,7,-31,-34,-37,7,7,-68,-40,7,-67,-61,7,-9,7,-2,-224,-5,-11,7,7,7,7,-43,7,-69,-70,7,-72,-10,-7,7,7,-120,-6,-12,7,-39,-44,-59,7,-71,7,-73,7,-74,7,-8,7,-38,-49,-60,7,7,-122,-121,-123,]),'WHILE':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,300,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,210,-120,-12,-225,-111,-113,-109,-110,210,-124,-114,210,-118,-112,210,210,-142,-140,-125,-119,210,-141,333,-122,210,-139,-115,-143,-121,-117,210,210,-116,210,210,-123,210,-129,-128,-126,-131,210,210,210,210,-132,-133,210,-135,210,210,-130,-127,-134,-136,-137,210,-138,]),'EXTERN':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,124,126,128,129,131,141,161,182,188,190,191,196,197,220,225,248,275,321,328,350,],[9,9,-26,-36,-33,-24,-25,-21,-22,-1,9,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,9,-31,-34,-37,9,9,-68,-40,-67,-61,9,-9,9,-2,-224,-5,-11,9,-69,-70,-72,-10,-7,9,9,-120,-6,-12,-39,-59,-71,-73,9,-74,9,-8,9,-38,-60,9,9,-122,-121,-123,]),'CASE':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,211,-120,-12,-225,-111,-113,-109,-110,211,-124,-114,211,-118,-112,211,211,-142,-140,-125,-119,211,-141,-122,211,-139,-115,-143,-121,-117,211,211,-116,211,211,-123,211,-129,-128,-126,-131,211,211,211,211,-132,-133,211,-135,211,211,-130,-127,-134,-136,-137,211,-138,]),'FLOATING_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[79,-9,-225,-11,79,-201,79,-202,-200,79,-199,-198,79,-203,79,-10,79,79,-120,-12,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-225,-111,-113,-109,79,-110,79,79,-124,-114,79,-118,-112,79,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,79,79,79,79,79,79,-142,79,-140,-125,-119,79,79,79,-141,79,79,79,79,-122,79,-139,-115,-143,79,-121,-117,79,79,79,79,-116,79,79,79,-123,79,79,79,-129,-128,-126,-131,79,79,79,79,79,-132,-133,79,-135,79,79,-130,-127,-134,-136,-137,79,-138,]),'OPENBRACKET':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,56,65,67,69,74,76,79,82,84,91,93,97,102,106,109,110,113,117,118,131,133,134,141,153,161,165,166,182,186,187,188,190,202,220,225,244,247,248,257,258,259,272,276,277,309,310,312,313,315,317,318,337,338,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,47,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,47,-16,-61,-79,-76,-77,-18,-50,-52,-69,-213,-219,-220,-70,-218,-214,164,-204,-222,-221,-212,-72,183,-80,-78,-39,-51,-53,-59,183,-71,-211,-210,-73,274,183,183,-74,-212,-38,-60,-215,183,183,-208,-209,-206,-101,274,-105,-205,-207,-102,-103,-107,-106,-100,-104,-108,]),'REGISTER':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,124,126,128,129,131,141,161,182,188,190,191,196,197,220,225,248,275,321,328,350,],[14,14,-26,-36,-33,-24,-25,-21,-22,-1,14,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,14,-31,-34,-37,14,14,-68,-40,-67,-61,14,-9,14,-2,-224,-5,-11,14,-69,-70,-72,-10,-7,14,14,-120,-6,-12,-39,-59,-71,-73,14,-74,14,-8,14,-38,-60,14,14,-122,-121,-123,]),'PIPE':([17,74,75,76,78,79,81,83,84,86,91,93,95,97,98,100,101,102,103,106,109,143,148,162,165,166,180,181,202,228,229,230,244,249,250,251,252,257,258,259,262,263,264,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-166,-220,-168,147,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-169,-171,-167,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,147,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'DEC_OP':([17,47,52,58,61,74,76,77,79,80,84,85,87,88,91,92,93,94,96,97,102,104,105,106,107,109,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,202,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,257,258,259,274,285,287,288,290,291,293,294,295,296,298,299,301,307,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-223,77,-9,-225,-11,-213,-219,77,-220,-201,-218,77,-202,-200,-214,77,165,-199,-198,-204,-222,77,-203,-221,77,-212,-10,77,77,-120,-12,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-211,-210,77,77,77,77,77,77,77,77,77,77,77,77,77,-225,-111,-113,-109,-212,77,-110,77,77,-124,-114,77,-118,-112,77,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,77,77,-215,77,-208,-209,-206,77,77,77,-142,77,-140,-125,-119,77,77,77,-141,77,77,-205,-207,77,77,-122,77,-139,-115,-143,77,-121,-117,77,77,77,77,-116,77,77,77,-123,77,77,77,-129,-128,-126,-131,77,77,77,77,77,-132,-133,77,-135,77,77,-130,-127,-134,-136,-137,77,-138,]),'SWITCH':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,212,-120,-12,-225,-111,-113,-109,-110,212,-124,-114,212,-118,-112,212,212,-142,-140,-125,-119,212,-141,-122,212,-139,-115,-143,-121,-117,212,212,-116,212,212,-123,212,-129,-128,-126,-131,212,212,212,212,-132,-133,212,-135,212,212,-130,-127,-134,-136,-137,212,-138,]),'AND_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,236,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'ELIPSIS':([191,],[281,]),'TILDE':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[87,-9,-225,-11,87,-201,87,-202,-200,87,-199,-198,87,-203,87,-10,87,87,-120,-12,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-225,-111,-113,-109,87,-110,87,87,-124,-114,87,-118,-112,87,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,87,87,87,87,87,87,-142,87,-140,-125,-119,87,87,87,-141,87,87,87,87,-122,87,-139,-115,-143,87,-121,-117,87,87,87,87,-116,87,87,87,-123,87,87,87,-129,-128,-126,-131,87,87,87,87,87,-132,-133,87,-135,87,87,-130,-127,-134,-136,-137,87,-138,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,44,45,46,47,48,49,50,51,52,56,57,58,59,60,61,65,67,68,70,77,80,85,87,88,92,94,96,104,105,107,113,117,118,119,120,121,122,125,126,128,129,131,133,134,137,140,141,142,144,145,146,147,149,155,156,157,158,159,160,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,183,187,188,189,193,196,197,198,199,200,201,203,204,207,211,213,214,216,217,218,220,221,223,225,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[17,-13,-26,-36,-33,-24,17,-25,-21,-22,17,17,-1,-15,-20,-32,-28,-223,-42,-35,-23,17,-19,-75,17,-4,-29,-3,-41,-27,-30,-17,-31,-34,-37,17,-14,-40,-16,-61,17,17,17,-79,-76,-77,-9,-18,-2,-225,-5,17,-11,-50,-52,17,17,17,-201,17,-202,-200,17,-199,-198,17,-203,17,17,-80,-78,17,-10,-7,17,17,-120,-6,-12,-39,-51,-53,17,17,-59,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-8,-225,-111,-113,17,-109,17,-110,17,17,-124,-114,17,-118,-112,-38,17,17,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,17,17,17,17,17,17,-142,17,-140,-125,-119,17,17,17,-141,17,17,17,17,-122,17,-139,-115,-143,17,-121,-117,17,17,17,17,-116,17,17,17,-123,17,17,17,-129,-128,-126,-131,17,17,17,17,17,-132,-133,17,-135,17,17,-130,-127,-134,-136,-137,17,-138,]),'ADD_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,235,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'PERCENT':([17,74,75,76,79,84,91,93,97,98,102,103,106,109,143,148,162,165,166,180,181,202,244,257,258,259,262,263,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,177,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,177,177,-189,-187,-188,-191,-197,-205,-207,]),'GE_OP':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,158,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,158,158,-189,-187,-188,-191,-197,-205,-207,]),'STRUCT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[29,29,-26,-36,-33,-24,-25,-21,-22,-1,29,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,29,-31,-34,-37,29,29,-68,-40,29,-67,-61,29,-9,29,-2,-224,-5,-11,29,29,29,29,-43,29,-69,-70,29,-72,-10,-7,29,29,-120,-6,-12,29,-39,-44,-59,29,-71,29,-73,29,-74,29,-8,29,-38,-49,-60,29,29,-122,-121,-123,]),'MOD_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,232,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'QMARK':([17,74,75,76,78,79,81,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,109,143,148,162,165,166,180,181,202,228,229,230,244,249,250,251,252,254,257,258,259,262,263,264,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'OR_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,234,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'BREAK':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,215,-120,-12,-225,-111,-113,-109,-110,215,-124,-114,215,-118,-112,215,215,-142,-140,-125,-119,215,-141,-122,215,-139,-115,-143,-121,-117,215,215,-116,215,215,-123,215,-129,-128,-126,-131,215,215,215,215,-132,-133,215,-135,215,215,-130,-127,-134,-136,-137,215,-138,]),'VOLATILE':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,117,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[35,35,-26,-36,-33,-24,-25,-21,-22,-1,35,-20,-32,-28,-223,-35,-23,-19,-66,35,-4,-29,-3,-27,-30,35,-31,-34,-37,35,35,-68,-40,35,-67,-61,35,-79,35,-9,35,-2,-224,-5,-11,35,35,35,35,-43,35,-69,-70,35,-72,-80,-10,-7,35,35,-120,-6,-12,35,-39,-44,-59,35,-71,35,-73,35,-74,35,-8,35,-38,-49,-60,35,35,-122,-121,-123,]),'DO':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,216,-120,-12,-225,-111,-113,-109,-110,216,-124,-114,216,-118,-112,216,216,-142,-140,-125,-119,216,-141,-122,216,-139,-115,-143,-121,-117,216,216,-116,216,216,-123,216,-129,-128,-126,-131,216,216,216,216,-132,-133,216,-135,216,216,-130,-127,-134,-136,-137,216,-138,]),'CONST':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,24,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,49,50,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,117,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[3,3,-26,-36,-33,-24,-25,-21,-22,-1,3,-20,-32,-28,-223,-35,-23,-19,-66,3,-4,-29,-3,-27,-30,3,-31,-34,-37,3,3,-68,-40,3,-67,-61,3,-79,3,-9,3,-2,-224,-5,-11,3,3,3,3,-43,3,-69,-70,3,-72,-80,-10,-7,3,3,-120,-6,-12,3,-39,-44,-59,3,-71,3,-73,3,-74,3,-8,3,-38,-49,-60,3,3,-122,-121,-123,]),'CARAT':([17,74,75,76,78,79,81,84,86,91,93,95,97,98,100,101,102,103,106,109,143,148,162,165,166,180,181,202,228,229,230,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,145,-220,-168,-218,-172,-214,-192,-180,-204,-186,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-169,-171,145,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'DIV':([17,74,75,76,79,84,91,93,97,98,102,103,106,109,143,148,162,165,166,180,181,202,244,257,258,259,262,263,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-186,-222,179,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,179,179,-189,-187,-188,-191,-197,-205,-207,]),'LE':([17,74,75,76,79,84,86,91,93,95,97,98,100,102,103,106,109,143,148,162,165,166,180,181,202,244,249,250,251,252,257,258,259,262,263,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-220,-218,157,-214,-192,-180,-204,-186,-175,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-215,-177,-178,-176,-179,-208,-209,-206,-184,-185,-181,-182,157,157,-189,-187,-188,-191,-197,-205,-207,]),'SEMI':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,25,27,30,31,32,33,34,35,38,39,40,42,44,45,52,53,54,55,56,58,60,61,69,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,120,125,126,127,129,131,135,136,138,141,143,148,152,154,161,162,165,166,180,181,182,190,192,194,195,197,198,199,201,202,203,204,206,207,208,213,214,215,216,217,218,220,222,225,228,229,230,244,249,250,251,252,254,257,258,259,262,263,264,265,266,267,268,269,270,271,285,286,287,288,289,290,291,293,294,295,299,302,303,304,305,306,308,309,310,319,321,322,323,324,325,326,327,328,329,331,335,340,343,344,345,346,347,349,350,351,355,356,357,359,360,361,362,364,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,52,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-9,-45,120,-47,-18,-225,52,-11,-69,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-10,217,-120,-47,-12,-39,-54,-56,224,-59,-194,-190,-144,-146,-71,-196,-211,-210,-193,-195,-73,-74,-46,-48,-90,-225,-111,-113,-109,-212,288,-110,291,217,294,-124,-114,299,217,-118,-112,-38,-57,-60,-169,-171,-167,-215,-177,-178,-176,-179,-163,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,217,323,217,-142,325,326,-140,-125,-119,217,-141,-58,-55,-147,-145,-191,-197,-205,-207,-91,-122,217,-139,-115,-143,342,344,-121,-117,217,-160,-92,353,354,217,-116,217,217,-123,217,366,-129,-128,-126,-131,217,217,217,376,217,-132,-133,217,-135,217,217,-130,-127,-134,-136,-137,217,-138,]),'CHARACTER_CONSTANT':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[76,-9,-225,-11,76,-201,76,-202,-200,76,-199,-198,76,-203,76,-10,76,76,-120,-12,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-225,-111,-113,-109,76,-110,76,76,-124,-114,76,-118,-112,76,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,76,76,76,76,76,76,-142,76,-140,-125,-119,76,76,76,-141,76,76,76,76,-122,76,-139,-115,-143,76,-121,-117,76,76,76,76,-116,76,76,76,-123,76,76,76,-129,-128,-126,-131,76,76,76,76,76,-132,-133,76,-135,76,76,-130,-127,-134,-136,-137,76,-138,]),'COMMA':([1,2,3,4,5,7,8,9,13,14,15,16,17,19,20,22,23,24,27,30,31,32,33,34,35,38,39,40,42,44,45,49,50,51,53,54,55,56,69,71,72,73,74,75,76,78,79,81,82,83,84,86,89,91,93,95,97,98,99,100,101,102,103,106,108,109,110,111,113,114,115,116,117,118,127,131,135,136,138,139,141,143,148,150,152,154,161,162,165,166,180,181,182,184,185,186,187,190,192,194,195,202,208,220,222,225,226,227,228,229,230,244,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,276,277,280,282,283,284,289,302,303,304,305,306,308,309,310,312,313,315,317,318,319,327,330,332,334,335,336,337,338,339,340,343,352,355,358,363,365,375,],[-13,-26,-36,-33,-24,-25,-21,-22,-15,-20,-32,-28,-223,-35,-23,-19,-66,-75,-29,-27,-30,-17,-31,-34,-37,-68,-14,-40,-67,-16,-61,-79,-76,-77,-45,119,-47,-18,-69,-62,140,-64,-213,-190,-219,-166,-220,-168,-70,-164,-218,-172,-159,-214,-192,-180,-204,-186,-162,-175,-170,-222,-183,-221,-161,-212,-72,-83,-86,189,191,-88,-80,-78,-47,-39,-54,-56,223,140,-59,-194,-190,243,-144,-146,-71,-196,-211,-210,-193,-195,-73,-87,-85,-98,-97,-74,-46,-48,-90,-212,243,-38,-57,-60,-63,-65,-169,-171,-167,-215,-177,-178,-176,-179,243,-163,243,-208,-209,-206,-216,311,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-101,-99,-105,-89,-84,-93,320,243,-58,-55,-147,-145,-191,-197,-205,-207,-102,-103,-107,-106,-100,-91,243,243,243,243,-160,-217,-104,-108,-94,-92,243,243,243,243,243,243,243,]),'PTR_OP':([17,74,76,79,84,91,93,97,102,106,109,165,166,202,244,257,258,259,309,310,],[-223,-213,-219,-220,-218,-214,168,-204,-222,-221,-212,-211,-210,-212,-215,-208,-209,-206,-205,-207,]),'ASSIGN':([17,23,38,42,55,69,73,74,75,76,79,82,84,91,93,97,102,106,109,110,127,143,148,161,162,165,166,180,181,182,190,202,244,257,258,259,306,308,309,310,],[-223,-66,-68,-67,122,-69,142,-213,-190,-219,-220,-70,-218,-214,-192,-204,-222,-221,-212,-72,122,-194,240,-71,-196,-211,-210,-193,-195,-73,-74,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,124,126,128,129,131,141,161,182,188,190,191,196,197,220,225,248,275,321,328,350,],[20,20,-26,-36,-33,-24,-25,-21,-22,-1,20,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,20,-31,-34,-37,20,20,-68,-40,-67,-61,20,-9,20,-2,-224,-5,-11,20,-69,-70,-72,-10,-7,20,20,-120,-6,-12,-39,-59,-71,-73,20,-74,20,-8,20,-38,-60,20,20,-122,-121,-123,]),'AUTO':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,42,45,48,52,55,57,58,59,61,62,69,82,110,120,121,123,124,126,128,129,131,141,161,182,188,190,191,196,197,220,225,248,275,321,328,350,],[22,22,-26,-36,-33,-24,-25,-21,-22,-1,22,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,22,-31,-34,-37,22,22,-68,-40,-67,-61,22,-9,22,-2,-224,-5,-11,22,-69,-70,-72,-10,-7,22,22,-120,-6,-12,-39,-59,-71,-73,22,-74,22,-8,22,-38,-60,22,22,-122,-121,-123,]),'ASTERISK':([0,1,2,3,4,5,7,8,9,11,12,13,14,15,16,17,19,20,22,24,25,26,27,28,30,31,32,33,34,35,36,39,40,44,45,47,49,50,52,56,57,58,59,60,61,65,67,68,74,75,76,77,79,80,84,85,87,88,91,92,93,94,96,97,98,102,103,104,105,106,107,109,113,117,119,120,121,122,125,126,128,129,131,133,134,137,141,142,143,144,145,146,147,148,149,153,155,156,157,158,159,160,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,183,188,193,196,197,198,199,201,202,203,204,207,211,213,214,216,217,218,220,221,223,225,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,248,257,258,259,262,263,269,270,271,274,285,287,288,290,291,293,294,295,296,298,299,301,306,307,308,309,310,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[24,-13,-26,-36,-33,-24,-25,-21,-22,24,-1,-15,-20,-32,-28,-223,-35,-23,-19,24,24,-4,-29,-3,-27,-30,-17,-31,-34,-37,24,-14,-40,-16,-61,94,-79,24,-9,-18,-2,-225,-5,24,-11,-50,-52,24,-213,-190,-219,94,-220,-201,-218,94,-202,-200,-214,94,-192,-199,-198,-204,-186,-222,178,94,-203,-221,94,-212,24,-80,24,-10,-7,94,94,-120,-6,-12,-39,-51,-53,94,-59,94,-194,94,94,94,94,-190,94,24,94,94,94,94,94,94,-196,94,94,-211,-210,94,94,94,94,94,94,94,94,94,94,94,-193,-195,94,24,94,-8,-225,-111,-113,-109,-212,94,-110,94,94,-124,-114,94,-118,-112,-38,94,24,-60,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,94,94,-215,94,24,-208,-209,-206,178,178,-189,-187,-188,94,94,94,-142,94,-140,-125,-119,94,94,94,-141,94,-191,94,-197,-205,-207,94,94,-122,94,-139,-115,-143,94,-121,-117,94,94,94,94,-116,94,94,94,-123,94,94,94,-129,-128,-126,-131,94,94,94,94,94,-132,-133,94,-135,94,94,-130,-127,-134,-136,-137,94,-138,]),'AND_OP':([17,74,75,76,78,79,81,83,84,86,91,93,95,97,98,99,100,101,102,103,106,109,143,148,162,165,166,180,181,202,228,229,230,244,249,250,251,252,254,257,258,259,262,263,264,265,266,267,268,269,270,271,306,308,309,310,],[-223,-213,-190,-219,-166,-220,-168,-164,-218,-172,-214,-192,-180,-204,-186,172,-175,-170,-222,-183,-221,-212,-194,-190,-196,-211,-210,-193,-195,-212,-169,-171,-167,-215,-177,-178,-176,-179,172,-208,-209,-206,-184,-185,-165,-181,-182,-174,-173,-189,-187,-188,-191,-197,-205,-207,]),'BANG':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[105,-9,-225,-11,105,-201,105,-202,-200,105,-199,-198,105,-203,105,-10,105,105,-120,-12,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-225,-111,-113,-109,105,-110,105,105,-124,-114,105,-118,-112,105,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,105,105,105,105,105,105,-142,105,-140,-125,-119,105,105,105,-141,105,105,105,105,-122,105,-139,-115,-143,105,-121,-117,105,105,105,105,-116,105,105,105,-123,105,105,105,-129,-128,-126,-131,105,105,105,105,105,-132,-133,105,-135,105,105,-130,-127,-134,-136,-137,105,-138,]),'IF':([52,58,61,120,125,126,129,197,198,199,201,204,207,213,214,216,217,218,285,287,288,291,293,294,295,299,321,322,323,324,325,328,329,331,345,346,347,349,350,351,356,357,359,360,361,362,364,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[-9,-225,-11,-10,219,-120,-12,-225,-111,-113,-109,-110,219,-124,-114,219,-118,-112,219,219,-142,-140,-125,-119,219,-141,-122,219,-139,-115,-143,-121,-117,219,219,-116,219,219,-123,219,-129,-128,-126,-131,219,219,219,219,-132,-133,219,-135,219,219,-130,-127,-134,-136,-137,219,-138,]),'STRING_LITERAL':([47,52,58,61,77,80,85,87,88,92,94,96,104,105,107,120,122,125,126,129,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,197,198,199,201,203,204,207,211,213,214,216,217,218,221,231,232,233,234,235,236,237,238,239,240,241,242,243,245,274,285,287,288,290,291,293,294,295,296,298,299,301,307,311,320,321,322,323,324,325,326,328,329,331,342,344,345,346,347,348,349,350,351,353,354,356,357,359,360,361,362,364,366,368,369,370,371,372,373,374,376,377,378,379,380,381,382,],[102,-9,-225,-11,102,-201,102,-202,-200,102,-199,-198,102,-203,102,-10,102,102,-120,-12,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-225,-111,-113,-109,102,-110,102,102,-124,-114,102,-118,-112,102,-153,-151,-157,-158,-152,-156,-149,-150,-154,-148,-155,102,102,102,102,102,102,-142,102,-140,-125,-119,102,102,102,-141,102,102,102,102,-122,102,-139,-115,-143,102,-121,-117,102,102,102,102,-116,102,102,102,-123,102,102,102,-129,-128,-126,-131,102,102,102,102,102,-132,-133,102,-135,102,102,-130,-127,-134,-136,-137,102,-138,]),'FLOAT':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,19,20,22,23,26,27,28,30,31,32,33,34,35,36,37,38,40,41,42,45,48,52,55,57,58,59,61,62,63,64,65,66,67,69,82,85,110,120,121,123,124,126,128,129,130,131,132,141,149,161,163,182,188,190,191,196,197,220,224,225,248,275,321,328,350,],[27,27,-26,-36,-33,-24,-25,-21,-22,-1,27,-20,-32,-28,-223,-35,-23,-19,-66,-4,-29,-3,-27,-30,27,-31,-34,-37,27,27,-68,-40,27,-67,-61,27,-9,27,-2,-224,-5,-11,27,27,27,27,-43,27,-69,-70,27,-72,-10,-7,27,27,-120,-6,-12,27,-39,-44,-59,27,-71,27,-73,27,-74,27,-8,27,-38,-49,-60,27,27,-122,-121,-123,]),'LEFT_ASSIGN':([17,74,75,76,79,84,91,93,97,102,106,109,143,148,162,165,166,180,181,202,244,257,258,259,306,308,309,310,],[-223,-213,-190,-219,-220,-218,-214,-192,-204,-222,-221,-212,-194,239,-196,-211,-210,-193,-195,-212,-215,-208,-209,-206,-191,-197,-205,-207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,32,36,37,48,55,62,123,124,188,191,197,248,275,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'multiplicative_expression':([47,85,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,262,263,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'selection_statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,]),'constant':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'unary_expression':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[75,143,148,162,180,75,148,148,75,75,148,75,75,75,148,75,75,75,75,148,75,148,148,148,75,75,75,75,75,75,75,75,75,75,75,148,148,148,75,148,75,148,148,75,75,148,148,148,148,148,148,148,75,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'conditional_expression':([47,85,122,125,137,142,144,149,159,163,164,169,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[108,154,154,154,108,108,154,154,154,154,154,154,108,154,154,154,108,154,108,154,154,108,154,154,154,154,154,154,154,335,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'struct_or_union_specifier':([0,1,13,32,36,37,41,48,55,62,63,64,65,67,85,123,124,130,149,163,188,191,197,248,275,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([47,85,122,125,137,142,144,147,149,159,160,163,164,169,172,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[78,78,78,78,78,78,78,230,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'identifier_list':([48,],[114,]),'init_declarator_list':([25,60,],[54,54,]),'struct_declaration_list':([41,63,],[64,130,]),'assignment_operator':([148,],[242,]),'enumerator':([46,70,140,],[71,71,226,]),'abstract_declarator':([113,153,188,248,],[184,246,279,279,]),'pointer':([0,11,24,25,36,50,60,68,113,119,153,188,223,248,],[10,10,51,10,10,118,10,10,187,10,247,187,10,247,]),'read_mode_e':([58,197,],[125,285,]),'and_expression':([47,85,122,125,137,142,144,145,147,149,159,160,163,164,169,172,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[81,81,81,81,81,81,81,228,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'assignment_expression':([85,122,125,144,149,159,163,164,169,193,203,207,216,242,243,285,287,290,295,296,298,301,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[152,195,152,152,152,152,152,152,260,195,152,152,152,304,305,152,152,152,152,152,152,152,336,195,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'external_declaration':([0,36,],[12,57,]),'type_specifier':([0,1,13,32,36,37,41,48,55,62,63,64,65,67,85,123,124,130,149,163,188,191,197,248,275,],[13,13,13,13,13,13,65,13,13,13,65,65,65,65,65,13,13,65,65,65,13,13,13,13,13,]),'compound_statement':([37,55,62,123,125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[59,121,128,196,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'inclusive_or_expression':([47,85,122,125,137,142,144,149,159,160,163,164,169,172,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[83,83,83,83,83,83,83,83,83,83,83,83,83,264,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'iteration_statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,]),'type_name':([85,149,163,],[151,151,255,]),'postfix_expression':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'additive_expression':([47,85,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,172,173,174,175,176,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,265,266,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'expression_statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,]),'unary_operator':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'cast_expression':([47,85,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[98,98,181,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,269,270,271,98,98,98,98,98,98,98,98,98,306,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'initializer_list':([193,],[284,]),'struct_declarator_list':([68,],[138,]),'logical_or_expression':([47,85,122,125,137,142,144,149,159,163,164,169,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'translation_unit':([0,],[36,]),'relational_expression':([47,85,122,125,137,142,144,145,146,147,149,159,160,163,164,169,172,175,176,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,267,268,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'struct_or_union':([0,1,13,32,36,37,41,48,55,62,63,64,65,67,85,123,124,130,149,163,188,191,197,248,275,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'struct_declaration':([41,63,64,130,],[66,66,132,132,]),'string':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'parameter_type_list':([48,188,248,275,],[112,278,278,316,]),'parameter_declaration':([48,188,191,248,275,],[111,111,282,111,111,]),'direct_declarator':([0,10,11,25,36,60,68,113,119,187,188,223,],[23,42,23,23,23,23,23,23,23,42,23,23,]),'type_qualifier_list':([24,],[50,]),'argument_expression_list':([169,],[261,]),'initializer':([122,193,320,],[194,283,339,]),'statement_list':([125,285,],[207,322,]),'primary_expression':([47,77,85,92,104,107,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,170,171,172,173,174,175,176,177,178,179,183,193,203,207,211,216,221,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'declaration_specifiers':([0,1,13,32,36,37,48,55,62,123,124,188,191,197,248,275,],[25,39,44,56,25,60,113,60,60,60,60,113,113,60,113,113,]),'declaration':([0,36,37,55,62,123,124,197,],[26,26,61,61,129,129,61,129,]),'logical_and_expression':([47,85,122,125,137,142,144,149,159,160,163,164,169,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[99,99,99,99,99,99,99,99,99,254,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'declarator':([0,11,25,36,60,68,113,119,188,223,],[37,43,55,37,127,136,185,127,43,136,]),'shift_expression':([47,85,122,125,137,142,144,145,146,147,149,155,156,157,158,159,160,163,164,169,172,175,176,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[100,100,100,100,100,100,100,100,100,100,100,249,250,251,252,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'equality_expression':([47,85,122,125,137,142,144,145,146,147,149,159,160,163,164,169,172,183,193,203,207,211,216,221,242,243,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[101,101,101,101,101,101,101,101,229,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'jump_statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'struct_declarator':([68,223,],[135,303,]),'function_definition':([0,36,],[28,28,]),'insert_mode_e':([58,207,322,],[124,292,341,]),'parameter_list':([48,188,248,275,],[115,115,115,115,]),'enum_specifier':([0,1,13,32,36,37,41,48,55,62,63,64,65,67,85,123,124,130,149,163,188,191,197,248,275,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,13,24,32,36,37,41,48,50,55,62,63,64,65,67,85,123,124,130,149,163,188,191,197,248,275,],[32,32,32,49,32,32,32,67,32,117,32,32,67,67,67,67,67,32,32,67,67,67,32,32,32,32,32,]),'enumerator_list':([46,70,],[72,139,]),'labeled_statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'declaration_list':([37,55,124,],[62,123,197,]),'specifier_qualifier_list':([41,63,64,65,67,85,130,149,163,],[68,68,68,133,134,153,68,153,153,]),'statement':([125,207,216,285,287,295,322,331,345,347,349,351,361,362,364,368,371,373,374,381,],[213,293,300,213,324,329,293,346,356,357,359,360,369,370,372,377,378,379,380,382,]),'constant_expression':([47,137,142,183,211,221,274,],[90,222,227,273,297,302,314,]),'init_declarator':([25,60,119,],[53,53,192,]),'direct_abstract_declarator':([113,153,187,188,247,248,],[186,186,276,186,276,186,]),'identifier':([0,6,10,11,21,25,36,46,47,48,60,68,70,77,85,92,104,107,113,119,122,125,137,140,142,144,145,146,147,149,155,156,157,158,159,160,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,183,187,188,189,193,200,203,207,211,216,221,223,242,243,245,274,285,287,290,295,296,298,301,307,311,320,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[38,40,38,38,45,38,38,73,109,116,38,38,73,109,109,109,109,109,38,38,109,202,109,73,109,109,109,109,109,109,109,109,109,109,109,109,109,109,257,258,109,109,109,109,109,109,109,109,109,109,109,109,38,38,280,109,286,109,202,109,202,109,38,109,109,109,109,202,202,109,202,109,109,109,109,109,109,202,109,202,109,109,202,202,109,202,202,109,109,202,202,202,109,202,202,202,202,202,]),'expression':([85,125,144,149,159,163,164,203,207,216,285,287,290,295,296,298,301,322,326,331,342,344,345,347,348,349,351,353,354,361,362,364,366,368,371,373,374,381,],[150,208,150,150,253,150,256,289,208,208,208,208,327,208,330,332,334,208,343,208,352,355,208,208,358,208,208,363,365,208,208,208,375,208,208,208,208,208,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','Parser_M.py',33),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','Parser_M.py',39),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','Parser_M.py',45),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','Parser_M.py',51),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','Parser_M.py',57),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','Parser_M.py',63),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','Parser_M.py',69),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','Parser_M.py',75),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','Parser_M.py',81),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','Parser_M.py',87),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','Parser_M.py',93),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','Parser_M.py',100),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','Parser_M.py',107),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','Parser_M.py',113),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','Parser_M.py',119),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','Parser_M.py',125),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','Parser_M.py',131),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','Parser_M.py',137),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','Parser_M.py',143),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','Parser_M.py',149),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','Parser_M.py',155),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','Parser_M.py',161),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','Parser_M.py',167),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','Parser_M.py',173),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','Parser_M.py',179),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','Parser_M.py',185),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','Parser_M.py',191),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','Parser_M.py',197),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','Parser_M.py',203),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','Parser_M.py',209),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','Parser_M.py',215),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','Parser_M.py',221),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','Parser_M.py',227),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','Parser_M.py',233),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','Parser_M.py',239),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','Parser_M.py',245),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','Parser_M.py',251),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','Parser_M.py',257),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','Parser_M.py',263),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','Parser_M.py',269),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','Parser_M.py',275),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','Parser_M.py',281),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','Parser_M.py',287),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','Parser_M.py',293),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','Parser_M.py',299),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','Parser_M.py',305),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','Parser_M.py',311),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','Parser_M.py',317),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','Parser_M.py',323),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','Parser_M.py',329),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','Parser_M.py',335),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','Parser_M.py',341),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','Parser_M.py',347),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','Parser_M.py',353),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','Parser_M.py',359),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','Parser_M.py',365),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','Parser_M.py',371),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','Parser_M.py',377),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','Parser_M.py',383),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','Parser_M.py',389),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','Parser_M.py',395),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','Parser_M.py',401),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','Parser_M.py',407),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','Parser_M.py',413),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','Parser_M.py',419),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','Parser_M.py',425),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','Parser_M.py',434),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','Parser_M.py',440),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','Parser_M.py',446),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','Parser_M.py',452),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','Parser_M.py',458),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','Parser_M.py',464),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','Parser_M.py',470),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','Parser_M.py',476),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','Parser_M.py',482),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','Parser_M.py',488),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','Parser_M.py',494),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','Parser_M.py',500),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','Parser_M.py',506),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','Parser_M.py',512),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','Parser_M.py',518),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','Parser_M.py',524),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','Parser_M.py',530),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','Parser_M.py',536),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','Parser_M.py',542),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','Parser_M.py',548),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','Parser_M.py',554),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','Parser_M.py',560),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','Parser_M.py',566),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','Parser_M.py',572),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','Parser_M.py',578),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','Parser_M.py',584),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','Parser_M.py',590),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','Parser_M.py',596),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','Parser_M.py',602),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','Parser_M.py',608),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','Parser_M.py',614),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','Parser_M.py',620),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','Parser_M.py',626),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','Parser_M.py',632),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','Parser_M.py',638),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','Parser_M.py',644),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','Parser_M.py',650),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','Parser_M.py',656),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','Parser_M.py',662),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','Parser_M.py',668),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','Parser_M.py',674),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','Parser_M.py',680),
  ('statement -> labeled_statement','statement',1,'p_statement_1','Parser_M.py',686),
  ('statement -> compound_statement','statement',1,'p_statement_2','Parser_M.py',692),
  ('statement -> expression_statement','statement',1,'p_statement_3','Parser_M.py',698),
  ('statement -> selection_statement','statement',1,'p_statement_4','Parser_M.py',704),
  ('statement -> iteration_statement','statement',1,'p_statement_5','Parser_M.py',710),
  ('statement -> jump_statement','statement',1,'p_statement_6','Parser_M.py',716),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','Parser_M.py',722),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','Parser_M.py',728),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','Parser_M.py',734),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','Parser_M.py',740),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','Parser_M.py',746),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','Parser_M.py',752),
  ('compound_statement -> OPENBRACE read_mode_e statement_list insert_mode_e CLOSEBRACE','compound_statement',5,'p_compound_statement_2','Parser_M.py',758),
  ('compound_statement -> OPENBRACE insert_mode_e declaration_list read_mode_e CLOSEBRACE','compound_statement',5,'p_compound_statement_3','Parser_M.py',764),
  ('compound_statement -> OPENBRACE insert_mode_e declaration_list read_mode_e statement_list insert_mode_e CLOSEBRACE','compound_statement',7,'p_compound_statement_4','Parser_M.py',770),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','Parser_M.py',776),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','Parser_M.py',782),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','Parser_M.py',788),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','Parser_M.py',794),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','Parser_M.py',800),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','Parser_M.py',806),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','Parser_M.py',812),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','Parser_M.py',818),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','Parser_M.py',824),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','Parser_M.py',830),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','Parser_M.py',836),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','Parser_M.py',842),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','Parser_M.py',848),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','Parser_M.py',854),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','Parser_M.py',860),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','Parser_M.py',866),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','Parser_M.py',872),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','Parser_M.py',878),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','Parser_M.py',884),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','Parser_M.py',890),
  ('expression -> assignment_expression','expression',1,'p_expression_1','Parser_M.py',896),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','Parser_M.py',902),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','Parser_M.py',908),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','Parser_M.py',914),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','Parser_M.py',920),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','Parser_M.py',926),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','Parser_M.py',932),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','Parser_M.py',938),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','Parser_M.py',944),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','Parser_M.py',950),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','Parser_M.py',956),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','Parser_M.py',962),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','Parser_M.py',968),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','Parser_M.py',974),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','Parser_M.py',980),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','Parser_M.py',986),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','Parser_M.py',992),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','Parser_M.py',998),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','Parser_M.py',1004),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','Parser_M.py',1010),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','Parser_M.py',1016),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','Parser_M.py',1022),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','Parser_M.py',1028),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','Parser_M.py',1034),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','Parser_M.py',1040),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','Parser_M.py',1046),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','Parser_M.py',1052),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','Parser_M.py',1058),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','Parser_M.py',1064),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','Parser_M.py',1070),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','Parser_M.py',1076),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','Parser_M.py',1082),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','Parser_M.py',1088),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','Parser_M.py',1094),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','Parser_M.py',1100),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','Parser_M.py',1106),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','Parser_M.py',1112),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','Parser_M.py',1118),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','Parser_M.py',1124),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','Parser_M.py',1130),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','Parser_M.py',1136),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','Parser_M.py',1142),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','Parser_M.py',1148),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','Parser_M.py',1154),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','Parser_M.py',1160),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','Parser_M.py',1166),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','Parser_M.py',1172),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','Parser_M.py',1178),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','Parser_M.py',1184),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','Parser_M.py',1190),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','Parser_M.py',1196),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','Parser_M.py',1202),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','Parser_M.py',1208),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','Parser_M.py',1214),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','Parser_M.py',1220),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','Parser_M.py',1226),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','Parser_M.py',1232),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','Parser_M.py',1238),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','Parser_M.py',1244),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','Parser_M.py',1250),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','Parser_M.py',1256),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','Parser_M.py',1262),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','Parser_M.py',1268),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','Parser_M.py',1274),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','Parser_M.py',1280),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','Parser_M.py',1286),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','Parser_M.py',1292),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','Parser_M.py',1298),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','Parser_M.py',1304),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','Parser_M.py',1310),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','Parser_M.py',1316),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','Parser_M.py',1322),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','Parser_M.py',1328),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','Parser_M.py',1334),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','Parser_M.py',1340),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','Parser_M.py',1346),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','Parser_M.py',1352),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','Parser_M.py',1358),
  ('string -> STRING_LITERAL','string',1,'p_string_1','Parser_M.py',1364),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','Parser_M.py',1370),
  ('insert_mode_e -> <empty>','insert_mode_e',0,'p_empty_insertmode','Parser_M.py',1377),
  ('read_mode_e -> <empty>','read_mode_e',0,'p_empty_readmode','Parser_M.py',1385),
]
