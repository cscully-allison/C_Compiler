
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AMPERSAND AND_ASSIGN AND_OP ASSIGN ASTERISK AUTO BANG BREAK CARAT CASE CHAR CHARACTER_CONSTANT CLOSEBRACE CLOSEBRACKET CLOSEPAREN COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIV DIV_ASSIGN DO DOUBLE DST ELIPSIS ELSE ENUM ENUMERATION_CONSTANT EQ_OP EXTERN FLOAT FLOATING_CONSTANT FOR GE_OP GOTO GT IDENTIFIER IF INC_OP INT INTEGER_CONSTANT LD_F LD_O LE LEFT_ASSIGN LEFT_OP LE_OP LONG MINUS MOD_ASSIGN MUL_ASSIGN NE_OP OPENBRACE OPENBRACKET OPENPAREN OR_ASSIGN OR_OP PD_F PD_O PERCENT PERIOD PIPE PLUS PTR_OP QMARK RANGE REGISTER RETURN RIGHT_ASSIGN RIGHT_OP SEMI SHORT SIGNED SIZEOF STATIC STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TILDE TYPEDEF TYPEDEF_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR_ASSIGNtranslation_unit :  external_declarationtranslation_unit :  translation_unit external_declarationexternal_declaration :  function_definitionexternal_declaration :  declarationfunction_definition :  declarator compound_statementfunction_definition :  declarator declaration_list compound_statementfunction_definition :  declaration_specifiers declarator compound_statementfunction_definition :  declaration_specifiers declarator declaration_list compound_statementdeclaration :  declaration_specifiers SEMIdeclaration :  declaration_specifiers init_declarator_list SEMIdeclaration_list :  declarationdeclaration_list :  declaration_list declarationdeclaration_specifiers :  storage_class_specifierdeclaration_specifiers :  storage_class_specifier declaration_specifiersdeclaration_specifiers :  type_specifierdeclaration_specifiers :  type_specifier declaration_specifiersdeclaration_specifiers :  type_qualifierdeclaration_specifiers :  type_qualifier declaration_specifiersstorage_class_specifier :  AUTOstorage_class_specifier :  REGISTERstorage_class_specifier :  STATICstorage_class_specifier :  EXTERNstorage_class_specifier :  TYPEDEFtype_specifier :  VOIDtype_specifier :  CHARtype_specifier :  SHORTtype_specifier :  INTtype_specifier :  LONGtype_specifier :  FLOATtype_specifier :  DOUBLEtype_specifier :  SIGNEDtype_specifier :  UNSIGNEDtype_specifier :  struct_or_union_specifiertype_specifier :  enum_specifiertype_specifier :  TYPEDEF_NAMEtype_qualifier :  CONSTtype_qualifier :  VOLATILEstruct_or_union_specifier :  struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union OPENBRACE struct_declaration_list CLOSEBRACEstruct_or_union_specifier :  struct_or_union identifierstruct_or_union :  STRUCTstruct_or_union :  UNIONstruct_declaration_list :  struct_declarationstruct_declaration_list :  struct_declaration_list struct_declarationinit_declarator_list :  init_declaratorinit_declarator_list :  init_declarator_list COMMA init_declaratorinit_declarator :  declaratorinit_declarator :  declarator ASSIGN initializerstruct_declaration :  specifier_qualifier_list struct_declarator_list SEMIspecifier_qualifier_list :  type_specifierspecifier_qualifier_list :  type_specifier specifier_qualifier_listspecifier_qualifier_list :  type_qualifierspecifier_qualifier_list :  type_qualifier specifier_qualifier_liststruct_declarator_list :  struct_declaratorstruct_declarator_list :  struct_declarator_list COMMA struct_declaratorstruct_declarator :  declaratorstruct_declarator :  COLON constant_expressionstruct_declarator :  declarator COLON constant_expressionenum_specifier :  ENUM OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifier OPENBRACE enumerator_list CLOSEBRACEenum_specifier :  ENUM identifierenumerator_list :  enumeratorenumerator_list :  enumerator_list COMMA enumeratorenumerator :  identifierenumerator :  identifier ASSIGN constant_expressiondeclarator :  direct_declaratordeclarator :  pointer direct_declaratordirect_declarator :  identifierdirect_declarator :  OPENPAREN declarator CLOSEPARENdirect_declarator :  direct_declarator OPENBRACKET CLOSEBRACKETdirect_declarator :  direct_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_declarator :  direct_declarator OPENPAREN CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN parameter_type_list CLOSEPARENdirect_declarator :  direct_declarator OPENPAREN identifier_list CLOSEPARENpointer :  ASTERISKpointer :  ASTERISK type_qualifier_listpointer :  ASTERISK pointerpointer :  ASTERISK type_qualifier_list pointertype_qualifier_list :  type_qualifiertype_qualifier_list :  type_qualifier_list type_qualifierparameter_type_list :  parameter_listparameter_type_list :  parameter_list COMMA ELIPSISparameter_list :  parameter_declarationparameter_list :  parameter_list COMMA parameter_declarationparameter_declaration :  declaration_specifiers declaratorparameter_declaration :  declaration_specifiersparameter_declaration :  declaration_specifiers abstract_declaratoridentifier_list :  identifieridentifier_list :  identifier_list COMMA identifierinitializer :  assignment_expressioninitializer :  OPENBRACE initializer_list CLOSEBRACEinitializer :  OPENBRACE initializer_list COMMA CLOSEBRACEinitializer_list :  initializerinitializer_list :  initializer_list COMMA initializertype_name :  specifier_qualifier_listtype_name :  specifier_qualifier_list abstract_declaratorabstract_declarator :  pointerabstract_declarator :  direct_abstract_declaratorabstract_declarator :  pointer direct_abstract_declaratordirect_abstract_declarator :  OPENPAREN abstract_declarator CLOSEPARENdirect_abstract_declarator :  OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET CLOSEBRACKETdirect_abstract_declarator :  direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKETdirect_abstract_declarator :  OPENPAREN CLOSEPARENdirect_abstract_declarator :  OPENPAREN parameter_type_list CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN CLOSEPARENdirect_abstract_declarator :  direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPARENstatement :  labeled_statementstatement :  compound_statementstatement :  expression_statementstatement :  selection_statementstatement :  iteration_statementstatement :  jump_statementlabeled_statement :  identifier COLON statementlabeled_statement :  CASE constant_expression COLON statementlabeled_statement :  DEFAULT COLON statementexpression_statement :  SEMIexpression_statement :  expression SEMIcompound_statement :  OPENBRACE CLOSEBRACEcompound_statement :  OPENBRACE statement_list CLOSEBRACEcompound_statement :  OPENBRACE declaration_list CLOSEBRACEcompound_statement :  OPENBRACE declaration_list statement_list CLOSEBRACEstatement_list :  statementstatement_list :  statement_list statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statementselection_statement :  IF OPENPAREN expression CLOSEPAREN statement ELSE statementselection_statement :  SWITCH OPENPAREN expression CLOSEPAREN statementiteration_statement :  WHILE OPENPAREN expression CLOSEPAREN statementiteration_statement :  DO statement WHILE OPENPAREN expression CLOSEPAREN SEMIiteration_statement :  FOR OPENPAREN SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statementiteration_statement :  FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statementjump_statement :  GOTO identifier SEMIjump_statement :  CONTINUE SEMIjump_statement :  BREAK SEMIjump_statement :  RETURN SEMIjump_statement :  RETURN expression SEMIexpression :  assignment_expressionexpression :  expression COMMA assignment_expressionassignment_expression :  conditional_expressionassignment_expression :  unary_expression assignment_operator assignment_expressionassignment_operator :  ASSIGNassignment_operator :  MUL_ASSIGNassignment_operator :  DIV_ASSIGNassignment_operator :  MOD_ASSIGNassignment_operator :  ADD_ASSIGNassignment_operator :  SUB_ASSIGNassignment_operator :  LEFT_ASSIGNassignment_operator :  RIGHT_ASSIGNassignment_operator :  AND_ASSIGNassignment_operator :  XOR_ASSIGNassignment_operator :  OR_ASSIGNconditional_expression :  logical_or_expressionconditional_expression :  logical_or_expression QMARK expression COLON conditional_expressionconstant_expression :  conditional_expressionlogical_or_expression :  logical_and_expressionlogical_or_expression :  logical_or_expression OR_OP logical_and_expressionlogical_and_expression :  inclusive_or_expressionlogical_and_expression :  logical_and_expression AND_OP inclusive_or_expressioninclusive_or_expression :  exclusive_or_expressioninclusive_or_expression :  inclusive_or_expression PIPE exclusive_or_expressionexclusive_or_expression :  and_expressionexclusive_or_expression :  exclusive_or_expression CARAT and_expressionand_expression :  equality_expressionand_expression :  and_expression AMPERSAND equality_expressionequality_expression :  relational_expressionequality_expression :  equality_expression EQ_OP relational_expressionequality_expression :  equality_expression NE_OP relational_expressionrelational_expression :  shift_expressionrelational_expression :  relational_expression LE shift_expressionrelational_expression :  relational_expression GT shift_expressionrelational_expression :  relational_expression LE_OP shift_expressionrelational_expression :  relational_expression GE_OP shift_expressionshift_expression :  additive_expressionshift_expression :  shift_expression LEFT_OP additive_expressionshift_expression :  shift_expression RIGHT_OP additive_expressionadditive_expression :  multiplicative_expressionadditive_expression :  additive_expression PLUS multiplicative_expressionadditive_expression :  additive_expression MINUS multiplicative_expressionmultiplicative_expression :  cast_expressionmultiplicative_expression :  multiplicative_expression ASTERISK cast_expressionmultiplicative_expression :  multiplicative_expression DIV cast_expressionmultiplicative_expression :  multiplicative_expression PERCENT cast_expressioncast_expression :  unary_expressioncast_expression :  OPENPAREN type_name CLOSEPAREN cast_expressionunary_expression :  postfix_expressionunary_expression :  INC_OP unary_expressionunary_expression :  DEC_OP unary_expressionunary_expression :  unary_operator cast_expressionunary_expression :  SIZEOF unary_expressionunary_expression :  SIZEOF OPENPAREN type_name CLOSEPARENunary_operator :  AMPERSANDunary_operator :  ASTERISKunary_operator :  PLUSunary_operator :  MINUSunary_operator :  TILDEunary_operator :  BANGpostfix_expression :  primary_expressionpostfix_expression :  postfix_expression OPENBRACKET expression CLOSEBRACKETpostfix_expression :  postfix_expression OPENPAREN CLOSEPARENpostfix_expression :  postfix_expression OPENPAREN argument_expression_list CLOSEPARENpostfix_expression :  postfix_expression PERIOD identifierpostfix_expression :  postfix_expression PTR_OP identifierpostfix_expression :  postfix_expression INC_OPpostfix_expression :  postfix_expression DEC_OPprimary_expression :  identifierprimary_expression :  constantprimary_expression :  stringprimary_expression :  OPENPAREN expression CLOSEPARENargument_expression_list :  assignment_expressionargument_expression_list :  argument_expression_list COMMA assignment_expressionconstant :  INTEGER_CONSTANTconstant :  CHARACTER_CONSTANTconstant :  FLOATING_CONSTANTconstant :  ENUMERATION_CONSTANTstring :  STRING_LITERALidentifier :  IDENTIFIER'
    
_lr_action_items = {'OPENPAREN':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,42,43,44,46,49,51,52,53,54,56,57,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,89,94,95,96,97,99,101,102,103,104,105,106,107,109,110,112,113,114,115,116,124,126,127,128,129,133,134,135,141,142,143,144,148,149,150,155,156,157,158,159,161,162,163,164,167,168,169,171,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,225,226,227,232,233,234,235,237,242,243,244,245,247,249,250,251,252,255,256,258,259,262,263,265,266,271,274,275,299,300,302,305,307,309,310,314,315,316,318,319,320,321,323,324,325,326,327,330,331,333,335,336,337,340,341,342,344,346,348,353,354,355,357,358,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,377,],[13,13,-1,-3,-4,13,50,13,-13,-15,-17,-68,13,-75,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,81,-11,13,-9,133,50,-14,-16,-18,-76,-77,-79,-40,-61,-6,-12,-120,81,81,-124,-109,-110,-111,-112,-113,-114,-118,-212,133,164,81,168,169,81,171,81,192,198,198,133,202,-204,-198,-199,-200,-201,-202,-203,-213,-214,-218,-219,-220,-221,-222,-7,81,-10,13,-70,81,-212,-72,234,-69,-78,-80,13,-50,-52,-121,-125,-122,81,81,81,-119,81,81,259,81,81,81,-140,-141,-142,81,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,81,133,81,81,-210,-211,81,81,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,-8,81,-71,-73,-74,234,301,234,133,-39,133,-51,-53,-59,133,-123,-115,81,-117,-215,133,259,259,320,81,-139,-143,-206,-208,-209,301,133,-105,-101,-38,13,133,-60,-116,81,81,81,81,81,81,133,-205,-207,81,81,-103,-107,-100,-106,-102,-126,-128,-129,81,81,81,-104,-108,81,-131,81,81,81,81,-127,-130,-132,81,-133,81,81,-135,-134,81,-137,-136,-138,]),'ASTERISK':([0,1,2,3,4,6,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,42,43,44,46,49,52,53,54,56,58,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,81,84,89,92,94,95,96,97,98,99,101,102,103,104,105,106,107,109,110,112,113,114,115,116,122,124,126,127,128,132,133,134,141,144,148,149,150,155,156,157,158,159,161,162,163,164,167,168,169,171,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,234,235,237,242,243,244,245,247,249,250,251,252,255,256,259,263,265,266,271,274,275,289,290,291,292,293,300,307,309,310,314,315,316,317,318,319,320,321,323,324,325,326,327,328,330,340,341,342,344,346,348,355,357,358,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,377,],[14,14,-1,-3,-4,14,-13,-15,-17,14,14,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,103,-11,14,-9,103,-14,-16,-18,14,-79,-40,-61,-6,-12,-120,103,103,-124,-109,-110,-111,-112,-113,-114,-118,-212,103,103,103,103,-190,-192,103,103,103,-186,103,-204,-198,-199,-200,-201,-202,-203,-213,-214,-218,-219,-220,-221,-222,217,-7,103,-10,14,-190,103,-212,14,-80,14,-50,-52,-121,-125,-122,103,103,103,-119,103,103,14,103,103,103,-140,-141,-142,103,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,103,103,103,103,-210,-211,-193,103,-194,-195,-196,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-8,103,14,103,-39,103,-51,-53,-59,103,-123,-115,103,-117,-215,103,14,103,-139,-143,-206,-208,-209,217,217,-187,-188,-189,103,-38,14,103,-60,-116,103,-191,103,103,103,103,103,103,-205,-207,103,-197,103,-126,-128,-129,103,103,103,103,-131,103,103,103,103,-127,-130,-132,103,-133,103,103,-135,-134,103,-137,-136,-138,]),'AUTO':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,62,63,64,65,67,124,125,127,129,135,142,155,157,220,225,226,227,229,234,237,245,249,259,301,307,314,],[15,15,-1,-3,-4,15,-66,15,15,15,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,15,15,-11,15,-9,15,-67,-40,-61,-6,-12,-120,15,-7,15,-10,-70,-72,-69,-121,-122,-8,-71,-73,-74,15,15,-39,-59,-123,15,15,-38,-60,]),'REGISTER':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,62,63,64,65,67,124,125,127,129,135,142,155,157,220,225,226,227,229,234,237,245,249,259,301,307,314,],[16,16,-1,-3,-4,16,-66,16,16,16,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,16,16,-11,16,-9,16,-67,-40,-61,-6,-12,-120,16,-7,16,-10,-70,-72,-69,-121,-122,-8,-71,-73,-74,16,16,-39,-59,-123,16,16,-38,-60,]),'STATIC':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,62,63,64,65,67,124,125,127,129,135,142,155,157,220,225,226,227,229,234,237,245,249,259,301,307,314,],[17,17,-1,-3,-4,17,-66,17,17,17,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,17,17,-11,17,-9,17,-67,-40,-61,-6,-12,-120,17,-7,17,-10,-70,-72,-69,-121,-122,-8,-71,-73,-74,17,17,-39,-59,-123,17,17,-38,-60,]),'EXTERN':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,62,63,64,65,67,124,125,127,129,135,142,155,157,220,225,226,227,229,234,237,245,249,259,301,307,314,],[18,18,-1,-3,-4,18,-66,18,18,18,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,18,18,-11,18,-9,18,-67,-40,-61,-6,-12,-120,18,-7,18,-10,-70,-72,-69,-121,-122,-8,-71,-73,-74,18,18,-39,-59,-123,18,18,-38,-60,]),'TYPEDEF':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,62,63,64,65,67,124,125,127,129,135,142,155,157,220,225,226,227,229,234,237,245,249,259,301,307,314,],[19,19,-1,-3,-4,19,-66,19,19,19,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,19,19,-11,19,-9,19,-67,-40,-61,-6,-12,-120,19,-7,19,-10,-70,-72,-69,-121,-122,-8,-71,-73,-74,19,19,-39,-59,-123,19,19,-38,-60,]),'VOID':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[20,20,-1,-3,-4,20,-66,20,20,20,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,20,20,-11,20,-9,20,-67,-40,20,-61,-6,-12,-120,20,20,-7,20,-10,-70,20,-72,-69,20,20,-43,20,20,-121,-122,20,-8,-71,-73,-74,20,20,20,-39,-44,-59,-123,20,20,-38,-49,-60,]),'CHAR':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[21,21,-1,-3,-4,21,-66,21,21,21,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,21,21,-11,21,-9,21,-67,-40,21,-61,-6,-12,-120,21,21,-7,21,-10,-70,21,-72,-69,21,21,-43,21,21,-121,-122,21,-8,-71,-73,-74,21,21,21,-39,-44,-59,-123,21,21,-38,-49,-60,]),'SHORT':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[22,22,-1,-3,-4,22,-66,22,22,22,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,22,22,-11,22,-9,22,-67,-40,22,-61,-6,-12,-120,22,22,-7,22,-10,-70,22,-72,-69,22,22,-43,22,22,-121,-122,22,-8,-71,-73,-74,22,22,22,-39,-44,-59,-123,22,22,-38,-49,-60,]),'INT':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[23,23,-1,-3,-4,23,-66,23,23,23,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,23,23,-11,23,-9,23,-67,-40,23,-61,-6,-12,-120,23,23,-7,23,-10,-70,23,-72,-69,23,23,-43,23,23,-121,-122,23,-8,-71,-73,-74,23,23,23,-39,-44,-59,-123,23,23,-38,-49,-60,]),'LONG':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[24,24,-1,-3,-4,24,-66,24,24,24,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,24,24,-11,24,-9,24,-67,-40,24,-61,-6,-12,-120,24,24,-7,24,-10,-70,24,-72,-69,24,24,-43,24,24,-121,-122,24,-8,-71,-73,-74,24,24,24,-39,-44,-59,-123,24,24,-38,-49,-60,]),'FLOAT':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[25,25,-1,-3,-4,25,-66,25,25,25,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,25,25,-11,25,-9,25,-67,-40,25,-61,-6,-12,-120,25,25,-7,25,-10,-70,25,-72,-69,25,25,-43,25,25,-121,-122,25,-8,-71,-73,-74,25,25,25,-39,-44,-59,-123,25,25,-38,-49,-60,]),'DOUBLE':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[26,26,-1,-3,-4,26,-66,26,26,26,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,26,26,-11,26,-9,26,-67,-40,26,-61,-6,-12,-120,26,26,-7,26,-10,-70,26,-72,-69,26,26,-43,26,26,-121,-122,26,-8,-71,-73,-74,26,26,26,-39,-44,-59,-123,26,26,-38,-49,-60,]),'SIGNED':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[27,27,-1,-3,-4,27,-66,27,27,27,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,27,27,-11,27,-9,27,-67,-40,27,-61,-6,-12,-120,27,27,-7,27,-10,-70,27,-72,-69,27,27,-43,27,27,-121,-122,27,-8,-71,-73,-74,27,27,27,-39,-44,-59,-123,27,27,-38,-49,-60,]),'UNSIGNED':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[28,28,-1,-3,-4,28,-66,28,28,28,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,28,28,-11,28,-9,28,-67,-40,28,-61,-6,-12,-120,28,28,-7,28,-10,-70,28,-72,-69,28,28,-43,28,28,-121,-122,28,-8,-71,-73,-74,28,28,28,-39,-44,-59,-123,28,28,-38,-49,-60,]),'TYPEDEF_NAME':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[31,31,-1,-3,-4,31,-66,31,31,31,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,31,31,-11,31,-9,31,-67,-40,31,-61,-6,-12,-120,31,31,-7,31,-10,-70,31,-72,-69,31,31,-43,31,31,-121,-122,31,-8,-71,-73,-74,31,31,31,-39,-44,-59,-123,31,31,-38,-49,-60,]),'CONST':([0,1,2,3,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,56,58,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,144,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[32,32,-1,-3,-4,32,-66,32,32,32,-68,32,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,32,32,-11,32,-9,32,-67,32,-79,-40,32,-61,-6,-12,-120,32,32,-7,32,-10,-70,32,-72,-69,-80,32,32,-43,32,32,-121,-122,32,-8,-71,-73,-74,32,32,32,-39,-44,-59,-123,32,32,-38,-49,-60,]),'VOLATILE':([0,1,2,3,4,5,7,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,56,58,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,144,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[33,33,-1,-3,-4,33,-66,33,33,33,-68,33,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,33,33,-11,33,-9,33,-67,33,-79,-40,33,-61,-6,-12,-120,33,33,-7,33,-10,-70,33,-72,-69,-80,33,33,-43,33,33,-121,-122,33,-8,-71,-73,-74,33,33,33,-39,-44,-59,-123,33,33,-38,-49,-60,]),'IDENTIFIER':([0,1,2,3,4,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,49,50,52,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,81,84,86,89,95,96,97,99,102,103,104,105,106,107,124,126,127,128,133,141,143,144,148,149,150,154,155,156,157,158,159,161,162,163,164,168,169,171,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,223,228,232,234,235,237,242,243,244,245,246,247,249,250,251,252,256,263,265,266,300,307,309,310,314,315,316,318,319,320,321,323,324,327,330,340,341,342,344,346,348,355,357,358,360,361,363,364,365,366,367,368,370,371,372,373,374,375,376,377,],[34,34,-1,-3,-4,34,34,-13,-15,-17,34,-75,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,34,34,-41,-42,-2,-5,34,-11,34,-9,34,34,-14,-16,-18,-76,-77,-79,-40,34,-61,-6,-12,-120,34,34,-124,-109,-110,-111,-112,-113,-114,-118,34,34,34,34,34,34,34,34,34,-198,-199,-200,-201,-202,-203,-7,34,-10,34,34,34,-78,-80,34,-50,-52,34,-121,-125,-122,34,34,34,-119,34,34,34,34,34,-140,-141,-142,34,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-8,34,34,34,34,34,-39,34,-51,-53,-59,34,34,-123,-115,34,-117,34,34,-139,-143,34,-38,34,34,-60,-116,34,34,34,34,34,34,34,34,34,-126,-128,-129,34,34,34,34,-131,34,34,34,34,-127,-130,-132,34,-133,34,34,-135,-134,34,-137,-136,-138,]),'ENUM':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[36,36,-1,-3,-4,36,-66,36,36,36,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,36,36,-11,36,-9,36,-67,-40,36,-61,-6,-12,-120,36,36,-7,36,-10,-70,36,-72,-69,36,36,-43,36,36,-121,-122,36,-8,-71,-73,-74,36,36,36,-39,-44,-59,-123,36,36,-38,-49,-60,]),'STRUCT':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[37,37,-1,-3,-4,37,-66,37,37,37,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,37,37,-11,37,-9,37,-67,-40,37,-61,-6,-12,-120,37,37,-7,37,-10,-70,37,-72,-69,37,37,-43,37,37,-121,-122,37,-8,-71,-73,-74,37,37,37,-39,-44,-59,-123,37,37,-38,-49,-60,]),'UNION':([0,1,2,3,4,5,7,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,40,41,42,43,45,46,50,51,59,60,62,63,64,65,67,81,124,125,127,129,133,135,142,145,146,147,149,150,155,157,202,220,225,226,227,229,234,236,237,238,245,249,259,301,307,308,314,],[38,38,-1,-3,-4,38,-66,38,38,38,-68,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-223,-2,-5,38,38,-11,38,-9,38,-67,-40,38,-61,-6,-12,-120,38,38,-7,38,-10,-70,38,-72,-69,38,38,-43,38,38,-121,-122,38,-8,-71,-73,-74,38,38,38,-39,-44,-59,-123,38,38,-38,-49,-60,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,39,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,5,41,42,45,67,125,],[4,4,43,64,43,43,64,64,]),'declarator':([0,1,6,13,44,128,141,148,234,309,],[5,5,45,55,123,123,230,241,55,241,]),'declaration_specifiers':([0,1,5,9,10,11,41,42,45,50,67,125,229,234,259,301,],[6,6,44,52,53,54,44,44,44,141,44,44,141,141,141,141,]),'direct_declarator':([0,1,6,8,13,44,128,141,148,232,234,309,],[7,7,7,51,7,7,7,7,7,51,7,7,]),'pointer':([0,1,6,13,14,44,56,128,141,148,167,234,259,309,],[8,8,8,8,57,8,143,8,232,8,258,232,258,8,]),'storage_class_specifier':([0,1,5,9,10,11,41,42,45,50,67,125,229,234,259,301,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'type_specifier':([0,1,5,9,10,11,41,42,45,50,60,67,81,125,133,145,146,149,150,202,229,234,236,259,301,],[10,10,10,10,10,10,10,10,10,10,149,10,149,10,149,149,149,149,149,149,10,10,149,10,10,]),'type_qualifier':([0,1,5,9,10,11,14,41,42,45,50,56,60,67,81,125,133,145,146,149,150,202,229,234,236,259,301,],[11,11,11,11,11,11,58,11,11,11,11,144,150,11,150,11,150,150,150,150,150,150,11,11,150,11,11,]),'identifier':([0,1,6,8,13,35,36,42,44,49,50,61,66,67,77,81,84,86,89,95,96,97,99,126,128,133,141,148,154,158,159,161,163,164,168,169,171,177,189,190,191,192,193,194,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,228,232,234,235,242,246,247,251,256,263,300,309,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[12,12,12,12,12,59,62,76,12,134,139,153,76,76,134,134,76,172,134,134,134,134,134,134,12,134,12,12,153,76,76,76,134,134,134,134,134,134,134,134,134,134,274,275,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,296,12,12,134,134,153,134,76,134,134,134,12,134,76,76,76,134,134,134,134,134,134,76,134,134,76,76,76,134,76,76,76,76,76,]),'struct_or_union_specifier':([0,1,5,9,10,11,41,42,45,50,60,67,81,125,133,145,146,149,150,202,229,234,236,259,301,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'enum_specifier':([0,1,5,9,10,11,41,42,45,50,60,67,81,125,133,145,146,149,150,202,229,234,236,259,301,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'struct_or_union':([0,1,5,9,10,11,41,42,45,50,60,67,81,125,133,145,146,149,150,202,229,234,236,259,301,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'compound_statement':([5,41,42,45,66,67,84,125,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[40,63,70,124,70,70,70,220,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'declaration_list':([5,42,45,],[41,67,125,]),'init_declarator_list':([6,44,],[47,47,]),'init_declarator':([6,44,128,],[48,48,224,]),'type_qualifier_list':([14,],[56,]),'statement_list':([42,67,],[66,158,]),'statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[68,156,68,170,156,250,252,315,340,341,342,357,364,366,368,372,373,375,376,377,]),'labeled_statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression_statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'selection_statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'iteration_statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'jump_statement':([42,66,67,84,158,159,161,251,316,318,319,344,355,358,360,363,367,370,371,374,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'expression':([42,66,67,81,84,89,133,158,159,161,164,168,169,171,189,191,198,202,251,263,316,318,319,320,321,323,344,346,348,355,358,360,361,363,367,370,371,374,],[79,79,79,165,79,176,165,79,79,79,254,260,261,264,268,270,165,165,79,322,79,79,79,343,345,347,79,359,362,79,79,79,369,79,79,79,79,79,]),'assignment_expression':([42,66,67,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,191,192,198,202,223,251,263,316,318,319,320,321,323,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[90,90,90,90,90,90,222,90,90,90,90,253,90,90,90,90,267,90,90,273,90,90,222,90,90,90,90,90,90,90,90,350,222,90,90,90,90,90,90,90,90,90,90,90,90,]),'conditional_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,191,192,198,202,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[91,131,91,91,131,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,131,131,131,91,91,131,131,91,91,91,91,91,91,349,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'unary_expression':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[92,132,92,92,132,92,92,92,197,199,132,201,92,92,92,92,92,92,92,92,92,92,92,92,132,92,92,92,92,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,92,132,132,132,92,132,92,132,132,92,92,92,92,92,92,132,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'logical_or_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,191,192,198,202,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'postfix_expression':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'unary_operator':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cast_expression':([42,49,66,67,77,81,84,89,97,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[98,98,98,98,98,98,98,98,200,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,291,292,293,98,98,98,98,98,317,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'logical_and_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,269,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'primary_expression':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'inclusive_or_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,277,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'constant':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'string':([42,49,66,67,77,81,84,89,95,96,97,99,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,235,242,247,251,256,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'exclusive_or_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,278,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'and_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,279,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'equality_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,280,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'relational_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,281,282,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'shift_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,283,284,285,286,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'additive_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,287,288,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'multiplicative_expression':([42,49,66,67,77,81,84,89,126,133,158,159,161,163,164,168,169,171,177,189,190,191,192,198,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,223,235,242,247,251,263,300,310,316,318,319,320,321,323,324,327,330,344,346,348,355,358,360,361,363,367,370,371,374,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,289,290,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'constant_expression':([49,77,235,242,247,300,310,],[130,160,306,311,313,332,339,]),'parameter_type_list':([50,234,259,301,],[136,304,304,334,]),'identifier_list':([50,],[137,]),'parameter_list':([50,234,259,301,],[138,138,138,138,]),'parameter_declaration':([50,229,234,259,301,],[140,298,140,140,140,]),'struct_declaration_list':([60,145,],[146,236,]),'struct_declaration':([60,145,146,236,],[147,147,238,238,]),'specifier_qualifier_list':([60,81,133,145,146,149,150,202,236,],[148,167,167,148,148,243,244,167,148,]),'enumerator_list':([61,154,],[151,248,]),'enumerator':([61,154,246,],[152,152,312,]),'type_name':([81,133,202,],[166,166,276,]),'assignment_operator':([92,],[177,]),'initializer':([126,223,330,],[221,295,352,]),'abstract_declarator':([141,167,234,259,],[231,257,303,303,]),'direct_abstract_declarator':([141,167,232,234,258,259,],[233,233,299,233,299,233,]),'struct_declarator_list':([148,],[239,]),'struct_declarator':([148,309,],[240,338,]),'argument_expression_list':([192,],[272,]),'initializer_list':([223,],[294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','G_Parser.py',28),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','G_Parser.py',34),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','G_Parser.py',40),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','G_Parser.py',46),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_1','G_Parser.py',52),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','G_Parser.py',58),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_3','G_Parser.py',64),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_4','G_Parser.py',70),
  ('declaration -> declaration_specifiers SEMI','declaration',2,'p_declaration_1','G_Parser.py',76),
  ('declaration -> declaration_specifiers init_declarator_list SEMI','declaration',3,'p_declaration_2','G_Parser.py',82),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','G_Parser.py',88),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','G_Parser.py',94),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','G_Parser.py',100),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','G_Parser.py',106),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_3','G_Parser.py',112),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_4','G_Parser.py',118),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers_5','G_Parser.py',124),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_6','G_Parser.py',130),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier_1','G_Parser.py',136),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier_2','G_Parser.py',142),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier_3','G_Parser.py',148),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier_4','G_Parser.py',154),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier_5','G_Parser.py',160),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','G_Parser.py',166),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_2','G_Parser.py',172),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_3','G_Parser.py',178),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_4','G_Parser.py',184),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','G_Parser.py',190),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','G_Parser.py',196),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','G_Parser.py',202),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_8','G_Parser.py',208),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_9','G_Parser.py',214),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier_10','G_Parser.py',220),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_11','G_Parser.py',226),
  ('type_specifier -> TYPEDEF_NAME','type_specifier',1,'p_type_specifier_12','G_Parser.py',232),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier_1','G_Parser.py',238),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier_2','G_Parser.py',244),
  ('struct_or_union_specifier -> struct_or_union identifier OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',5,'p_struct_or_union_specifier_1','G_Parser.py',250),
  ('struct_or_union_specifier -> struct_or_union OPENBRACE struct_declaration_list CLOSEBRACE','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','G_Parser.py',256),
  ('struct_or_union_specifier -> struct_or_union identifier','struct_or_union_specifier',2,'p_struct_or_union_specifier_3','G_Parser.py',262),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union_1','G_Parser.py',268),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union_2','G_Parser.py',274),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list_1','G_Parser.py',280),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list_2','G_Parser.py',286),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','G_Parser.py',292),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','G_Parser.py',298),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','G_Parser.py',304),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator_2','G_Parser.py',310),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI','struct_declaration',3,'p_struct_declaration_1','G_Parser.py',316),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_1','G_Parser.py',322),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','G_Parser.py',328),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','G_Parser.py',334),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','G_Parser.py',340),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list_1','G_Parser.py',346),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list_2','G_Parser.py',352),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','G_Parser.py',358),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','G_Parser.py',364),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_3','G_Parser.py',370),
  ('enum_specifier -> ENUM OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',4,'p_enum_specifier_1','G_Parser.py',376),
  ('enum_specifier -> ENUM identifier OPENBRACE enumerator_list CLOSEBRACE','enum_specifier',5,'p_enum_specifier_2','G_Parser.py',382),
  ('enum_specifier -> ENUM identifier','enum_specifier',2,'p_enum_specifier_3','G_Parser.py',388),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list_1','G_Parser.py',394),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list_2','G_Parser.py',400),
  ('enumerator -> identifier','enumerator',1,'p_enumerator_1','G_Parser.py',406),
  ('enumerator -> identifier ASSIGN constant_expression','enumerator',3,'p_enumerator_2','G_Parser.py',412),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','G_Parser.py',418),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator_2','G_Parser.py',424),
  ('direct_declarator -> identifier','direct_declarator',1,'p_direct_declarator_1','G_Parser.py',430),
  ('direct_declarator -> OPENPAREN declarator CLOSEPAREN','direct_declarator',3,'p_direct_declarator_2','G_Parser.py',436),
  ('direct_declarator -> direct_declarator OPENBRACKET CLOSEBRACKET','direct_declarator',3,'p_direct_declarator_3','G_Parser.py',442),
  ('direct_declarator -> direct_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_declarator',4,'p_direct_declarator_4','G_Parser.py',448),
  ('direct_declarator -> direct_declarator OPENPAREN CLOSEPAREN','direct_declarator',3,'p_direct_declarator_5','G_Parser.py',454),
  ('direct_declarator -> direct_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_6','G_Parser.py',460),
  ('direct_declarator -> direct_declarator OPENPAREN identifier_list CLOSEPAREN','direct_declarator',4,'p_direct_declarator_7','G_Parser.py',466),
  ('pointer -> ASTERISK','pointer',1,'p_pointer_1','G_Parser.py',472),
  ('pointer -> ASTERISK type_qualifier_list','pointer',2,'p_pointer_2','G_Parser.py',478),
  ('pointer -> ASTERISK pointer','pointer',2,'p_pointer_3','G_Parser.py',484),
  ('pointer -> ASTERISK type_qualifier_list pointer','pointer',3,'p_pointer_4','G_Parser.py',490),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list_1','G_Parser.py',496),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list_2','G_Parser.py',502),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list_1','G_Parser.py',508),
  ('parameter_type_list -> parameter_list COMMA ELIPSIS','parameter_type_list',3,'p_parameter_type_list_2','G_Parser.py',514),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list_1','G_Parser.py',520),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list_2','G_Parser.py',526),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration_1','G_Parser.py',532),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration_2','G_Parser.py',538),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration_3','G_Parser.py',544),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_1','G_Parser.py',550),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list_2','G_Parser.py',556),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','G_Parser.py',562),
  ('initializer -> OPENBRACE initializer_list CLOSEBRACE','initializer',3,'p_initializer_2','G_Parser.py',568),
  ('initializer -> OPENBRACE initializer_list COMMA CLOSEBRACE','initializer',4,'p_initializer_3','G_Parser.py',574),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','G_Parser.py',580),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','G_Parser.py',586),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','G_Parser.py',592),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name_2','G_Parser.py',598),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','G_Parser.py',604),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_2','G_Parser.py',610),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_3','G_Parser.py',616),
  ('direct_abstract_declarator -> OPENPAREN abstract_declarator CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','G_Parser.py',622),
  ('direct_abstract_declarator -> OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator_2','G_Parser.py',628),
  ('direct_abstract_declarator -> OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','G_Parser.py',634),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET CLOSEBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_4','G_Parser.py',640),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENBRACKET constant_expression CLOSEBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_5','G_Parser.py',646),
  ('direct_abstract_declarator -> OPENPAREN CLOSEPAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator_6','G_Parser.py',652),
  ('direct_abstract_declarator -> OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','G_Parser.py',658),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN CLOSEPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_8','G_Parser.py',664),
  ('direct_abstract_declarator -> direct_abstract_declarator OPENPAREN parameter_type_list CLOSEPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_9','G_Parser.py',670),
  ('statement -> labeled_statement','statement',1,'p_statement_1','G_Parser.py',676),
  ('statement -> compound_statement','statement',1,'p_statement_2','G_Parser.py',682),
  ('statement -> expression_statement','statement',1,'p_statement_3','G_Parser.py',688),
  ('statement -> selection_statement','statement',1,'p_statement_4','G_Parser.py',694),
  ('statement -> iteration_statement','statement',1,'p_statement_5','G_Parser.py',700),
  ('statement -> jump_statement','statement',1,'p_statement_6','G_Parser.py',706),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labeled_statement_1','G_Parser.py',712),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','G_Parser.py',718),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','G_Parser.py',724),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement_1','G_Parser.py',730),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement_2','G_Parser.py',736),
  ('compound_statement -> OPENBRACE CLOSEBRACE','compound_statement',2,'p_compound_statement_1','G_Parser.py',742),
  ('compound_statement -> OPENBRACE statement_list CLOSEBRACE','compound_statement',3,'p_compound_statement_2','G_Parser.py',748),
  ('compound_statement -> OPENBRACE declaration_list CLOSEBRACE','compound_statement',3,'p_compound_statement_3','G_Parser.py',754),
  ('compound_statement -> OPENBRACE declaration_list statement_list CLOSEBRACE','compound_statement',4,'p_compound_statement_4','G_Parser.py',760),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','G_Parser.py',766),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','G_Parser.py',772),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_1','G_Parser.py',778),
  ('selection_statement -> IF OPENPAREN expression CLOSEPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','G_Parser.py',784),
  ('selection_statement -> SWITCH OPENPAREN expression CLOSEPAREN statement','selection_statement',5,'p_selection_statement_3','G_Parser.py',790),
  ('iteration_statement -> WHILE OPENPAREN expression CLOSEPAREN statement','iteration_statement',5,'p_iteration_statement_1','G_Parser.py',796),
  ('iteration_statement -> DO statement WHILE OPENPAREN expression CLOSEPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','G_Parser.py',802),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI CLOSEPAREN statement','iteration_statement',6,'p_iteration_statement_3','G_Parser.py',808),
  ('iteration_statement -> FOR OPENPAREN SEMI SEMI expression CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_4','G_Parser.py',814),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_5','G_Parser.py',820),
  ('iteration_statement -> FOR OPENPAREN SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_6','G_Parser.py',826),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI CLOSEPAREN statement','iteration_statement',7,'p_iteration_statement_7','G_Parser.py',832),
  ('iteration_statement -> FOR OPENPAREN expression SEMI SEMI expression CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_8','G_Parser.py',838),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI CLOSEPAREN statement','iteration_statement',8,'p_iteration_statement_9','G_Parser.py',844),
  ('iteration_statement -> FOR OPENPAREN expression SEMI expression SEMI expression CLOSEPAREN statement','iteration_statement',9,'p_iteration_statement_10','G_Parser.py',850),
  ('jump_statement -> GOTO identifier SEMI','jump_statement',3,'p_jump_statement_1','G_Parser.py',856),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_2','G_Parser.py',862),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_3','G_Parser.py',868),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','G_Parser.py',874),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_5','G_Parser.py',880),
  ('expression -> assignment_expression','expression',1,'p_expression_1','G_Parser.py',886),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','G_Parser.py',892),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','G_Parser.py',898),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression_2','G_Parser.py',904),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator_1','G_Parser.py',910),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','G_Parser.py',916),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','G_Parser.py',922),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','G_Parser.py',928),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','G_Parser.py',934),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','G_Parser.py',940),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','G_Parser.py',946),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','G_Parser.py',952),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','G_Parser.py',958),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','G_Parser.py',964),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','G_Parser.py',970),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','G_Parser.py',976),
  ('conditional_expression -> logical_or_expression QMARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','G_Parser.py',982),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression_1','G_Parser.py',988),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','G_Parser.py',994),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','G_Parser.py',1000),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','G_Parser.py',1006),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','G_Parser.py',1012),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','G_Parser.py',1018),
  ('inclusive_or_expression -> inclusive_or_expression PIPE exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','G_Parser.py',1024),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','G_Parser.py',1030),
  ('exclusive_or_expression -> exclusive_or_expression CARAT and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','G_Parser.py',1036),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','G_Parser.py',1042),
  ('and_expression -> and_expression AMPERSAND equality_expression','and_expression',3,'p_and_expression_2','G_Parser.py',1048),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','G_Parser.py',1054),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression_2','G_Parser.py',1060),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression_3','G_Parser.py',1066),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','G_Parser.py',1072),
  ('relational_expression -> relational_expression LE shift_expression','relational_expression',3,'p_relational_expression_2','G_Parser.py',1078),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression_3','G_Parser.py',1084),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','G_Parser.py',1090),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','G_Parser.py',1096),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','G_Parser.py',1102),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','G_Parser.py',1108),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','G_Parser.py',1114),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','G_Parser.py',1120),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_2','G_Parser.py',1126),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','G_Parser.py',1132),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','G_Parser.py',1138),
  ('multiplicative_expression -> multiplicative_expression ASTERISK cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','G_Parser.py',1144),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','G_Parser.py',1150),
  ('multiplicative_expression -> multiplicative_expression PERCENT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','G_Parser.py',1156),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','G_Parser.py',1162),
  ('cast_expression -> OPENPAREN type_name CLOSEPAREN cast_expression','cast_expression',4,'p_cast_expression_2','G_Parser.py',1168),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','G_Parser.py',1174),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression_2','G_Parser.py',1180),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression_3','G_Parser.py',1186),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','G_Parser.py',1192),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','G_Parser.py',1198),
  ('unary_expression -> SIZEOF OPENPAREN type_name CLOSEPAREN','unary_expression',4,'p_unary_expression_6','G_Parser.py',1204),
  ('unary_operator -> AMPERSAND','unary_operator',1,'p_unary_operator_1','G_Parser.py',1210),
  ('unary_operator -> ASTERISK','unary_operator',1,'p_unary_operator_2','G_Parser.py',1216),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_3','G_Parser.py',1222),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','G_Parser.py',1228),
  ('unary_operator -> TILDE','unary_operator',1,'p_unary_operator_5','G_Parser.py',1234),
  ('unary_operator -> BANG','unary_operator',1,'p_unary_operator_6','G_Parser.py',1240),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','G_Parser.py',1246),
  ('postfix_expression -> postfix_expression OPENBRACKET expression CLOSEBRACKET','postfix_expression',4,'p_postfix_expression_2','G_Parser.py',1252),
  ('postfix_expression -> postfix_expression OPENPAREN CLOSEPAREN','postfix_expression',3,'p_postfix_expression_3','G_Parser.py',1258),
  ('postfix_expression -> postfix_expression OPENPAREN argument_expression_list CLOSEPAREN','postfix_expression',4,'p_postfix_expression_4','G_Parser.py',1264),
  ('postfix_expression -> postfix_expression PERIOD identifier','postfix_expression',3,'p_postfix_expression_5','G_Parser.py',1270),
  ('postfix_expression -> postfix_expression PTR_OP identifier','postfix_expression',3,'p_postfix_expression_6','G_Parser.py',1276),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression_7','G_Parser.py',1282),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression_8','G_Parser.py',1288),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','G_Parser.py',1294),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','G_Parser.py',1300),
  ('primary_expression -> string','primary_expression',1,'p_primary_expression_3','G_Parser.py',1306),
  ('primary_expression -> OPENPAREN expression CLOSEPAREN','primary_expression',3,'p_primary_expression_4','G_Parser.py',1312),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','G_Parser.py',1318),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','G_Parser.py',1324),
  ('constant -> INTEGER_CONSTANT','constant',1,'p_constant_1','G_Parser.py',1330),
  ('constant -> CHARACTER_CONSTANT','constant',1,'p_constant_2','G_Parser.py',1336),
  ('constant -> FLOATING_CONSTANT','constant',1,'p_constant_3','G_Parser.py',1342),
  ('constant -> ENUMERATION_CONSTANT','constant',1,'p_constant_4','G_Parser.py',1348),
  ('string -> STRING_LITERAL','string',1,'p_string_1','G_Parser.py',1354),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','G_Parser.py',1360),
]
